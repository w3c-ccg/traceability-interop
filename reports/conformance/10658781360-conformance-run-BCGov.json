{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "34e7964c-6c9f-4339-a63d-d92713d3927a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "80375d38-0f2e-469b-b0ff-99cdf3c75eea",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b31d48cb-c740-4969-8712-729a49f28bc8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a67cc697-b6d7-4023-8350-26e6ee3d22e0"
                }
              }
            ]
          },
          {
            "id": "9758d601-b50d-44cf-b557-123c7836a1f8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1a17ab31-5b3a-4d70-8688-566e87768a6d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ad101bb6-08b5-48ae-a401-70eb5696552d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "9f1809b4-5658-448a-a3c3-1ebf3cf7eb0b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3504c9f2-ac01-4da1-9cf7-4ffcbef21c56",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c00fa3a3-66b7-48a5-bc8b-37884f628e13",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9af1049-fcf9-42f3-9f82-1cdbb1ca7544",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "35f9ec36-2e1b-4721-9d60-8d1875bf6b74"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f145ed55-1e60-473c-8a7e-9745dcf6cdee",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66102b69-e4b0-4642-97fe-0ecca0d78b0f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "93452f28-aaad-42e4-900b-9ef1bf09cdcc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "690d17c5-cd16-4165-aa36-24df726a967f"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f976d297-7013-4da8-99ea-2b9b895cac21",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dab40cad-6dc5-4757-815b-a327f2876c6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e08d9166-5182-4c58-b12e-036029c41427",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ea50666-2144-4d4b-b158-9bcb3ce4656d"
            }
          }
        ]
      },
      {
        "id": "8c0f82a1-2529-4842-8323-f6f3001317f6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3699b9ab-d861-4bfa-849b-6d4abb040391",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1d687dac-4b74-450a-bc2b-8584262c6ff9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "24b14a06-ce5d-4888-a3b2-85d48c8ea28a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ac694e-a528-492b-a684-28e83048e01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb565c70-3161-4a50-94e8-952ec85d309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b937797-4e3d-4335-8282-4bd811703c56",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "042fcc01-54b1-4631-a863-edae4702f71b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d7f5911-e25d-4fc7-bbc6-5e6806e9d702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650ec345-759e-43cf-8f42-f70faa5bd547",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d46e1ea-a781-45af-b402-26672d49ca50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ebcdcc7-9437-4b09-9806-0951be884611"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2e729f62-4f67-4c08-bdcf-d3fe1edf9caa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34e05ef8-0919-4fc2-82ca-c2477b3062d7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1061926f-bc6a-487f-a5f4-1faf240fc72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02105173-adcb-4760-a545-d1636efa1ef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4bd3ad-671d-46c8-a520-1398fd319e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aefb6d3-27e7-47f7-ad4d-ebf77e395dca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4fa5a8d3-88bc-4d09-b859-3702b4a2ea2b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fab8139d-2a37-46e1-a3b5-2aa987359999",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e95bbc3-1251-4a2c-a2d5-e767892ef821",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6b20f86b-25dd-44cc-ac7c-c50ae102b5a6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09e8d106-9373-4879-aec0-ab14380976d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "7822cb5e-7a3a-4031-ae4f-3509730f4add"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3cb13bef-a942-45c9-87dd-958b8ec1eb1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1a4910e3-1c6e-435d-879e-8ae988c36b20"
            }
          }
        ]
      },
      {
        "id": "d2393e5f-5081-48a3-b714-d11e27afa1bf",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ab0e6fe3-d8b1-4373-a654-d5660abc81ec",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85617d5f-79cf-4292-8c6c-b19cffce7ce3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "1fea5202-d39a-4375-95f5-1ab7ff2787d9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d922af-7966-402a-bc59-9faf0472bf5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c93f23c1-895c-4de4-979f-f101719ab0de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62bb0f0-480d-4eba-8c2b-3f5cec0ef80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a2f5593-2015-4131-b3db-fdfd30681c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d0542e-b1ca-4cb1-8e83-25ec9544be13",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76572231-03cb-408d-9a62-f0a6db947f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9685810b-f531-4bbe-b9c2-28ec1bb622c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d3a424-b313-4e5b-9968-3fa4481890eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f370f74-f1f2-4bab-8eac-3d1a52c8e736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87d1967-f602-41f3-8c07-de34cabe7257",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "928e8dad-5173-4c2c-8a6c-74a63b98820c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f89519-ec41-4582-9b9b-be17a789b3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44a1287-06b3-4020-86ea-8fdf2d42b4b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9290602f-c26b-416c-b5b5-2c8ffce95c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb0b92a-b71f-47fa-b1b3-597272fc33fc",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360486bd-f3ae-4a4d-83b1-56906223b78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4373f73-fc1d-4fc1-957a-9773f1fea0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59772066-2a6c-4d1f-9870-b672864d320f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b2c398b6-6a2d-4ca1-a75d-3e783ea34215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02421185-1cbf-460e-bebb-ff9fdda7ca5f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b3baf4-39aa-4e21-ba7d-6535b4b7e949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21b7092-aa11-47e3-8c00-17240926c929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e36c83-4a07-449b-aaa7-e4eeedc39e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9f331f6-1369-49c7-89a3-edb77242e79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0081924-52ee-49e7-95ef-d1bd8ac08196",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bd031e-6b51-45ff-8d28-abf04632f867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0d309fd-4928-48aa-aa77-de385125af23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c006a65-05f5-408c-ac27-1d11df3d008f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "225f4efa-a480-4f27-9d76-644fb9a9104a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb0bf683-f5c0-41c4-96ed-c2f97941d9be",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b212725d-4889-4064-a3e9-4daf4e311d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf608d84-d70f-4be5-896b-02ee825dae48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e4b54a-6b8b-467f-8ea5-cbafca211b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1dbd0463-af17-49da-b880-1df8ace048b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760a9242-8a45-4a42-bcf0-a42664192cb8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5316d20a-ea26-4ef2-ab9f-07016944be35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22370869-9678-4e5b-997e-f69145ebf805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4080e449-e89e-4f1d-894d-c7963713804f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "543fe1ce-4a24-4b90-b427-1163d94cb1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29589f76-fcfa-434e-842f-c61e389f380d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9144400-f863-49ba-85ed-fc49dc7b7710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2502dd6c-2998-4f47-871f-a5f315d806de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7b60d0-27bc-40e4-a08d-338b7a01a4c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "720372e7-c59b-4418-a9ce-70899978e5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152f15a3-bcff-4c5d-bed1-9c18bdd73414",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b40032dd-795a-4d83-9b21-5b510198980d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8b95f5b-a40a-46b1-8973-800472f0156f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83118a33-c66d-4d01-aaa3-15605e018769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c91c4085-f531-4f79-8f92-1df14ea90305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967c16f7-2fcb-4b11-abb1-34b8495e30a5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e163c5-331a-45ee-ae9d-d185cdfdd86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645b740f-4e84-4481-af84-a7482c2c23b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56dae8b9-0764-4709-ac39-cb4a9cd3a4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af6208ae-9d91-46de-ae3c-e78d0fb75083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320db616-b6b3-478a-acfa-52e42ab27f37",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c093ef49-5aec-4a50-8c64-346af8ffeb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eebc9f0-dd41-4a91-bf46-b8203b6fb95d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe74563-a818-4dc3-9dc2-1ec2e554b882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66e859a4-9620-401a-9241-1bdb248fe553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c55a9b-c37f-4fb2-93e3-0b9c1a34c456",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7d6455-6ab0-4f9f-b372-45ab26700b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942afd5c-8e19-4581-a324-5b3e4b94e5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7c2d16-59b7-4579-a253-79af9cae2df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fd966906-b22f-4c48-88ce-feb66c10054e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "391c5799-30f6-4483-9c89-f964964b2592",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "305c8ada-2aa2-4b43-aa91-444ba3bf7b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "391be4ef-2c31-40af-a85d-0c336ff2a2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55eca6d1-1d51-473d-a37e-081fde236eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a10551d6-5851-4859-ad4f-a8408df20057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b311d5f8-a155-4fd6-aae7-c3715f6949dc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98107dcc-138d-4da3-aef4-423d7bc5b2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ecea52-8317-479a-bc10-772adbf774c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beeb8d15-8b50-4681-b906-f189760d2b29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a368353-43cb-4d43-80b1-1774c38b3bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d0c6da-e693-40b3-82dd-5b7180d87fde",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6586f457-8686-4dda-ad5a-8f4a57a4f9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dcca1e-f89c-4bf5-8ef7-9aea013400c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617324da-0d62-4d41-ab93-4f2c0f64f3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16648a93-1c28-4036-b32f-15d8ac927768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c08221-99a2-4ac8-b2e6-6436f82d3494",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aae4a7e-bcdf-4430-a976-b110fbdf684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881e992a-630e-4131-9291-c4f4392c44fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6101fa-21df-4004-8a80-d56ded7f01f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0391033c-bd8a-411c-9929-e06b5c908ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f46eb3-8a72-4b1b-b5f5-5fb92a727d86",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f0e02b9-877a-420a-bb4e-54ea2bbde2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9595b8c6-b8c1-4cf6-8f75-22a0b1111e44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fec46aa-28ee-4aad-a641-41b9e87a499d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "95a0448d-b769-4b6a-ae27-d211797bf99e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d25cfed7-e99d-42c1-9010-ab53162c12dc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1d11058-5612-4a16-b0af-37a33e7b313a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08034a97-7735-40ea-a8d6-0ca413c49464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b043d9f-e1cf-4dc6-82e6-bd2b6f941e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed1500e6-9267-4acb-b253-b2dab7cc47b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead75505-a8c1-4b66-92a1-528c1947c223",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "086f791e-1431-47cd-8237-4b2fbf00edeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23036995-13c7-4778-8662-6dd729ab6748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91c0e75-23eb-4508-9242-c9695db345a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d283cfc-eed5-459d-9dbe-f0e6f4f21c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e90370-a31e-4f64-a69b-93ff6471c95b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c279a3f-e827-410f-a9d7-087c5c8e4d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d3040d-bcf9-48fe-b8f1-59ff609264ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e780646-abae-4f4f-a186-4204e191bb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff9e2728-c710-4338-bc05-f0331585d935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77ed506e-c75d-446a-a0e4-ad083dbc4b1c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4159ae4-9d8b-4c3b-9188-b5a9be0a3906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227e76cf-a082-49e1-8a7b-9cca89bae53e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c2711c-7656-4625-ac0a-8bfb9b32692e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "043e22eb-0324-487a-abdc-5a2932554760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708cf87b-c549-421b-a945-16d9b210921d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9865f683-5d1a-42c0-ae01-f573a84b276a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a21322-e82d-4959-890b-81b19508db1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e966d5cf-9823-43ff-9c0b-0fb8cd5b2751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9cef2e61-6757-4c1c-b309-4a75573a72bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c029ec-ea1f-4ad1-b889-65a03accc942",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c8a8d11-1472-44bb-a49a-8cd6c9e40390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0beffb95-ab61-41b3-8337-b1bee0a0b582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15681bc2-64fb-4876-8087-62a34d38e40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "797c0c06-92e5-41fb-9a21-6249449ad1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e800ef67-d3a8-45cd-8477-320deaf26967",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56af5324-4fae-41e3-a06a-d9617f0822a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "beb80050-199f-4a5c-866e-c8df069d01c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a4e191-d89f-459b-a06d-5d5e056d2d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "607df2bb-7829-4e86-950b-dbb9cb64f414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7358769e-f7fa-4c22-bb2e-d4237da0f0f1",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d853b16-c221-4b32-87f6-3c2fa20d10ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624cc459-9c3a-475b-910c-a233779e7fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db50262-2bbd-4dde-9127-1cb68750f94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49479b95-1224-473b-b5c6-e21d85a4215f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232356f7-265a-4eca-afff-60924a0ed1f5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3ba5ccd-5ad9-4a68-93c3-6d8aa50db131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db632cdf-99f8-43dc-b47e-480d0c83dbf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66da440-fd4a-4973-bee9-9cd6b10d0115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00f62118-aa52-41b2-9da0-e0bcb17af2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585a9770-83d7-4c3a-a947-12f89fd9fc83",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f76415-69a5-4bd3-a376-2a412498ac99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ff3cb9-5c2a-46a6-99fe-022d86767dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb586a85-e3fc-4b0e-b498-ce6a9fd2a962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "34028bfd-e077-4ad5-8f87-53da79246976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9bb9f7a-f7ff-4f1e-a52c-78005c4b4636",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c478b3a-0dc3-48c8-9850-bf355f23f158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ebf93b-de5e-47da-98ae-1a44cea282b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8682e40-aa97-40fb-9c69-652ace0276da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e037b7e-2f09-40d6-bf41-05675943b27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673351f2-10ae-4484-a308-9e168e618de5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfc1ff2-856f-4c25-9aba-2f716625f811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6edaccdf-2871-4bcd-b144-f64dfcff950b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef8a90a-d14f-4a1c-9ae6-c8bf1e26bff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c546c1b2-924c-4ea5-adff-d7a5cda09d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01e4413-c0c1-4a2d-a2fa-bbb30c554cce",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2f9196-abe7-453f-934f-bab43508074c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886f24cd-b753-4f94-b9a6-3adf3f27bbbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21f4dba5-d17f-41a8-a81b-954bf6fdaca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dc9020a-33b5-48a8-806b-5c4093a29c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d842282d-774d-42b8-87d3-2c84e721fdab",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b3691d-a450-49ab-943a-41d4d4118988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d7a6c7-5e6f-4d85-8b2e-fb99cabf8ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b99536-e7d8-48f4-adbf-365a30e274ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e113867-6657-416c-ace5-93b51a239934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ffe2c9-a59d-46dc-979f-1bf5fe3988ef",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e79e859-0652-4ca7-bc61-11ba75033e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acf661c2-29a6-41bd-bc08-e00abe11f9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc582e08-a8e9-45c1-903e-ec76a47a085e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cfd0ff3-d22a-4e54-9693-b35e30cc648c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07fa4f8c-a756-4b84-838d-dc485a6f2baf",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14110fbe-2e3c-44e1-b3d9-a205424a115f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb88057a-8f1a-4eeb-bc4c-67466b058c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b8b63c-d05c-40a3-9045-baac907c9d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "496d2650-9a7b-42d8-b5f8-0c071b55125c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107460c8-fea0-4758-bd79-1772c2c70cd4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0630153-c50d-4831-bc7d-cd3eae6a54ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f2760d5-6317-49c3-8b1d-e2731a670498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4920745-67bf-487e-bb89-b23d4c868935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe10bad-0947-4639-94b8-43e223d9b01e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f409bd88-3c8f-4089-b5aa-066fe4871acf",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946755ee-1d02-4c2d-b3cf-6e841dacb861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcdc8bf4-b7fc-45d8-9480-2d7eb9b0be7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8043d3-b6c1-454d-9239-479b73d7702f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "629eb87b-0cef-4b4b-bf0d-1cc3bf5c7e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4544b4d-1786-402d-bbdf-0303575289f5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51b6234-3083-4da1-a356-2e6638df067a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b98f0f66-c57a-4aa8-8c64-84a416ab4f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ac137d-024b-4dd0-aecd-276d0445d6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5ae5d9-de38-49ff-8e08-c176b63386bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d2d569-cc52-4b22-b734-8f1f2469eda3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eca807f-bd42-4b9a-9cf4-94cde31d856f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d385134-e9e2-4257-ac28-197ffc329bbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6289a59f-ae9b-417e-b979-a35742359a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc06237f-2616-41c9-b48b-1f7bd7890e73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d59f3ea-c11a-4931-88ce-4760a8efdbe9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7998629-da3a-4812-88f1-abb34a7df7fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00ad4655-602b-4baf-ae85-e6b31e500886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8d1b2b-098c-47ca-b269-66846d3b7eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "190c156e-faf9-4484-8b00-3b6b61931f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904d83df-17fc-464f-8f18-c2cb18cc6b1e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b324b364-0306-479d-a8b0-049df7188bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82c09c8-d0db-4cae-b34a-77756ea8c867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbbbb79-2d2d-4a81-a1cd-579ab09f6b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6efe82-48b9-4c16-8ec1-c89960c0a77f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6888533c-9d9c-41fd-86ed-4674de3da0c2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c301fa9-bd24-4855-b3ea-83edce26245d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "066f26a8-5ccc-4eb5-9063-8bfe7b018d64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42c423c1-fe9a-4545-ac86-f861a7689999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b82ce27-d810-4f3a-9776-b860fd2b9216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95969ac-09e2-4a8f-bad3-c4aa0a126698",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34eafd1-1f93-4123-b129-eabaf7ded133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e1c534-92b3-415f-99c8-df631cb37a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb6c124-4211-40eb-9eb0-baf36968f44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "47f388c4-d799-4cdf-b50f-89db1dd67874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01739f84-622f-46fd-930c-f3c3239bf378",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd21c42-cd30-4911-b464-24459e8d1703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ad8bf6e-694b-4780-9fa4-51759c634e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464acb2d-28e8-4ad2-8d53-8e60c6454a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee8435f-0a16-47fa-937d-fc85ae2515e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea793146-3e50-4d68-9c23-e7190da54824",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5f1b81-ccd9-4856-bbe8-b92be4b3a70d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e397a1-6bec-4a02-812e-3547ead96250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3199b693-2283-42d7-af71-d584c2076b66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "360aee20-bd14-4978-99df-0c752d75dbd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bbf2cf-06e9-45c0-9d9c-e629af5b713b",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c44ce2-fba7-45c0-a04e-fb74320b50b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665e413f-7030-4496-8976-c088fe34c4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f305df4-f95c-49f1-a0fb-62ba20d972e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "00106e2b-a2f8-4adc-926e-41b3f2d5c4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da771ef-2bf8-4b81-b88f-b256e621f33c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da1a904-a55a-43b0-8909-a933c4f9470f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d617c98e-e1e9-4722-b028-7c77bcdb8cf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aeaa54e-ff78-4c50-b2b0-dcabdf1f3dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5aa99c1-7deb-4e7c-8434-c1c67dd34c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0fef26-26c0-4122-9f65-cbab5400dc91",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcf5ada-ae29-4e80-b1d0-84a0711e1838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25af51b6-3ff7-4491-ad1e-e2b476ac13fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14009757-5674-42ec-8a0a-01217a7c1e08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f354b00-6c5b-4f78-9020-a1b3a2f86e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209d8be4-159a-44cd-b0da-16d2eafa180f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3ed7d3-7165-4c7e-b4d4-828d40ca5f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef560b60-ffd1-40b8-8c52-bf8ac43b7814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964859a4-4a2c-4ead-8291-6793a479db8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3ddb001-fc1a-4d97-b9e9-59251909d7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4af31f4b-34d2-4c4d-a6cf-26d692775854",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f89f735-58c2-43ac-8bb6-1f99b2ca7527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f322e2d-f505-4d92-aea2-a77819f3e56f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef50fb7-0057-4d8f-a850-4c4b4ecc566f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c271966-c46e-4c7b-b069-2fbc68858ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7f39b6-dc36-459d-a456-8b2640f681b2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c435352-5484-48ec-acd2-a6a668c207b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ad69ff-e2b1-42b9-99dc-221f98a7dae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33a48b5-15fd-4ee1-90e6-555731fbe57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c531856-fbbe-48d9-85a7-d50fd979eaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6389334a-f47b-4395-91ee-ba21b94c9ded",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2fde5a-958a-4149-846d-2ca213d494c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e6e610-9e45-4507-95a4-2886bef63570"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d8f96d-9170-42bd-8513-7e7aafc1a55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3bbeca-e4b2-4591-92e4-a38b21306331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5830bb80-f387-4a78-8911-75a722bb770a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a8fdcf-4ead-4575-905e-14d78bd2124c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2d691c-3f16-4a4a-95b3-708a8833961f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00b93235-875d-483d-933b-e302e32a626a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fbd9afc-5949-41af-9be2-e615a37e1ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492a6061-13b4-437a-8537-77952b0f74f9",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e941df82-0e34-41f9-ab17-77f69742b674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cdfdec7-e358-44ac-9f89-9e1f13a7b3dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f48fb2f-0d2a-4868-941e-d59037d44c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9982c51-6064-42d5-a3f5-6f7d4215187c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b668a6c-e2fa-438f-8016-5c3e27b315fe",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f785cadb-ed9a-43cc-bc3a-e0868f04d890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a10734-6257-4de1-b9a2-84a41faed8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28879b1d-1717-40f8-a12f-d1536138f24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ada7de-3cbf-4a08-8b75-729885bd84eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46958b52-b6f3-47e2-867b-c9842189da14",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db079e36-b346-406c-9caa-c7818cf1da1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e56903c-2537-4e6f-8ccb-24ece3ba4ba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4bcbe9-5ef8-46f6-b8e9-5c957db2aab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db1240dc-871e-46e7-9c69-8589138658c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f39450f-ae10-49c6-9440-35d14b48b152",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36a629f7-3147-467c-87eb-692ae6967d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d78839f6-978c-4708-909d-314f7c099830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5908b510-cd3e-471a-812d-d0b42b819484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f9159cc8-4fb3-4af0-8e8b-1c8b2ffaa5f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bfe63e-d39a-4c08-9b97-3ed142184b78",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf74d8ee-5d8c-4927-a25c-bbfb46c192df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e4324c-aa9b-4ee5-8f48-9e852b61d808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd01b80-6599-494f-8f63-e094d82929ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a085cc7-5e6f-4a07-afee-7284782f3961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed31ed0-b3bd-4671-8cd9-16a762f0de7d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7e425e-02e5-4cab-a066-b1de650680cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec93ad6e-3bb1-4355-85c6-cf591bf5ccd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7160bc8-611a-4e31-ab25-d971b6b735e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fda68886-e163-4eaa-8610-9015bafae791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7123998f-78ac-47b0-9610-e425c37c41f7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0c1622-317a-4e52-87d9-af4981861215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eae4491-eb1e-4c04-a04d-5ec7f5cf1583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72070974-2655-4f7a-b1d6-3ff89470ce27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc354a2-5437-4987-b9fb-2f11813d4d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf68c147-c5d3-4ea2-9a22-064bbeb8c5d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42074dd7-a01c-42e3-ad7e-beb91892418d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fc0c4f-2905-46eb-aba2-0ec1f4e75e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63404678-ce78-49ac-81bf-5e05d7fbb2b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d52bef94-3e4a-412d-81a8-4ec928c85d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57013b1-df71-4c7e-bbe1-a42a93ab7c25",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bb9766-c6d9-454f-ad9f-1e232def320f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c00080-9217-4a42-8074-d01241e0c14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9923bbce-5703-4bd6-aadb-4ffe76d47a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c507b5aa-49c5-470a-9d62-b01dc284f96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18af4c35-f69f-45ae-93ce-4c303b4fe3d9",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b215a937-d2f1-4b17-b17e-270a3f6dad01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3f6bef-b523-48bf-bf67-a74b7efa1223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b97ac4b-fd58-45e5-b276-b7347a8b7ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e336065e-d7bc-4020-a347-8535cc28c17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e992807a-149d-4197-ae2f-fbc185f21141",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa9764c-df19-4b79-8e44-337c3c93b1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65929672-40a8-49cd-88db-11826d7ae9bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c93aed7-a83a-4d04-a6c2-47ff11861153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b21218e-9059-4679-9e5b-76bf4886d034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4daa4d-bf41-4e2d-9a7e-435496494976",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052e89b5-58f9-4324-ac15-b4e47c0445c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac9d56c6-c222-4c20-bb55-73b8689509d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3412a572-2df1-4afe-b1d5-d2df9fcc2a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c311876e-b14d-4602-a730-eb28a9c9d6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2e52177-88db-4e94-9412-d43fbb0e83a7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c7ebe40-e411-4c43-bc2f-556d3db7da8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0114b35e-fdab-4a5c-b18b-d1b76ad0a5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eede6bc-d6ad-4409-a9d5-b8edd0ed502c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52833880-45d3-4e6e-b1c6-2c58a7e11261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83eebd53-4b13-4b67-a8d8-362384e4f4a7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39195285-8d4d-4388-87c8-1b1096a45e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd033b43-a182-426a-9ac6-3b07be8d32e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e2c854-287d-4044-8e8b-b4c0d246ae96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "37320ba2-9d45-4e8c-8c82-7996a9335da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f65b43-e420-4c40-853c-bbaf93359ca0",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f92022-8c0d-47f9-8979-9e4a326e4f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be58ea7-2772-4c64-8b78-3e8374b29fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a348d1-3d3d-4449-920d-8f89ed20f6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a7741d4b-13c1-4f4d-a1e3-f803490330f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d431158b-b0bc-4045-b891-cc551f5ce3c8",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b142c2d1-f0d6-4b6b-a7fa-0f662383cdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e5cb300-7328-43dc-a701-97af0b873071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b140888c-008f-4389-a69a-d3a344f1a67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e571effe-a87b-4675-be63-2fbc1cc958f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3025e6-1359-409b-bf22-68d10704f604",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6a5da97-31e5-463b-ab9e-bbf16b9b651a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a424350c-16e3-4fec-8119-949b99909756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b17c1e-a93f-4244-b1a3-45158977cf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc73b43-114e-4630-a53d-20b75dcef0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad32d9e2-38d2-4173-9972-af81a8746136",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7766cec-de2d-4c2a-8fa5-be599e5d3c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f9fc78-4622-4b54-b39a-a21dcb89ac0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a9be61c-9e47-4a1c-95f4-c0263c1462bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d9895c-9212-443c-9653-8dc2733fc206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651fd47a-6e0c-4336-84f6-ea0581412828",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c13757-697c-4497-a550-f89c1b3d30b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba8a773f-f92c-4d3d-b07b-1703d576c287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048e9fae-fcb9-4dcd-addc-63ea154f3ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18ca5a64-4694-4cec-80df-f747d6405aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798be911-1e59-41d1-81e5-53b16ce13a3d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6538fd7-cb16-4465-a37b-7c2197f9e5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0923f982-39de-4c8c-a794-09eb8ca49dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef007d2-01d2-425c-9c77-2ceb928b2312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a107c11b-096d-4bc0-9439-883b3b15bd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a421bb-410a-47b1-8077-348105abeb93",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3edf40a-4614-43fb-ac26-deb04d3ce828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82cce1b1-be2c-42da-9679-708a6d6258c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de66a12-679c-4a3b-87de-73e60c5ea240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a59cf649-360e-4ec8-964a-61e050bcb033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aa83c8-8317-410c-b74e-34ee9cab8b88",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0401e957-ffa4-405b-bcaf-8be69744d2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565a142f-624c-4fb4-9558-271bedf629fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21200bb0-a87c-4fb1-a117-72ff8b56496b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e02f5b-e8b5-4d90-bd18-bcd3c4a4c721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0c1bef-42e3-44be-9e53-9f90e888f14b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255b8bdc-4b81-4e32-b1da-2a43e3ff0a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da6cd01-9b17-4f12-a863-5f64de89d038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d4f108-a6a7-4d0a-98e2-b0e5b985f0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb09bee-1d58-427d-b5b7-70daedc8f373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bac74d7d-8f43-4d86-a433-6d732fefce71",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b3c56e-01a1-4ff0-9ea0-58aa85bdbfdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acced3c-f39d-48e3-9924-f8203b781d71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4fb694-c3c5-4522-a60d-96b99fffcfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "328327a0-68e5-465f-9ecb-dcdde4df30bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a1ef70-baf8-47b7-9d92-f5382124c1f3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe31b2bb-044a-4183-9921-5c1f58ce63df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35adec2d-decb-47e3-ad9c-a274edf89a01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c3acf2-731a-420a-a437-1ffbde413b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "357e8347-36dd-4913-b5ed-a4668496aaed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8c79af-dc12-4b50-b5b5-50523aba7f91",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e83af88-8096-41d1-8aef-ba2c2202c58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2ed17d-4c2e-4e6a-8c81-721d9e53a9b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a5f133-dfd6-4403-8417-243700050565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3b71fc-2c01-4853-9333-d25063996b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "219311a3-20ad-4f45-ac68-45a6a79b44bb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdbba98-7540-4c0c-972d-a48c68609482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc045a6-0a1b-46b6-9604-da4da49ef747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707e5117-6a49-4938-9214-6862165e3e78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1bf7e0-ed68-4679-9524-74117b9f2afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7dbcfa-23a5-4b88-a5b7-719fa33343b1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c241ed-60ab-4123-bace-78debbecdeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0478579-14f0-413c-9d80-4dfd52a6144f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5ce664-d051-49dd-ba43-3c02c4ccb06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e5f112-bc8d-46ed-8b48-459feb42398c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a727021d-aa7f-4094-b04c-96de420d511c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb4abdc-4bd7-4eef-8f22-99d09fd65293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8495b5a6-bfdc-4e78-b8aa-1dbf8671131f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ed14a8-1118-4b8d-9191-d5716fa2c414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83b383bb-20fa-43a4-8ec4-eb7b330ab273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6fd850b-1604-45d6-a796-a046546a0f17",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d108787-410b-4b38-8b5b-179a33dc9b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67abcb8-a83e-4d36-814f-e04eb3d2f835"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "807fddda-70cc-46e4-884e-75aad5e4ea40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a44b76df-e0d6-43d4-b8b3-10d048177193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7320d2-aa6f-41db-9803-be16899e1d7c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc791e9a-3013-486a-bbf1-e7f43c3acb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2034974c-ba07-4811-b739-6773ee794a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a60a863-6cc1-4910-997b-2c3f328ff9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08db1fff-7d86-40f6-8a23-1be0fe1a1ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f1863f-70dd-4261-93a2-5b8b457c756e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f4d028-ed52-498d-8505-a16166c06ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ef5571-e7d7-402b-a331-1a237c6fa608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f2492b-a23e-4500-bd28-001d402a2065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd8919bc-ced2-4bad-8c0e-9e0c40da3015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eb8206-9ee9-4592-bd36-022ef6a1ada1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c89066-7167-4175-bb98-7b82dbd4130c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0817c7ff-8eca-4660-886f-ac521bf16e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11c4c10-6cb8-4b14-851e-b4d5cd0a7084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bde0e950-01cf-4d22-9be9-869c24349801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2029e262-c2dd-4a27-9561-0a17f73bc13d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ba83b7-b9b6-4ecf-ad46-a4846723d000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56520320-d27a-401e-a3e5-e6baddefcb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aaebbc4-81d9-4ed3-a123-bcf877c81985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6890c701-e403-4cd2-bba3-0a21eddc647c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71cf516e-a535-4a97-8a01-a63eed9b664f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10a167d-6286-4978-8575-6861e2153c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94db2bb0-482b-4f4a-a332-f1db3ff524da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01315378-e1ac-4d65-b003-08d28649ee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2db27a-8266-41dd-9504-adc18adc4c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60da3ea9-ebed-475d-9a13-3532c066da73",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9543466e-e1a7-42f6-bf46-1d771da01976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d797fd0-0e8e-42c0-b88e-c5b31fffce77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b8da63-d1fd-4555-a4f5-7fb3d3f2672d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9715efac-1a88-4f2b-8fcc-8f7b1c055f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a922d7d1-2d0a-403c-9a7a-ac2342f4d28b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448dbc7e-4490-406a-a7b7-24e0ad89a41b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34978f79-1ac7-4cf9-930f-86cd35f85216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf9b10d-e24c-49ee-bc45-06d9abc2000a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4edaecfe-dd92-4998-ae7b-bfed1babc12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e928df0-779a-4a1f-92f3-bbadf2808f20",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce57c003-648f-43e5-a205-29b9aa2ac4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3035697-228e-47b1-b562-d9c7ad4b8942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d56e0dc-3203-488c-b839-6da55be1aef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d29aef73-b2a1-4912-ae18-80ff33f4219c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45c22dd-b575-4f52-bc7f-8fd9a7cdfc0b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e05071-0183-47eb-a771-0c326216c148",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f87293c-e436-40d0-b055-c5d0c97ad840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e748efbf-bd3a-4902-b18b-bfeec495beb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e038eff-2813-4b47-8175-22daa537ae40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4bda119-9a73-43f9-b34f-b44db9ae1eb5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a52a487-d930-4fcb-94ba-3de7ec40f369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d81e5b32-8317-41a4-9202-dbeee9710fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a973317d-87e1-4e4a-bdfd-71916ff5467c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "89f31f6b-d9d0-4d7b-8e46-4456793ff3d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "027dc864-4ceb-4957-b8e1-bf2be2c8e2f3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27d284da-c60f-4f09-83c1-fca2f472e677",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9aa25d8-7eb0-4695-86b4-6ed402b439c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2550655-bb0d-45e8-8135-431edde64653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e5aed9-3eee-425b-a6b6-c6d708805ee3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "777a6a98-ebcd-4a3f-af7b-59e834957d9f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba1ca7a7-5eb5-450b-86bc-de5268a550e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96ffc126-5a9a-43d6-a7b9-854746a24158"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e7b9391-ef42-40ea-bcd0-df582cd796c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ae3836a-3e0f-4211-96c9-4ad8451f132a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "76956313-5756-4ef2-a7db-1f38f75e5e5c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56468cc0-cb36-4ede-84ba-0d7eae5f175e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e6b2fd54-7c53-4d2c-95d5-3510d511300f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6748ce1-fab6-4327-a6cb-ccf7ef083355"
                }
              }
            ]
          },
          {
            "id": "ec00ecea-4845-4f3d-bba9-e376618affa3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f659dd67-5838-44bf-887f-5dddf11dfd80",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "366d106e-b529-4f95-9fe2-80aadba3d723",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4bd31e-676e-4ffe-ba8c-299ffaeedc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2f04cdc9-d3aa-4249-a6f2-c6b3631e2290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7b519f-8054-4845-a4b3-0a88a855281c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8201d3-c56c-4259-8c92-e9b3801d7cee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e3f2a1b-733b-47e1-aea5-0bcee30836c3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bbce2cc-1b5a-4197-9c1b-dded1ea4565a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d74c7c20-6ee0-4b1d-9fa5-b8e5b5121762"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "095923e9-3e77-4f04-93b3-8fe2eb806e25",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4e4536c-9bea-4f97-ac30-96e1c2c9299d"
                    }
                  }
                ]
              },
              {
                "id": "494e893a-5541-422e-8d37-c2a946e60fb3",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1301057-3a8c-4170-ac17-5105c11f5628",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8761e986-3e56-481a-8e49-8f0937238fc7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23a9bcf1-fe60-4bde-a9fc-4270b2dec431",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d4ec7fe0-9187-402d-91d3-9e7c80dd0a0b"
                    }
                  }
                ]
              },
              {
                "id": "02b60312-93b1-4e80-bf69-63c9c0e2e1fb",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46a35400-410a-4fe4-8435-6fee735c310a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "725e0ab9-9c6c-4151-988c-8592f36dcbac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c37477d3-5c3e-45a7-84fb-e16875f01f40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7dfc2181-8f6d-4b90-8661-fd6b1950d044"
                    }
                  }
                ]
              },
              {
                "id": "0bbbd41d-a00e-4830-a881-7202d10a429f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24f9ef41-52bb-48b7-887f-80d53c037fb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7369f042-e9bc-4767-816a-2f8d6eb0a6f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8520a0b-1dce-44b6-a04d-5088f3b28467",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cce4537d-eed7-4ade-88d9-4a2bbcfe16c9"
                    }
                  }
                ]
              },
              {
                "id": "7482102e-3802-48d3-ab3f-b9e821445c0a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47443680-cef0-437b-9adb-572a50bcc6fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce3df531-c5f0-4a6a-9995-31a75c00ed97"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b84f53be-f636-4be4-bd70-4ac3d7856ce9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e0c40566-d26e-44b1-a9c6-42a8da76af4b"
                    }
                  }
                ]
              },
              {
                "id": "575b606f-b3b4-4533-af93-ab529c8db30a",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8743efd-33b9-4507-a764-9ceda17e58a7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7a953916-a6ba-49e1-aa25-fda6d207dc51"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7cbc31f3-9295-4940-8152-fc1de9a05ef1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "003dda6b-1fa9-4ce3-96c0-bb20169d6f73"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "35638191-ae02-4b51-8053-7dfe2cad4978",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7452473b-350f-4c27-a297-57cfbcd3eb04"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "95330c50-f502-434d-97de-330c883d2352",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bebaaced-a938-4d32-981c-45d4c3aef91d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d868bf2-1563-4bb8-9840-f28e1642838a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "d6814848-7436-4927-855b-b8baf504d280"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ae020bb-105d-45f9-b33e-c97e495834eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c178e46-8405-4f63-8c50-925923db7941"
            }
          }
        ]
      },
      {
        "id": "a345f066-6d2b-4dfd-8206-b97fcd32b2e0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "eface780-99de-4ce2-816f-80c73cad5129",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2055aa82-8a9b-43e4-9d29-faa367059993",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f2b822d3-fec3-4fb2-8217-053e324dab38",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "745e14c8-e8db-4d18-97cb-bd6fa32bc357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cedcd4-9c46-4c31-8583-af8398bb791c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fe0e19-e4f3-4bca-8d3a-e5d6616fc3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa1db849-7e3e-41e2-9db7-7d62ffad77bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94d95ac-7998-47f3-b121-f32ef4f6ffd0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ed8ab9-2835-4516-be13-5ede47984fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e04d850-8d81-49d3-aaf4-148524a228ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa21610b-a1fe-434f-91d3-8ba098e9c1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2d81461-29f7-4228-82e0-eb21878838eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6537418b-ba36-49aa-ab87-dfbeec792736",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2471009-7dec-4505-8c2c-1e070c4ea6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d37c1e-44f7-4aed-b5b1-8c563f669047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e4bf2b-efd3-445f-897e-27a5f060cf39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f81ccb2f-0dc2-488d-9787-c4f3a4ca1a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8104e916-4ebf-4047-abe8-25857b45ba4b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0a5203-d74e-4dd5-8a29-ead932608754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35b9da4-20ac-41be-8cb6-c2dd0fa4a6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d38f893c-2443-470d-936d-cd7389ff564c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a01c7373-fb98-4051-9e9f-a1f051740dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b52f9cb-a6f7-4e74-b2d1-5b5179d56101",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5e27b7-6dc8-4cf6-a8fb-4c00b0cd76c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e157727-4375-42f0-bc73-7c415cfa6cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf9dadf-f391-4307-985e-cb3ef01240d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "15db61ab-b60f-47a6-b522-c179c3a5030d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2876143-37b9-49f0-994a-8bfbeded8202",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04943fd-64bc-40f9-9f74-aaa292d943ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0036313-5935-4a7e-b957-0de2ee61a042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31acaf98-71d9-48d4-b6d6-321e49e11c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e16cf75-42d7-44fd-8896-7a80323c76dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e05af53-c98a-4196-a14e-3c7fe4dfc260",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ddcce0-850c-44e2-84fe-bc03050e9d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b0fd241-3947-4515-bba3-ec0d6bfffe38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f180f29-2949-40af-af84-cfe2517175c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d26a163-62bb-4b6e-88b8-2d11192c07af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90a100b-0d58-4d9d-87a6-c485034584bd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744cbd84-0a85-4da7-b219-963543790ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134b5e28-ee2b-48d9-b8c4-9c0bd2f24980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b845b3b0-ac80-4220-b66f-c4098024e7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4454b581-5052-469c-9443-dd832be9ae5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53a3e37-c1f3-48e0-a178-6d94c34571ce",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8fc6ede-24ae-467d-8fd1-4b706f484c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011f7215-b815-4afd-8e3e-2f76da26ec0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f38def8-0a9a-4002-8f70-4b1d62b0a017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cca264e6-2d66-45a5-8609-868222b99887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592985df-4e51-4f5a-8672-4606130e1f5b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ecfd09-c013-462a-95b4-0d47bdcefb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3606dd-95bb-4573-b1a0-1db0b57b5c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aba33256-4ba3-4fbe-ae4d-feb2303b7e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e453221f-0674-4d81-bc29-796e1a890c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdcb9b6-b998-47fd-a592-ef814d736825",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b15801-5711-474b-9a53-89553005b718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57568bdd-b384-45e9-9f0b-e7a28612f0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8caa2dfb-e484-4ac4-bea8-b74d28b81c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "65e7f4aa-327f-493b-86b3-af1ad8229d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb7d28f-58fd-4a8d-862c-1068a4fb419b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6e004f-c46c-45de-bf83-c087ea2a2b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bbdda9e-2c97-4530-9721-94d13923d418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92262790-17ec-4817-9730-e662dc686d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4128541d-8f84-4257-b3e3-cac8a328d2a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff43f15b-b80a-493c-aece-a29aadaf907f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d6a12f-958f-4941-a179-589c364569f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8cc9b7-8e26-4bd1-ad16-5d21b3434f7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cd324a-f201-4886-bb78-225500355075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cce740b7-fc7d-49a7-8494-c4e66e3d0e54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda128bb-52d6-468e-929a-7d5088026d69",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b4aecd-6c57-441c-a10e-3f4fce4d956a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8beab74-9732-43b0-ba56-98f76c80fcf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7036d8fc-022b-4464-8d95-46e128de093d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4046095-061e-4540-b104-a59b6f82a43d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141669a1-a4ce-413b-87d7-039995217c5f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37759571-db5a-4b72-85f4-f55aa228eb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208cf129-b28f-41eb-89fb-bb29978b8468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa9c3e3-4dfc-43ea-b8bb-c0c07fbfa40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdf34fa0-d98b-4caa-9e69-5bf9fcd10260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338ec9a9-4f53-42bd-8225-9cdaf6cfbfee",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed836f2e-8be2-4461-a0de-df1714005838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635a2503-188d-4921-82b6-708ded3e3820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8abb13-04a7-405f-9f07-843f091dc63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a08d6dd4-763f-4586-ba83-7a4d0c39df54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee767a2-7516-4f3a-b0d1-7ec06936266a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a707106-ea1d-45fa-83eb-be030f1b4660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e41b4c1-6af4-4995-a16e-ca849f3b243f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a655a5-9876-473d-88a7-bbcdee4f25e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "049c0a6c-0b09-4e2e-afe5-ac249e876c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2a823b-c698-4114-af4b-30366c5a997d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf2a56d-c556-4a2f-ad8c-761bbbf4a34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036b55dc-23f2-4177-8ffd-a868e3a5cfc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf209ab7-3c8f-407a-a38f-ed9f452a6415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f576fd4-e97e-4444-a8a6-b820182ff2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75febc78-ab0a-4609-9fec-33898214e1f2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c632d193-f72e-4644-8f00-aae6de560953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4715f1a0-aa12-4bd0-9241-62332f768df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209f5386-7192-41e7-9b09-5aaeeb774bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06ae026-b197-452b-95ef-c82a493272cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26deed1-0a3d-4396-b1a3-89c72df2e747",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04939e2-c6f2-4775-9b31-06738b8c1b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbc1590-3b41-42e1-a045-1a53025f5a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9721ed4-91b0-4946-b66b-b63b575e7e84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2a102e-e6e2-40b9-b1b5-badfa7c6e80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb988ef3-2180-4fc5-bc8e-7660c53d698e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08387984-14cc-4f56-9815-78f22682dbac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "178697b7-6dcd-4f90-95bf-945213bc0e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23dd791-48a1-4d2f-9b62-ebb931c5130a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70ee7d06-468f-49a3-b06a-d1ed74317530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ff3951-9ce4-4d48-9c46-d799b8cfdd8f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efba72b-ff93-4cfb-b28d-d3c72e394966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9e01fcc-f243-4672-80f1-31f8bc8a000f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b80f343-adea-429a-9c9d-3e920ae71c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f1ab568-3010-4bab-a912-72ee504f23f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342d3590-ac30-47ce-b538-ab7ffdb4407c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783dbbbf-6609-498e-8d73-5be930b5b872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da0e711f-0bac-4a69-a820-05a5bb089865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466c6412-c21f-4c95-bd6b-c34ce8f6e582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1850593b-535a-4ab3-84f4-41070ed3bc30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20308dc3-e408-4e7c-a11a-a9cfe5f72831",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d90b12-db98-4972-bdcc-7e3a24058b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d13486e3-4e15-4a78-8ceb-a5862ca22880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab3963d-e9b6-49f3-9884-f108e28b89b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6f1e1f-f308-472f-91af-9cee485c1fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a586106-7d48-47fd-97c8-9a7a823192ee",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1d38be-af7a-44ac-9aa5-e3996f1b8663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff0adfc-957c-4065-9a64-6a46f574d8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fec6d2-50c6-42be-914b-d3438d67714c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e654976-b4f3-4289-bb4f-3853f3afc983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813352a4-988d-44fc-9e73-1d5cfb07c963",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ebcfbf1-d0d5-4551-8586-f7d11f03fc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48f36f4f-62d4-4b60-a70f-84da5ada819b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ace404-c882-4e83-8357-bf6a564955fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ac521ba-259d-4f7e-9f68-0c008da3064a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa68ba2-77ab-4c4b-b25a-5291cd27dd23",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94984c0e-212a-481f-b646-1ece67875d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "006045e3-c024-4edd-9b7c-5d6a61938abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56f47b3d-1136-49ef-9239-b72bd1a853ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adb394f3-ec4d-4461-be35-1f4b1767b8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e1f61c-abae-43db-97c7-c6f9a6d24e90",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0330ed87-8448-42ac-9151-1af69f099234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09cd858-3066-4db2-9cb8-0b475c05f1ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63857f49-aff7-4517-a37c-6009025a9d51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f126c800-588f-42c0-8e7b-2993052956ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5afec03-82a1-4600-a509-19fd83d87e71",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd6e6b1-109d-4a95-9df5-91096030bd69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cda8f70-18a2-4082-ab75-65a5b4fbeadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71a7048a-1114-470a-bfc3-f2a1c5ef4038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7082422a-5f03-494f-98e2-9f2c30dd0066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b11585-4c73-41f8-994e-999e3a7fb8b7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d72bd2-eb3a-42d4-8b62-a887c0dedbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7d3e14-fac5-4d87-aae3-b7ff10adb44c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd90b5ac-b2b2-43bb-b85b-91271af28657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3d80fb-2c8a-423f-8c0f-8d0252644bf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58793b39-a4a6-4614-beb5-3093cd057e57",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac50d884-c9e4-4594-bfda-756e1cfdd158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "500f637b-8c37-44e2-a4e4-a2db5e71e5da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fa6614-aef3-473b-b6dc-46fbc9736d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20d220d2-970c-4a4b-a991-2842ced4b4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed884ebf-b760-42fe-a6f2-b27afbd8ca2c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94940fdd-94bb-44a5-afde-602be7d57b03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1d3d12-e330-4227-bfe8-1da8ea465758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6b740b-8b81-4d19-80d5-14ed4e4be887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7124a216-6c4d-413d-a447-f9e2ba535c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b83cfa-cbd6-4138-9f8d-9c8639a3726a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d545f71a-e1ac-4930-86f6-1d783a333b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cce0849-af45-4570-84d7-e8c1212e6886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd07cd1d-0bac-4d2d-b87b-53b2a1ed8ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9e1409-dd17-4794-bf42-f692e0d4c676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a643f35-9877-4f93-bcc3-b32224917f16",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "082e9655-f535-45c3-ae15-49aa7d2db88b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d551ebe-6bf2-46b0-98b1-023137803e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab28cc1-e586-4d02-a21e-71183c563891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57313feb-717e-48d4-bff7-7f93bac44ba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104c059f-4a03-435c-b494-22a1c457953b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b51b60d-f422-42f4-8b84-8d4b0eb502ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb72f28f-7e1d-484d-833e-38921fb9b022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320a9efe-6261-4262-af34-4c6150da7641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ed5625-f8ec-49b1-ac79-b7d10bd3c1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a182dc-25ad-45a9-80d1-96552d542802",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244a794b-e9b5-4394-996b-e2eba415e39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2b5691-475e-4d4d-90e7-0dbf0d083242"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "884911b3-25a0-4f21-b0a8-00a2ab348dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a75d038-6b49-4d24-ac8b-a73280ec8792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78dab10-4a1b-49f3-a498-6424d1dde381",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43c28d1-fd0e-4a0d-9dd0-6c534ace02a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0800ef9-becb-4e23-b7c3-4928df6dabdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1521e561-7370-4d49-891b-43f4deaa33b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f345fe47-c700-4099-8edf-579765f862df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d6b25cd3-3f5f-4d83-ac10-6c918e35b035",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "388d8feb-2acc-458e-bfcc-202c5152b79d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9f56cd-d4a2-492f-87e7-d4c05b35d3c7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d01ca166-7cf4-4153-b93b-2f9d2dd21709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1297c35c-dcc1-403c-8d4a-ab040ed27081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fb1ebeb-c465-4ea5-9efa-a4e34b718c37"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3efc735-fe7b-48b5-aa54-0052bd180dfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a98bb221-d958-4daa-b292-1c27718220b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f33c9cb4-8c59-445b-878a-6e5b012ea485",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3519107d-c306-4323-899c-ee304a0a4003"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4ee9c33-9435-4278-a9ba-6ef015577b7a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b1b8a807-00de-4540-9b47-50cb98a215ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "830ff736-5e0d-4477-aca5-9199b55d0397",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "696286d5-4575-421f-9d96-39d85ce95bf0"
            }
          }
        ]
      },
      {
        "id": "77493c19-fbea-4ddd-8403-441575b383be",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a6f8d852-96d2-4907-970b-b9f204ef4880",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebee1cb9-8e7c-49e7-8c48-53321bbc4b8a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "29f8be5f-6d68-4020-b736-69c6e9a26e35",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4efe948-b8d5-4599-8fc7-f101227ca94f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7577026d-5336-42de-83e4-53e47f0f4e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba6d811-e2b9-4b03-89f9-6a62c86e3358",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548d3ef7-367f-4edb-af3b-91c39ba23698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478f20d0-09f2-45ba-94cd-442504728194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34046f87-5cb7-4e93-a779-7ce8013abe3e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a5b662-5971-46b9-909b-01d5bf21fe83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c087ca5d-5f5d-4e38-82c8-5158ddbe6e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b6b517-919a-4bdc-b468-19b466e2e2e4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ed0718-03ff-42d7-b824-5e50d078fc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "684acfae-653e-43c0-b36b-6004876616a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae722976-c0fd-495f-a2bb-8982d382ac74",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78450d9-b22f-475b-90f1-92fa6afc43c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e8a39f5-21a8-400b-9b7f-4d4671d1936d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ec816b-a7b4-46d3-9fef-5f593e078a2c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4e7ced-281e-4476-b0f8-91e4518624a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba1f017-6c9e-4fe4-9d20-54d2efca61f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b096fd07-06b2-4d2b-9e7d-24df2d83f6bc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c426b2f8-1c9b-40ac-9e49-a7ec70918efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f579e72e-b2a9-4b39-bea9-6c05baab152a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3992aae-d8ec-4778-9a93-26df860a56ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5259c905-dbec-43f6-9749-1e1413b6f39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb8b7fd-b204-4608-a78f-6f989d3d06a2",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36ce7d37-89bb-4702-8ef1-49fd294989b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d8f9b3c-68be-4ad6-a19d-c1d5e0130e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7b24ec-9e27-494a-af6e-f9a77c79015e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca36afe5-4f00-4f95-b655-f78dc08a7af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9ae806-bad4-42cd-89d2-20260ae3edca",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550f02f7-2e11-4843-89ab-02830b3e1219",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "432fabd6-6e1c-47f6-adcf-c4b1ad0d2217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08142fb-bc74-4391-b014-8f4b09f14552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d56e1c-b2ae-4f13-99be-e1f18fc8a5b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243f98dc-b2c6-484a-ba35-719c143e9821",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74382fbd-8fe8-43e7-8ab4-2aaf9eee7ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "243c2eef-af3f-4e4a-82c4-f4c80e468d02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5257cedb-ac85-4284-a532-42ab0aea4552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8a19786-a228-4d61-8a6c-15f37b45d2cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412ef861-4c26-4e1b-8e8e-acaa65013674",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0d9165-0702-48d9-92f3-cd92d015231f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268d4973-4281-4fa3-950f-1864b687d21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcb272b-6051-4e3b-aaac-a485e4ba7f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b6b758-fc56-4e40-82d0-54f82a825a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c46a830-69c6-416c-a934-e868bbc6ebd8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef4cf86-5d33-4305-b970-9a37a3a6e077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3f42a25-9b1d-43df-b163-dac8520e04fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec42057e-053f-4d4c-bf8d-a6fc4e1a3431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b61838-3e55-4edd-9395-96240fe3eb97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f68e68-2c56-4e83-9380-1487e5a9b832",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e31db78-2771-4b28-a6b0-07e7ff388dd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b22c25-6ba0-4636-a654-11e6bdfd3a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96374f83-aa2c-488d-aff0-3fb121db002f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6714f9a1-df6d-43f0-93c7-cb1a1e1d91a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70627fe-7a6d-4d55-aab7-ecbd1f3f43bd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89236fe9-620b-4298-ac0b-4aee3b0567f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c247f24-6a40-40e6-9a94-d847bd436f17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e1f2b7-d29e-470f-97e1-b16d9085e5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ac9a366-3286-4ba2-ac69-ac2448c346df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12783c29-154c-4d82-8a1c-7bbb708c5bc3",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261e11bf-1a26-4f4e-9814-5bb528b947f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318c89cd-2b3c-4f0e-ab5c-285386a19217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0e337b3-26c7-424d-ad5e-975b7f039623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f716505f-0702-43dd-951b-5cb635d77e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106b9c04-d457-4274-85db-90c58772412e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca738134-6b76-4255-92a3-816d719ce878",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "073a8faa-1855-4f0a-8b95-e3c37066006a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39c0490-d622-4152-9cbc-cc644f3e76a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f83dae-8a9d-42ec-a47d-2f82e70393a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "656cc22a-bd85-44c2-9d41-c48c8646a09a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06f57de-6b5b-4d41-bbf0-b4c46d48a868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d846b4-261d-416c-a539-295942d0b124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19500975-9814-46d7-8f76-2e06eb1432fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424de0e0-2f82-4264-a9ad-d0767a0fca33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e07451-e417-4c7e-8036-0359e3b17757",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6445a7b-d088-4196-9a0b-53284c520402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073eca21-de55-49ac-8cad-59bc20c4c8e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e25dc29-d604-4e8c-8e28-ec14ec844c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b32ed042-bcdb-4d8d-bfcb-a6ee18fde1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ea2aa3-d6be-48f4-b4eb-b830b1a42330",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804390e7-46b1-43c0-9795-38a3b64e2376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae76b1d2-eacc-4916-8e23-748adf5d15f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bb217e-b733-4a5f-902a-a3746b404c0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f7f975b-dcc5-4c3c-a18f-1c48d796133a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef7bd52-1a8e-420b-b88f-b00a06bc308c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fb2e8c1-8da1-4e81-8a4b-42e6112ab834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c993a19a-bfd2-4a3c-ad2b-1b8009bf4f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f80894-49a2-4287-8b1d-1eacfd49337d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d714769-aa1f-4593-87c9-27e6b7a1f112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037c2182-9aa3-4a9c-86b5-65972b1d9d4e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046fdbd4-25b7-4aa5-b14e-0bf44c971a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360deb46-0f40-40dd-b8b2-d12684bf4ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af174ad-8330-4707-8a56-7df2880e4235",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a95cbd00-a6f1-4290-9420-f8dc76a88239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2bf028-d81c-4f3e-af7f-d985ab645d2a",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7244cc69-9607-4287-bf45-1f23e6a19f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d864e5bc-3f4a-4848-989f-3d17a1699957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c21e7687-4622-4eb3-9f4b-e3ab25632bbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fa1cced-0478-4941-a124-39fe01837fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4437d1e5-e9ee-465c-b350-2b464f884eca",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2203f7aa-cf47-4012-8a60-047e9f5bda9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0423f536-f2c7-4f15-b10d-64e92f09b16e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3538f6d3-4e90-42b1-912f-04fbb6075045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "675a3b64-21d3-4757-b414-15dabbf1de18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6590f14-e677-4426-add5-c7d2f83acb73",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9fa31d-7dae-4c79-960a-cc342fc7b2d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b009edce-cbe6-492b-9065-b0cef2d9af21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b30b550-28a6-4889-949e-3d014fc909fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c4cfb4-048b-4b37-8679-ce0b6468c32f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b8883b-a7b0-4f52-b9aa-44407bd9d9dc",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afa6c14-9496-4773-9bc6-e8b5fe4d276f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5620a49b-066f-4f6f-b64b-878e73543817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff4914d-2ef9-4c00-b2b8-ed3b8095e2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38428c8e-7b5b-4a65-ad4a-01c0ee24e3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a641330-86fc-44df-9a9b-6e65c48cb2f3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37556695-e251-47fd-b47a-dadf4426cbe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "067736ea-71ff-418f-8033-256395bb857f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ea7e54-5f9d-405e-9585-1542c0b6ae24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97eeaf24-a98d-414b-9f9e-cb4f79adb3c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b4e1a2-b37e-4fab-a7dd-2d1dee87167c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232bb8cf-fd3b-4c37-aa3f-a24380d9811c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24b9912f-30c7-46ea-b113-72a947cdc4a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41c74d1-d115-41d5-8661-c2fdf65c3891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb561ffe-d49e-47b0-a60b-7919f801b80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480a7d1c-981f-4247-b869-97236c42bdcf",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0103bc-789b-4d04-bda7-14c197e235e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165fd278-23cc-4d17-86a8-5aec7067b466"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e414af3b-a704-4ae5-817f-952d02859388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6c0a43-5486-4c71-8290-edf59dd93a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bb9c08-678b-459e-9bbc-ab5d27ebf883",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3b5979-bba2-40fe-854c-703c0fc52e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff4c4d0e-4b88-470f-8c8f-f4e9106f2105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d304b90-a221-4808-9954-633dcbcdaa50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c093176-51de-4f31-89f3-5d05aa2f2d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d482b64e-1d1a-4b9a-87d2-b6646f856383",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e45266e-d472-4e33-89be-e0d3fa404a14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "caaa384e-8232-449a-83f9-6e1793a42c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "402fa2b1-ccf8-43df-a826-6d430af0261c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98768777-7b07-4d68-9f5e-718d8c5e34bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c248968-4c0f-4634-80ad-f3d9f56dcb86",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77947c9-daea-4aad-af65-f522679ad927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd3310bd-8282-4952-8b0f-b7e588207c5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d712977-09ca-4ff9-a68d-4e53de5d3ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857a18d4-790f-4edd-8d87-3a7f2eb2c3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e66ee0-7397-4c4d-840c-64b932b3aa57",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6c3225-fffe-4b7c-acb5-e8a59f91bbcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec9f7436-7913-4b37-be88-f1bedc69ac11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b6649a-e0f8-4481-a53e-8ea326e5448c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19cc0de-c3ef-4915-b75e-dbde116ba0f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7b4c532-ccbb-44b2-8641-88ce5dd1caa2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0a14a8-7803-421a-8e80-dac8817cc871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36fedb15-b1cb-4021-bb30-2b1b0b39e107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3bb307-caa9-4fda-afb5-0e021b3cd4b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7367c29f-daed-45de-9986-7cd7c95f48ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04f6e00-7962-49d4-8612-29d9b8298f24",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a635b52a-5202-4708-a1fb-93ec28648a5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80d8f38f-bff1-4c03-919f-df89a05fea89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755a6d0c-5b6c-484a-a1da-c3ab93d84728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fba0d5-79a7-44d1-b76d-4bba1cf1a559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e040285e-8b3e-4267-bb53-1be789a0a951",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a690ff-c1f2-474a-aaad-aca74b3ac044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6a811c0-3996-49a8-9728-b980e9463128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ce386a-ba25-4348-b18d-109323d94d00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce9e18a-89bf-4052-8d24-3c3722f6ea43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3d37b0-3ab7-464a-be9e-a7b57da0ac6b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb64fa03-ccf8-4dd1-bf4f-46b9023b6f5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30d4da3-56b9-490a-829e-fb66887940fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2db256-3866-454b-82e4-b06119b6b7f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e6daa5-1d74-42a0-856e-632b8ab71c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84b11679-e729-4975-92a4-d5d48632245c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adb3c08-81b8-40d4-9a87-015248f3309f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d3f19e-67c5-4370-be04-6d8bdf338fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e44eba-e781-48ae-af4a-743a2b3e76fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50bf9eba-9e9a-4374-bd4e-5ddf0216f563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a655c4-7ea1-44bd-b55b-5b778c4fb666",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3b6317-eccd-447f-a2ff-903bae0b7c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46822734-4507-4193-b495-3a8d581c2ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607195bf-3f7c-449d-a5c2-09d97dfdcedd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5529de7d-1bf0-469e-b4c9-674c442612fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72523aba-ec75-4a55-803d-7e4ed5c1584e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2e8c61-ebc0-4d5b-acb2-404efe72c440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14257d35-3d74-479d-a7d4-2b4458972fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5589964f-2600-4cec-a7a2-ee0be137f140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58530de5-939c-44e5-88a5-034c26cdb4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017d1072-7860-4624-bbb9-33b5cde5bc85",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21df3663-9847-430b-b815-91d40ddf8aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24315996-c882-4175-a411-ecb2a0919ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a9f179-2e41-429b-8fc3-a2590a994c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ff0263-ffd3-45e4-b3aa-1c269a7a28cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc711821-d63a-41e6-8e29-c3bc199723a0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20601a7a-f855-4d66-9f3e-ad89a8c396ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d3315de-0454-47c0-8810-bbeb6b0237bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8963c95-7f81-4639-8e60-d0d0f970692d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79bbd6af-0165-49a2-8e33-392692b31343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02111b9-2156-46c7-a03a-23412862e99c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda96b8a-ea01-4b50-a7ea-38da1dac9679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f04a92dc-272c-4d53-a796-a918faa8d00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a426987c-918f-4435-a945-ece6972f138d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d1e779b-c188-4814-84d0-67732d186ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d044ccd-2a28-4ad7-b5fa-4f57510d1ac0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677b05c4-7f6b-4367-836a-977486050549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5f38ac-d6c7-4fcb-a863-b2920057f5e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8016971-55a6-4de8-991f-1f7ec4b6abbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ead176e9-0813-4d09-a60a-c6970cd87b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f2168d-c297-4c51-8982-637089027028",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e34964-929a-4268-930a-7351e3b8e900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7babb66b-ff3e-4030-8166-4ee039bc3921"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e4fac1-a878-4228-9e59-65687cb1b56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3075453-7914-4e0a-a9f8-4375763da5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd873aa6-3f08-4ae0-9957-139f9853e096",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac55368-c027-4bf9-9eb9-4ebf1b7eb4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38926c5-898e-470e-ba76-5837771b85fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd39b4b-6d0a-49d1-8c80-3bf2d122e175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a219e4f-e31e-4f30-ba92-057875430003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea64d31-4e53-4b86-9a40-b659dff639d8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d2dfc0-bf3a-4034-899b-e7ca985ed62f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "654db4f9-c758-49b4-9fb4-bf2b2169aa08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52897efa-e4db-492b-8dfe-5bf43538efba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa1f607f-088c-4a13-a759-72b5e1ffc378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c98bc97-355a-4db3-b29b-09e5a3debf0d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d65f98d-bdae-4ebf-89e0-d06c06844c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71012349-db6a-4f90-961f-22c7ecf260ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88729f69-ff7b-428a-b0d1-ea31e8306f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd6353a-afc4-4922-ad48-22d5569f5195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50a1347-d7cb-4f47-bcb5-b1e089009966",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165989d2-4132-4560-9ae7-3a422dd54226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f438e2-e7c0-4442-aada-2092a7bcc6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0745bcf1-7020-448d-b38f-701bb353b189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "608ab3ba-14f7-4247-9943-1f5612eef692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9f2b02-b6ef-47c3-a6ed-52ec4ff025ba",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c6982c6-8c37-47bf-869f-938635e68178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11471ca0-ccf9-49e4-a041-0554f8cc5f02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a5b1e9-686c-4a0f-9958-513f2f80f8a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49863f66-bed0-4d00-8a0b-3992564e6e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114b5217-3890-47b2-8a95-0f81b5fafcb8",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20526e3f-4f73-4f3d-be59-f679d13378a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d194696-823c-443b-a263-f378d2ee30f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbe067e-195e-4ac3-a0fe-5057bc598bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4840800a-4c3a-4027-8f74-b2fa4d51863f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2860c7-5731-4610-bbe3-24a5afa62b27",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9781b59-7777-492d-aff2-7b49f1770671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62640fa1-21b3-49e4-90a8-e45fe988a5ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a69f6f-255c-4366-a68f-10a163f5d234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3b6d8a7-3f91-4435-856f-e2dc09964cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba188da6-0a83-442c-ba88-e8aa688d27dc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac4d4e6f-c190-42a0-b9a8-9fd8bed4bec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eac247e-10dc-449b-b4b4-7c9c275aa49e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd6c782-3cd4-42f2-88ed-5e1503b2c0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e651bb2-df8f-4cf7-8b75-1d66f11d330e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bd9914-c8e6-4396-829a-481f48bf2c72",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e58ce6a-614b-4be6-901e-aa45ee8affec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42e6cf6a-9dcd-4d06-9c81-a50af9fdb170"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32b1650-f36b-466d-9686-0d2717475e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d32910d-69cc-4d64-85d9-4869ba07de3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0281edc1-4c38-4053-95fb-b6024d4214ae",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ced82f5-4b34-4d6b-8ffa-d6a6c81975af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbd44ad-ac7a-4883-be37-e23ac4311613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fe8613-de73-45e3-aa65-7b077996794b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc55ce4e-0278-4fc7-8e46-6ac9af71669d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879bc557-5eb9-4c44-a489-3be98a2c4c27",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a114cd06-53d9-43c9-803c-d68773855738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46f65501-8049-4b64-9d78-aa176c683d9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede3edd2-7cc7-480f-9b20-21f314a584cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d3c6c2-4e99-485c-a180-6e137188ef62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebeca6a9-2236-4280-bb3a-2e358572c54b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73df44b5-39e4-441a-b9bc-fe0eac50523d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df51fcb-5d50-4a40-af8c-911695e8e06b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81944301-63bb-4a34-a607-af2dfe5a10d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4061bc8f-7335-4c74-aa39-ca881c7c3493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e409e40e-094b-490f-87b3-3d993546d91e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b783d073-fb44-4082-bae1-26de04a28caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b732ee6-a68f-432f-bd81-2c128e076895"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f6dd78-dd9d-452b-8ca3-abb5e90ec59d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8324c515-c4ba-450a-a3b6-aa2d6ef001c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27c8014-0a4d-4f82-9e0b-1188819691d3",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2d492f-64af-48fa-9b0f-e36f01039d82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a9b9e1-4477-4e86-a3df-be099ccacf57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ca79e5-117e-4df4-bff8-ec35e24999cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7737023-c5bf-41b3-bd87-eef8fab75f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414126c4-ca37-417f-b859-1f2568488888",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c092f0ae-0df4-40b7-85b1-e45d35290916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e61d01e-f0f1-43c3-a0e1-89bf72795dbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f65389-23dc-4f9c-ac40-a7620e9d89fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1f1d85-954a-4ba5-8a42-5bd96d194a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde88637-c926-49ad-aa8b-ab091d28d613",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2438b12-480d-4fac-9c84-161da2df7e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f05ce4cf-5490-4895-9a90-ac6977bd172b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e9e5bee-9a3a-4e8d-9bbc-ff0cfd2848ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338791f5-ecd1-4d2f-a692-9d527095b7e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f2eec2-354e-4332-8455-414e4b2569d3",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c929de30-607b-4cb4-9cf5-61834d0e5b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d40f5199-6d5c-422b-812b-103fa7ae81ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc542851-c21a-4d3d-9ba4-d77d2207d799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77bb7c6-e4ea-4474-a9e5-abf511c6df03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be774e11-2b71-41fb-bc19-7e950b98782b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf5cd01-9d67-42f2-ab3a-518ec13bebbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d962af4c-fc82-4c4d-902f-22953a07ab11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bac6ed-bbef-4515-ae7a-ef158733280c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a806954e-ab25-46be-8636-002a22ced199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c87991-8d69-4fc9-86a7-d18a36b2da16",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc09c3e5-95ee-4d30-8432-bf5c50bf40c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c883e2d-56e5-481f-9067-e7ca84a6f1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d71f411-90e3-4624-a2a1-e092df1e4822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1781ba33-795a-4879-a2ed-c1c47566be8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4fcbf1-ca6c-493e-8047-ac4ed0872538",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438899fc-e871-46f0-a013-fae7e42d2e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "419d5ae4-9f95-4696-8736-2306a7da2dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5639f030-3274-4008-9598-d1a380bbb22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddce49ea-f288-45e6-b166-f0f993576e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be31e6d5-5448-4796-960d-9f9e7411f235",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905a0f33-2e7c-4e49-8e37-ca2091abc68e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18798d0f-61e0-4e3f-8226-9ab293426208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf77e2d-8c3d-4f98-a1eb-78d3fd3b1bbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e596ea59-96c6-4b7c-a9ba-48f9fc331fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c04992-2f80-44d0-98be-ebcd9378266d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7dcc5f9-cccd-40ff-8af8-b9d042f70ec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc428de-a31a-4387-adfd-02e141557907"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b623e2-4349-40b5-b0c0-1ba190765ab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38a91e7-9634-4d93-beaf-8512e62f6cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16018d6-164e-4e04-8ec1-ad09b1f6bcc7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79633c40-03e8-40fb-b79d-86539f855541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47151b5b-8b35-4325-9f55-5dc559e38b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cdfd67-2c60-4ebc-80b8-b78c58a45ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb8937f-a0bb-497b-a8bf-87f59387c3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffddec59-514a-4da9-b676-a6f31d041057",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bde043d-3ad4-4651-aeec-00d211b503e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dfd0c91-8446-46b9-81c6-d65eb28c1ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51c8d8f-5eed-47d2-8ca6-6258065e6920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6ae2f74-d10e-4fcc-8a00-df6780f30869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bded938-9f81-4865-8ce2-1064c05025d3",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78c2b86-34a9-4722-8c02-a7e83e56bf05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b268de6-4464-46a9-89b3-b5384e1a1af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0123bb-c781-4874-886c-432661d7f76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e98eba7e-9844-4988-92f3-13af45ecb368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4dec2c-5cec-45f1-b288-d4827803590d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b08e6d-75e4-42e3-bb3d-c586050bb937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c4c04fb-44c7-4dde-b81b-9f4d9770b9ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba84ee6-378f-45cb-9197-3349ce9bfa1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0959e0f-7859-44fa-b535-d3f3fea2371e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2814b0-db72-4b52-acab-1a166d9f1202",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad586ce-9dfe-4171-80fa-60d722f1f95f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bade37d-499e-4323-b10e-700ae72efce0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05f533d-c614-45b3-b481-851e05f89dff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6af2ee2-ffe1-4eb9-ae3a-e64fc94355e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23d1f75-225a-4a9f-bea0-4775de27c5e7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1f3d5c-b19c-4e1d-b724-247139d7dbfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86b75481-6efc-4ff6-aba5-27c5017e811a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad93265-981c-4068-a994-94e1f411a10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62816c6f-2971-464e-a60c-e2b47548bfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b61a4d-69f7-49c5-9e88-cb373524da86",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf5c923-487c-44f7-a848-d55d3adf79ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e9b4cf-8105-4b7a-9b38-71c759d6384a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a35cd56-e37d-4970-8bcb-7f855a3acd1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e31b5fc1-3b19-4633-bae4-773664f3ae83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5ff6a6-0e38-4933-8c27-6330c9dbd30b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169b9e08-d73c-445b-a21a-37a02a8729a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "837d5a96-8d12-41c8-8fb1-14e37c78ed7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9f51aa-2563-4c30-b4e7-37c5318cc90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3c925a-7d21-4c9c-ad27-6dbb639ede8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14849df0-cac4-4f2c-8c66-e51836fb7aca",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9ad032-c8fb-42e9-b33d-9937938b1cfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9113b1d8-951b-4903-8082-ac3b2eaafc32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd1f19b6-43e0-4429-849f-0c173af14b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35d0ca81-2029-4cd4-8bfd-7be04b3aeb17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4c925c-e00a-42c5-be9a-9db3dc440c60",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619dba4e-2cfd-4e7b-b7fe-ba01977df1bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16d29817-c25a-4a8b-ad50-e4e2d19e612d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa7881c-b4f7-4232-8801-01a64e0a9e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35696152-52ad-45a7-9fef-4429c25af9c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba931cef-059a-400c-bd42-25b35b1f2696",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60e7e4c-c96a-4d50-87cf-8940a33a4f3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d00218c-6e07-41dd-86b0-71768c542969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad64bb04-2c69-4b71-aa6b-69380992ccbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e391ed-59bd-4a16-9ef4-87107409e5e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f12460d9-6e92-4cd5-bb70-e3d4bdc412be",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f44544-5dd0-4eea-a105-dcb73b57bc95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07ce2f21-1344-4109-ac00-04eea5458593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e81248-02d5-4698-9cf2-e315b7a859d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d859c9a8-fe01-4c2a-b689-3b1abd62bd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9d752e-221c-4939-ae35-c076e788e1d0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179eb213-b237-4889-bdef-6f8f5d1e5c7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50d35878-317b-495d-9434-f96cd8de63b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6543a45f-2c59-4236-bca8-e43e0661c926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9807ed76-088f-4da7-aaec-a7a6fa918542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6109d607-debc-49a6-9056-e97d46342c18",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279a42b2-677c-4231-a2d2-c826e2d957c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6511879b-1e86-4155-a9d1-47179aaedff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8223f4a7-86f0-4229-bbfa-4244afb1a6f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3101d05b-b55e-40bb-93ed-55ac20dd16bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7991c187-db1d-40d0-b6f5-bd8a36dccf15",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd83d309-6f83-47ef-8c36-a764d3b0516f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "956d03c3-26e2-4e2a-b2ec-79c1414ee453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b311b593-eaa0-48f8-987b-a68523cea69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fd4ed5-bf2a-4541-8bb4-effe2eb864b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18161c91-0ce5-41f4-b84f-1654a1c84c96",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59575ffe-5527-424c-b2df-f6d80769e7a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd779bc5-df81-4d19-a26b-d8b233e02c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c3fe21-0cab-4c51-9cc6-5c6915108ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c569fab-a0d7-4a41-8c9b-100747c892af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023afe48-e3af-44f7-90d4-ec9caa51361b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7be1b0-d853-4654-b28b-52a7bec7a0f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d0e9333-0283-4881-9bbe-3956258a3ee5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c0556c-b9cf-4b5d-941a-c11df281b5e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a4defeb-5964-4d99-8e3c-71b997224ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db630af-f1c6-4433-ba1d-eea71ddc583f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50de8866-6ee9-4a11-ac26-e7fa5372f0ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fa1dcb6-9524-44fd-97c3-f07ceea7a9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c2e27d8-d96a-440e-93e2-445b2b8ac471",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41c0841-d048-4af4-8895-48acfddec83c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ed879c-2de9-45db-87bb-e04d71c35258",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b46ed6-7c5f-4572-976d-fcec8932234e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06c98f28-2b9d-46fc-be8f-e525285e4582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62bfc1a8-7b02-4b0b-90d1-8cde0f27bb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c023e4-effe-4d2c-b219-860c41e94a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a00c17f-e427-467e-b825-2e3b32bd0fd5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf6abd39-8592-4968-8afb-47bddf771ec9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9186b778-199c-4b4d-b13a-79e84119987e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e302412-7cde-48c4-8115-55f1cb57a6b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45604d00-bc99-435b-baf9-774866684e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fb8e15-c0c9-49eb-87db-5c19c7251570",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f96cbaa-e43c-4e9f-a133-2253c16c269d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f012513-c086-4bf0-ba03-0f33e43ac36f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c207e060-bbc1-4da7-aac0-17a15a285ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35573d1a-1a46-4f85-897e-90634c292c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721cb044-a5cb-4324-a8a9-756e1fc55d06",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd0bc8aa-fa76-47b1-a1f5-ece23c92e133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf88c09-c675-4733-bb07-072a19b437c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeb7186-9a12-4780-a1be-1e08615e61a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4df00d9-eed1-4278-b921-1b3795be1a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647c3ae3-dddb-4e1a-916a-3de417438d39",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705ece8c-81a0-4430-9738-0e49d3d3b523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4e4d9d7-eb45-4663-a626-01b0671eaa2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7cf3882-84aa-4355-a66e-4fcedbd3ca1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd8a06e-8fab-482a-b0a1-0b8972400f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d57c781-fb31-4c5c-a070-7e84489ac4bb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ac79e6-e87e-4da1-b600-8e2b05f2ddc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d88d07a9-0568-4a86-ae75-06cb8def62ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0231ec-0b3b-41ef-ad21-60f014691d02",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce47318d-7746-42cd-9641-2deab7e18eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9175c0c3-26d0-4601-87ed-decfd2233787",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1dbff25-260b-4e89-a94d-90231a77b834",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2efde6a4-80f5-4eae-8774-13b4a5840e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c35404b2-343b-4b37-853c-6b00c472a891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d823a47f-2b11-4941-89ca-c2a9ed82e074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc467266-66a8-407d-a107-7ca1b521b43b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13341918-a67b-4f12-bbfb-4c6a0ce54748",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d11725f0-0d90-44a5-a4ff-b95ad7be83d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fc93289-1e53-459c-90ac-3277a336552d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10971b9b-da84-4ad2-978d-c4779395543b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a7388b-842c-460e-891c-ed32170dfe55",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a831ebb1-8040-4ca4-a2d8-16d657c1e50d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb9219d-1007-4f90-a580-1eb729d7ef0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75fb81d-e688-4838-9190-51abf5696fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c88085b-fc80-4a0a-8b93-7a67fb8bb672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67520fc7-51f9-4ec7-88f7-2daeb3e52187",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d17a1d2-9481-4d44-aa62-fef266f8ba77",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82c65886-d687-4b40-ae2f-e9928ddcff88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "637f2072-1d96-4a7e-85a6-8f0400f01b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cd5a01-11ab-41c4-8f54-9a249ec0150c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a6cb44-073a-4838-9486-c54fe07e58b5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd26f3fd-4606-498d-8e2b-32ba76067d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a258b04-f52a-4491-8c5e-de6842903d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf8e37f-44ef-4bb3-b434-18a8fbce4b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3499d6aa-602b-4f7a-8b9b-0ec9fa13769c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49e5ca7-8652-41e1-bf7e-858d845cca9d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72fa0c67-1c3d-46ec-8bf9-390294bba60d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d09667-2cec-4bcb-bf05-37af286a4858"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f359d9b-b616-44c9-9492-5a9c769f47aa",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c4c65f3-bcbe-4cce-b3ad-be5af7b23ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d0bc3b1-e814-48b3-a473-cc136ab7577b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3605a1d4-99d6-49d4-a4b7-3047bffd3802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6799f206-7434-48c2-8d0f-70f6cc427368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845e9d94-acd3-4597-ba9f-f37781e14f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc34b714-88fc-4d81-8be8-79df0a69c0d5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32ab50d3-c4f6-46fb-8f24-55242d82d693",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc637c0b-d896-40fa-8482-a0e26ca67e8d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89f18b03-2110-4578-8fa6-eca812936351",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce8de14b-d220-4239-81bb-b85537ed0c98"
                    }
                  }
                ]
              },
              {
                "id": "ad0673ac-788f-4543-b674-5d3e25500080",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "66384101-3fa9-4fcd-be03-726446a8128e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b2af49-6eac-4989-b20e-918b15c17a9a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cca7e691-b0b3-4a36-8123-ce2b38f437a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4293d98-47f6-45fd-9d7a-917d689a9c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fb73721-9603-4274-8cb0-91e84da9a5dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21e87af6-6adc-4d9a-b3ae-71b12611ce27",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fb023fb4-381f-4a8c-a2f4-db140fbcc333"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65586190-476d-4dc8-9b45-4b2d54a526b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "520d0aba-3a77-4068-87d0-b6a63098cf42"
                    }
                  }
                ]
              },
              {
                "id": "1395d747-0144-4d17-a55f-2adf6fc1bc56",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "518a70f5-3f02-4b2e-8c35-268708807493",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8162e0f5-21a7-494e-bdc3-760988818c3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c21f7b9f-8182-4e12-b202-ecf11fef2413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b33f1e-17ff-406e-9c89-e6a35997d086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1dc1593-00d3-49da-90c6-b648187e5784"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5b8309e6-0067-4f38-8f5d-c706883b1c9c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8db60637-39d3-4056-9a4f-af3389d9c465",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8636acb-d1a5-4b7b-9f63-25beb0259e83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "69e46971-bac8-423c-b64b-7b5d5d273b60"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97e63487-1b82-41cf-b7ad-c966721ecd01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "835acdef-f363-47b3-ae6e-46423a6af603"
                    }
                  }
                ]
              },
              {
                "id": "ec199a15-53f1-4001-b025-93ec476dd608",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dec441cb-32f8-4226-969c-f0d2189583b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "adcf0755-519d-4502-b1be-d45b78685afd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0fd81fe-c275-4ad6-8a22-d8e89bf87b67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "72864400-ae24-415f-98d3-72d6941f9af0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "77569b2c-5d42-41eb-96f2-febab5417ced",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "41dc05bf-5349-4bd3-a2e0-50bea7b15bf1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f8db5531-63e2-4be8-afaa-afa6020a8f7f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9597353-72bb-4f90-8731-ef98d4530de1"
            }
          }
        ]
      },
      {
        "id": "2669cdbe-68e3-4e34-be54-e8dec81b4ba1",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c57016df-523d-4284-a1d6-ae55d026b337",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8957fd2b-d78d-452e-a3ab-51256ddc7e1d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8105ad99-6071-49e9-bdf1-6fed1692315e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7575b67-a896-4ff9-bea5-26a95a83562c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c6730a7c-30b5-4187-88cd-1167d9098b06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e998ba0-7910-4a79-b380-c0d37520845b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74011d45-04e0-4f56-b4da-d6db49dc1952"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fdeb10e1-3b11-4993-afb7-f53a63dbe1be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44052a5c-64f8-49cf-87ba-a54d064821d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f36a9c42-b7d6-4a58-9f3a-a163ba2cdc92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b785e9f-1ce4-4dc4-8bc4-9ac8380ea959"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f6a0e6d-e05c-49ba-bffb-3e04dc058897",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "14820f4f-9174-4853-8cf1-34cd592f6a11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fcffbbb-8dfe-44f5-97ba-d3f817e2a10b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4023a44c-7858-4a78-9710-34622c0e29fc"
            }
          }
        ]
      },
      {
        "id": "e52ad885-a46e-40c2-b64e-b3fdd7fbc308",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6789f2ab-dde7-460c-97f2-af6f0f22adb6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "08bb9600-ee99-4d22-873c-bcd1ef6d5eb1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "366c3131-f53c-4448-89b2-0637c811333e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0de9bc-0b9e-4b58-b46c-e2b897d0bac7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2afc9d18-2407-4032-9306-813035a098e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "888c0ddc-dab6-4e2c-bcf8-94b2a3c37143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "560639eb-4778-4927-9e6b-58676715c07e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "07744ed1-727a-4226-84a6-2c677fa267ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "471bf086-decc-46d0-9376-aae66d0f5c0a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b46b2c0-c27a-41b2-827f-924e3be811c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77afe4a4-69a1-44c6-b8b0-3b293306fe24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa6991e3-e403-4858-a522-a1e37ccdb204",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "292cdc25-f382-4b8a-b288-0e53d3d92345"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0d6cb38b-7d95-4daf-ada3-5f01aa32807b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03e7209d-859b-416f-9eb5-4cd448fff584"
            }
          }
        ]
      },
      {
        "id": "33a16a91-fca2-4d4d-a5a8-c10028fa8330",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "355ce5bd-3b85-4a19-86a2-a8ef66ee9455",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3689abe6-67fa-4b32-83d4-987f3ac98823",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4be68d73-ec16-4b3f-ba87-47712b82a521",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ab13e7-7c29-414e-b263-48dbe57d8e74",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f52783c-ac2c-4ee8-b466-1971d117a636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bbda79d-aed4-4717-a1f9-a1e4a8eac16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "debed745-a6c8-4d91-a3c6-6e7b865fad28"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38e111a3-b33c-43dd-bd51-dc9e391211dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95703315-bbb5-444f-a60f-02747e3260c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdb2f0e7-5d02-4c80-90e7-2188ad09f076",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa35e205-8764-4273-b5bc-5448448c79c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1de0d7f0-c20e-4964-80ea-8574a5eb9758",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24b48d4f-9126-4ec9-bc26-dd25a4dccd69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2c742eb-9ce0-4006-a76b-a5aae87d72b7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "202d1104-1829-49a6-917d-b29a3fc0f01c"
            }
          }
        ]
      },
      {
        "id": "694d0a86-10e2-4354-9f02-48d373be227d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12275e8e-afe0-4dbb-991d-bf5276764860",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72bb4c43-b13e-4361-8871-46e6c4355d9f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "346a3002-f84b-4052-b013-cc031c17cd05",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c058c7cc-09c9-4d2a-aa3c-5b81311a36d2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "240d5be7-eae4-40a2-9260-e8156cb63270",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 452.5357142857146,
      "responseMin": 6,
      "responseMax": 13560,
      "responseSd": 2017.9635978029505,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725237834617,
      "completed": 1725237957329
    },
    "executions": [
      {
        "id": "80375d38-0f2e-469b-b0ff-99cdf3c75eea",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c3f98adc-a0f9-4f78-a539-fc6bdb9a82f0",
          "httpRequestId": "87e7fa2d-c951-46d0-801b-ae196b82e1f8"
        },
        "item": {
          "id": "80375d38-0f2e-469b-b0ff-99cdf3c75eea",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "73935127-2d73-466b-bb4a-f30085ba003e",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "9758d601-b50d-44cf-b557-123c7836a1f8",
        "cursor": {
          "ref": "f73b0bb6-1822-4df8-8fcf-eeba8a5ddf39",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3c1c5339-a1e4-4d12-a4df-6fcd61f9031c"
        },
        "item": {
          "id": "9758d601-b50d-44cf-b557-123c7836a1f8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ce56c035-aaa2-4808-9075-1f8e3ad138c3",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "c00fa3a3-66b7-48a5-bc8b-37884f628e13",
        "cursor": {
          "ref": "00d83385-3706-4d9e-b97b-bc10aac650a1",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a1fcdc00-a30a-40a3-964d-d04259a88659"
        },
        "item": {
          "id": "c00fa3a3-66b7-48a5-bc8b-37884f628e13",
          "name": "did_json"
        },
        "response": {
          "id": "320a7e35-41ce-4421-a50e-9996d85b335f",
          "status": "OK",
          "code": 200,
          "responseTime": 437,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b14a06-ce5d-4888-a3b2-85d48c8ea28a",
        "cursor": {
          "ref": "03810e7a-99e5-452f-92d0-6e2ccea3894e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb4d5354-1472-496a-989e-5308eeb95f16"
        },
        "item": {
          "id": "24b14a06-ce5d-4888-a3b2-85d48c8ea28a",
          "name": "did:invalid"
        },
        "response": {
          "id": "a8e9b130-4622-4165-ad6b-d3bab68d0b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2108,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b14a06-ce5d-4888-a3b2-85d48c8ea28a",
        "cursor": {
          "ref": "03810e7a-99e5-452f-92d0-6e2ccea3894e",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb4d5354-1472-496a-989e-5308eeb95f16"
        },
        "item": {
          "id": "24b14a06-ce5d-4888-a3b2-85d48c8ea28a",
          "name": "did:invalid"
        },
        "response": {
          "id": "a8e9b130-4622-4165-ad6b-d3bab68d0b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2108,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b937797-4e3d-4335-8282-4bd811703c56",
        "cursor": {
          "ref": "ba58cfc4-b42d-421a-bd56-acd85101798a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "f33f6ef5-9aad-4754-bd8b-a71a8780269b"
        },
        "item": {
          "id": "8b937797-4e3d-4335-8282-4bd811703c56",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1396b456-cc46-46af-a666-cb8e4eb6e9a6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2424,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650ec345-759e-43cf-8f42-f70faa5bd547",
        "cursor": {
          "ref": "e5821cb9-e3fd-4e28-a333-fdffed32a1fa",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1bfb48a0-95da-45d9-abe1-609db3d6f659"
        },
        "item": {
          "id": "650ec345-759e-43cf-8f42-f70faa5bd547",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d543b395-5db5-4fb3-8f55-88b4e998d322",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2460,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e05ef8-0919-4fc2-82ca-c2477b3062d7",
        "cursor": {
          "ref": "c911acbd-519d-480b-918b-b02b481d0754",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0a7fa1be-b475-4f48-9666-89891738b15a"
        },
        "item": {
          "id": "34e05ef8-0919-4fc2-82ca-c2477b3062d7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "260da549-261d-4cd6-a33c-f081982b4400",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab8139d-2a37-46e1-a3b5-2aa987359999",
        "cursor": {
          "ref": "a9d7703d-0273-4be7-85cc-069148e33648",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9a17f0bc-0088-47e9-adec-1c16a1208acd"
        },
        "item": {
          "id": "fab8139d-2a37-46e1-a3b5-2aa987359999",
          "name": "identifiers"
        },
        "response": {
          "id": "b587ced8-9e8b-4c41-b18c-d1b27f27d7d2",
          "status": "OK",
          "code": 200,
          "responseTime": 2406,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fea5202-d39a-4375-95f5-1ab7ff2787d9",
        "cursor": {
          "ref": "feb40d81-8ea5-48a2-952b-52e2a7f7f250",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "13471ed3-7c08-4cfc-8ad8-f67b6f855402"
        },
        "item": {
          "id": "1fea5202-d39a-4375-95f5-1ab7ff2787d9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f421166a-acfe-4ff7-bdb1-e6bce89e732b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d0542e-b1ca-4cb1-8e83-25ec9544be13",
        "cursor": {
          "ref": "4485a08f-3a24-4c28-b9b3-7b2f39514de4",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "52fc8ed3-be11-40cd-88bb-04428926b277"
        },
        "item": {
          "id": "d4d0542e-b1ca-4cb1-8e83-25ec9544be13",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7c964688-736b-4007-94cc-bc212a872e41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87d1967-f602-41f3-8c07-de34cabe7257",
        "cursor": {
          "ref": "78f6b3c2-58ef-45d2-af43-7381f4b93bb7",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cd957ef3-611f-4cac-93a1-352f70331303"
        },
        "item": {
          "id": "b87d1967-f602-41f3-8c07-de34cabe7257",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f1d066f7-932b-4b15-92cc-4d0f6bfed9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb0b92a-b71f-47fa-b1b3-597272fc33fc",
        "cursor": {
          "ref": "9a46782e-4859-4392-a0ba-c6a29fd8b6fd",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "095483a2-6323-4614-b826-eeb9f064956c"
        },
        "item": {
          "id": "3fb0b92a-b71f-47fa-b1b3-597272fc33fc",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1706377e-9373-4cac-b076-08e863e17191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02421185-1cbf-460e-bebb-ff9fdda7ca5f",
        "cursor": {
          "ref": "30f649d1-0dfa-4cf0-bbab-09d7e8e10945",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "03f9f267-16a2-41e5-8aae-7c319c251417"
        },
        "item": {
          "id": "02421185-1cbf-460e-bebb-ff9fdda7ca5f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9782144e-1aea-43c6-ad77-47424590311c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0081924-52ee-49e7-95ef-d1bd8ac08196",
        "cursor": {
          "ref": "a782d19c-37c9-4ea2-ad70-fdebac177764",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0c28d58b-f5fb-4c32-a2b7-cd338dde1ab0"
        },
        "item": {
          "id": "b0081924-52ee-49e7-95ef-d1bd8ac08196",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4125051f-7f64-4c44-9a8d-95ec9fdb2944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb0bf683-f5c0-41c4-96ed-c2f97941d9be",
        "cursor": {
          "ref": "1c0643e6-e47b-494d-ad71-f5115aeaae89",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8e45f635-8169-4153-8c1c-850edf306d30"
        },
        "item": {
          "id": "cb0bf683-f5c0-41c4-96ed-c2f97941d9be",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f8a4e52d-fd4a-47f7-be60-9c95f822393d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760a9242-8a45-4a42-bcf0-a42664192cb8",
        "cursor": {
          "ref": "366c4718-c2bc-4a53-8ad9-ee167ff3ec79",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ab819c87-1e52-407e-989c-1c2dc7bde1ed"
        },
        "item": {
          "id": "760a9242-8a45-4a42-bcf0-a42664192cb8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b41cff48-c401-4e80-bfe6-c20006c41a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29589f76-fcfa-434e-842f-c61e389f380d",
        "cursor": {
          "ref": "4b1b1a59-aff0-49d6-adfe-8104b0b2b07c",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "e9a1c784-84ef-4986-ae6d-6c2b6bb4d067"
        },
        "item": {
          "id": "29589f76-fcfa-434e-842f-c61e389f380d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d504b5a5-3201-4629-aa2a-755a8dd42efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152f15a3-bcff-4c5d-bed1-9c18bdd73414",
        "cursor": {
          "ref": "656e3001-704c-4409-942f-557bb30690ac",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5cc95800-865a-451c-aead-c29dc8a0b1e9"
        },
        "item": {
          "id": "152f15a3-bcff-4c5d-bed1-9c18bdd73414",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "56a259ce-8158-4930-a667-0bb6a53b39e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967c16f7-2fcb-4b11-abb1-34b8495e30a5",
        "cursor": {
          "ref": "156bf0f3-570a-4467-8c38-c36bd8c75984",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "edc9f414-28f7-4d6c-9962-24215ec6a1a2"
        },
        "item": {
          "id": "967c16f7-2fcb-4b11-abb1-34b8495e30a5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0833123d-2891-4b3e-a853-d7759ca8ca57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320db616-b6b3-478a-acfa-52e42ab27f37",
        "cursor": {
          "ref": "a6ddfbf3-b20e-4246-b719-3bac16e1dcf6",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1ce49b12-3bae-4054-b43d-0408957094ba"
        },
        "item": {
          "id": "320db616-b6b3-478a-acfa-52e42ab27f37",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "976d0d0a-eb05-4b6b-923b-fe55a46723a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c55a9b-c37f-4fb2-93e3-0b9c1a34c456",
        "cursor": {
          "ref": "73f91cd4-246b-40e7-8b08-591df1120ab9",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1fb200a5-0632-44fa-b331-3f3f9ed1ba67"
        },
        "item": {
          "id": "12c55a9b-c37f-4fb2-93e3-0b9c1a34c456",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ef1120a6-3d57-4311-9907-1457f4176b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "391c5799-30f6-4483-9c89-f964964b2592",
        "cursor": {
          "ref": "55e15e3c-1dbd-4c36-a5fd-ccc112a359fa",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5a488ad2-2a0f-4e61-b12e-1f6da53f753c"
        },
        "item": {
          "id": "391c5799-30f6-4483-9c89-f964964b2592",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "b43a13d9-3ff9-433d-b65c-1847e917e38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b311d5f8-a155-4fd6-aae7-c3715f6949dc",
        "cursor": {
          "ref": "f559e76b-b5fe-4051-906b-3cd2e0601535",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "90bb06fb-7431-484c-943b-9fa7237dd5a2"
        },
        "item": {
          "id": "b311d5f8-a155-4fd6-aae7-c3715f6949dc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "15428403-7129-4aed-a30f-431d5938270b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d0c6da-e693-40b3-82dd-5b7180d87fde",
        "cursor": {
          "ref": "6ec68f90-8bd1-49a1-ab8c-0d9edb4a88f3",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1f6e63d1-aec2-4551-897f-5cff6b78c724"
        },
        "item": {
          "id": "b4d0c6da-e693-40b3-82dd-5b7180d87fde",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0cf264d2-9cfc-4d0e-b915-ef52b6fda479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c08221-99a2-4ac8-b2e6-6436f82d3494",
        "cursor": {
          "ref": "cf56c03a-f6b2-444e-a7ce-580011c65927",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0a576a66-680f-4801-98bc-850a1276c0b7"
        },
        "item": {
          "id": "26c08221-99a2-4ac8-b2e6-6436f82d3494",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "53b8ae02-2d39-449c-a8fa-cabd94c2f417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f46eb3-8a72-4b1b-b5f5-5fb92a727d86",
        "cursor": {
          "ref": "109d9afe-837a-4b24-9fa0-5e0c7458aad4",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "97cbc8f7-bd06-43c0-aacf-ca26051a48de"
        },
        "item": {
          "id": "d8f46eb3-8a72-4b1b-b5f5-5fb92a727d86",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "12acf4fc-b5f8-4141-b56c-b263e2deceef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d25cfed7-e99d-42c1-9010-ab53162c12dc",
        "cursor": {
          "ref": "f00df3dd-ef79-48ff-b347-a55b9a0e7e48",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "63b07418-f547-4a30-9c27-7d190c69bffb"
        },
        "item": {
          "id": "d25cfed7-e99d-42c1-9010-ab53162c12dc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bd252e4e-704f-4286-8f6f-68b7df073df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead75505-a8c1-4b66-92a1-528c1947c223",
        "cursor": {
          "ref": "88b7b5ba-6354-49a0-bf18-3bac205b3a24",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d45a58c3-833f-4872-a9b9-9965a6222b96"
        },
        "item": {
          "id": "ead75505-a8c1-4b66-92a1-528c1947c223",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "7ef167a7-e841-4326-80bb-cdb986321253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e90370-a31e-4f64-a69b-93ff6471c95b",
        "cursor": {
          "ref": "0b22fdb5-69b1-4688-a6d6-94201159d735",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4cfa27e8-8129-4a0a-a8cc-9d9dd71a5d82"
        },
        "item": {
          "id": "21e90370-a31e-4f64-a69b-93ff6471c95b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4ad4aa3e-559d-4924-9239-6cdb4c1f11e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77ed506e-c75d-446a-a0e4-ad083dbc4b1c",
        "cursor": {
          "ref": "e362ed03-f991-4c7d-8094-c9f37e183e4e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f28df0e6-9554-4b01-93b4-9fceb5e479cf"
        },
        "item": {
          "id": "77ed506e-c75d-446a-a0e4-ad083dbc4b1c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "9ed0d3be-daf0-46f6-a88f-c8245aafcf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708cf87b-c549-421b-a945-16d9b210921d",
        "cursor": {
          "ref": "77d6d869-255a-4e5b-8f5d-f9bb6587cd5a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3f42030d-be9c-439b-b308-db95d969a1b6"
        },
        "item": {
          "id": "708cf87b-c549-421b-a945-16d9b210921d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b340c225-e558-489e-870f-bc90c5d2d7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c029ec-ea1f-4ad1-b889-65a03accc942",
        "cursor": {
          "ref": "832b96cf-4b70-4c07-a2b8-3252ab9082c5",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "40298b7c-5e1e-4ee7-a728-41fdd28e5669"
        },
        "item": {
          "id": "b2c029ec-ea1f-4ad1-b889-65a03accc942",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c42e676c-3cf9-43f6-80f9-434ccdb7d31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e800ef67-d3a8-45cd-8477-320deaf26967",
        "cursor": {
          "ref": "4cfb07fd-a4fb-44f5-8e10-c6ea9b469ca7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "42c56c3d-457e-43a0-99e3-2254159213eb"
        },
        "item": {
          "id": "e800ef67-d3a8-45cd-8477-320deaf26967",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "104e06a6-3f6d-4b16-ac03-d1f17e6d42d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7358769e-f7fa-4c22-bb2e-d4237da0f0f1",
        "cursor": {
          "ref": "54dabd1b-b441-468c-9f67-30360dc42eaf",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "544c27a8-9340-4ee5-8e62-b2c86c3cbbb8"
        },
        "item": {
          "id": "7358769e-f7fa-4c22-bb2e-d4237da0f0f1",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "aab98817-e6bb-4e3a-929d-f750c92b4772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232356f7-265a-4eca-afff-60924a0ed1f5",
        "cursor": {
          "ref": "da0f860c-c89b-47c0-a891-8b1cbfb75203",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a8b68cc8-0477-4359-83f1-fa745590b2d9"
        },
        "item": {
          "id": "232356f7-265a-4eca-afff-60924a0ed1f5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5ffaa078-a58c-461d-879c-f3ca75948cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585a9770-83d7-4c3a-a947-12f89fd9fc83",
        "cursor": {
          "ref": "c12e5026-94a8-46d5-ad88-bf43def3ad6b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "da4f1770-5330-43ec-8fe5-e2018382cdc1"
        },
        "item": {
          "id": "585a9770-83d7-4c3a-a947-12f89fd9fc83",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "44e764f7-c7ee-43f2-a6ff-9e3ff43b0e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9bb9f7a-f7ff-4f1e-a52c-78005c4b4636",
        "cursor": {
          "ref": "4d9ac64b-f26c-4ba7-a282-d3aefcd54902",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d7b5fa0c-d445-4c4f-99e7-935d45ab43da"
        },
        "item": {
          "id": "d9bb9f7a-f7ff-4f1e-a52c-78005c4b4636",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d10beb69-7469-4793-8ffc-fef4c0421afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673351f2-10ae-4484-a308-9e168e618de5",
        "cursor": {
          "ref": "29c81e57-62d8-4336-987d-69739fb71546",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "28304b78-d96b-43ac-bd19-c0ff46ec19bd"
        },
        "item": {
          "id": "673351f2-10ae-4484-a308-9e168e618de5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e22a990b-30e5-4682-8c7b-7d3b06f1e0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01e4413-c0c1-4a2d-a2fa-bbb30c554cce",
        "cursor": {
          "ref": "c53396e5-8b61-433f-9c2e-b2831db8d1d9",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b1335fc8-59a7-4c50-be1b-88e3b80aec85"
        },
        "item": {
          "id": "b01e4413-c0c1-4a2d-a2fa-bbb30c554cce",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5eaacd7c-ed58-4b55-96f2-3eef8ce13e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d842282d-774d-42b8-87d3-2c84e721fdab",
        "cursor": {
          "ref": "93bb7689-f705-4945-a790-ce29f4802350",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6e8593c3-b813-4837-b8ae-82c491c6d5c1"
        },
        "item": {
          "id": "d842282d-774d-42b8-87d3-2c84e721fdab",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "77c31316-5cee-4306-a3ae-ef0487c70803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ffe2c9-a59d-46dc-979f-1bf5fe3988ef",
        "cursor": {
          "ref": "cef8252a-b5a4-40a9-85d8-0814d1a5d535",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1dc2c007-4744-45a3-9161-83c97bf37ccb"
        },
        "item": {
          "id": "a4ffe2c9-a59d-46dc-979f-1bf5fe3988ef",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c460c3f5-ea5b-4049-a2ef-3bf8151d7fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07fa4f8c-a756-4b84-838d-dc485a6f2baf",
        "cursor": {
          "ref": "712fb918-a177-48c4-9fbe-978803920acb",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4c939091-439f-4752-811d-068a25286ea8"
        },
        "item": {
          "id": "07fa4f8c-a756-4b84-838d-dc485a6f2baf",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "59a64bfb-7643-42cf-ad02-fc9830b6051e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107460c8-fea0-4758-bd79-1772c2c70cd4",
        "cursor": {
          "ref": "e0b13999-2d12-4539-849b-612ab1055718",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dca6415f-d5ba-4458-a6b8-84deb314879d"
        },
        "item": {
          "id": "107460c8-fea0-4758-bd79-1772c2c70cd4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "fb6ce072-e174-408e-906c-320b5e9c7691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f409bd88-3c8f-4089-b5aa-066fe4871acf",
        "cursor": {
          "ref": "553bbc47-1bbc-4bbf-91b0-34ce2a1ccbc8",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "234d348b-8868-4374-afae-7d0605594960"
        },
        "item": {
          "id": "f409bd88-3c8f-4089-b5aa-066fe4871acf",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c96c2ea2-096c-4313-a276-9e08cbbc386a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 69,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4544b4d-1786-402d-bbdf-0303575289f5",
        "cursor": {
          "ref": "1eccb48d-9b7c-4a54-b9b2-31b8bf577cc1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "08ff5a48-f4fc-49e1-9108-45544a12281d"
        },
        "item": {
          "id": "f4544b4d-1786-402d-bbdf-0303575289f5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ee6ad3e5-97c0-4745-b8b8-1ec95ce1f4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d2d569-cc52-4b22-b734-8f1f2469eda3",
        "cursor": {
          "ref": "c1268269-fd3b-438d-af10-294f8a3fd76a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1cba88e4-e42e-418b-830a-403ed6f6aec9"
        },
        "item": {
          "id": "14d2d569-cc52-4b22-b734-8f1f2469eda3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "587e8bf4-9cc0-4590-b2cc-ecb68281dd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d59f3ea-c11a-4931-88ce-4760a8efdbe9",
        "cursor": {
          "ref": "703105b2-2f82-4cfa-8d7a-f2b284f01252",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ed317545-eadd-43ce-a45e-e46b13f7801a"
        },
        "item": {
          "id": "5d59f3ea-c11a-4931-88ce-4760a8efdbe9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "50fec9c2-2744-4184-903b-70e83b537c4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904d83df-17fc-464f-8f18-c2cb18cc6b1e",
        "cursor": {
          "ref": "dff45da0-5c83-491f-b9c5-3b44da8e5459",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "001b61c9-98e9-484e-bdb8-9fbda9bd6cd9"
        },
        "item": {
          "id": "904d83df-17fc-464f-8f18-c2cb18cc6b1e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0529048d-bd72-4621-aa9d-59d0eca0eed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6888533c-9d9c-41fd-86ed-4674de3da0c2",
        "cursor": {
          "ref": "117e030c-a28e-4163-98e1-7e426fa1f480",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "28bf7df1-5ce5-410d-b617-88b6b82d4b64"
        },
        "item": {
          "id": "6888533c-9d9c-41fd-86ed-4674de3da0c2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0f243252-c06d-4452-a59c-e54ca3cad0dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95969ac-09e2-4a8f-bad3-c4aa0a126698",
        "cursor": {
          "ref": "d8c3c914-49dd-46c8-b5f8-cd64e499079b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "0339067e-5187-4f28-8b1e-4672fa5adac7"
        },
        "item": {
          "id": "f95969ac-09e2-4a8f-bad3-c4aa0a126698",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "953192de-2ef1-45ae-a2e3-09b3487a0fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01739f84-622f-46fd-930c-f3c3239bf378",
        "cursor": {
          "ref": "5c1d6d28-1e44-4eaa-b0d5-756667928352",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "89f6f661-caaf-467f-896f-b5e9d4cd171a"
        },
        "item": {
          "id": "01739f84-622f-46fd-930c-f3c3239bf378",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b7dbd17d-78d5-4eb5-abbf-bff1e2772a87",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea793146-3e50-4d68-9c23-e7190da54824",
        "cursor": {
          "ref": "46197663-daa3-4dc1-8e2e-6dacf544abea",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "20d64b9d-945b-4d04-b6bb-3e02e45ba6d6"
        },
        "item": {
          "id": "ea793146-3e50-4d68-9c23-e7190da54824",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "315b2e24-f31e-4b59-acc2-4ace87a5d35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bbf2cf-06e9-45c0-9d9c-e629af5b713b",
        "cursor": {
          "ref": "9c941214-5103-4241-b20a-4a0f78c3af89",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "129cf6be-d96f-4dd8-9972-53ba374a6c45"
        },
        "item": {
          "id": "07bbf2cf-06e9-45c0-9d9c-e629af5b713b",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "816ee6ab-5722-437e-8800-e9c89bc9574b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da771ef-2bf8-4b81-b88f-b256e621f33c",
        "cursor": {
          "ref": "4669b096-4d67-46b8-83bf-1ee985a25e05",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "42ed1b10-c21e-4bd5-b459-169ef13e93cc"
        },
        "item": {
          "id": "4da771ef-2bf8-4b81-b88f-b256e621f33c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "71925c7c-6223-4e6e-8cf7-e09054a016cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0fef26-26c0-4122-9f65-cbab5400dc91",
        "cursor": {
          "ref": "1adfa31e-e74f-44a7-8253-5ce4794860a0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b454e9d5-2211-4a3c-87e8-0a5b4a081c2f"
        },
        "item": {
          "id": "4c0fef26-26c0-4122-9f65-cbab5400dc91",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "18cd604b-f27c-4876-a761-180a01dbb2c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209d8be4-159a-44cd-b0da-16d2eafa180f",
        "cursor": {
          "ref": "9bd6b113-8e45-45f2-b2ee-de3aaf9de110",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "85ac55a6-5983-4ac8-91aa-2e931ada3fd8"
        },
        "item": {
          "id": "209d8be4-159a-44cd-b0da-16d2eafa180f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "c396fb6c-9c0c-4e39-ad86-d026e80bf861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af31f4b-34d2-4c4d-a6cf-26d692775854",
        "cursor": {
          "ref": "bc1c8a38-a8d4-4cf4-8ee1-a2a4beb4fae3",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fd71f94e-7e45-4828-9368-b8825233552a"
        },
        "item": {
          "id": "4af31f4b-34d2-4c4d-a6cf-26d692775854",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "53a62457-eb3c-43e7-af3f-7c1966c38ced",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7f39b6-dc36-459d-a456-8b2640f681b2",
        "cursor": {
          "ref": "b9205fc2-a435-439e-9de3-d39431bbd0dc",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1593d8be-9f57-4847-946d-adb68d392d04"
        },
        "item": {
          "id": "af7f39b6-dc36-459d-a456-8b2640f681b2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "10986ab2-485c-42c0-8351-6895de73aa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6389334a-f47b-4395-91ee-ba21b94c9ded",
        "cursor": {
          "ref": "e1e615ee-d741-43f7-a3db-6b0dac795cd1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "14ec23af-79ee-4397-b74c-7254d466d3d9"
        },
        "item": {
          "id": "6389334a-f47b-4395-91ee-ba21b94c9ded",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "08832a21-d2ee-44ae-9077-8f26c7310915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5830bb80-f387-4a78-8911-75a722bb770a",
        "cursor": {
          "ref": "bef6e7f9-1535-4d0a-a4c4-85adf96c39d1",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5c676908-9dab-4a4f-bc87-31edd5a80cdb"
        },
        "item": {
          "id": "5830bb80-f387-4a78-8911-75a722bb770a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "890a073a-2046-4422-bf6e-1678616829d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492a6061-13b4-437a-8537-77952b0f74f9",
        "cursor": {
          "ref": "c6615091-b0fa-4105-b78f-94229dbf67fe",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "39a3f804-1f01-4809-a7c8-84436b45da8e"
        },
        "item": {
          "id": "492a6061-13b4-437a-8537-77952b0f74f9",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "edb24b72-949f-4974-995e-86a3b01d4ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b668a6c-e2fa-438f-8016-5c3e27b315fe",
        "cursor": {
          "ref": "5229c21f-be2c-4782-b7cf-33ae791cd52d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f540497e-6197-42ab-a3e1-0ea00a7e8224"
        },
        "item": {
          "id": "9b668a6c-e2fa-438f-8016-5c3e27b315fe",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "da7d73d3-a686-4a67-bb65-fefaaf1a3775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46958b52-b6f3-47e2-867b-c9842189da14",
        "cursor": {
          "ref": "d9640982-3ee8-4b8c-a467-ece5654bb6a4",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "10d03562-f0a9-4247-a6e4-2e088dcd6595"
        },
        "item": {
          "id": "46958b52-b6f3-47e2-867b-c9842189da14",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ebdcc52f-81bc-44f7-b237-7c64994481ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f39450f-ae10-49c6-9440-35d14b48b152",
        "cursor": {
          "ref": "ee44b0c1-6dde-4a00-8a4a-a389ba11078d",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e15f5a8e-da06-42b5-9e1b-b6ff9e8b5e2b"
        },
        "item": {
          "id": "6f39450f-ae10-49c6-9440-35d14b48b152",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "43688bd1-160b-4613-9c61-140dfbc22fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bfe63e-d39a-4c08-9b97-3ed142184b78",
        "cursor": {
          "ref": "93eb44c8-a50b-49b8-92a0-f298ab817aa0",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "291c1575-ed04-45b3-85ad-d205447fd4af"
        },
        "item": {
          "id": "b6bfe63e-d39a-4c08-9b97-3ed142184b78",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "036a5f5b-1c71-4882-8c89-9b820be16c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed31ed0-b3bd-4671-8cd9-16a762f0de7d",
        "cursor": {
          "ref": "cb624405-798c-427a-9128-a1a2d3c9a18c",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fbe00206-b2f7-4407-ac16-a41cb1e26b84"
        },
        "item": {
          "id": "1ed31ed0-b3bd-4671-8cd9-16a762f0de7d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5bc6a750-b27a-4f07-98f2-08a0278ba983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7123998f-78ac-47b0-9610-e425c37c41f7",
        "cursor": {
          "ref": "25ca0b63-3315-4473-a19e-b6a8ff84c60b",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5a516904-841c-4fab-aab9-ddb6b2a6679f"
        },
        "item": {
          "id": "7123998f-78ac-47b0-9610-e425c37c41f7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2f5898bf-be77-4200-834c-8d28e4108869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf68c147-c5d3-4ea2-9a22-064bbeb8c5d3",
        "cursor": {
          "ref": "2ac1712f-ef61-4d2f-b972-09e6961c53fc",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d50dbcbc-932c-44ef-b0d9-756aad34c027"
        },
        "item": {
          "id": "cf68c147-c5d3-4ea2-9a22-064bbeb8c5d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6ffdf553-4154-4c7a-a7dc-e1f61e0076f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57013b1-df71-4c7e-bbe1-a42a93ab7c25",
        "cursor": {
          "ref": "5ae58ba6-4c2a-4cf5-be66-083a2434ad4f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6a1b6a65-80f1-4520-9eec-fcf967370410"
        },
        "item": {
          "id": "c57013b1-df71-4c7e-bbe1-a42a93ab7c25",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bc0e8f0e-eb92-42c6-b2a8-0525074207f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18af4c35-f69f-45ae-93ce-4c303b4fe3d9",
        "cursor": {
          "ref": "eb27e729-5c14-4031-98b5-0d060c8fe769",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "38724954-2156-4669-a080-91baadd52d05"
        },
        "item": {
          "id": "18af4c35-f69f-45ae-93ce-4c303b4fe3d9",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d6b77fba-707f-44bf-ad14-a87febc8101a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e992807a-149d-4197-ae2f-fbc185f21141",
        "cursor": {
          "ref": "85210ae7-2b31-4a12-926d-512e5ad514ad",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2b123d38-10b3-4076-91ac-1e891567850a"
        },
        "item": {
          "id": "e992807a-149d-4197-ae2f-fbc185f21141",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "de622cf8-1a8d-45ca-a723-6336d35887fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4daa4d-bf41-4e2d-9a7e-435496494976",
        "cursor": {
          "ref": "8ce8c81f-8b55-4f83-bc4a-e0d392d47ee5",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e2b5b6f5-8c8e-470b-b342-8468625b1211"
        },
        "item": {
          "id": "3d4daa4d-bf41-4e2d-9a7e-435496494976",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3c117abc-22b8-4164-9da5-7f69d53aa02b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e52177-88db-4e94-9412-d43fbb0e83a7",
        "cursor": {
          "ref": "5541f55f-1a1b-4215-baf4-35867d8c0e97",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "39311f6d-447b-4463-b36b-67e6f377165b"
        },
        "item": {
          "id": "f2e52177-88db-4e94-9412-d43fbb0e83a7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2824a9ac-c57f-4852-9633-4f26a3067fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83eebd53-4b13-4b67-a8d8-362384e4f4a7",
        "cursor": {
          "ref": "5b9f5ef6-fecb-464b-9839-114af9fb14d6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "946285f9-84f1-498a-ad02-34eb0c6d350f"
        },
        "item": {
          "id": "83eebd53-4b13-4b67-a8d8-362384e4f4a7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "4baa065a-fb7e-4b8c-ab2e-b422572f9b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f65b43-e420-4c40-853c-bbaf93359ca0",
        "cursor": {
          "ref": "24785a60-aa4d-436a-b897-0ae86ff8fd28",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "70677ece-f530-4638-b9f1-f6235ba16f6c"
        },
        "item": {
          "id": "63f65b43-e420-4c40-853c-bbaf93359ca0",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "832be95c-b7f6-458b-9841-a52b4ea2a607",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d431158b-b0bc-4045-b891-cc551f5ce3c8",
        "cursor": {
          "ref": "0b578d67-7f51-4f6b-b026-85eca4fed7b8",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "23cb0edd-0042-49fb-97e3-ea15e6bf0c86"
        },
        "item": {
          "id": "d431158b-b0bc-4045-b891-cc551f5ce3c8",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "943b964e-73f8-4bba-b377-102320ca98ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3025e6-1359-409b-bf22-68d10704f604",
        "cursor": {
          "ref": "30fe0a96-b9d0-4fdc-8c7c-27f728569a6c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d48832e2-d3b1-4b86-a199-1b1ea9322496"
        },
        "item": {
          "id": "7b3025e6-1359-409b-bf22-68d10704f604",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e6f30ae7-72df-4fc0-b7dc-85fc21c6ddb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad32d9e2-38d2-4173-9972-af81a8746136",
        "cursor": {
          "ref": "88e33ff5-3353-4890-beea-209b16a0097a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "cf8b9d39-1e47-42a7-ab29-9e64b91d0739"
        },
        "item": {
          "id": "ad32d9e2-38d2-4173-9972-af81a8746136",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4c07198d-8b97-4295-bb79-1114b41696d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651fd47a-6e0c-4336-84f6-ea0581412828",
        "cursor": {
          "ref": "01db7de4-d0f0-444c-94be-6eb8c7aba79f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b36c7338-e06c-4638-9eff-c4f80b6cc932"
        },
        "item": {
          "id": "651fd47a-6e0c-4336-84f6-ea0581412828",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8f25c4b3-5051-4dd9-a259-ddac7e18d0d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798be911-1e59-41d1-81e5-53b16ce13a3d",
        "cursor": {
          "ref": "b88405fd-ae75-45eb-bbb5-b5ed4da0a739",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5827ac2e-0cd5-42e4-86d8-e54df9c4a755"
        },
        "item": {
          "id": "798be911-1e59-41d1-81e5-53b16ce13a3d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dfab780d-09e1-44bc-bf1d-e2dea23b494e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a421bb-410a-47b1-8077-348105abeb93",
        "cursor": {
          "ref": "7304062a-0265-4181-aa86-4aa7891f89f4",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b6b1a344-b7d5-4951-bff1-b345de89bc16"
        },
        "item": {
          "id": "35a421bb-410a-47b1-8077-348105abeb93",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "65119df7-9b2e-48fa-a51c-686c74f0e1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aa83c8-8317-410c-b74e-34ee9cab8b88",
        "cursor": {
          "ref": "84c150de-62ad-4c47-9dd6-b1b783324dde",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "aa6895ea-0f15-4e68-8e60-736c14f5fbc7"
        },
        "item": {
          "id": "80aa83c8-8317-410c-b74e-34ee9cab8b88",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "10c74525-af5c-40d5-8732-1a095a104f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0c1bef-42e3-44be-9e53-9f90e888f14b",
        "cursor": {
          "ref": "e7550c74-d419-4aa0-9e66-3183cae36d33",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d4b1b17f-4c10-487e-82de-3f769ce4c3ef"
        },
        "item": {
          "id": "0f0c1bef-42e3-44be-9e53-9f90e888f14b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a6720447-d3b0-40b1-8333-524ffec62787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac74d7d-8f43-4d86-a433-6d732fefce71",
        "cursor": {
          "ref": "dbfd4353-220b-4ee4-a340-4bf0c2a3f1e3",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3630768f-6ef9-415b-bc9e-6cfea511cc05"
        },
        "item": {
          "id": "bac74d7d-8f43-4d86-a433-6d732fefce71",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "aadc3fd5-b241-4b85-9550-41c86f6dc972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a1ef70-baf8-47b7-9d92-f5382124c1f3",
        "cursor": {
          "ref": "597a868c-c046-48de-90a2-fb190e68baff",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b706a6d9-00dd-40a8-a00c-85abd6608900"
        },
        "item": {
          "id": "20a1ef70-baf8-47b7-9d92-f5382124c1f3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "86723c33-c701-4e4a-a3e5-9002c6be30ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8c79af-dc12-4b50-b5b5-50523aba7f91",
        "cursor": {
          "ref": "fccb2a91-cab1-472b-b84b-ae7651a20641",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "17d74548-aa5e-44f2-b425-7cae538d3b87"
        },
        "item": {
          "id": "fa8c79af-dc12-4b50-b5b5-50523aba7f91",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "453aa226-32cb-40b7-9b4d-d265ceef0873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219311a3-20ad-4f45-ac68-45a6a79b44bb",
        "cursor": {
          "ref": "11a006e2-cbbe-4fa8-b4a9-d3af062d30ec",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "45315f93-752a-4f0b-89b1-01267cf32d0a"
        },
        "item": {
          "id": "219311a3-20ad-4f45-ac68-45a6a79b44bb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2cea1449-0a9a-4191-97da-e92f68b5238d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7dbcfa-23a5-4b88-a5b7-719fa33343b1",
        "cursor": {
          "ref": "d8dc18ba-a8da-4c95-8495-e158532e49ff",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e76c9c0c-9fa8-4eb3-b632-ee8b23236153"
        },
        "item": {
          "id": "0b7dbcfa-23a5-4b88-a5b7-719fa33343b1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ca54106f-6dfe-4945-8321-3ee74bff9cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a727021d-aa7f-4094-b04c-96de420d511c",
        "cursor": {
          "ref": "bfe36843-444a-40be-a153-7ced63818948",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5b7abaa2-2093-460a-a449-601e78759005"
        },
        "item": {
          "id": "a727021d-aa7f-4094-b04c-96de420d511c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9e52b32a-3927-403a-9e1a-055d4157b18c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6fd850b-1604-45d6-a796-a046546a0f17",
        "cursor": {
          "ref": "dd0c2b01-17d1-42be-821c-adf65761ac6b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "65fb56cd-f100-4aec-8ce3-3b6c641e6a6a"
        },
        "item": {
          "id": "a6fd850b-1604-45d6-a796-a046546a0f17",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3c4520c7-8c1d-42a0-afca-e6ddfec34622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7320d2-aa6f-41db-9803-be16899e1d7c",
        "cursor": {
          "ref": "a1612c81-856b-427f-8efa-c1053212ded4",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "f1994088-9313-42ae-adf2-29f60b7f1899"
        },
        "item": {
          "id": "aa7320d2-aa6f-41db-9803-be16899e1d7c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "aa189834-f560-461d-a08d-d01d4f4835c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f1863f-70dd-4261-93a2-5b8b457c756e",
        "cursor": {
          "ref": "73e4e34e-94bb-4627-9756-ebbfe648dfae",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "30d35d16-d3c1-4a7f-ba61-819b7f3c5e18"
        },
        "item": {
          "id": "c0f1863f-70dd-4261-93a2-5b8b457c756e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a5eccba7-9467-497c-8692-a6b05402e02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eb8206-9ee9-4592-bd36-022ef6a1ada1",
        "cursor": {
          "ref": "10aa09a2-018d-451f-98d1-d20c5423e56d",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f6859350-dcf9-44e9-84ff-1abf29b1c37e"
        },
        "item": {
          "id": "58eb8206-9ee9-4592-bd36-022ef6a1ada1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e21655f3-759e-48ea-b4d1-f30554299fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2029e262-c2dd-4a27-9561-0a17f73bc13d",
        "cursor": {
          "ref": "51684648-99ee-496d-a649-8e33f97fd1ec",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fcb3e251-505e-4904-a83d-62dded0c4e36"
        },
        "item": {
          "id": "2029e262-c2dd-4a27-9561-0a17f73bc13d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ccc9d6d8-7344-43f5-8566-71e21ff8e4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71cf516e-a535-4a97-8a01-a63eed9b664f",
        "cursor": {
          "ref": "67c33458-403a-43c0-963f-6593cf38f02a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bdd376ef-8ac5-41ea-a6d7-ff9e389146d7"
        },
        "item": {
          "id": "71cf516e-a535-4a97-8a01-a63eed9b664f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "550fcb66-293d-4b9f-8bbc-451f8294b197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60da3ea9-ebed-475d-9a13-3532c066da73",
        "cursor": {
          "ref": "403ca9bd-403f-4983-b4b6-ff9de5aee167",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f8e8bede-44e5-4d27-ae87-4fd8d5d71142"
        },
        "item": {
          "id": "60da3ea9-ebed-475d-9a13-3532c066da73",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "872d3bdf-c7ef-4d47-9c28-a261464d76b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a922d7d1-2d0a-403c-9a7a-ac2342f4d28b",
        "cursor": {
          "ref": "dcc09089-62cc-4f03-85cb-1a258136f207",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "69d92e76-d645-4e7a-ab80-6bd1f63df8df"
        },
        "item": {
          "id": "a922d7d1-2d0a-403c-9a7a-ac2342f4d28b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1f2e4122-6e67-46bf-82c9-5652e5006e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e928df0-779a-4a1f-92f3-bbadf2808f20",
        "cursor": {
          "ref": "8d2d803b-2330-409f-8607-6f5b5572a9d4",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a4811c64-2bf7-42be-83a6-64bedc69722c"
        },
        "item": {
          "id": "5e928df0-779a-4a1f-92f3-bbadf2808f20",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "12dd0cab-fafa-478c-97cf-d3d853284cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45c22dd-b575-4f52-bc7f-8fd9a7cdfc0b",
        "cursor": {
          "ref": "dfce7690-6340-4dc2-a9ab-e24865588eba",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ba688fde-fa6a-4823-a4d1-c311868291ba"
        },
        "item": {
          "id": "d45c22dd-b575-4f52-bc7f-8fd9a7cdfc0b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a674f675-e833-4ece-b155-a38a2edc6b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bda119-9a73-43f9-b34f-b44db9ae1eb5",
        "cursor": {
          "ref": "26b074f3-6036-429e-8f8e-301e179bf2bc",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "97c47100-c9dd-48fe-883c-8280dbee918e"
        },
        "item": {
          "id": "e4bda119-9a73-43f9-b34f-b44db9ae1eb5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "72aa949a-6622-4ed7-9c2d-1852332b23f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d284da-c60f-4f09-83c1-fca2f472e677",
        "cursor": {
          "ref": "30bf38e7-eee2-4264-8cf6-d57a215ae6ed",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f97e6c51-2c54-4fad-bd8f-d7e3944f1ab3"
        },
        "item": {
          "id": "27d284da-c60f-4f09-83c1-fca2f472e677",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6c52a670-d1ee-4407-8949-80407e505853",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 101,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366d106e-b529-4f95-9fe2-80aadba3d723",
        "cursor": {
          "ref": "470ee098-4526-467e-8f51-373fa746b80f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "bfaffa02-4265-4dfe-a3c9-ea89684a3398"
        },
        "item": {
          "id": "366d106e-b529-4f95-9fe2-80aadba3d723",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "de729812-b6ed-480f-b53e-beee702e48ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8e3f2a1b-733b-47e1-aea5-0bcee30836c3",
        "cursor": {
          "ref": "f2e02866-4875-4e0f-9dc0-1d9f429f9cd9",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c9952be1-a5d9-4095-bcf9-03bbec9070b2"
        },
        "item": {
          "id": "8e3f2a1b-733b-47e1-aea5-0bcee30836c3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "85981fb1-3a64-4752-94a8-5570d56aa3ec",
          "status": "Created",
          "code": 201,
          "responseTime": 13313,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "494e893a-5541-422e-8d37-c2a946e60fb3",
        "cursor": {
          "ref": "aa8b0312-036b-49df-9560-05e2b1296c23",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "a6049c1c-1477-431a-a0e4-7b424f400057"
        },
        "item": {
          "id": "494e893a-5541-422e-8d37-c2a946e60fb3",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ec7e974a-da57-4c99-85f7-a5bd901f980c",
          "status": "Created",
          "code": 201,
          "responseTime": 13045,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b60312-93b1-4e80-bf69-63c9c0e2e1fb",
        "cursor": {
          "ref": "5d706cdb-2f4d-4be6-964c-c80335a29c72",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "cc2c4788-caf2-473c-a07d-048e07a4973d"
        },
        "item": {
          "id": "02b60312-93b1-4e80-bf69-63c9c0e2e1fb",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "527a1c5a-dca9-41e4-a5e2-466c3bbea4dd",
          "status": "Created",
          "code": 201,
          "responseTime": 12319,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbbd41d-a00e-4830-a881-7202d10a429f",
        "cursor": {
          "ref": "b22dc706-d2af-4edb-855f-1111310bd308",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3268c654-c13d-4b70-a910-a96540e5d292"
        },
        "item": {
          "id": "0bbbd41d-a00e-4830-a881-7202d10a429f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d7b997de-ad9c-4624-b55c-120120dda6fd",
          "status": "Created",
          "code": 201,
          "responseTime": 13290,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7482102e-3802-48d3-ab3f-b9e821445c0a",
        "cursor": {
          "ref": "e9b7826d-ef58-4c6c-baec-bf40a90903be",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c6a8f9d8-fc23-4e02-b6c8-36ab6c27db72"
        },
        "item": {
          "id": "7482102e-3802-48d3-ab3f-b9e821445c0a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f2fe5096-1b19-4094-92f4-af3b00f153e3",
          "status": "Created",
          "code": 201,
          "responseTime": 13560,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-02T00:45:20Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-02T00:45:20Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "575b606f-b3b4-4533-af93-ab529c8db30a",
        "cursor": {
          "ref": "6e6569bb-6e0b-4af4-bdb5-6e34b14abca1",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7eeb544f-0a9e-4f84-b302-6743a4148f42"
        },
        "item": {
          "id": "575b606f-b3b4-4533-af93-ab529c8db30a",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cffc788e-426c-4208-995d-45afd2a6fd88",
          "status": "Created",
          "code": 201,
          "responseTime": 13062,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b822d3-fec3-4fb2-8217-053e324dab38",
        "cursor": {
          "ref": "ee9cff97-8ec0-4d8c-8e63-f91a28f41f10",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b0901904-ab00-4591-bc61-db78b4f2234e"
        },
        "item": {
          "id": "f2b822d3-fec3-4fb2-8217-053e324dab38",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6dd4d495-7b56-41fe-adf1-87ed1eaa1928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94d95ac-7998-47f3-b121-f32ef4f6ffd0",
        "cursor": {
          "ref": "7247a39f-c33c-407b-871d-241e73c0e201",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2986c785-ac31-49be-877b-bca8b23e116c"
        },
        "item": {
          "id": "a94d95ac-7998-47f3-b121-f32ef4f6ffd0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "60fc6905-2a45-4865-bdd6-ed62820344cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6537418b-ba36-49aa-ab87-dfbeec792736",
        "cursor": {
          "ref": "c75c45ae-6092-495b-aae9-bfd81cb5750e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2f940b98-0688-4545-aaeb-1231f8ee85a3"
        },
        "item": {
          "id": "6537418b-ba36-49aa-ab87-dfbeec792736",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "271576b5-0387-43b6-b313-98aab6844317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8104e916-4ebf-4047-abe8-25857b45ba4b",
        "cursor": {
          "ref": "b21d7676-238f-4568-8d3d-e49dbddb9e86",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d70f3976-f0be-4000-b942-be6e0aa4b32b"
        },
        "item": {
          "id": "8104e916-4ebf-4047-abe8-25857b45ba4b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b5e1f6e6-a2e6-4f89-b363-2b7db8118b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b52f9cb-a6f7-4e74-b2d1-5b5179d56101",
        "cursor": {
          "ref": "12929775-d89f-44dd-82b5-bedeb66ebd6b",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "1925d621-891a-4751-85fb-71c11ec23a26"
        },
        "item": {
          "id": "5b52f9cb-a6f7-4e74-b2d1-5b5179d56101",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5af64701-eab2-402f-a65e-e445d7130085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2876143-37b9-49f0-994a-8bfbeded8202",
        "cursor": {
          "ref": "2fa58392-f7b5-42b2-931b-710711d80755",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b98b5612-6afc-4d68-87a1-dac9a965e4a6"
        },
        "item": {
          "id": "f2876143-37b9-49f0-994a-8bfbeded8202",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c3a9c805-b021-46fe-a702-1ae478c80c50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e05af53-c98a-4196-a14e-3c7fe4dfc260",
        "cursor": {
          "ref": "d0976d3c-45af-4d1f-b329-f3bd2d87f040",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c1e3624a-1aa3-4b27-9bb5-8528350c69d6"
        },
        "item": {
          "id": "5e05af53-c98a-4196-a14e-3c7fe4dfc260",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "241084fd-8526-428f-8312-6092683f6036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90a100b-0d58-4d9d-87a6-c485034584bd",
        "cursor": {
          "ref": "ef182810-1fe4-4328-a8ba-dfb3d2d5e6ad",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "94291da6-7e2b-4ad9-a80b-b1cdcad0d83a"
        },
        "item": {
          "id": "d90a100b-0d58-4d9d-87a6-c485034584bd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "97f27865-93ca-4120-a254-4363a2ebee02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53a3e37-c1f3-48e0-a178-6d94c34571ce",
        "cursor": {
          "ref": "0a14ea00-b479-4098-b873-33b90f4e17a3",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ede0647c-24aa-48aa-a13d-94d2cb248d10"
        },
        "item": {
          "id": "e53a3e37-c1f3-48e0-a178-6d94c34571ce",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "20d79cac-51df-4650-b4fd-eb03a3dce545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592985df-4e51-4f5a-8672-4606130e1f5b",
        "cursor": {
          "ref": "ac84b0f1-8aeb-4f49-9749-1504cd3b734c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "02fb5172-2de0-4aab-afde-93504a427e98"
        },
        "item": {
          "id": "592985df-4e51-4f5a-8672-4606130e1f5b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1f89638f-cffc-492d-b88d-e61a8f45086e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdcb9b6-b998-47fd-a592-ef814d736825",
        "cursor": {
          "ref": "c4765637-8adc-458f-8eab-b87352dd0189",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "80a127da-02ff-40fe-84f3-99f21b01179c"
        },
        "item": {
          "id": "1cdcb9b6-b998-47fd-a592-ef814d736825",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "68246bcb-9e14-4d39-a12d-c257ef732d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb7d28f-58fd-4a8d-862c-1068a4fb419b",
        "cursor": {
          "ref": "b5fc38e1-419e-4d88-a73e-cc94d6f13404",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "77f20331-2d5c-46bc-905e-0f215b53ba4b"
        },
        "item": {
          "id": "4bb7d28f-58fd-4a8d-862c-1068a4fb419b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "39d41459-e0d6-4663-a883-9a3fa81c030a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff43f15b-b80a-493c-aece-a29aadaf907f",
        "cursor": {
          "ref": "5f423f2f-4d4b-4e24-826f-24c86797ab8a",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "cca2d53e-adc9-48a4-bca2-ac455c3948b9"
        },
        "item": {
          "id": "ff43f15b-b80a-493c-aece-a29aadaf907f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8d674b79-5c01-40b3-895e-c35db7f227ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda128bb-52d6-468e-929a-7d5088026d69",
        "cursor": {
          "ref": "194966c9-55f5-44a7-89a5-1c758ac48bbe",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "98ecfe2f-4f5a-4c47-96c9-f100a62b9fc5"
        },
        "item": {
          "id": "bda128bb-52d6-468e-929a-7d5088026d69",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f7d619ba-f306-4b45-abf8-63287a1bc7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141669a1-a4ce-413b-87d7-039995217c5f",
        "cursor": {
          "ref": "e7791f8b-bbc7-48bb-8a59-3e34532d521b",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bd55be41-d38a-4911-aa07-e4cfa6958014"
        },
        "item": {
          "id": "141669a1-a4ce-413b-87d7-039995217c5f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a145831c-1847-4fc8-9e2d-3259849e869c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338ec9a9-4f53-42bd-8225-9cdaf6cfbfee",
        "cursor": {
          "ref": "78cbdcb2-464f-440f-bed9-db6450b92655",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "4b882ec3-be25-4e33-86ea-2ef066d89cc9"
        },
        "item": {
          "id": "338ec9a9-4f53-42bd-8225-9cdaf6cfbfee",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "21dc3eff-4f10-4611-9b5d-afe32f9fcd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee767a2-7516-4f3a-b0d1-7ec06936266a",
        "cursor": {
          "ref": "36c7cb50-1d9e-4b26-b03d-da0847e056f7",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0117040d-16ff-41f7-9bb2-a0c730b73c10"
        },
        "item": {
          "id": "fee767a2-7516-4f3a-b0d1-7ec06936266a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "89554aaa-b309-4c2a-aaab-0edbbaac1bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2a823b-c698-4114-af4b-30366c5a997d",
        "cursor": {
          "ref": "bd54f9d7-281f-4e7f-a330-6c560ee50ba7",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "5cbe134a-1962-4466-91b4-b6381877301c"
        },
        "item": {
          "id": "5c2a823b-c698-4114-af4b-30366c5a997d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0196494d-fa58-4700-a050-85fd5df41d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75febc78-ab0a-4609-9fec-33898214e1f2",
        "cursor": {
          "ref": "7659d73e-8fc3-40f7-8fc1-7069c7239751",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5deef956-ea8e-466c-b698-c1c0b417b1da"
        },
        "item": {
          "id": "75febc78-ab0a-4609-9fec-33898214e1f2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7db2f723-f8d6-4071-b10a-830adb0f1436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26deed1-0a3d-4396-b1a3-89c72df2e747",
        "cursor": {
          "ref": "33c6730b-5b1c-4116-87fb-338c7794e8fd",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b2b2212f-d1b0-4163-be83-37e2993e8afc"
        },
        "item": {
          "id": "a26deed1-0a3d-4396-b1a3-89c72df2e747",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "fd81f74a-e10b-49f2-bed3-7a56335a16e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb988ef3-2180-4fc5-bc8e-7660c53d698e",
        "cursor": {
          "ref": "fefa167d-7a6a-415d-b094-31731b0daeb5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4ca31d7f-6364-440e-ab28-7d606f773dba"
        },
        "item": {
          "id": "bb988ef3-2180-4fc5-bc8e-7660c53d698e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c578b95b-1b8d-4c6b-a50a-7cbbc367e27d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ff3951-9ce4-4d48-9c46-d799b8cfdd8f",
        "cursor": {
          "ref": "5dc397ad-d328-4f09-afa6-f789eeb232b8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3ca03ef8-07f0-4abe-a249-3b94e99df6d1"
        },
        "item": {
          "id": "41ff3951-9ce4-4d48-9c46-d799b8cfdd8f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f664a0cd-ee07-4077-86a6-c03adbd48620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342d3590-ac30-47ce-b538-ab7ffdb4407c",
        "cursor": {
          "ref": "8201a402-8300-4a35-9ef7-11e13e39bbda",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "411ea110-e4e8-497a-9768-50d4c17ab2de"
        },
        "item": {
          "id": "342d3590-ac30-47ce-b538-ab7ffdb4407c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2bbab600-012f-4bff-bd9a-95c323e99008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20308dc3-e408-4e7c-a11a-a9cfe5f72831",
        "cursor": {
          "ref": "c392af25-d6bf-4dd2-acd8-51da0b9ee245",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ef8a0f43-8659-4afd-aa6b-d8faa43aa310"
        },
        "item": {
          "id": "20308dc3-e408-4e7c-a11a-a9cfe5f72831",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f2f64b88-60b7-44d4-8043-f74cd0349d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a586106-7d48-47fd-97c8-9a7a823192ee",
        "cursor": {
          "ref": "dc228f15-2c9d-4e3d-b249-2fcf4c2982a3",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "10b850f5-2420-41e8-9482-7d96edff2c2c"
        },
        "item": {
          "id": "3a586106-7d48-47fd-97c8-9a7a823192ee",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "34bc3450-5add-4150-a1ca-9dcfe5a3f7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813352a4-988d-44fc-9e73-1d5cfb07c963",
        "cursor": {
          "ref": "0b73de3c-cff9-4750-bba1-95b7aa00a9e5",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e772c95f-95e1-42dc-9955-40c8c146f50e"
        },
        "item": {
          "id": "813352a4-988d-44fc-9e73-1d5cfb07c963",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bcbea383-d618-493c-b533-cf7045c0ef73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa68ba2-77ab-4c4b-b25a-5291cd27dd23",
        "cursor": {
          "ref": "53369778-12f2-47cc-b284-05eb8e3edf34",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a09dc230-6528-4c11-bf40-c0aefd82a3cd"
        },
        "item": {
          "id": "6aa68ba2-77ab-4c4b-b25a-5291cd27dd23",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "98b1150f-f5bd-46df-a9a7-ea8122b38b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e1f61c-abae-43db-97c7-c6f9a6d24e90",
        "cursor": {
          "ref": "96376b2c-1c6b-4886-ae61-2dc652db92f6",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "84dd4dc8-616c-4955-9b98-23668f33bf7e"
        },
        "item": {
          "id": "33e1f61c-abae-43db-97c7-c6f9a6d24e90",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7690d2b9-8053-41c3-94e4-6a368f127067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5afec03-82a1-4600-a509-19fd83d87e71",
        "cursor": {
          "ref": "70d8ace4-81b6-491f-b0bd-7501b7b48dc5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "bf524a86-3056-4e17-9c28-87c31d002ee3"
        },
        "item": {
          "id": "e5afec03-82a1-4600-a509-19fd83d87e71",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "47591805-b71d-4d7d-b82c-31dba9486a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b11585-4c73-41f8-994e-999e3a7fb8b7",
        "cursor": {
          "ref": "e22dcd45-a3b8-47ed-9dba-f88d0fb8982e",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a1f87788-50a4-45a9-99ff-a5fffb1c27d2"
        },
        "item": {
          "id": "e5b11585-4c73-41f8-994e-999e3a7fb8b7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "59c2e0fc-b303-44cd-b348-2ca61cd750c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58793b39-a4a6-4614-beb5-3093cd057e57",
        "cursor": {
          "ref": "e20fd568-7f35-4bb7-b3e0-cda1637c431f",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "adc3fe98-0d2e-4db4-9d48-6a20446b4a43"
        },
        "item": {
          "id": "58793b39-a4a6-4614-beb5-3093cd057e57",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "20c590f7-5be9-408c-a635-783502e8d223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed884ebf-b760-42fe-a6f2-b27afbd8ca2c",
        "cursor": {
          "ref": "01cf16e8-8e65-46f0-ac0f-9f8a9304d5fd",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "79b00f05-dccc-4186-9598-08996019534b"
        },
        "item": {
          "id": "ed884ebf-b760-42fe-a6f2-b27afbd8ca2c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "8bc8fe04-2ede-43f8-ac6e-f5c6b39a0f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b83cfa-cbd6-4138-9f8d-9c8639a3726a",
        "cursor": {
          "ref": "0507383a-24f7-42f5-a44b-f3e4c3db0730",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "be7a3c31-b6a8-4ccb-9c0f-ba74ab0ff99c"
        },
        "item": {
          "id": "54b83cfa-cbd6-4138-9f8d-9c8639a3726a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "478a1a91-dfd3-4d67-a6d8-ab6cb1fab980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a643f35-9877-4f93-bcc3-b32224917f16",
        "cursor": {
          "ref": "5c4239e5-710c-40d3-b318-8a464367734c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6d2fd655-6eb3-4cfd-8514-fc1e2094f4dc"
        },
        "item": {
          "id": "6a643f35-9877-4f93-bcc3-b32224917f16",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1302c009-b5b4-4b31-93f4-8d69fb0fc42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104c059f-4a03-435c-b494-22a1c457953b",
        "cursor": {
          "ref": "c6c09bae-5d26-4266-9a89-79b1283a8b32",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "03013d69-7c0a-4e37-81a4-b31914d3588e"
        },
        "item": {
          "id": "104c059f-4a03-435c-b494-22a1c457953b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "883c05fc-377f-478c-91cf-a92d6bac9010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a182dc-25ad-45a9-80d1-96552d542802",
        "cursor": {
          "ref": "68c9a31d-cde2-42ce-8796-e9ac8a04e980",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8dae3980-6577-40e6-a76e-aa3ddc0de201"
        },
        "item": {
          "id": "89a182dc-25ad-45a9-80d1-96552d542802",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f5b725ce-fa6b-47e7-bc33-3083aaf2aa80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78dab10-4a1b-49f3-a498-6424d1dde381",
        "cursor": {
          "ref": "92200a5b-763a-436d-9fb3-8d968508bb12",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b3b84e2f-4ff3-43cb-8541-19303d6cd3f6"
        },
        "item": {
          "id": "b78dab10-4a1b-49f3-a498-6424d1dde381",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fc5c6d4f-8bb8-49ad-92ed-e9a5bbb46639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388d8feb-2acc-458e-bfcc-202c5152b79d",
        "cursor": {
          "ref": "cfcab51e-ac06-4145-8642-217f5960f079",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5c7ff8b7-ec9a-4e62-bc87-e7b9443be0eb"
        },
        "item": {
          "id": "388d8feb-2acc-458e-bfcc-202c5152b79d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cd052b50-a52b-46ec-a08f-8f018e7a4442",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f8be5f-6d68-4020-b736-69c6e9a26e35",
        "cursor": {
          "ref": "5ac042e9-7049-496a-a41d-56559af50f6e",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8794014f-aae7-47b3-bd18-3838cf4029d8"
        },
        "item": {
          "id": "29f8be5f-6d68-4020-b736-69c6e9a26e35",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5e57ba22-4827-4f7d-9a24-4343e3d2676a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba6d811-e2b9-4b03-89f9-6a62c86e3358",
        "cursor": {
          "ref": "5313759d-05a2-4368-959c-51656a31937b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "87457b88-e298-4e56-9e86-1795e2c538f8"
        },
        "item": {
          "id": "eba6d811-e2b9-4b03-89f9-6a62c86e3358",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9c583033-6b2d-4a9b-abc7-2cb7c2292c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34046f87-5cb7-4e93-a779-7ce8013abe3e",
        "cursor": {
          "ref": "601188e3-503a-41e5-817f-fa9148497e9c",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "302730c1-9fd6-4b1d-a0af-08a2d2012e72"
        },
        "item": {
          "id": "34046f87-5cb7-4e93-a779-7ce8013abe3e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7f61422a-51be-4324-aad0-f4b0ec3b85a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b6b517-919a-4bdc-b468-19b466e2e2e4",
        "cursor": {
          "ref": "53336259-d5bc-4432-88c3-79780a3bcc1b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "75db049b-a0f2-4b0b-a948-6cd0d78e9ecd"
        },
        "item": {
          "id": "f9b6b517-919a-4bdc-b468-19b466e2e2e4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a95effb4-de9b-4bc1-aaee-c1e7c60a2f2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae722976-c0fd-495f-a2bb-8982d382ac74",
        "cursor": {
          "ref": "64ad4eaf-83b4-4f47-8543-4991d6be3d19",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4d64bdf5-369a-4e4d-bc7e-f9280478211c"
        },
        "item": {
          "id": "ae722976-c0fd-495f-a2bb-8982d382ac74",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d6b2564f-573b-4b2d-aedb-7faf00b4bc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ec816b-a7b4-46d3-9fef-5f593e078a2c",
        "cursor": {
          "ref": "2bc96d8e-b74e-4394-838b-fd4909721f5d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "875a05fe-ff65-4b74-bcc8-beeb5641b4cc"
        },
        "item": {
          "id": "b2ec816b-a7b4-46d3-9fef-5f593e078a2c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "68ac6ce4-9693-49cf-a85b-d70520ddbbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b096fd07-06b2-4d2b-9e7d-24df2d83f6bc",
        "cursor": {
          "ref": "2f1bf543-8490-4375-a6f9-17372b8686c1",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "55f5ff94-c9d5-4b91-9697-94d4d243cb59"
        },
        "item": {
          "id": "b096fd07-06b2-4d2b-9e7d-24df2d83f6bc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dded552c-aace-41b4-a24f-eb186898e3eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb8b7fd-b204-4608-a78f-6f989d3d06a2",
        "cursor": {
          "ref": "118082a1-c0a0-4e23-93a9-3e1c5cac0904",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cc3f0e59-50f4-47e9-bc2c-f79ff4d75557"
        },
        "item": {
          "id": "6cb8b7fd-b204-4608-a78f-6f989d3d06a2",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e5157bef-a92b-4b47-b956-0fd07c816d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9ae806-bad4-42cd-89d2-20260ae3edca",
        "cursor": {
          "ref": "299643db-a5f6-4d4e-aa90-7449ed846a45",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "57662a3c-8d73-4323-8a96-386615183566"
        },
        "item": {
          "id": "bf9ae806-bad4-42cd-89d2-20260ae3edca",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a42e31e2-9057-48fb-b636-4ad800c9b31e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243f98dc-b2c6-484a-ba35-719c143e9821",
        "cursor": {
          "ref": "2a0afcd7-aab5-474e-835d-23831f2e5426",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "eaf5fb29-888e-475c-a71e-1eb067e8b980"
        },
        "item": {
          "id": "243f98dc-b2c6-484a-ba35-719c143e9821",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f2178c71-5b14-43fe-a9ab-c3ecb4e7fc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412ef861-4c26-4e1b-8e8e-acaa65013674",
        "cursor": {
          "ref": "34ff5834-2db4-4a1c-a8dd-7b25d73490d0",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "12390b91-5210-43ca-a578-11a83e5a0173"
        },
        "item": {
          "id": "412ef861-4c26-4e1b-8e8e-acaa65013674",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b8772371-04cb-4da0-8d07-834b0f318586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c46a830-69c6-416c-a934-e868bbc6ebd8",
        "cursor": {
          "ref": "b4a5e149-0431-4970-bd4d-4da27e20a48f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "16978ed8-0579-4220-8ca6-c1709edacfc5"
        },
        "item": {
          "id": "7c46a830-69c6-416c-a934-e868bbc6ebd8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f92dfec4-4e1d-4a56-ac0b-fca45e867fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f68e68-2c56-4e83-9380-1487e5a9b832",
        "cursor": {
          "ref": "ffee146a-b364-4b02-9cda-53df354c37c6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "48511244-40fa-46f7-a9c7-381800c1380f"
        },
        "item": {
          "id": "08f68e68-2c56-4e83-9380-1487e5a9b832",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4b0f5df8-52ea-4520-a98c-6c047a983ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70627fe-7a6d-4d55-aab7-ecbd1f3f43bd",
        "cursor": {
          "ref": "b8dc267b-606d-4ba7-8748-a9518af0cfd0",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "65ead183-7f7d-47ea-a5ed-dbc5051064a7"
        },
        "item": {
          "id": "a70627fe-7a6d-4d55-aab7-ecbd1f3f43bd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c3895c08-449d-4a55-9820-b8b0eb7f8afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12783c29-154c-4d82-8a1c-7bbb708c5bc3",
        "cursor": {
          "ref": "78df5676-e18f-4e41-a52a-470c4ff5283b",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0d5f265a-9e9a-405a-a879-c0323f845483"
        },
        "item": {
          "id": "12783c29-154c-4d82-8a1c-7bbb708c5bc3",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5dee4550-c865-4006-88b5-099264bf0016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106b9c04-d457-4274-85db-90c58772412e",
        "cursor": {
          "ref": "0ef7b130-999a-4b37-88d5-9f2a07aefb0b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a1230cd3-6e45-47ae-9a9c-db49bb1bd1a3"
        },
        "item": {
          "id": "106b9c04-d457-4274-85db-90c58772412e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "c8eaeaae-ed4b-4194-9a30-9f571aab25c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "656cc22a-bd85-44c2-9d41-c48c8646a09a",
        "cursor": {
          "ref": "da9ab189-4cc8-45bb-b436-d962c41b6524",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ba4426ac-c1b2-440b-815a-e769cb2d791d"
        },
        "item": {
          "id": "656cc22a-bd85-44c2-9d41-c48c8646a09a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8d2fca95-4b94-47e2-a667-9c7e0089cae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e07451-e417-4c7e-8036-0359e3b17757",
        "cursor": {
          "ref": "094c0e29-611d-447e-b413-7caa473c91e6",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "473c7f8a-b565-4b3d-8e7a-f352e52eb8fa"
        },
        "item": {
          "id": "63e07451-e417-4c7e-8036-0359e3b17757",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6d448078-8af1-4610-aa19-c95f477a24b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ea2aa3-d6be-48f4-b4eb-b830b1a42330",
        "cursor": {
          "ref": "6784e796-5a91-419a-b7e0-b8b27639238f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ff7a9f73-fd38-4bfe-9f4f-44b9d977e66b"
        },
        "item": {
          "id": "04ea2aa3-d6be-48f4-b4eb-b830b1a42330",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7a2fdc2d-f7af-4110-9f4a-244cfacd95c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef7bd52-1a8e-420b-b88f-b00a06bc308c",
        "cursor": {
          "ref": "bf89a337-aab7-47c7-8e9a-566aaad1090f",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e4d8b291-34e8-4e44-b41d-318f9c19cd93"
        },
        "item": {
          "id": "aef7bd52-1a8e-420b-b88f-b00a06bc308c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a20b4339-d770-49d6-b190-87f00aee8fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037c2182-9aa3-4a9c-86b5-65972b1d9d4e",
        "cursor": {
          "ref": "5713184c-a051-44a9-b14f-cbc2054cf290",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e46fafc2-d7fb-45ea-a66e-b178441f6f2d"
        },
        "item": {
          "id": "037c2182-9aa3-4a9c-86b5-65972b1d9d4e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0a19f36a-7c2d-437b-a44d-5a8fcfa4d11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2bf028-d81c-4f3e-af7f-d985ab645d2a",
        "cursor": {
          "ref": "d3e69fdc-dff8-45d5-b821-94ff8cc57e12",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "5633374f-8efd-47b3-8acb-35935aa1d277"
        },
        "item": {
          "id": "cc2bf028-d81c-4f3e-af7f-d985ab645d2a",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "033dacd4-8df9-4a50-8082-86532b548ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4437d1e5-e9ee-465c-b350-2b464f884eca",
        "cursor": {
          "ref": "734aade1-5245-4b59-810d-a6e9b6af947a",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6445457e-44c3-4b68-956b-ca1652820467"
        },
        "item": {
          "id": "4437d1e5-e9ee-465c-b350-2b464f884eca",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c1440a05-0775-4337-931c-253f0bae417e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6590f14-e677-4426-add5-c7d2f83acb73",
        "cursor": {
          "ref": "9224f8c1-bbaa-4101-a3c0-20cc7f4ed828",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "012e7edd-696f-40af-9c9e-b1279e147576"
        },
        "item": {
          "id": "b6590f14-e677-4426-add5-c7d2f83acb73",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7d94a96a-eace-490b-be64-b04a33572070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b8883b-a7b0-4f52-b9aa-44407bd9d9dc",
        "cursor": {
          "ref": "a8adef69-efc7-418c-b806-7ae5509330c0",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "48f30ab2-9bcd-4147-84a2-fa88b86767b0"
        },
        "item": {
          "id": "33b8883b-a7b0-4f52-b9aa-44407bd9d9dc",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0c154ed8-25d8-40e8-ba1d-b98b1c14ec36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a641330-86fc-44df-9a9b-6e65c48cb2f3",
        "cursor": {
          "ref": "587cf704-ed0d-4197-b39b-4aa3195f7dff",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "72c124d5-ba52-4460-b023-352c278b45ed"
        },
        "item": {
          "id": "6a641330-86fc-44df-9a9b-6e65c48cb2f3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1ee6c30a-ed09-44e7-9bcd-a125dcf091fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b4e1a2-b37e-4fab-a7dd-2d1dee87167c",
        "cursor": {
          "ref": "7a7ee108-fdb6-471d-9ca4-0ffdf34ec46c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7496831c-86fd-4409-b7bf-f81dc746789d"
        },
        "item": {
          "id": "14b4e1a2-b37e-4fab-a7dd-2d1dee87167c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "46ac888d-ed13-4927-aed4-b1b0dc044115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480a7d1c-981f-4247-b869-97236c42bdcf",
        "cursor": {
          "ref": "2ac31b3d-97c2-4971-8fbf-7e814e44e72f",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2cabe534-a0db-4bd8-897d-59cd42d38cd9"
        },
        "item": {
          "id": "480a7d1c-981f-4247-b869-97236c42bdcf",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "33af41ca-8f1a-40f2-8ca0-5daf8208e420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bb9c08-678b-459e-9bbc-ab5d27ebf883",
        "cursor": {
          "ref": "72acfd1c-9fc5-40dc-94c8-1b6181816aa6",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3bf63d6a-6288-4de0-b4cc-8198576293f2"
        },
        "item": {
          "id": "e9bb9c08-678b-459e-9bbc-ab5d27ebf883",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d9c2d8a0-bc51-41bf-a8e8-b589ebca0295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d482b64e-1d1a-4b9a-87d2-b6646f856383",
        "cursor": {
          "ref": "98bd5f65-cf4e-437e-ada4-90bcfa79c713",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "150bebae-3148-4571-baea-7cd08dad6bb6"
        },
        "item": {
          "id": "d482b64e-1d1a-4b9a-87d2-b6646f856383",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5fdca547-d4b7-459e-a008-2ee42721290a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c248968-4c0f-4634-80ad-f3d9f56dcb86",
        "cursor": {
          "ref": "93496d58-37fe-4163-9e05-8036c4e808de",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4859eaa4-8f83-46ef-9a2e-6e080c10b260"
        },
        "item": {
          "id": "1c248968-4c0f-4634-80ad-f3d9f56dcb86",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "be0c4914-de92-4f6f-992a-439578881ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e66ee0-7397-4c4d-840c-64b932b3aa57",
        "cursor": {
          "ref": "f4d927b4-a7c0-48b0-897e-d46b927ed613",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e54515f9-5dcf-4a31-b2ec-bbb54d55484e"
        },
        "item": {
          "id": "57e66ee0-7397-4c4d-840c-64b932b3aa57",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5bf39ad0-c1bd-4352-bd26-f280fd1e090c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7b4c532-ccbb-44b2-8641-88ce5dd1caa2",
        "cursor": {
          "ref": "fc30a43c-cc04-44a0-adfa-c5ac9aef8849",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fba997e5-7923-422a-b709-08d166cc8ee7"
        },
        "item": {
          "id": "a7b4c532-ccbb-44b2-8641-88ce5dd1caa2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "73f6a164-72d9-4b79-930d-2d97a405d19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04f6e00-7962-49d4-8612-29d9b8298f24",
        "cursor": {
          "ref": "a82433cb-42a5-4e7d-a224-57c504e0f6fd",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4da396ac-3cd6-4d14-8f7b-9659f9534976"
        },
        "item": {
          "id": "c04f6e00-7962-49d4-8612-29d9b8298f24",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0a544fa4-22c5-4009-95b5-156e5c68b2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e040285e-8b3e-4267-bb53-1be789a0a951",
        "cursor": {
          "ref": "c4b607f9-f6a8-4387-ba7f-9f9fa4e022a1",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fc8e570d-10f5-42b1-8223-4d054ec2fba6"
        },
        "item": {
          "id": "e040285e-8b3e-4267-bb53-1be789a0a951",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c1a8d010-8724-4c7c-bc8b-eb284b3b4cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3d37b0-3ab7-464a-be9e-a7b57da0ac6b",
        "cursor": {
          "ref": "e2fc5b7a-9cda-434b-8dcf-8b14406429de",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "97f9b317-03db-453d-ae44-9fb711a1fee3"
        },
        "item": {
          "id": "8c3d37b0-3ab7-464a-be9e-a7b57da0ac6b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4af6e990-0a7e-4976-8fda-02caf98777e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84b11679-e729-4975-92a4-d5d48632245c",
        "cursor": {
          "ref": "25664965-f90d-4853-9a19-86343715c646",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "41a4c9f8-0447-406d-b4cf-f483bc6fa182"
        },
        "item": {
          "id": "84b11679-e729-4975-92a4-d5d48632245c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "be8f7e47-30c4-4cc9-a0a4-683c0a777e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a655c4-7ea1-44bd-b55b-5b778c4fb666",
        "cursor": {
          "ref": "547d2e02-bf41-47da-9aec-568c1fa94d89",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2f08fa84-947f-4a8f-98c3-a24bd3743ec7"
        },
        "item": {
          "id": "98a655c4-7ea1-44bd-b55b-5b778c4fb666",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "96f7bf17-1040-4f5a-b2bb-adb45c917bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72523aba-ec75-4a55-803d-7e4ed5c1584e",
        "cursor": {
          "ref": "e525eb09-a866-40bd-9984-70ffbcd29ef2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fede91cb-59d5-4654-952a-a828600ab2d8"
        },
        "item": {
          "id": "72523aba-ec75-4a55-803d-7e4ed5c1584e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7e042509-5804-433c-b23c-5f75f3079dec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017d1072-7860-4624-bbb9-33b5cde5bc85",
        "cursor": {
          "ref": "fd3d0815-731d-4667-b539-03588309bf61",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "83345eb4-0962-4c54-a0a0-5010be781d5c"
        },
        "item": {
          "id": "017d1072-7860-4624-bbb9-33b5cde5bc85",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "012feee0-c1ac-4c78-afdb-20ad15fe6273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc711821-d63a-41e6-8e29-c3bc199723a0",
        "cursor": {
          "ref": "647fb511-8d89-41c1-9910-5dcf5f059d44",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "68b1a0b6-0e40-4892-8d65-7543f3050cd2"
        },
        "item": {
          "id": "fc711821-d63a-41e6-8e29-c3bc199723a0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "242265c7-1d86-41e8-a0c8-57241b1440f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02111b9-2156-46c7-a03a-23412862e99c",
        "cursor": {
          "ref": "14345241-b5ad-4eaf-a606-d1733ef0e2c5",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "da890e5e-c3a1-4ad9-86f5-54e34597d35a"
        },
        "item": {
          "id": "c02111b9-2156-46c7-a03a-23412862e99c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bc4c7bf4-43a2-4ff4-aacf-d28dcf46d47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d044ccd-2a28-4ad7-b5fa-4f57510d1ac0",
        "cursor": {
          "ref": "6764765f-2c22-4501-bec5-aba99f398a79",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "df578e61-9dd4-416a-849a-9b789cec7cfd"
        },
        "item": {
          "id": "9d044ccd-2a28-4ad7-b5fa-4f57510d1ac0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0e0022b1-0b4c-4d08-a06e-8c88a52ed157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f2168d-c297-4c51-8982-637089027028",
        "cursor": {
          "ref": "0b2dfe36-7c5f-42db-9996-f24f0dcbbeeb",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "947d6cbb-6a36-44d5-8b63-ed3705283c38"
        },
        "item": {
          "id": "a9f2168d-c297-4c51-8982-637089027028",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8150cd56-c487-4429-a423-314c46c667fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd873aa6-3f08-4ae0-9957-139f9853e096",
        "cursor": {
          "ref": "059e25c3-aebf-4a0e-8be7-610a3441fbe8",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "9b044a02-e3d3-4323-97cc-99eefeba10a1"
        },
        "item": {
          "id": "cd873aa6-3f08-4ae0-9957-139f9853e096",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d554dd43-5c16-4360-b9c2-f8ee204793d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea64d31-4e53-4b86-9a40-b659dff639d8",
        "cursor": {
          "ref": "8a74dc3f-f3cb-4605-84f2-4f5e07fe91a9",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "777dbef1-80e6-46ff-95dc-66eeda8b82e9"
        },
        "item": {
          "id": "eea64d31-4e53-4b86-9a40-b659dff639d8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b936cc5b-5041-4996-8106-7ae45b472c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c98bc97-355a-4db3-b29b-09e5a3debf0d",
        "cursor": {
          "ref": "3ce9244f-050a-40b3-9f69-20e194f60ffe",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "149b92e0-7119-4910-aec6-d3af322cf9f0"
        },
        "item": {
          "id": "7c98bc97-355a-4db3-b29b-09e5a3debf0d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9afc6187-2ce9-4fd9-a04b-377c56a19327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50a1347-d7cb-4f47-bcb5-b1e089009966",
        "cursor": {
          "ref": "a9f05025-6d53-4ffe-bee7-a86fd0e2ac30",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a2a43d48-3c65-49b3-9a82-425ae7394fc6"
        },
        "item": {
          "id": "e50a1347-d7cb-4f47-bcb5-b1e089009966",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8a3bcace-62a3-4581-afea-5901bc7f4f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9f2b02-b6ef-47c3-a6ed-52ec4ff025ba",
        "cursor": {
          "ref": "f7d3c04e-d3d9-4bb7-b0f2-fa97add99945",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ccc41e6f-6cfc-4b8d-9b2d-19a34067c1a3"
        },
        "item": {
          "id": "fa9f2b02-b6ef-47c3-a6ed-52ec4ff025ba",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e317df7d-afa8-4d60-8641-748a6809bb25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114b5217-3890-47b2-8a95-0f81b5fafcb8",
        "cursor": {
          "ref": "4628116f-b6ff-4d18-ad09-3ea2ec885524",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "7623d23a-48d4-480a-b6ac-8fdeec19edf9"
        },
        "item": {
          "id": "114b5217-3890-47b2-8a95-0f81b5fafcb8",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a5444941-00eb-4406-9f35-e796b646ce7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2860c7-5731-4610-bbe3-24a5afa62b27",
        "cursor": {
          "ref": "96955ee9-0cee-4eb5-8a4f-60524d82e9a6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6c811a21-f6d3-44ed-8c79-682cf45be98d"
        },
        "item": {
          "id": "eb2860c7-5731-4610-bbe3-24a5afa62b27",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0651b620-dda0-41ac-9a53-a224a99ae744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba188da6-0a83-442c-ba88-e8aa688d27dc",
        "cursor": {
          "ref": "e4d996f5-6fb3-48f5-9d35-8dc69904a5b3",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2aacad1e-76cd-45df-8bac-1eb8468f26de"
        },
        "item": {
          "id": "ba188da6-0a83-442c-ba88-e8aa688d27dc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "27380fa8-b3bd-4706-94eb-167e98f588b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bd9914-c8e6-4396-829a-481f48bf2c72",
        "cursor": {
          "ref": "71772d0f-8586-4645-8472-3996114caf6b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e28e4c1f-1a85-4d5a-830a-f3cb5324d869"
        },
        "item": {
          "id": "05bd9914-c8e6-4396-829a-481f48bf2c72",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "1a00a80a-c6de-4917-b7bc-42bc21d99947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0281edc1-4c38-4053-95fb-b6024d4214ae",
        "cursor": {
          "ref": "ad1aacb8-f7c5-4604-9d03-24ac5e06df5b",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ebccc702-87c1-418f-8549-22bc1597e248"
        },
        "item": {
          "id": "0281edc1-4c38-4053-95fb-b6024d4214ae",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a0217252-5a9d-4340-b588-d39af0b56126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879bc557-5eb9-4c44-a489-3be98a2c4c27",
        "cursor": {
          "ref": "e32cc775-ff16-4075-9f23-73a27c592198",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "365e79e7-5eb2-426a-aec0-23270fec3421"
        },
        "item": {
          "id": "879bc557-5eb9-4c44-a489-3be98a2c4c27",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ec68429d-40ad-4b66-8bb7-3f2bb7474170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebeca6a9-2236-4280-bb3a-2e358572c54b",
        "cursor": {
          "ref": "aab453a7-04ae-46a5-9cc6-1b03262ebf26",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "2d091147-0245-4b2a-9e66-a9d604ca76e4"
        },
        "item": {
          "id": "ebeca6a9-2236-4280-bb3a-2e358572c54b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "0e2d77a9-dbc5-4ce9-bf29-1b206f76181f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e409e40e-094b-490f-87b3-3d993546d91e",
        "cursor": {
          "ref": "8b6d871f-05d8-4890-9ce6-9a1136607ebe",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5d35222a-f893-4789-88b7-56de16190686"
        },
        "item": {
          "id": "e409e40e-094b-490f-87b3-3d993546d91e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f4056994-e038-4cce-b3bd-50f3fcd5d551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27c8014-0a4d-4f82-9e0b-1188819691d3",
        "cursor": {
          "ref": "f36edd34-2567-4b01-b17f-6819cde6ba0a",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ed4bee1b-c56e-4911-ae99-b94e2dfddd67"
        },
        "item": {
          "id": "d27c8014-0a4d-4f82-9e0b-1188819691d3",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a894ab61-e4f5-414f-b457-a088d75598b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414126c4-ca37-417f-b859-1f2568488888",
        "cursor": {
          "ref": "258c287d-3854-4f08-849a-f361736221ce",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "54110724-f1e9-4066-9d62-2ca56241baa2"
        },
        "item": {
          "id": "414126c4-ca37-417f-b859-1f2568488888",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "7e20e42b-fea6-4c5e-96f2-954ff2a1c21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde88637-c926-49ad-aa8b-ab091d28d613",
        "cursor": {
          "ref": "db85ceb0-e656-4a7f-93b4-b00c1d19d5e7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1b184ace-1e7c-43ce-9af7-ad3cf4809bb1"
        },
        "item": {
          "id": "fde88637-c926-49ad-aa8b-ab091d28d613",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "36c780bc-5867-4070-aca6-c03b64cb317e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f2eec2-354e-4332-8455-414e4b2569d3",
        "cursor": {
          "ref": "a35f3cd1-b79c-4802-a6f7-64e30b241e6e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "79b79dbf-333e-4641-b517-c3594fed3e13"
        },
        "item": {
          "id": "14f2eec2-354e-4332-8455-414e4b2569d3",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9eb92716-d331-46d7-b21b-afa7af5f1540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be774e11-2b71-41fb-bc19-7e950b98782b",
        "cursor": {
          "ref": "56ed7963-c506-4747-b4ce-020677dcdb83",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "648a1e36-de09-44a6-a921-11640d96ab7f"
        },
        "item": {
          "id": "be774e11-2b71-41fb-bc19-7e950b98782b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e1b43414-f4dc-4c7f-a564-8751afbe664b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c87991-8d69-4fc9-86a7-d18a36b2da16",
        "cursor": {
          "ref": "56088bb0-041e-4008-8b66-52337862add6",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a90a320d-8ff3-40af-b7cd-f62866bc046f"
        },
        "item": {
          "id": "70c87991-8d69-4fc9-86a7-d18a36b2da16",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b6a35ba0-245c-4cbc-a5c2-4b49037dcb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4fcbf1-ca6c-493e-8047-ac4ed0872538",
        "cursor": {
          "ref": "1d5e2d37-9dde-482e-a43f-3cbd7457e1d1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ca12dbfc-cfb5-4114-bd4a-953a2a68490f"
        },
        "item": {
          "id": "5e4fcbf1-ca6c-493e-8047-ac4ed0872538",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e74fe04d-00fc-4e75-b7dc-8fe020c8b616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be31e6d5-5448-4796-960d-9f9e7411f235",
        "cursor": {
          "ref": "5fffd024-0f63-474e-b5b3-565059abfef3",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3da4fcfd-57d8-42e6-8bbb-0326e64e50f4"
        },
        "item": {
          "id": "be31e6d5-5448-4796-960d-9f9e7411f235",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5cd647f8-55b3-461b-a663-1b5ee42bf779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c04992-2f80-44d0-98be-ebcd9378266d",
        "cursor": {
          "ref": "4c4516bb-65b9-4a78-843c-25d51dfa104d",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "33fc0110-9a84-4604-8c1d-95d7dc8dd352"
        },
        "item": {
          "id": "c4c04992-2f80-44d0-98be-ebcd9378266d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2ff83367-1794-44c7-9ae5-3456b6499756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16018d6-164e-4e04-8ec1-ad09b1f6bcc7",
        "cursor": {
          "ref": "d09fb0cb-2719-4026-b469-73cb0437807f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6b0ae837-fd41-419e-a698-b0a74bc6b845"
        },
        "item": {
          "id": "f16018d6-164e-4e04-8ec1-ad09b1f6bcc7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a5ec2379-953e-4330-9775-786c266e8774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffddec59-514a-4da9-b676-a6f31d041057",
        "cursor": {
          "ref": "78580250-fa55-4562-8a19-43010236a3c0",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ac5eed07-c227-41a2-9f01-075ec4d19137"
        },
        "item": {
          "id": "ffddec59-514a-4da9-b676-a6f31d041057",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "bad3b5dc-597a-4542-ad72-2eb9b100ef54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bded938-9f81-4865-8ce2-1064c05025d3",
        "cursor": {
          "ref": "585bda2c-70e9-4924-a0d2-2d4e04938784",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d3524a9d-8508-4389-83d0-e0857a2e9df7"
        },
        "item": {
          "id": "8bded938-9f81-4865-8ce2-1064c05025d3",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "7f6d7402-a96d-4b80-9ba5-1288e5c44e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4dec2c-5cec-45f1-b288-d4827803590d",
        "cursor": {
          "ref": "b9964d22-ba66-44ac-b02e-540c55303d53",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "98090461-928b-456a-9ddf-527cf85d9f9a"
        },
        "item": {
          "id": "df4dec2c-5cec-45f1-b288-d4827803590d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "319b328b-1bad-4da6-9e8e-903a988c9b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2814b0-db72-4b52-acab-1a166d9f1202",
        "cursor": {
          "ref": "957f2182-df35-46aa-86ba-893783e713d2",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "1df4ba58-d53a-41c5-8200-a9fc198d8b56"
        },
        "item": {
          "id": "af2814b0-db72-4b52-acab-1a166d9f1202",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7eeb9ab3-d418-4a59-9d2f-65895149d1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23d1f75-225a-4a9f-bea0-4775de27c5e7",
        "cursor": {
          "ref": "d9f6c7f6-adb3-4473-92fa-afc425b15755",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "847fffee-1735-4de1-9c29-0e644f9cdff0"
        },
        "item": {
          "id": "d23d1f75-225a-4a9f-bea0-4775de27c5e7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "26b002ae-b45f-4c67-8532-a449be8c29b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b61a4d-69f7-49c5-9e88-cb373524da86",
        "cursor": {
          "ref": "b638bfc4-e51e-47fa-b6c1-592fc0c7b395",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0c220061-8d8e-4249-8b19-82b972df7369"
        },
        "item": {
          "id": "13b61a4d-69f7-49c5-9e88-cb373524da86",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "03c925d6-b7e9-4229-9596-c0a56f4b477d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5ff6a6-0e38-4933-8c27-6330c9dbd30b",
        "cursor": {
          "ref": "801ae110-c3fa-475c-9318-ff2fccaed3cc",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "958054e5-0a48-4534-8fb7-ac970965b59b"
        },
        "item": {
          "id": "1b5ff6a6-0e38-4933-8c27-6330c9dbd30b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "14118570-f08a-41d6-977f-2a8bdfe1ce34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14849df0-cac4-4f2c-8c66-e51836fb7aca",
        "cursor": {
          "ref": "700cc699-763b-43bd-a577-3a0668c78840",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fcee6141-3da9-4a43-90dc-2a6606bd9109"
        },
        "item": {
          "id": "14849df0-cac4-4f2c-8c66-e51836fb7aca",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d7f11612-bef0-4ab4-ab7e-21ece3a70490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4c925c-e00a-42c5-be9a-9db3dc440c60",
        "cursor": {
          "ref": "5acd92ef-b926-4d15-b208-a8de44f75ade",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7d4d0790-9795-40cc-9207-df2c7cacdceb"
        },
        "item": {
          "id": "2f4c925c-e00a-42c5-be9a-9db3dc440c60",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "fb18e500-e9d6-4599-97cc-2a5bb23cc86e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba931cef-059a-400c-bd42-25b35b1f2696",
        "cursor": {
          "ref": "fa8c40d5-a87e-4e34-a171-8b12bb2e6432",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "27e35eab-33a6-46b6-9e10-53439a4ecaab"
        },
        "item": {
          "id": "ba931cef-059a-400c-bd42-25b35b1f2696",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "10f09737-f2b3-43e9-be2a-c707fd5ac5ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f12460d9-6e92-4cd5-bb70-e3d4bdc412be",
        "cursor": {
          "ref": "e1cd784d-573f-452c-bbd4-02bcdbcb7c58",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "efa5cc7e-b532-4f7c-856a-95fc2c5b6622"
        },
        "item": {
          "id": "f12460d9-6e92-4cd5-bb70-e3d4bdc412be",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8d169ce6-d92d-44db-85ca-8962337fda5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9d752e-221c-4939-ae35-c076e788e1d0",
        "cursor": {
          "ref": "1c712dec-1933-4119-8dfc-692c6a6a495b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cab00240-1e09-4576-927a-fea2d6aa3b38"
        },
        "item": {
          "id": "0f9d752e-221c-4939-ae35-c076e788e1d0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "50fbfec3-b205-42e2-90a6-0feae1d22f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6109d607-debc-49a6-9056-e97d46342c18",
        "cursor": {
          "ref": "d551c8fe-e93a-4335-b1dc-19b04925caf5",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "455699c7-8cdd-415c-a6ec-b85250ca7f8d"
        },
        "item": {
          "id": "6109d607-debc-49a6-9056-e97d46342c18",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "800ad7e1-0545-4ffe-bc20-5b0ef61c7a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7991c187-db1d-40d0-b6f5-bd8a36dccf15",
        "cursor": {
          "ref": "289f5425-47e1-4a61-910c-4d083144df2c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f8bcd046-56d7-4cd1-82dd-d46ce3befd0e"
        },
        "item": {
          "id": "7991c187-db1d-40d0-b6f5-bd8a36dccf15",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d660c0d2-a259-459a-934b-024122ae6d6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18161c91-0ce5-41f4-b84f-1654a1c84c96",
        "cursor": {
          "ref": "4ef50aa1-bd60-4700-8f41-d9c3b1b29dcb",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "1fb8df2f-d050-482c-95d6-ec05f38b2a9a"
        },
        "item": {
          "id": "18161c91-0ce5-41f4-b84f-1654a1c84c96",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "477c4fe2-8332-47a8-a0b0-d0db2063c56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023afe48-e3af-44f7-90d4-ec9caa51361b",
        "cursor": {
          "ref": "ba5a3049-269f-445f-90cd-d368436522f9",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d09ea747-de39-4362-b1c8-29829f883634"
        },
        "item": {
          "id": "023afe48-e3af-44f7-90d4-ec9caa51361b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3286c06c-8df6-400a-8a69-fe567dd1a06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db630af-f1c6-4433-ba1d-eea71ddc583f",
        "cursor": {
          "ref": "e1962ed9-a8f0-4d5a-ad61-17baa4382e14",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d54b7ed0-c220-4bf4-8d07-02b3dc6fbe4b"
        },
        "item": {
          "id": "6db630af-f1c6-4433-ba1d-eea71ddc583f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2c298dec-cc42-43af-a434-9d612cf5b219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ed879c-2de9-45db-87bb-e04d71c35258",
        "cursor": {
          "ref": "90281e93-a9a0-4979-b0cb-6cbe4a05b295",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7ae9f9eb-84f5-4a16-b670-ba71804d6332"
        },
        "item": {
          "id": "13ed879c-2de9-45db-87bb-e04d71c35258",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "6a4e1ad2-c56e-4508-849a-0b8af7aae317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a00c17f-e427-467e-b825-2e3b32bd0fd5",
        "cursor": {
          "ref": "9ad6b871-d013-4244-b0fe-33dcc5c10ebf",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "059c223c-4a81-46ba-b670-48f36247c279"
        },
        "item": {
          "id": "1a00c17f-e427-467e-b825-2e3b32bd0fd5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "7fa47868-77d2-4e77-bfc2-80efe92ba5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fb8e15-c0c9-49eb-87db-5c19c7251570",
        "cursor": {
          "ref": "88995d9f-2c87-49ce-ac8d-e8ad50e41395",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3b435667-8fe8-47a3-9af2-62bd62441250"
        },
        "item": {
          "id": "d5fb8e15-c0c9-49eb-87db-5c19c7251570",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "078cdac3-30a5-4e4e-bf1c-f607569a0885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721cb044-a5cb-4324-a8a9-756e1fc55d06",
        "cursor": {
          "ref": "832ce25d-66ff-4896-8ca3-d8fac117359b",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0330e76b-8b2c-491a-bcd4-7ec17b46e0be"
        },
        "item": {
          "id": "721cb044-a5cb-4324-a8a9-756e1fc55d06",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "396e3f4e-22ce-406c-a980-56229f5eef95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647c3ae3-dddb-4e1a-916a-3de417438d39",
        "cursor": {
          "ref": "f61a0e49-5d65-4224-81f8-36f7e41ba967",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7309a463-1746-4d62-b1c4-5b7754312980"
        },
        "item": {
          "id": "647c3ae3-dddb-4e1a-916a-3de417438d39",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6a7fe4a4-2fa5-4f21-938d-d576b61ac8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d57c781-fb31-4c5c-a070-7e84489ac4bb",
        "cursor": {
          "ref": "cef92da9-4284-40b5-824d-c74fe36f6d04",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e3a7a69c-45c1-4ef4-b38d-206ba27916e8"
        },
        "item": {
          "id": "3d57c781-fb31-4c5c-a070-7e84489ac4bb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "734c965f-42f5-4463-9b46-6198c9782f7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9175c0c3-26d0-4601-87ed-decfd2233787",
        "cursor": {
          "ref": "68da9e20-84af-4002-bca3-dba495e2da88",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "cc381cb3-b5c0-4848-81be-9dfbbd48d0a7"
        },
        "item": {
          "id": "9175c0c3-26d0-4601-87ed-decfd2233787",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9a5a17c1-1426-480a-a2b3-5188af8eda0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc467266-66a8-407d-a107-7ca1b521b43b",
        "cursor": {
          "ref": "eae1aa07-0c2b-4022-875b-79454b961da0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5e15e88f-93b9-4b8e-992b-ea8457256ddf"
        },
        "item": {
          "id": "dc467266-66a8-407d-a107-7ca1b521b43b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "11b7c596-b551-4f11-bfba-deebd89bef63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a7388b-842c-460e-891c-ed32170dfe55",
        "cursor": {
          "ref": "93360ee5-c190-4c6a-baad-a2670e5ec93d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6619b500-a232-4bb4-8292-4def35093608"
        },
        "item": {
          "id": "b4a7388b-842c-460e-891c-ed32170dfe55",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4cc2c666-4e50-4b60-849d-ec3d3072fd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67520fc7-51f9-4ec7-88f7-2daeb3e52187",
        "cursor": {
          "ref": "6a76eea1-43ad-4e6d-a330-692468ea0c0a",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c589ef6a-7c32-4537-9102-a7ed9e041701"
        },
        "item": {
          "id": "67520fc7-51f9-4ec7-88f7-2daeb3e52187",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8aab2799-39f0-42d0-b807-c0119dde6f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a6cb44-073a-4838-9486-c54fe07e58b5",
        "cursor": {
          "ref": "b2b1dabb-7aa8-4a5e-891e-77a45bd6f711",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f15ad5ed-0b42-4b71-b5d0-6544b064b8b0"
        },
        "item": {
          "id": "c7a6cb44-073a-4838-9486-c54fe07e58b5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9662cf00-2c73-4e58-88c4-4cfe17c356a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49e5ca7-8652-41e1-bf7e-858d845cca9d",
        "cursor": {
          "ref": "57ae7ac2-58ca-408a-9207-56611b740a89",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "84d3df2c-17dd-4fce-a416-ed39799235b4"
        },
        "item": {
          "id": "b49e5ca7-8652-41e1-bf7e-858d845cca9d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "06d73f40-6ba5-4eb3-b17f-930965ab2f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0bc3b1-e814-48b3-a473-cc136ab7577b",
        "cursor": {
          "ref": "37ebf5f6-38f0-4736-878c-70e45916e72d",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c4cd773b-078b-4fc5-9408-57fba744ed9d"
        },
        "item": {
          "id": "1d0bc3b1-e814-48b3-a473-cc136ab7577b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9fab7be0-e85d-496e-8c91-291011dd934e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66384101-3fa9-4fcd-be03-726446a8128e",
        "cursor": {
          "ref": "7e6bf817-4b10-4964-b6f5-021dd41ee004",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d0331e1e-f990-4417-840c-4e0f69a80312"
        },
        "item": {
          "id": "66384101-3fa9-4fcd-be03-726446a8128e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "41d854f6-9f1d-4d6b-adf8-f608bca81c48",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518a70f5-3f02-4b2e-8c35-268708807493",
        "cursor": {
          "ref": "c690b888-3e14-47fe-ae0c-edc85db682bf",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "aa73afd5-6ae4-42c5-9689-d8a0e2213579"
        },
        "item": {
          "id": "518a70f5-3f02-4b2e-8c35-268708807493",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "565f426e-fabb-4aae-9c4e-66862ac88691",
          "status": "OK",
          "code": 200,
          "responseTime": 1936,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db60637-39d3-4056-9a4f-af3389d9c465",
        "cursor": {
          "ref": "b8cf86e1-3c15-42dc-9063-993686eaf4ca",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "7d24e5bc-60c2-4116-a636-abb13528db06"
        },
        "item": {
          "id": "8db60637-39d3-4056-9a4f-af3389d9c465",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d2512a4b-e07f-46c2-b86e-8e60e7eba133",
          "status": "OK",
          "code": 200,
          "responseTime": 3144,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec199a15-53f1-4001-b025-93ec476dd608",
        "cursor": {
          "ref": "1f922195-6909-489d-86b6-1a3bdb142d47",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c419d960-fe4e-43a0-9618-548ffb3c3269"
        },
        "item": {
          "id": "ec199a15-53f1-4001-b025-93ec476dd608",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "32724003-62f5-415b-b342-df90a69f0abb",
          "status": "OK",
          "code": 200,
          "responseTime": 3168,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8105ad99-6071-49e9-bdf1-6fed1692315e",
        "cursor": {
          "ref": "9de7b445-6177-4804-94ca-60dbe6e367e0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5169b2cd-ede2-47b0-8249-f3b1b9c5a42b"
        },
        "item": {
          "id": "8105ad99-6071-49e9-bdf1-6fed1692315e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afafaa2e-196a-46ec-a201-dd16c416f246",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8105ad99-6071-49e9-bdf1-6fed1692315e",
        "cursor": {
          "ref": "9de7b445-6177-4804-94ca-60dbe6e367e0",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5169b2cd-ede2-47b0-8249-f3b1b9c5a42b"
        },
        "item": {
          "id": "8105ad99-6071-49e9-bdf1-6fed1692315e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "afafaa2e-196a-46ec-a201-dd16c416f246",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366c3131-f53c-4448-89b2-0637c811333e",
        "cursor": {
          "ref": "248fc4f8-8a9a-4a39-a646-08af296ab7f6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9f51feed-6bf6-4359-b617-6c2ba8072045"
        },
        "item": {
          "id": "366c3131-f53c-4448-89b2-0637c811333e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1c635adf-fb84-40b6-851f-e0d24ea981c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4be68d73-ec16-4b3f-ba87-47712b82a521",
        "cursor": {
          "ref": "43650959-7a19-448f-9054-bceac85c098f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "189554bd-7244-49a1-a5ef-1945c8af8804"
        },
        "item": {
          "id": "4be68d73-ec16-4b3f-ba87-47712b82a521",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b10e1967-5482-4c3a-9ce4-0734b2c3cf30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}