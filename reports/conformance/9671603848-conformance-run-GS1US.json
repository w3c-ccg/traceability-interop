{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "628d6d4e-8615-434f-a65e-04490b6e4074",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d0cf5bf1-57b7-49a0-a2c2-c5bcebe72590",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c4888ca5-729b-49b7-a961-07b820423b33",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8a7db875-fc1a-49d8-ae42-5c6f94856ef8"
                }
              }
            ]
          },
          {
            "id": "b26db498-ba19-4369-a060-54da0f30d793",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fded8b42-8c96-4524-be20-d6824b9dd341",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6f386edd-7b15-4bf5-b19f-7c812f1414af"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0a0c6339-ff21-4749-95ec-59771244cbf9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9b283be3-f118-4925-9a60-c8a054f59acf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f39cb9d-41b2-47e0-8f2f-3747b347df72",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08372c2c-7aeb-472b-b488-a1f91cbec45e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7be79b3d-8f54-4975-8b6e-7c29b99d6ade"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3352fadb-c4bb-4b1b-bb49-b61645aef474",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7166e6be-93ff-4146-866b-d482f7e42c10"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e7eb90f5-2512-40a1-adc4-f103acc70b64",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "652b34b7-760a-4a69-9d1c-5e21ab026ed9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e33ef8b4-c4c0-4231-b02e-a376d78dfee3",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4c2ce717-ec1e-45f6-b23e-7099040252e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c593b2ce-a059-49ae-b960-18cba84d5393",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc1519ae-68c3-42b8-822d-37808d902e95"
            }
          }
        ]
      },
      {
        "id": "15d619cb-5180-46a4-b7b1-2dfbb5d92ab9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1cc6db79-b0fe-4de4-899c-61fe233361dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e31c33e0-f954-475d-a9ef-158891497063",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a7e5290-4f89-475b-8a51-bdfe3939aa5f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b27e0c1b-ea77-47a9-80cf-f2b736ebcd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db0a65d7-f254-4b21-a6b7-be43b44ecc42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad474c-0422-47f3-a10e-bfdd133d232c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1275ebf4-6881-416f-8100-7d0182bc1563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b525c0e1-06dd-454c-afc8-ceecca2f50f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377b224a-719f-4ab9-93cb-c346f6cdbe72",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1c3d79-c36f-4890-943a-e5ca21442c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "65c6c1af-7c7f-4aa9-8e7f-d481c7ca1af9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc73f17d-a21f-411d-8493-c2ed24b25d81",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3118cb77-9e67-4814-8cd8-2b2dda5c000e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629f9456-cbe1-4003-af05-fcac745bc1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6de17aad-0763-47bf-a444-888114c133bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdacbbe0-479e-418a-91f8-8b021b817c93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72040534-43bd-4cd3-9489-c6f1dfe65f6f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f07ee32a-9efd-42e8-9214-9702c7e7dd74",
            "name": "Positive Testing",
            "item": [
              {
                "id": "63f3dd71-7835-4aba-9c05-e568ae52ed3f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17131344-285d-4b3d-adf7-08ee64f37631",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ca8a49fa-1a9f-44b6-99b1-3be39be54c31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9903852-0efc-4d42-b1c0-ba7e20eaf3f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "81899dd5-1bc2-4c85-880a-bb9a18a0556c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5428c9c2-7e42-4fa3-9a08-c1500bbd1569",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f4c2ea8-4a45-4ee7-ad3d-4c8b5bd80df7"
            }
          }
        ]
      },
      {
        "id": "fe0c3162-b5f2-4ec2-85bc-2a4d086c63d0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a75a9995-ed01-497e-942d-2cf4623c2d74",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20acae8d-97f2-4630-b487-fb6abe9d480e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "546d37c2-66f6-4af3-95af-0fb8ed082304",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50b08e6-5c47-4c2f-aa5b-107c980a3aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37decc9c-c5eb-4bd8-92a5-9e0e7947e099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbc8eec-9d28-4daa-89a0-78ff5b6f49cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9097cc4c-fb89-4e5b-9bae-d28995138c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2e2f89-5feb-4634-89c8-e4872f8e2000",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b88950c-96cd-407b-b9aa-c41f75905d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "037498c6-1679-41e7-8d4b-69851fb77307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e7b20b8-179f-412b-80d6-1100a8ba2eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "636bc101-92c0-465a-aa45-b00e0a954ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdb08a3-a56b-468e-a9d9-5f7d3d44cca7",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "557e2673-21ae-4cde-bf52-66bb2b088a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f4945c-1c78-4e24-8a0c-f1cbb9aa5fc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997d1668-f59c-446a-84ea-50b237982e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "396ba01f-2d88-4a04-919d-84376ae92b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867169d2-4fe5-46c7-a4b4-a166bf9242c8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1190e8-1a72-4265-b989-854be383e753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5360a038-82d7-483a-9b86-465364135cec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1973453-771b-4dd4-858b-c5f58a7f70d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3248e3f-ccad-49ad-805f-d551003ba41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1fb0bd-2e74-49db-9fe1-8824514d25e1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "914e38c7-3117-4e3f-ae96-bfd5ba0a02c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeced885-8df5-4f29-a6eb-b05f10c31195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca49e20d-4bdc-4384-9a5a-7f215a515d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a880562c-902a-4157-955f-e18685a0eee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ad4745-2675-4d23-be90-8ef4b1b4c36c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "babac8a3-97ee-47c7-9004-4688ea89ba58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045cca4d-9532-415d-bf5a-8ae1cde5370b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdeaa7b-3b9e-4594-8ebc-856eb12d4ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbec4a4d-ca10-47aa-8b76-96ff76ad1814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcaa950-db42-4c47-9996-d285dd365c17",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c69a25-c45a-45d4-8d56-959c2f120292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "772ac79c-e675-4aba-a807-3dc0ee0a3057"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3ba7d83-4242-413e-8c9f-7d2c73e76157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be575ab7-218b-42a5-bf14-83a8791fe6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70ba1a3-2ef5-4b56-b19a-adc0f7653812",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df00ef28-0a36-4d5c-810a-c0b0791d19aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "106c7cac-0672-4675-bb39-3901b28d8ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abd1f2a-772d-40a6-aa3f-6c51e23e2ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc578030-35f6-4252-80c0-377de529b8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e298ea-9ed1-4a50-9a33-c5ab9776c5b4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea5f7bb-bbe9-473b-ae97-4defb25f4811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894ec628-f028-4729-bb47-64d9a59babc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4479f1a9-4db9-4aa7-b294-7bf7ce54d805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55dd1490-3508-4e6b-b4ed-bebbf4de94bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1602d0c-a923-4d75-9add-a097ad39b7a9",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf3d4c6-8e3d-452a-82a4-c3b3e7379147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fc17de-3b34-4fd3-807e-299e1c30d3a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954b4ba4-6f50-47a1-b7df-c45686765fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2770a6fd-8366-4ee8-99e5-ef33d9b2d002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bab36f58-51d7-426b-8e89-bba0f9fc34bf",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0865eb8-7c21-4d46-9c30-6fd629237996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80c2a86-2ae7-492a-a6bd-7419df5c28d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb266a45-1acf-4439-93d1-873e02c115a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df0ece45-39ac-49d1-a12c-ed4a840229b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b7716c-7030-440a-a533-483c6d877f6d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8fc660-7b9f-4347-be5d-f8d658f7ce18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d4e682-5baf-40dc-9edd-4e1a6d38f43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392db035-dedb-4b2f-9fa8-5f866cf3ea24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5ed82e4-695f-4587-96c2-512c7f8c686f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8eb174-a227-41e5-9b79-e5de201d7e86",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa9803c-ab6e-43ca-a4e3-51a23120bd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1054b85-52cf-4034-a918-5089eaedf770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fa0501-694b-4734-b31c-5b72c51c0c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e061918-62d6-4e0d-96d7-c0f7aefaa0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f0ffa2-c0fd-4ef3-be86-fabcfe4db516",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5717c395-f249-47d6-b4a2-0a34ec5cb07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb7230f4-783e-45f0-aee2-2bec9ce33bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9475afb-fc91-4a3b-93c0-f64708917f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7fb13ec-ae4e-4a73-9baa-439f6bf41397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88b2a38-42cb-4419-984f-e0423b7f2643",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfac3d3-a3d6-437a-9f4e-8981b8427a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a001355-f7e7-43e3-a0c5-07878eac45d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f9f5bf-603b-41ca-b7bb-ae08bae08931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6947feee-ffce-46ce-941c-5536b208b654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723b460d-f8fc-489a-b1a4-58d95753ee1f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45c8dbc-9331-470b-8420-88c8b4f17770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e0f396-4d8d-4f93-a557-8d4ea42404ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e811a18f-a4ec-4efa-94e3-578b76f874ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3319a60c-8521-46e7-b976-edb759965ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a970a0-c8ff-4fd4-bd81-56e49bc660dc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5fde61-69e3-4476-bcff-286e5a9ece68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d27fe40-2f0f-4172-a6e8-badd617258d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8e5973-c114-4020-bd80-84124e933de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8d6e6fd-de35-4bad-a811-a5b17fca73cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4dc7a53-da8d-46bb-829e-8317daddc70f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d449c4-f4a5-42c4-b1b6-496d758c5355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3473037-9c13-4857-886e-cc1ba7452ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707d994c-e24e-4a84-9f73-3446466ab2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c06d6a-b0ad-48f7-9e0e-4f74c9cb9442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34ca6b48-94b9-421b-b96e-74b922063fe4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8645c11e-2263-424e-b216-e2cdd8b50f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e517f65-90f3-4f21-a2c8-237586c69b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c5c2c7-b8d1-4bff-a21e-b2c135757a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b333101a-2d9e-413a-9b64-01b97129c5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dca5497-9482-4073-962f-99287a53010f",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75deab9-c8c6-4703-bf51-3c42edaa82d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec93afe-3af7-45f8-87d2-98bd31e72882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fabbe31-2815-4000-be81-d8d823a8c865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09506cb7-6c90-4ce3-97e3-4af84208956d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843affa5-02a2-4444-a9f8-65664c681ab1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7937da00-ca5d-4397-b727-65dfaed271eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "269d2aea-0200-4db6-ab47-1124d75287b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c3be9c-f4fe-440a-b3f4-19db48146a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6292172-92c7-4859-b8ff-5fb083445a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7208c8-51a2-4f81-b8fd-2bfc5568112e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a935c562-cc63-48ce-8a0a-f0d9f2ed022f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2333ec8b-91dd-43d9-b939-8aa90cc41775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58bc51fe-4752-4af1-8318-3d9aba0334fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a0619033-89b5-44ed-bb28-9406c274c4fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff8402c-6210-4a08-a8a6-a21539421c12",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6be48d-435a-42b9-9f70-4144329044c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf4b00b-5c5b-4506-baec-24e9aabaf549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd963614-5e24-41db-befb-08b2aac8edbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38c01d24-0aab-4a07-8300-b6b8e50a736c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442e03c2-47c0-4578-aa37-bb8640ec001c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a723adec-f3a3-482f-9780-78468f85c625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63517bbc-beb1-42e7-b0fa-b08fffb83c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4656e6-e640-4cf3-ba73-d922b1dc0f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b914c135-91c6-4dd6-9f8a-431b9391fd94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be885a0e-1322-46bf-ba6c-3e7b71351c39",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a06af5-aa31-45f4-a98a-c7f76e8aec4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193e9ddf-c28c-4695-babd-6cd444ddf834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7431f94d-002d-4c3d-ae17-3643810a49fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d130725-8103-4a15-b1a0-95cd63795e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50e70fd-2cf4-464c-b8b4-6b570f90df20",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dff1ac4-8ec1-499f-b2a9-e8977f58861f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d53c4354-d5a0-431c-bf7c-6d40265e843a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63fb470-0b4d-4f3b-ba03-e2b77e9fbaba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc470df-99f0-4f63-94b4-4c930cb8fae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ec9bf4-5b2a-4432-be36-a6460ddcf1a5",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cbe22e-42d9-4710-879f-464f0ddc424f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fa71d1-19a2-4336-af69-572e80b18490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd1ca8e-3bf8-4ecd-b383-24d717b89f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fab1b10-a5ae-42c6-b65c-f33a1520ca0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d8b8d47-6c36-484c-9c75-c6732830eca2",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20033972-ff3a-43f8-b6fa-75449ab93207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db3e5c39-392e-4a35-a4db-3f21bae7ba38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea20491-bc31-495d-96ee-e5e75083d175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b307ac35-ac1d-46c5-8a65-05c97ce58372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de24e6c8-4d3f-406f-8488-d3ead1f2a456",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d708090d-cbc5-4c4f-8a55-064f0c2f4b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d7877b-1d97-427d-ac39-339f2eedf448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2232c0dc-fa18-42d1-91b0-03f272daa859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7246d69-149f-453d-8a2e-b3e6b4a4e035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd817f7f-7b9d-4e98-bf32-31aa2d8a8f51",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052fcbc0-cf64-45df-96f6-3414196fc1d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ba2119-0275-4ad7-b336-49fdb684ff38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e824e58d-4f54-436d-84c2-3cb54bcbf46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "580c2341-8d0c-49c1-937f-7120f6d0caa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8239af-88fa-480d-9890-40b76ccf9155",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15e5769-a814-4669-8a14-7b63ce7c96c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e14aba59-2224-4d16-8773-7021c6fbf7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e730423e-9bfc-4929-8fda-9221752cae63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "490d2fa3-e7ec-4ca4-9376-b85ac1411962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad777791-8f6d-484d-b142-a79cea404b8c",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51c71cb-bfd5-46e3-ae7b-8b23baaa7bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef90ba1-71df-44d1-b008-189925cffa14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf7e06b-cf10-47e4-bd15-49ffca228c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60b038f4-00e5-4782-b330-e92f311119f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79ddcb2-521e-4814-be21-0c28723bc245",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc9a0a32-2814-4954-8415-6653260dc279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79a5c7f-768b-42a6-803a-7b468ba109e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28517147-6491-4e5d-8624-64c1bad4e38e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d2d522-1bf2-4e95-b586-c82b2a543e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bc4fd36-7a10-4d3f-956b-5e3c32148fdc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7123e403-5c6a-47b0-98de-1ccf1b73f3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb141cf-ca9a-47cd-8722-8cd03523dbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4a799f-a8f2-420b-ab2f-faeeabc95ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7302494-d498-4024-8fd5-322a9667f065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bd5d70-48f8-4cdf-8f93-69445b4fc760",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f71e2c-3288-49cc-a148-60128c01b705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bfdca9-6361-45d5-8999-4bf4602a8829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10a94c4-b262-4f51-82ce-3fa05551bc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "29c17f12-20a9-4ab3-b545-d8a2fda81620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be45cae7-2278-4b24-8ca6-7e375ef1d649",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b319077d-c025-4fb8-aa72-8d3f6d3fd12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2885a73-561f-4a46-a1b9-5652e6d35490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baebebf-4f9d-4d2f-8466-a1d45f551b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6020b045-463c-4adb-982f-37777c8591c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75906f4-b6b6-40b4-9d18-6e77d7207abb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82f9db64-e8f2-436a-93df-0bcc7d9573b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfab58fe-2dee-4798-bf30-bb7762a12af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f306ac6-03cd-4fbd-af19-55d0a7bcdb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "efcdc9f1-6846-4a3c-8ff6-a812bcd5031d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cbcb5ec-b0bb-4083-9f5b-ddcd64d9fc83",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c33d0f3a-314b-4943-b17d-ef6079d06611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a2192b-cb22-46a2-9986-64d5b60ad61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5294fe7-1dc0-4559-9de7-b4c180fe21d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e814a629-d02f-44f0-ad3d-0d90ac1a486f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f93aaf-2cf0-4e3f-a903-c3547d9fb0a0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464d633a-76bd-475e-b6ec-4c4d5827507a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d6d0a8-9697-4393-91e1-08797011e365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df3c29f-7b11-4a6d-a388-66081c57d30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "979a0123-bd60-441b-a547-2434805f6008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4415a5cc-4430-4c6f-999d-25dedc1c53c5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83dac7d8-15b0-4b25-907b-3666d233e692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2957b79b-e595-4cbf-84d3-dbc1bc9a99b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae164dd0-ce09-4887-9b5c-928dab0113d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c1a0fa-981a-426b-90d9-e7d0c9a852d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cecb8dc2-5697-44cc-b507-a9437edf5eb5",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1ceae9-c989-46c4-80c2-116eb879a5e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83694970-4b51-4892-9cea-1054e81ecf08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f52c802-26d9-4a1a-9474-0ccb4b921a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "769a6da2-5273-4d2a-ad92-a3fa90901825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35bc01ad-ed9f-4f6c-8af9-0187bb712629",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931363d3-831e-48a1-9942-64978dbb8345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc53c8b7-a886-4190-a48b-91d42fc9b3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2b4f86-fe85-44e4-a1a2-44a3e79a34c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd68524-8ce3-4e91-b65c-e009f7a3b087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e24b22-0f40-4469-8522-bc089f42504c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab11d5a-c811-4ab4-aef4-42abc8dd5724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a25789-cf9c-47d5-aab5-217c666316cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aefbfbd-e736-4ac6-8ce9-ed60cede62f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c27f159b-24aa-4585-98e5-84d500979e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30dd61c9-6173-4620-b924-038e141f67b8",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0f7cf0-28a3-4a29-84f9-101cd036cd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236aec60-48d9-4a0b-859f-92a07978a8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedd8c0c-f05b-4802-9344-0747c75906bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "43850722-d77f-4387-b629-f61dd2c87926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af84ac06-745c-4c2b-b391-00b286410d4a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996e0eff-1905-41f5-8712-a0f2748e3cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1626298e-1202-404d-b694-8f40e671965a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ed58c6-d504-4db4-96eb-74fa67899b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aa3404c-1b95-4911-8ffa-0784ebd23ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6d3c3c-96dd-4ca5-ade1-b36474a34ac1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbc1cfe-a213-45b1-b76b-f6683d08095b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85da467a-d6f6-42c9-afb0-cacd1ed23552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378463b8-02b9-400e-8936-ff111ab8b42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efd4d461-59d9-4e8c-8fc3-98c6d3cbce52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e02503-0c4c-4424-8165-9f1f00a8a858",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580bbb80-3b74-4c27-a942-c5e34e152974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a39d3b8-29fd-4a50-adf1-dc3d988aa379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fa78b9-d543-4901-b1a5-79c34fb77e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e847055b-2127-4c16-9ae5-cdfa65a2960d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5382e42-b7bf-4b7d-9b6d-50a29b8e8616",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6883d328-a6bb-449d-833f-42bf950a881b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67882540-2d77-4a0a-979a-fe0488d89256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1cdf4e-04cb-4ecb-851d-af5c109dc279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c4c1931-5d54-4500-9ce5-3037caa5835f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9be465-6252-4a27-9cdc-17e60a837883",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedf0119-6acb-41f1-b0c2-0a5001ec7f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf07ecc1-c077-4670-88b0-d7d844438eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0287f7-7ac6-4ab1-a5a0-bd003001dc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71997343-72ef-4fc9-9808-cc781ec3cd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79b2573-fcad-44b2-9bca-61dffbe7b2bd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db39fc05-aece-48d2-952d-04309bb561ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "617a08e0-d5b0-4f03-91e6-fcf81e9c4765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863d84af-f579-4f11-93a8-3bdb086f93bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e33ce22-e9d3-456a-95b8-d3e30cb85231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f97874-6635-4421-83e9-b189f2c053f4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9971dc5-bc52-4bf6-8c2d-dc3fc2530cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e0ffb5-3d52-4d23-b223-b27d99c01b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d91b8fb-7718-48ba-a153-b91326972c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0959e93-4090-4c9e-8869-2f08af680421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cace990f-64e6-413f-a659-240da2faf55a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20b6c27-5d15-475c-b1f2-b1a5da4dcba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22bc9639-8069-457b-806f-568b3d21c0e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570d60a8-5715-4b33-8644-b524544636af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e76046b-74c8-4f73-8425-f1e23a29a1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6597ad1-16ee-42a5-a8d7-27a515faca1c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de29d60-64a1-4df4-8aab-ade797b3dd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c657c6-7adf-4c76-9145-9e942dc473bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8fff6a-bff5-4234-85e5-a45fb4d254f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b128454-a10c-429b-a9da-bf873f2845c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4f1ee5-cd1f-41e1-a695-7168502ff45f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4f4316-23d4-4c69-a880-32fa58bfed9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0ddec3-8250-475e-8dd7-eb7326f52eac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b2ad19-5127-4886-a011-6a9e5dc7f99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aded679-b7d5-4dec-9f98-4f8ccdd25a6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adaf1676-f8dc-4c9a-972c-f950f766329b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae539596-468c-41c5-b73b-be0dc0e6e406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb09731-4bc5-4e58-a372-e46a3f3c66e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb69744a-7306-47a3-b007-60a40f33c015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "338748ec-764d-4861-b69c-6caf4eeab079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c011536a-0367-4dd7-b8b7-3d320330b890",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256f0734-97c5-40be-b9d8-6130c925d859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ee1558-7a25-43e4-b5e1-3958b395ac8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08ca87d-5c9d-4716-9c6c-8a675343d463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9252f3d8-67e3-4a48-a010-30c8ba4d4012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb2cfdee-466b-4f21-8024-6bc7065afd64",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dfd5607-6d6f-4fcf-8204-d252603cc4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f7ec4c4-5148-45d9-b66b-2adf8bfe4315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1e71fa-c2c6-41f4-a9cb-04586d2e3b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f904c09-02c2-4d2e-92f0-1936aa709095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ddb197-8fe5-4279-8e73-241d2fc25a37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ed3aec-3bac-4f8a-b06b-8f531648ab33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eea27e0-8663-438d-a941-dfcd0e1faede"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342d8c37-8932-4ca3-9347-d0fbffdad5bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "af1d92bb-36f5-4369-8d01-01370c56ca97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90854217-2f2a-4321-ab28-a5250dae7e5c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c443bc-1497-489e-9dec-0d731ad6a150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ee9ff2-296e-4363-a965-7164762a80f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3450c1d3-37ed-4639-ac18-124530a6c1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "08939277-517b-4f45-b070-5bc4575a3840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adc4c96a-2bfd-464a-b175-7f9835c07f60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c19d257-4ebc-4c66-b5e2-0878428b6e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba37122-24c2-4579-8b2f-829c4a500803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f921ed0-2d17-44b0-981c-7432a608a6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "195dc33a-27f6-4271-9c06-9f62731dc2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d843818e-da67-4232-8e9d-a4beaee0163d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de682a5b-d8e7-483d-a0de-0326a6cd9b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b35f25-db7d-4580-9202-625bd6f709fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65cfc37-6eac-4bab-88b5-215f218979e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f342dbae-057b-44ae-9ed1-b457f6e59692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fc91af-f403-47ad-9579-47ef6b06176e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb72016c-9021-455e-b119-ad08d7491093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7331fbbe-9167-41bb-8c58-393cbf75e73d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30eb85f-f265-4a66-9048-7b4e45aaaf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8f0d35-f026-4866-9b64-93f1c0316560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c440e1ea-8050-46f6-94be-a16ac239af78",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638a4282-a538-489e-a926-6779f1d18c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bea269-62bf-4d9c-8b41-f415b02f56b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93a8bd45-2732-400e-8179-fe42f8c9943f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f918991b-4bcb-4d8d-8243-ac7a7112de0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43dfa61-6ae3-49ad-abda-1501f7ec0fc8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cedcd826-1bd7-45c5-b55d-e577ba4f8ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65154899-5409-4f3a-b35d-a3e9d2ccedeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163b8798-56da-41d6-8484-88a89831c167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9c1e57-9c0b-46dc-8704-4a389f3e589e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ea534d-09f9-4ad4-8e5b-a1da4635298c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "804f5370-d58d-44c1-a25d-e51b428baf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207e1f42-3985-43cd-855e-75a223b7e414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026af030-fc77-41a4-80bd-709e27baa732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52512099-02f2-4a4b-a928-4750614e682b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf50f1d9-c895-467c-9738-d97990bc964f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80828a7-cdd5-4129-96ac-5647aa667b43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0437946-3242-4808-99c5-2e6aa9a38219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb17a366-e8a7-4b16-a135-feab355bf414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7697e2ba-b22e-461d-b703-e2247082d0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f84c37e-5044-443b-badb-df143e8abebb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bc09e4-be97-48bc-89e0-5053bf815644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4215f4-818f-4dc8-94e5-5d14535433a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec7e3e4b-3914-45ef-8b04-a8ac568f9013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c9a64e-68c3-47e4-9c6f-8e8bbbacec0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43af50f2-8bcf-4b14-a15d-04704b15adbb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0eee194-3357-46b2-b74a-af336eb7392c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbe4f2d-62bc-4a1c-b661-dfde1cf877c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13305567-00d8-4355-a409-93d4100b6baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "56423ea7-faff-45f9-949d-273da374dcfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06f1f821-b757-46da-80c1-8b0a4627a554",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4313b44-da1c-42ee-b025-7b708775ce8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d9e19b-9198-4711-8a8f-5ee01246dda3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4da6c3-8bb7-4932-9c48-35256bb5a326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "df646c50-4b8a-4edb-836a-84dc8fe3c89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204bd190-73e2-4b96-bd2a-5c02266cf042",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8ac7d5-1055-4b0e-9862-0493fa5e6b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0437a5-b701-47a2-83be-b152d12ff0ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ed8196-4925-40e4-bc06-61b2cdff67ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab9a6401-d921-4640-b0cc-9a37c9446536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b5d5841-7f7a-4d48-935a-2397214cfdb4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa341c3-43a5-4c71-8092-5ffad125d365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d172d909-8957-491f-8eb2-2c00ba49b638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8296829-cb83-444b-908a-212883356f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d94b4e5-b752-4bff-b1bb-dc6c6278c642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81a09e79-b178-406c-a7ab-fbe45e85928d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08df876b-6d5d-4352-99e1-e254290ebb51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34851b07-a660-44d9-943e-1894641b92db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3c4380-6577-4acc-a05e-e6ed0ae6cfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c35bd4a-3999-4de1-92af-a399614c55ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "093d6ec7-dbc1-449f-833e-af64f2a91ea8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf5ae2c6-b035-4bd2-8a6d-cc3efee61fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f63d1dbe-9ff5-468d-b41b-c2a65bb3e52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6de1a26-6986-404d-989d-03619522e811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9490dd55-8aca-4acd-902d-1a5b33f305dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9dfb6b-aff3-46e2-ae9a-b0ea6525adea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbc60b4-089c-489b-bc4f-5ca97dd6decd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33388a8-a485-40cb-87e2-3e0689c35368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57907fc-d280-454e-9b36-7b497f4bd659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "820829c8-66a0-4eab-a366-9d161d8dc58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475e29a1-f529-4ef4-b493-2c9343660c6c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f45354f-905c-4caa-8624-9b7fe0477956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1aac5a3-f929-4e49-ab10-41dc41bc9d3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fccbcd-4120-41ee-be15-5758d8eeac20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b97150c6-934a-4138-ae45-c10f35207ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e698cf-c99d-4472-9e76-3c5a6e5a6f9a",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05c6e27b-48ef-46fc-aaaf-687b8ac63818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099f87b5-bb96-4494-b94a-a98175109a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c347b68-48b1-481e-af0b-ee37b2ae6422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f36f92-0d0d-4486-ab99-e6021eac3bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fc59a9-3340-443e-9148-45ca0b76ffa0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b16778f-8641-480c-b25b-898d1f4ba32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e028b03-b7e5-4382-b15a-a44d3fb4d6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d12183-3eb7-42d9-a914-f2a96930d64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4da46a0-ebb0-42c9-9e62-e5a4f82589ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1682eaf-90ad-4bb4-8829-de76967f518d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b80c94-4a51-4c5f-9dba-d5e1b83a1064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f44f037-91f9-4be6-9ae2-5021cb106632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a10320db-57a2-4b21-8d42-29600c025005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e979233-5afd-437c-b75d-e1fee8492522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256b8500-48bc-4afd-9c86-7efcfc63bde4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c44b96-a473-4f0c-b4e9-2eb96390905a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c026000-05c1-4b7d-8854-166d5bf8b7c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1da748a-dd71-4f38-b709-9008ff8bb62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55d651f9-78af-4fc0-99e9-b701d273545a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8d8e0a-d9b5-4126-b07e-e055646fc116",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fc591f-dc41-40d4-a231-6ab8e36be3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc06dae9-61ae-4921-bf81-5453c18b34e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8c8c1d-9c11-46c2-9613-ea3bfddb20b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51cb8434-4e1d-45cc-b260-4f08d19f8371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e22dd7c-a09e-481a-aebc-978dcf642e76",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c996627-448e-4fe2-a170-d237f33366d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79aa1b34-2c98-4562-89d6-78c7dd235d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b46b5bf9-6320-4dca-93a6-0d618b7fb7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "271bfdac-96e1-47df-abaf-faf3013247a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f1e8d2a-5528-4fbe-8dda-ddd2eff488d0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f5a69a-76de-4263-bd56-2b94ef5b669c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b60181-35bc-4a1d-8560-e38c4fd51109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbe42c9-1d5e-4938-bcea-13a30fd31f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bad83bf1-4313-45ff-a392-7df897ca6223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f37de76a-c0eb-4087-a87f-a3e784113bf8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693aae86-3426-4a12-a8cc-aeb48ea45230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffd2747e-f507-4062-840d-a0f71b3e0171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64c8948-e2a3-4a6a-ae2c-e427139a9ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adccbdf1-597f-4d96-8078-e89745940fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc07d18-b25c-4b75-be11-d2b31a1b11ec",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc9620c-fd21-4e86-b836-f78daa01ae66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fa04d2-93fa-4b35-997f-8c3cfda56bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff349eb9-95c4-47dc-b15b-4472451eb300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f73d7af-ad08-494d-8aa2-3770490595f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6343ad46-c6a4-42b7-81b4-73e73e24c029",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b50e5db-4c96-402b-9d58-af3dc53bef01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e5c095-431f-4464-a5aa-2767e4c2b38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c3fcfb-49f3-43f9-a62c-d6f9d07f3926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18b0cedd-c341-4b46-96fd-fd18a21c5735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c162201-e9af-4dea-a282-4657a5853932",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f878a9-aa02-4076-a9c1-1c4b89fd5b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fca67f0-9765-41e5-8c57-081897546ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab742410-dbaf-455b-bedd-f10aadd040f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a52f9cb-edf1-4251-b7bd-5e178c0b0b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4138f590-2734-4d25-b5e4-e919cbc1b5b0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055186fa-b7ee-4bc4-b62a-937d0693fda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dcf49cb-c3da-423b-88ff-a88fcfdcf1bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1fe410-5b4e-43dd-9ce4-1feb30eabd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fc77554-c0f8-4d7a-93a7-6bf21feddfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace5ec35-4256-412e-ace2-f3ebd4b93fa8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e969ed0-4569-4f4d-8265-2a631ac7625d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecea0069-623c-4880-b850-501fee5b388e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d21934-3892-40f3-8785-a25d9f87389f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "04b9e3d5-725c-4684-a83f-a29700c0e1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70176735-a0d0-484e-b7db-32df77de0108",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c318ccdd-9e72-4e94-9dfc-696d6f6bf4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19fa2fd8-d13e-4a7f-9a05-58a007231840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1036948b-3c27-40f6-9618-de4d269a377d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3603b02c-1067-4c48-a137-c6a648f334a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141d31fe-f60b-4dab-9786-2d2bda43c5d7",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146af114-4540-438a-a188-b45792d376d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7198470e-356c-487a-b8bc-e12799501abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75aa1160-d874-4038-9250-507bcec2c842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c045d5b-8b71-47fe-a1b6-7fa1434ef35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed12824-4477-429d-b165-5de7cdb52b8b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2523f6d7-9f3f-4734-8382-390365ff2371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334a3a11-f705-4571-9033-882304dedd69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62beadb-0b35-481b-ac16-019f9d92c9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "79245ed5-6267-49de-93fb-f663127ee439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9743aa0d-51c1-4961-a010-3b2b9ada2358",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55ddb18-2801-4f1e-ad44-9890feeab560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "11cd4383-1635-45eb-8dea-6257d6f84352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def56268-9d70-4a00-8078-60ad27dc9127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "49bef459-60fe-4d50-9d9b-8ea0947f9463"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ccbda80a-1e61-4dcf-a90e-1cebf6ab3ed5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9d309656-350c-4198-beab-859584cb2610",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14b412d-83e6-4ef3-819b-aa50b73a4003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdaa3bd4-ae2f-4ab9-b2eb-f4aaf5be072c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77d713ba-0c52-4fd6-8e5c-a5e48c7342bb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90b6c23a-dad3-420a-a8a9-8a2585b874b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2994c4b-ce36-4a2b-8f7e-f5b261c40440",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97ede2e5-7931-4c01-9d64-6e84cab8db8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9972065-e43a-46b1-90da-0c2cb24de0c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e795535-c691-4109-884c-d3ae7978807c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "70c69531-85d9-4a8b-bdbc-8d0f478224b6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6845bcd-3356-48af-ba13-abaf1e2da944"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a3f09091-9e37-4250-b251-f7b1430c36a9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c567e212-4ca2-4207-8429-6ad86203af56"
                }
              }
            ]
          },
          {
            "id": "cae084d0-66b6-4b07-8cfa-f93936466847",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a3749779-2db7-4790-8a81-f0f57dd7f75c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bce1cfd9-9ff4-41e3-a342-39e5f2deae92",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c83f9dfa-5954-4cf8-885d-0f1f0a891ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c9963472-0437-4cb3-a957-cd0d769c9be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baaa40fd-8373-45bb-8f55-6f4d7b97e4f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a55c845-6716-425e-96bf-ccd15164a6e6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ee689f41-5054-404a-a0f9-2fcac884fdf9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f2ed8a4-fdfa-4909-a04a-9cc0ae4f1d28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7894e9ad-4d08-405a-bb9e-309ef4fc6fe5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3b186920-40ec-4ea3-a36a-c23a34d3d7f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "21618f55-3157-4f3a-8910-7bb26e6ceee9"
                    }
                  }
                ]
              },
              {
                "id": "afc6e253-1358-4c41-97a2-a5e4ec1353df",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e45e02c5-e8d7-4539-b3a6-5569dc8c46b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9cb81492-300d-45c8-8b1d-f3cf11be0709"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "025f12bd-d93c-4be0-a4ad-f3837b446f88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2ebe5c9-8710-4468-b08b-76f503b158e6"
                    }
                  }
                ]
              },
              {
                "id": "623d58af-f155-48db-ad35-a9ee0470dfcf",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89e9f1bd-1313-4114-ac61-88074d10cadf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1b732501-7540-4c1c-8a58-d6c71589d507"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cbe1447-2924-4272-82d9-5cfa951e8e0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "39e76761-6e8e-4a8c-9457-ff7254f3b029"
                    }
                  }
                ]
              },
              {
                "id": "07d2e0f8-2c84-4fba-ab3d-91949a31456f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "940eb2e3-7daf-4ed5-b069-d4490eb6bb7e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df0230ef-f9a1-4f75-a157-4e5b189baa0c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ead2525f-187f-427e-b675-1362da8d07bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f41c618a-0e66-4d81-8682-66c2826e0874"
                    }
                  }
                ]
              },
              {
                "id": "f19774d5-b559-4f21-be5d-c958ca55cf6a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "854c673f-5447-4b72-be19-ccbe67d04fbe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e284fb9-0c7a-4723-a421-590417f3b67a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0faae01b-fa5b-4b16-9eea-c66f62e027d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1dc5cce3-3040-4066-9d4b-ad4de668518b"
                    }
                  }
                ]
              },
              {
                "id": "6b126315-783b-47bf-bd00-ec4a5b7989d0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "866d06fd-7814-4911-b2b5-0604ac50e6c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "852c9112-6252-48d6-be01-d07646e8ffab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb7dddae-c26c-4822-a723-013648807aa4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0670ff3b-1e89-4159-bdaa-fa252356241a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d9505da-9317-4f54-bc82-c91f76f4b6a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f559378b-dcf3-4e40-ab35-9a1e69b9a37d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "82951aee-587f-485b-836e-89e8f69c8f00",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3a4dda64-fdde-4321-bcde-eeda8c66d613"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bed3feec-3c3b-4ed1-a134-e9da5f3bb274",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "644048d9-77f4-4a55-a6d9-0f4b248e405f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed2e6b07-c2a3-4a54-b159-51a2a7052762",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7d561f9e-4666-4c24-92c8-74e98d342230"
            }
          }
        ]
      },
      {
        "id": "a3afcd6c-fd84-4a2c-9bf7-ad66373a32d5",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ab199103-45a6-4753-ae00-376dfc390bf1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ab64033-5515-4d5c-8e0f-703c9d974b89",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "084c963d-893f-41da-8db6-56a58d9b070b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "115baade-a432-4826-bd30-2e1e3187ac31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae075f41-f376-4b0e-9922-ddd2a88a44d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c75e3c90-6685-41ea-818f-5051118e52f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3b46db-b53f-4ce7-becb-f2387c480f63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d22eae2-569f-4322-9016-f0c55ca09cc1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b21d0f-90f1-4eb0-84c7-6712644073e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b33f7e1e-5927-4a5a-9120-9c4d9000098a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f6f62c-4c44-4d3b-8c25-4499854b2da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28cec984-6d89-41a8-b4bb-f6535fe0a379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f3e1c4-fbbf-4e58-86c4-9c6b4daf8175",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a9a8cb-4e83-41e1-be0b-17540c8c4027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319c1ecf-eb4f-4fce-bdba-7c345cb7116d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9b34ba-e7ba-40c0-811e-ce80648fd1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13de3fdb-7aaf-4c18-ad67-3ed1e149dc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba1af95c-0ba0-472b-9e05-2e9755b2b486",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59282ccd-cc4f-489a-b271-9f13e5088478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a836e9-134f-46dc-8276-0442763198b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2a13ca-1063-418b-8ff2-d46f693732f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5735ad8a-91f2-44ab-9184-79b443851ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455bad14-8e1a-4f93-991f-a257523a86e7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e9f236-2288-4e7d-ac95-f26e5efbaa36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d65deb5a-de54-423f-9e96-7c230fd70264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d6963b-0b2f-4680-89eb-0e3ff4a34dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d6c85d3-2293-4793-83cc-61bf3c3c985b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab53887-ff03-4cb9-b264-cd98c2950480",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13ee468-6275-4f69-87a6-5d88f07fef0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad05d4b7-1c0e-4733-836e-ba0f6e74510d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35ca030-521a-419b-a1af-e9155968bd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "98c8604c-0f17-40c4-8831-f4d6148dd8c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c8a305-0d93-48c0-86c3-a26990f4f276",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9713cfc4-3a27-4a4b-b176-943c60cf7e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1094d54-6dea-4fd4-b50b-4041d4969cfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab13f213-8f13-4408-9e05-d5dc3a760769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1dac4d5-0e55-436c-a0f8-234b18127c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea8badd-cb16-472d-abac-6aa8317067b3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f306c83-a6d4-4696-9c59-c8d1fa372d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f9a961-e8e5-4acd-b64b-68fe670a8d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18cae94-463e-49fc-93bd-880561959672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "afaeefd5-ff58-4848-8f69-ad6518c573a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a830ba4c-adc0-4984-9142-287b97ddccac",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c87360b-6de1-4d78-9257-709384eb69ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb9150b5-070e-4c64-b816-665d5f930206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e873a261-7b73-4733-bbb7-bc0ec64f0289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b987d01-21e1-44d6-8630-7e07c2fc8c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373301b6-f7f0-4c95-8521-bb3b1c002af3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91fb6dd-4faf-45d9-966b-7c6b2e9084a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96eb06ca-5656-4668-96d8-80a7105bee99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f4f1b3-1723-489a-8be4-d29007d1bbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "efa54523-3113-421a-962d-16b2d1c1c665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7496d0-650c-4704-ad1b-39c2c595dcdc",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd97a4e-e381-41e3-8737-240f4d19d36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d5ef68-232c-4438-b819-93a58211598d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc77987-eae6-4a2b-a3dd-ea57d9b2c408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6921090b-4294-496b-abe8-621cf97940e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da460e2-f0e7-4f04-aaae-6823f5fc3e61",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583bcc47-de90-4819-8355-2a62136b23a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4237b3-44ec-479a-9bcf-4e6f72d4ef50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c2ea34-d987-4dd4-a211-5b32f305d625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "884b3bb9-e368-466c-9451-190edbe3bfd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c350ba-3795-4276-9c9d-0b7970d6b9eb",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef89d44e-995f-4640-8ab9-ede03fcf7352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe5bf1c-c1cb-4774-9bfc-d701304aa98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff07f57-779e-464e-bc0e-3cdd51f13116",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f188cb54-209c-412b-8d26-25be8330da8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b440ca1c-fbee-418d-bf51-1755fa084a95",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb39267c-accf-40ca-b447-f59aa820d900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7f069b-bee8-4421-8e9e-47ba8d2c86c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1334651c-c058-43d7-9e36-d4b3f90f66e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b69c46d1-2472-4540-a0d8-91638b0eaa41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a296ee-1cc8-4a6e-9980-4de741b0c78b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f18611cd-1a81-4983-aa9e-79d1bb7d1002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510e8fa3-25d9-457d-ae2f-16325712cdb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ae9a46-dce3-4cb6-b6c2-25ea1b125e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0386f9a7-a1cf-477f-9d0a-bc13548c2454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d3c6b1-5bc4-443a-bbbe-d65ea4f29992",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc74218a-8fec-4533-94cc-3e7f25eed02d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1da3c8d7-b937-4046-9a2e-bb6627f10923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16bf2b9-2d59-425e-9a79-456e426d0149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "691def33-a0ed-4ca5-8c99-924a73a18687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e414adba-4d6d-4905-a607-0aca1c79c198",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9bc0fc-7321-404d-bdd3-c72fdef3667b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d12887a-fa8a-4fd4-aaa8-c1bfc5161d4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2979f18a-a55f-4f9b-9b9c-fe29eeb1259b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c519b61-cf78-4dc1-b5b6-694f5b073973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab66069f-b926-4831-be37-fd582a75b442",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf99965c-8290-47fb-a50f-32638b179243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2d076ba-2e9e-4e4e-9b3a-bf4a16e21a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e3ceba1-b515-4543-b99f-e5b5ce91f4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "912df06d-9483-4b89-8a8a-73ec24b00245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f31fdb-86d0-4637-8d18-e6f853e4e2f5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ba9c2d-0239-438c-aefe-f3fead945b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69bb203-b578-4d52-9515-4dcd0da176bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8fbdb05-cee8-4b32-b8b2-d212962eb95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f46845-82b0-422f-84f9-202d949bb4d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9c8256-f479-4a3c-8245-db2a100e7cce",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49f7b59f-fd36-45a1-b079-a0fab30d785a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3c6c4f-2145-4db1-a39e-f64f7c1f99ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b81cbe-8191-4f5b-9e53-1c74056cb037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55f14cc6-ec44-48a1-a155-ca7baec4b8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc2e464-6876-4caf-93b3-ad4f0b0ee05f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7fe3c55-00b2-447f-98db-c3420e16c267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6091dc-222d-40ab-9c9f-d87d556c7907"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f079e0-1c47-430c-a4d4-c7eefd3434d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f24c3878-0a2a-4fb4-8545-dab71bbd7b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670e9b24-e129-4de4-b07d-7b0a2dcf12ee",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78c5b8a-6c17-4642-bd68-81e3cad4c041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacc2ebc-3ac0-4ed8-8063-a6fb5df81436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8829d094-3fa0-4fa6-8f3a-66a555c246df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de210fa3-3fa9-4b81-b584-b9d6527e8328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227a0b37-91d4-415c-a60e-708f031ad918",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ac8bd0-eb2d-48f8-a467-86457917e9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "440c7053-2871-4fbd-8346-a62f749ea660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa09a89-eda4-43ac-bc15-c89e404e2d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e894cb8-81dc-436f-9d6a-edbc98522535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dbffa3-2e53-4b8e-81ba-a074050cd3ec",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0eedf7-f1a6-4fc0-9f10-b61af3f639a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08590b90-446c-422c-91a9-a148f7b21213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae526ce0-6786-41dc-bbab-b1b7863397e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18744db0-5c71-401e-9ffd-51f04a7de2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d8d731-956c-4596-97a6-e2bb7b74628f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047ec46a-1b71-4f85-a2af-af2c6373a898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c36ff71e-7639-4e69-966f-b1c8845fd6a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c2bb42-ddde-48bd-83ab-917ebf4b232e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac9a5cac-6c69-4085-bc19-ec1bc999b1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f23cf36-6b77-4fbf-b040-99aab2c0c4df",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c71220-fb6f-4927-be6a-31ee8ff992b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd5a5ed-1ab9-4b99-a25a-f857afde21f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38bf0c1f-8299-4690-90cf-a4651fa40139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08e2f7c6-9095-4cec-8e2e-9ff4a68f8615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1eebb3-d634-476f-92c8-fc1ceff710c2",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2936d95b-519e-4351-8853-cd97a4ab856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33dbab32-affe-48b2-b0be-091b28e3a706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff65c98-d9b5-4a11-bcfc-738793a41467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d36861-5960-4461-a39a-d6cc54e4a726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8343a9f9-1bf7-4181-a15e-b38df45e62dc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07af4b04-e0d7-46f8-9c44-ef9297abe454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e88be2-c22c-426b-8d51-3e9153ac16a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27545c6c-5a7f-404f-8464-07b0f142d009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8da5d0a1-c157-47ca-8c20-2f737b124e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d5b299-7639-4d07-976c-68c6ca252953",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c0dee9-7581-412a-9f6f-cc45b66c531b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcdbf8ec-b159-4adc-8afb-c00cfbe708d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187bad89-22bd-4f06-9b9d-4ead92fa178c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5831712-9b30-4b1b-96d8-c3e240fdb941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b426b82c-534f-494e-8408-3efb4aa9bacb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5b5271-bf6e-453f-9cb1-f17a9ad9f094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d3ae7c-51ad-4a85-8489-9878f826b11b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96df61b4-8b5c-488d-b6a2-d833afb80f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d1f7f4-aa07-436b-9bb5-0ae0a08f70c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c061290-dc64-4466-ac8c-3fd59f0dc7c5",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66c2617-cb05-4254-84e1-5f546ca49be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68348ba-bbc7-4888-a3ae-97eadfcd2286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76769861-6182-4e85-b2c4-9277d742b8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7657f639-5e98-4abc-b6ec-3cb17a497fcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400d4e66-aa40-4db1-9f37-42e82ca7c4b8",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2da9d04f-3100-4e07-bbac-af0d8316bcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dc9f601-0066-40a7-8e5c-15547bf13167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ad7149-392e-42fd-8a4a-2150fa9939b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6d2d02-2c6f-4d6b-b0ae-8244773bd9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a843842f-bc5b-498b-afef-b06948b5af4d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0f70ca-3c37-4ab5-b21d-f32e9780f5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5df9657-99bf-491e-8a6e-b9080d553d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2fce18-f3ae-4036-a957-151d5e0ab146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6dbb559e-3d04-441b-bb90-94fcd7398441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aace46d1-6810-4f1f-b36b-e7308f162740",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd81a4e-5ff2-4cf5-b3e1-da4970b7b11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c25848-758a-4d4d-9384-7990e4b83fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b91a504-0b6d-4957-ae36-3b10d623245c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eed47047-0fe6-4f4c-b71f-f3c82121679f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555b901a-428f-4603-9c83-801b4f37d634",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096fa7e5-44a9-494f-a28d-01eca2f5af3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12ce83ff-61ff-4cb4-9849-de43ba703af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6e1f9c-0ec1-4cc4-aa03-956e91b2c535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34db18da-6532-4e95-a273-a8a075211cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717870cc-fb15-489b-916f-12545f69bfcb",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16d9d7a-791c-40ce-b4be-8eb8168c0ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c938e42-a6cb-44e0-a525-6b70ec25f2ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4362d1b9-8154-494b-9cdb-db17ec89c35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8019c584-c625-4e52-b4c7-28a9758f356f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bda68b4-e8c7-4903-857c-1b25f78fc90d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db6f8621-13e8-4515-b488-3e37661c1478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcb4549-7f60-4d5b-8cfe-8b8819931cc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572fd63a-d030-42cd-899b-c09f443890d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d4569f-35ec-441d-8cbb-5e6fa0c0a614"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69ef5497-9762-47b3-bb58-c449228dd074",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f7328f1f-aed6-4768-9ac8-2b2adbcc5cb4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94476cc2-8245-472e-8526-15dbd803ddad",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "830377e4-f0c6-49e6-92c8-db9bfe9f3788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "872515c2-7338-4c3d-aa46-443cdbfe8da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3eda1d64-bfd3-439d-8b2c-eb936553ecf7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f0765e1-3343-4058-8927-881275ba838a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c6fe13a-5803-46c1-973a-503b5384d615"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "011461ef-db1f-4186-b3bd-01ec540bd6fd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08c0b437-2e99-4e52-b84e-1e453d4cb55e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "49053d2b-36b0-47ed-a9ae-01607b0dcbb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e17551bf-dc1a-4ac4-9c48-1142f93dc344"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe6c7ef6-311c-4eee-a3ec-e50e1556d8a9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da7fd30a-486b-419c-8dde-d392400855f6"
            }
          }
        ]
      },
      {
        "id": "70d9eed3-7201-4386-b22e-067ded2af0bc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "2186c552-8d84-4ec3-be17-51f9796a8cc5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be8856c3-7276-4334-90bd-ab763cdbd73d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1bdb0a2e-484b-4f53-aee6-fa9ffc2242e9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5eab05e-3672-4113-ae89-ef652fd7b956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9742a004-8a89-44f8-8546-e1dd9a2741dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e0d481-0d16-457a-98ad-9af43939a938",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98990528-43bc-41c3-ab19-1afbe1ca83f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751749b7-2921-452e-bdb1-085e430a5487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957baba3-0f47-4664-ab52-e9dfefa5f947",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83effda3-81ab-4a0b-ba6d-9189414268e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f441c70-7132-415b-8b4a-4d3773e3b08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a575c78-4409-4862-90c9-e9e5df2cb58a",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8db12ec-1af0-4322-abec-a136b48edf25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e3f23d-4158-4333-a5b9-17bfb81abc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc27d6b7-1db3-49c8-8905-070d45eff721",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff29c4da-cf73-45c7-8436-d10d56c33344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e011cc9b-c88f-4d41-850e-3cc7b8db87f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf891d4a-f556-48d6-b3d7-69ce7f7ee926",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aff6136-a9e8-4666-bda6-91f69a2166ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e0a818-2c4b-45f3-aba4-4fa9f20a3f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88df5a6c-2fb5-483c-b50f-aa8f8b58a3f2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dca813c-51a6-4a18-8106-88cf514fbb5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddd0a78-c122-4af3-8166-ec03516843a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5a811e-5e1a-470e-a6ee-d32758f10cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed94aea1-4802-4a1b-b063-fe4e2178d86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa019aa-4868-48a9-aa0e-40ac67799103",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2cd7f6-dcea-4964-9b4b-853f43a28ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9beb0994-7832-4b6f-a8f3-be23837029bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea92ecb-1f89-4fbb-8b36-74a4b34cf4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1bcf279-d815-41ae-8d31-6d3067e1b007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca70f56-f533-4d9e-a9ae-355ee8a03f79",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433c5001-6950-456b-bbbf-a455acb4aed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e91edd5-496e-43d7-a5df-70cf2ee7ac9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ecd77d6-da8a-4319-aaa3-e55970fa53bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9127f5-5126-42fb-9ed4-793828db5617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bcedd59-a285-477f-9e65-7237a7dd0e66",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbce6746-f552-46cd-a7c4-dbe7d3f30838",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "444f6b4f-ccef-4b4a-a289-16dd33cef04c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fa2c3b-043e-4657-b6a7-d0295675bcda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40848c6f-24a9-4794-bb95-eddb5315dfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05143d7-573f-4437-a9d5-762d2ec9701a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd147b2-7f3b-4e2b-80b5-b93e135c4fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455739ee-d207-4bab-97f9-d2b16ecafcb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23439641-da70-4a94-8976-c53dddc73265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392143a3-5aaf-474f-83fc-c10d81d394d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4881382a-1836-42d2-8a8b-6ba7317c9701",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44637c4-eae7-426b-9472-897274e2afa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c5cd40-5885-4ef5-a00f-1abcf184f62e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9bf13f-9172-4bb6-a3e1-99fd994e1bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba150dfb-42b3-4e18-a0bb-64003e3b91b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7b3532-42e6-4768-ab4a-9cf83d345783",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42aec040-dcef-4f8f-99b4-06b4c4e0ac5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd3842c-cc37-4ab7-9812-47a2fbe208da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ed21e6-360c-47e0-864a-2d768972d81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387e896a-b384-418f-8948-fbb64bc5acac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8f1c46-b132-4070-8336-858e2217be51",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95f50d4-758f-4232-b047-d3233175616a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "414e3835-2c2f-478c-b83f-b1bd582edfca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374e8af3-688d-459b-8e64-ed086f4e2200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5e8cdc-068e-4555-bde2-4f188f901ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f659978-8b45-4600-8a04-28d05a6e4991",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a8d9f8-31bf-4f02-8bce-31a90274649a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fef6cc33-6722-4cfd-8ad6-da23e524d6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68785a57-d9ae-4c6f-8732-c5881fbf3e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff6777f-efc9-4f4a-9526-5c76786a4d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a91c49-9f1e-47e1-837e-0cc2bb3d739e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea74b0b-8e90-466d-8532-4f32e3935c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0760974-7080-4e84-9b18-11c9d25beb83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2440b6b4-ef39-4654-a57b-64331958dbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e863d652-fbe6-4df9-9405-d5c17f3ddfd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a734853-f273-4946-841d-41c040a34609",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574f17f8-6073-4dd5-83b9-53e3e86220e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e7cb54-a08a-40ae-8898-718cf6c29d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7bc89a8-52b3-412f-b6b0-449fe2c16ba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcb992e-bed8-4f69-8ebb-65a76d468b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5954d5c-c0a1-4854-8094-85ec3a8ad46f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e10a25-b7cf-4ccd-973a-d8fa50e3e641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a4a2d33-9e44-424f-aed5-b4b5e2edba65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae5dde3-0fb9-4ab8-adc2-110f0eadce53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265bed18-1063-4771-9305-70f3c21e5fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9ea651-cbcb-4423-9771-842374e53027",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3f8adc-e236-45eb-8ab6-3afc94979f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ba6b0b-fcb9-4f35-b55f-34ffc53eb4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0934c4f3-8ab3-4ff7-917f-954055401ea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edae3c8c-683e-48fc-8e2d-fc1970261a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4ef2b2-c97d-479c-8dfa-0e7e53ecd42f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8744bf6-0fa5-47bb-9971-edc5e2b5a15f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f8061c-c163-4c01-9fed-305e83d8e671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d718efe1-576e-4797-b12c-b1e0385a04fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa1a8b3-8ae3-47cd-936c-d9a084978f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb76ed1-bc35-47a8-b366-d86575da1a6b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df11d9e7-7a6e-4764-aa3b-626d9ab7f246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8376233d-9e2c-43ad-afe0-e2ed95690487"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab07e96a-c361-485e-bbe5-21b58b0fff2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef7daf8-f432-4fae-ad6e-5533aa22c4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e5c51c-baad-40ef-aa00-14def63b2973",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e74ad06-6413-40fa-9d0f-83fd83579deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c616b0f6-1ae7-46d1-ae52-2c7a2ef8bafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc61499f-bbe6-4e37-a2ae-d3871185fb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db883805-f197-4269-974f-4cf1b4f2c8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2c0446-978a-4c89-b347-ae70b7ac0791",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7782b544-d66c-4086-87b9-824efe19c56a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecbfee31-cd30-4774-89cb-2d2d55a7111e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34888b07-21e1-4ceb-b30b-bcc3621aa880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73bb3e89-a0e9-4af3-ba8f-952a9171a652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f816bd7d-018d-4f11-b2dc-e68de26c560d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438c858c-b4c5-4adb-b37c-e3942382b9c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edfa316b-1985-4352-ab23-b39dfbe3d5a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08364a2-849f-44ff-ac09-ef67d19e8564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc87fa23-1fc3-4c10-b2f2-3601585f6f3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dde9e0f-aacb-4967-bc79-aeda72f3f99e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33daa7aa-1294-4fa7-881c-66a6d87c0892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22a587ae-7c31-4005-b966-43cccefebcfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4467071-4d5e-4ccc-a7cf-a2f272091b5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee622c9-df47-4326-ba12-c78dccc3f1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1453cc-af35-400f-a5e9-15dc270b5753",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43546793-3d87-4871-8bf2-ad485ebec800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ba2a2fb-aa67-4562-9118-1f927e38988e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb23aad-3daa-431c-8af6-e45334a07c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b644259b-a8d1-41a4-829b-ad3870cde76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a3746e-4013-4b2f-a7f3-7b539cab10c0",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f39b30-9376-47af-a69a-d2702727ee76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf6744d4-9907-4479-9327-deef3cd26fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edee68c-17d5-44b5-a197-91f2c91a2143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "662c7094-a313-4510-ac21-425112103b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc00cdb7-62e4-4e12-a209-a47e4cf93a5b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0bdaea-9de9-4e93-9c41-3f578fad4180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf299a6b-436c-4798-b10d-71985978d9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec287e6-ee0f-4b1e-98f9-f5dc0cfb20ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737b9abb-e9bf-4ae9-9913-65654e1ce6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de262d98-0375-47f3-aa3e-5d8235324bcf",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb483d1e-9dfe-4eb9-9b71-47250770a460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be1ed630-9a56-4898-9fb3-82cd1cd30e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bb2662-ee03-4f14-b558-66b7ab6b45aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a38d14a-4875-4ed5-b7bc-580b43c077d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9a2b36-2d73-4d38-898b-96d26737f7a3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1dc62a-de2f-4083-bd91-4d96f875f221",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a672d51e-4f6b-41e8-95b9-64ef14d9ad51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d68b53-abb8-4016-9e93-93fe8fcb8255",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b95c3dd-a25b-4b3d-96d1-051157d0c5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec2c3043-61ee-4093-a811-b57bd611d73c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdbb71bd-7231-4f77-830c-26d74c7b0d8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5531b138-f505-43f9-8a83-75155b4d3c3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e019a22-0cca-423b-9dfe-92423fd82472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315ccb24-8f92-495b-bc64-0be769035594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a4ae34-94e4-4ee0-92b3-709f65eb3e18",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13242c6-ee1b-45ca-be94-82ff3292a077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca0d27aa-29bc-4e33-b194-6f9242aba367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e817182f-d6d4-4b20-a6c0-936e10f4d4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5f05e9-83ba-4a8f-bfb8-afde63f48de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b0d0f9-c64b-46e9-9fb8-7c20c1c7a1c0",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f713b65-95a5-4804-8ecc-e511094ef2e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c1dbe1f-3a6b-479a-9e79-fbdc954b83c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978c0a24-51df-4a47-b867-e667620d8de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd94b3ed-b0d3-45f1-84d8-e29f0f73cc94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d5bdf3-c41f-4ad4-9e1a-6c503c66569c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f6d96f-532f-4c0b-9c34-c7f3d006e58e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c114e3-f21b-4740-8159-c6a211675dff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0200c16c-8c86-465b-9460-044c284049ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c042eb2-6208-491f-8934-531ad58b7312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66408deb-d92d-4856-847c-5bedbd2189ff",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "387b6158-10e4-493b-90d1-a0f3c171b812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a44437e-7a80-4e20-87da-09880589ee64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9e665a-9150-4cd8-b304-770d06cdffb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc6b5e9-2b3b-4ed3-a792-336790909ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188f0ccb-7dc2-4d9c-9d74-bd25ac8559d4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a6b46e-7e2b-49ca-a725-9a3977869d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "209e6865-ba90-4a63-8733-e6917f95daf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91195a24-bf8a-44bf-9e8d-993d624473c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56b8681-2f98-4af7-85f3-6a6b45157f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5230a5a3-1861-4d3f-89bc-66184e33c14c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e5001e-0fbf-4cf6-b692-39e31700c232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ad5383-39a0-4fbb-87b5-33c22fa6690a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc1eaff-3a89-4db4-b9c1-d652a403b3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "956fd890-cee4-46c1-b5ed-f9e5db64ede3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1a16ec-b8cb-4409-8a1d-d6193aad6ff9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abed5583-37e4-4268-9cab-d6ef55d34731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e24a9534-f458-43f3-bd0e-0836f650b5fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "868babbf-c28c-45c9-9327-841fdba0ed85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d2b24d-686f-4e66-8cda-33307572a231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85dc3897-16f5-45c5-bb19-99cf868cc523",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b91fde-2262-4950-a5e3-f7e1de4a79b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37fc4bb1-8472-4d7f-bfd9-e97112f4dc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ade3bd-84e9-4abb-9602-ddcfb4d95093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b36c43c1-915b-4f55-b118-52ad177744cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfa37c5-2b3e-42fa-b2e0-ecaed9aada8b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1900a1fc-bd11-40b4-b14d-faa2ef1c14d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d72e5d-f7b6-4f49-974e-bfb4cc0b3608"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f279a5f-93a3-447a-9d7b-c151aa3a6ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67158fc5-2d34-4f5a-af8b-28ab4e6f26dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9bf8745-c831-407e-a4ad-5db8da33bae4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80797f94-c4cc-48a0-8247-1745ce1c8a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe730ac5-6231-4d2c-86d4-54ee5d0e2a00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42459ced-e764-4282-8268-e7ccbe34767f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da5334d1-fb0d-43e0-aa5f-31e6b4015522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d140406e-a7e2-491a-9f19-048dbe29b738",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c6f967-f358-48a8-9306-4ef36827e459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4cb5682-6cf7-44b6-a350-c956e0402de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a59e6e-e6bd-41f8-906c-b8c0e0572d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeacd02e-211c-45f9-86e4-1f768e4fb2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed40440e-bb4e-440b-b49d-cefe2f1fbd70",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec81448-e1b4-4dc7-81e4-4bb0df5457a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14ff69e-d329-4807-bc2b-7b1c7840ee7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67321c3a-b083-40bf-b33f-748177f0867c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c176bc-6909-4f1b-aec3-fb3c93a74bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1299618b-0db5-4cfc-a558-f3313cc4ff69",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd4f384e-0233-4b7e-8be3-557cce240513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68af39db-9519-4a6b-b022-dfed348bd024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cddac5-0354-47d4-b2a8-4b5b956894a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af75e487-1ef1-456b-8d5d-68e2706089cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33adc457-b43b-43b7-ae3b-402275d8dd47",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9a12c6-e3fb-44e7-91f0-34e6f6121ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b749b3f8-50e7-4460-91a0-04d3f670a99d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c6636f-9351-4e45-bf56-d2522aee6da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c85d9f2-072f-4140-9d05-906e41129376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5170d475-97e3-40df-b77c-538e1319172b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ef7063-cc32-4935-ac35-4a6dfb16c615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15ab376-5bb1-4d46-9ca9-0e2666c5d820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6a56be-b7e0-498d-bd73-85823ce846f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14fd84f8-6bab-4957-b551-e8705f4e4756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e1a09f-5f5b-4b6e-901e-325093bb081e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffb52d1-61eb-4829-a0ce-f66b6a86e1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b45f0e-b2b1-4951-aa32-5d9fdd759f9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e4ebcb-5a67-4bad-8f79-426a65d68638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df97ef9-a136-4b78-95d6-1fba0489fd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e6c2bb-7db2-42e0-89dc-72527a9d9834",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c7b5dd-4cd2-4c60-b32e-d8a1483181a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07c7e2a-fcad-4da9-83aa-29ebee1d77e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3e6737-2abb-4d91-a68f-c6e1997c69f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd2f123-39a8-4ac6-b939-c5d5ec21078d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4943c673-5ed8-40b2-9130-1e95225ac6fd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea67b23c-cb66-4c22-ae0a-09b366cf0bfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41887780-b0ef-4a64-8b84-96c99781b1aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c853b1-e2e0-4f75-bfe4-1d993c9754ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72f1c119-9e6c-45c1-9ba7-ea3d43214db1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18dfc18-d756-4656-935f-042d77c5393c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b46d944-c453-4370-bc33-30b83e9b79be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b92c3d8-fcde-4554-9d8e-254b9fac2d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d977350-1e0e-45b3-a265-6f75eeadd1e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d758a1-1e5b-4592-82ce-895dcefd9aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39c44de4-30de-4c23-8f64-c2a066b6c027",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82ab8c5-cbe2-4a51-9866-fc7de4d3ffd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a2a8060-69a9-4f23-bc74-103c35a06d8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f24bab-2d52-4f62-a415-52a9f4040c4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f5f5329-44f1-4358-9e82-6b0d1bf7e3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c741d4-b2b8-4352-84bd-ad1ff34f433b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7deac3b3-5905-4bbf-9d0b-50cd7faab317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf554c7-3338-4acf-86e6-9e76bb2ae70f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f70978-13cc-4b1b-8a8c-2eb84472b151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5a01f5-b1de-4098-af72-78a18d7b85da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d72118d-625d-48dd-a0e2-453ef38ab2da",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11d0c22-df34-41ad-8b7d-909648f838a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b97855cf-b0a6-43c5-9fdf-e2d6531e3e1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc0ced3-421d-49d6-80e3-33808de09468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d9baaa6-9ad6-4416-a1d4-52463d9acaf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eeb5ddf-5e5c-4671-9576-12519a94c541",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bd2c0f-a7ba-498b-b137-7ec0a14d4d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e860af33-422c-457d-8de9-c8c591111961"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2033520-9164-4c8e-b7a8-d91bee08ad62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ffd4c2f-00d0-4bb8-a726-7c2accdb4412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d0f65f-bd05-4903-bd2b-e0970d2b04d8",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2d0a61-bbd2-4fcf-85b7-dbb187236050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a451f0-5173-4fcf-b063-c4a2459b1679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042b09e0-82cb-4912-8a8e-c1bf3d4e0232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a27a5ee-453d-4eb7-b51a-ec82b9d062c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9aa01b-6251-487e-8c42-ce450462780b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627b15ab-474a-436a-90a1-4a78fb73cbdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f912dbf7-1e09-4d47-95ee-f7090f2e79f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6e72c4-f64c-48e5-a114-d4fd7f6da437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f5bca4-3ee2-4af7-8c84-c9b18d48f149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d16243-020c-47de-8b48-d61d52166ce4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8130237b-4254-45ae-871d-c188c5e65f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780db49c-ae7f-42c9-a986-eddf35c7e142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c322ea74-1c62-4e68-960f-c2015c270b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68e50f4-ac15-41b7-a834-0c473f1c5483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e5e7f4-b123-428c-8e5d-fc0935c3567f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "395a7df0-1dfc-4eb8-9574-305f89d1bb76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982c2e9c-090c-45e7-9a66-317bae04bc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4fff05-0f2c-47ff-b51a-bb8cbc2e9c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac50d79-8ab7-4b8f-b301-b4edf8768d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e92764-6e6b-4046-a292-c8761424406b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b4e873-ef57-40f5-95b0-989dc69acc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8800c18c-207e-4f2f-8b64-fb215ec04773"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72522ddd-76c8-4818-bfa3-13a4a5cce5db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5412eaf1-c5a2-4fb8-adc2-863b6fb4ed9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21192c07-80f6-40a9-9dfc-054a6784540e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec39f61b-a596-48e6-be26-bc7e37a75a41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d999d3c-b4b4-444f-b47b-ab929538745f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6976dafb-038a-4d2b-a559-828c3e618302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e7a776-09af-4e47-8bd6-ac1cb4421d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8ba7c3-70af-460d-ae09-495062b39ac4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b028b9-7df8-4a34-87fe-948111d0b3f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdbc5336-102b-43ac-b53a-f156fbd8f4cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d55777-ea45-402e-979e-94ae716f8b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9e0ef3-cf6a-4e39-bc3d-4e84366db3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c187e586-6682-4d2b-8bac-551703bba50f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1bd62b-cd5c-4b88-b267-a6bea0338945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaa9abdd-4127-47de-a81d-89f6eb495186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912ba511-113c-4ac3-af7d-76e826b923fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdd87479-e2e2-42c8-a911-3ce10dd38a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd090b7-3654-4ad8-b440-7a97ea28878c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d77f27a-5be9-4b93-8618-aa8660362187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3e1b65-8ec5-4dd2-9817-8725a42f3e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abee8ea-a622-4145-bf6b-70d65baef6e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44865815-e955-4126-978f-edcea7ed54e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de688db6-3957-4c99-88bb-adc915e0ad51",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3a8ce4-64b3-4224-bbd2-156af57ae76a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "184a0023-cf0f-45f2-82fd-9e119183bc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f501780-605a-4bba-b89c-d33fc6533a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f4ebdd-214f-4aec-b640-d154eb9e875e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fa90db-0911-4805-99f3-788ca14d65a5",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f123f2cf-caa2-4eb1-adb7-540c36e1bf8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62c0295c-73ab-415a-b442-a961049c85e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c42143-fc12-4bae-95bb-87df5f14ca4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28850f08-b8cf-4eaa-a92f-87e20a4d05a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4829849d-741b-47c8-b2c8-04a858dbfca2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705eae24-df2d-4c4a-b9f1-01ec53860f19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7316e93-5dee-4fa5-bd96-fbdeaf86ef9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7241a935-0336-4658-bdaf-f6b8c117ba9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aa7a8e4-4e35-4ce5-b68c-0c1c9cb8bf28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a0785a-cf59-4176-b236-43f746428b24",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2860517-b397-4e39-a3eb-29f59caf6a82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1679440-8f45-4cf7-a2c4-b500fc573540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea837c0d-a1d9-4bf6-b874-ee28c5f9424b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd45e3a5-a76e-432f-aba6-31de6cbee76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54fb7fa5-ccea-4b37-93a1-58093d58c127",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8593b944-29b7-498d-a0da-7d64b9cdc9b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df67035b-1c7c-414f-862b-6c00428106e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fca1748-8cb4-49f1-a059-fcba13082883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edb1d31-24f6-4ad8-a5fe-169fe153851b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e292bbd-d882-4986-8b5a-cd8103979a13",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c190ef73-0635-42c0-8f7f-68d1b1654972",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3703ee20-03b7-4bad-9c44-5efe4a10809a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c1fff0-c8f8-475a-9690-da364fd16044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "847f9a64-5473-4607-89c8-73c9ee733f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd10f4e-3adc-4d91-983e-d890ca26f062",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56dcb60-f5e0-49d2-9466-a604b490b193",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40109f8b-fe56-4c95-8e6e-d0e01d14aa15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aef2416-f2ed-4df6-b6e0-86d569d87495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9ea5a9-4abe-4198-95a4-6ae984517f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d44bf27-edad-4845-ad9a-1d369c7f9863",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae5e8f6-7b66-43e0-b7cb-cd3ce455dbd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3daef5a7-be61-4990-adf1-d4d6ea9c75e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "814b4aa2-faa3-4feb-9539-6926aa371a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7da9ed0-3d86-4557-ab60-1facf2527edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51c5862-ff8e-4ade-a18b-fd7f14cdc0d1",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f6b3b6-a0ca-4ad8-88c2-3fa3cf55162e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c1009ed-b9b4-46c2-b7d6-4402ba2048f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29956831-ccd5-48a7-9e28-e8787e1502f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a02a7fb-160e-4d10-909e-b3ffd9566261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b36988-a8d5-4f81-bc8a-e24392e7ec50",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e314a49-e389-4aac-99ad-a1bdb4d763b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9a62b1e-4c62-4fff-be47-7bca37d2b94b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e2627b-c727-4739-b6a9-62e8b0766da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f256a296-338d-42da-842d-9850aaef1843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cfadc0-11f8-4d61-97da-352697dbfd28",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c1d8cd-16fa-4781-a3d3-2a94c692a0db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0466d10-630d-4bd7-aeb8-1f856fad57ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63556aa2-2020-442e-9288-de4911b6a195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84e6e66-9270-4ea5-aad8-3a167da0cfc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c3b4cf-9c14-4eb5-9c80-4a072358c756",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3594257f-3879-4b4a-8dc9-42f4852de0f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaa0afa6-57ce-476b-a86f-7e6f1b3104fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a569cea-c642-4e29-b9b6-2d84c99e1b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64511193-8498-4a6d-a343-f353a98b34ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d584f24e-a20b-45e6-ac3f-cfc0e88a694e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab52d991-2cbd-431c-9974-2b2d0471ed69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "584371f9-b805-4fdc-9162-c9710060c435"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48f011d9-274e-4483-9d69-c5c5cc619d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38820b8b-b1f2-4b86-bb99-26f9343898ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1122e9a9-152c-4360-b1e5-e05103ed66eb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391f923a-608b-46ce-815b-583ce1ea5edf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae327426-0388-44e1-86a2-688b359f87a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25758673-d39b-4c61-b55d-69eb15f86d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17c38e8-4da5-4bff-b75e-e8ebe2df8c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d62bac4-f979-449d-b831-0b3f9961492f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4f5d11-8936-49ad-b183-4980e5a4f3fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4687b995-c475-4930-931a-0c1d37b2f5dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a0e88a-a618-4b1c-983d-01ecf6e38611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eead7291-6f0c-4003-95b2-888392e9bef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893e7530-33b1-4d61-9c48-f7151aef21ff",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd30a78-113b-4602-b6a2-f61a56d5a294",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ea4f0a-0d03-401f-8918-ee5a6309734b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd23df7a-6045-4559-941a-68b7f72a6d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8665a61c-7c57-4437-ae55-92bb3170e521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce46f982-e434-4142-8018-67d85c32a651",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228ab84c-9352-4a27-877d-cec7dc3fb6ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a00392-b2e8-44e5-8e33-2cc5358cf624"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec481b4-ab4b-4b7e-932b-80b2a090d5c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94bfc7a-08ad-42ad-a1c4-8060b11093c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfc0ffe9-7504-46ca-8662-c0cad27445a7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ad21f4-fbc5-44bb-91eb-8f0730040077",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c991399-dd81-410e-b10c-0951b1dbf3d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9605ff26-bd84-4304-bda9-d464a23945c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916a58fd-0399-4a97-a22c-f6e26c4a33c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66c91ae-2bc3-4800-9c7e-743b321e697c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8261b62a-dac9-4138-87fc-2b48eee9f052",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa3122fc-942d-4535-bf6b-532c0c015089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf595c7c-674c-4174-8a91-386ce02f7cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0725cdf-e70d-4d2c-b093-398bf075b521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32ba1f4-d6c0-43f8-9571-27145867014a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d346a82-6f22-41f9-ac92-1d27cd8d5bea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a157876b-f482-4d0d-94b2-0cf37a8ad1d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c602daee-21f1-4428-8ad0-f1d22d7340f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0500860-734d-40fc-a268-4e105cb1b9c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0668d972-9918-4e56-8751-9697bf7db515",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268931ea-0927-4b29-9fbd-cc217e36d6aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "714a78ee-73d9-4d8f-a653-9717beaffba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dee786e-146d-4455-b2e3-d03c69632776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b21b3900-8561-4f97-9dbf-babee4cb860c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0576a293-cb9a-4fb9-a938-4e816aa45358",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6495e2fa-9ef6-426e-bf90-8e5880a5711f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d905d53-e6c5-4794-b584-67d7f26c4270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "242115db-88da-4398-9463-b3652c3eb73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ac4cf1b-ed56-4b95-ab5a-a16548f187c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1b68ec-94c6-44bf-9f0a-f3ee1a0af32d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6658af-5ac4-4d26-a94f-a2b683f63d22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49088ae3-1f18-4b53-a22a-9dce985348e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa684db5-c49c-41d1-a4b1-1f2e6e2645d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690b6ff5-d251-4293-bb74-204fff73baa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ceb8883-2478-45c5-bd54-a3cb806d80a2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9ebee38-bbeb-4900-83f6-5d21a17c6c75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfe59102-de31-43bf-8eb7-8e58d745580c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d8ecc4-5a2a-4795-afea-9f996a12aafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12446d38-1500-4d89-a09d-4b28fd05e452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7e4746-ec2d-447f-9f69-c6d0941f2362",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045f6f5b-3d70-4c23-bc75-54494b403fef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc5454e-8485-4a29-88aa-2c2eaec99c47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cd3b0e3-c4eb-4472-b162-5c999e861e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccb0e58-52b4-4ee0-ab33-ef2eb369f8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b856cf6-bf97-4904-8c0b-866690570cc5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34104810-8d06-466c-869c-69cbf0261697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab03da11-055c-4f60-9b55-29bbc7789c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f1b46f-744e-4889-82ad-aa585f257912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0b275f-a774-48e4-bf63-936cbe5aed90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3978aec-0e92-4bda-8ba0-dc37ced0f263",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9c087f-eb19-41a7-bac6-a7171f8794c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb6a6813-4761-4a18-a8fe-c6c81ccb39ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "203d3652-1bc2-4dae-acc6-16842641175e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1965595-3744-45bc-aab2-8497b8957d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81fdbdb-5a61-47e3-bb60-4df338403464",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee02bc17-2a62-493d-b551-cd8c8eb72dc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b95a42-deb4-444c-bfb9-02c95ae0a3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31deb9cd-5088-43c0-980a-8c3ade4e201d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "168c96e1-0477-473e-a84b-fc63eb20aabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797a7e97-f341-4286-a2dd-6ebfd429bebc",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3758e3a8-8e5f-41fd-b907-dcf0c2e8984b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4157af8-32a1-41e1-a5dc-941666d78470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976d9b39-94e0-4ecc-b58d-cfaa85cc72b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb3b4b6-5279-4706-9f9a-e4eaf96f984b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bc8373-8fdb-44cd-b123-cf06ffa4a4b5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713a67bf-7844-41b0-8a46-b9e65d3f2e83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "267dbee9-49e2-4562-947f-0112cabdc3d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc069b0-0e5e-422a-b888-db8012683865",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0287cdf-dd8a-4140-9e9d-9f0c9dd32a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83888149-7b99-4b6c-8e81-777fb755ce94",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6740c90a-2541-4823-8415-4c70b3c17267",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd8d76a5-ec81-4174-8f41-88d1205929b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc43cd60-1f62-4c86-ace6-d671350dd3a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d17ed022-3476-472a-a07f-bca1742b5721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767d50a3-32bd-4e8c-9fb0-377998d7c58a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2add0d8d-c57d-4355-9c67-6dcd7469d808",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6f2244-d795-4d20-b06d-840a5fd34c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e17b1e-b847-40ec-a6c1-afff5ced586f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4159d1e9-021a-4193-8838-863159e3b0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec26b642-dc3f-4be4-89c4-cfcc56930835",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18a2cb2-3851-48f1-8dc8-1961593dedaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ace4cd2e-985e-44b0-a4ba-f2c0cdbfcdee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c95929-d051-4848-ba98-744e04449aed",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28eb4abe-617f-4952-923d-efd004d0ac39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18d21457-24fd-4ec2-8a4c-4294cbe9eab5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd1d700-a940-4431-bc4d-8d9f3d614615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4ad1a7b-8fc1-42df-98f6-5acaccd17bf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34113afa-6f34-4a20-b742-83489b36ba0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35cacd59-59e4-45f2-9154-f7cd6738ecdc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f80fd31-abb2-4445-886d-9e6ff667cd30",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5def0201-52bb-4166-becd-cfc892df1a74"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e81e1561-54c5-45f3-adaa-e0f5e4e38ece",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1ac75537-63a0-4066-ac12-3a3ea9fba3bb"
                    }
                  }
                ]
              },
              {
                "id": "f5fccff7-6cc1-4d08-adce-c10c69785a0c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d60234e-21bf-463c-8a68-722040052e54",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789800a2-ac84-4b36-b143-1cda4a186612",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d47d4415-3920-4fcd-8470-ae67b711ca50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90b8d4e-26ec-46f9-99f6-d1796fe7aced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4699e264-e25c-483a-b663-07cf49280d00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18597e67-8c23-4123-8696-7c2531dc4841",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c12a9e4-3ff0-4eed-a3f2-885fe0bfc84c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4012760e-a353-4a24-a011-2e7ef0886375",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "905c5765-266e-4bee-ae29-3d680e65f8b6"
                    }
                  }
                ]
              },
              {
                "id": "7798c302-752a-4718-aebd-0c25c42862e7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "af6dd45f-2472-4351-b91a-c68f86c7848c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bb7214-b8ef-4c96-b3d5-d47da160f59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b52131d8-49fc-469b-af93-bd7f11b5a15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e0c260a-eaf2-4114-a3c3-bc252a90af05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33ea35d2-fe6e-44e6-8e9b-4c2ca1b27bab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d10d215b-dec9-4bae-9a53-899cf2a6f802",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd92bd65-69a6-4a21-b141-3af5b551ea2a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67c99602-093d-42f1-bbad-2feccd86bd20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5dae4f93-ec2a-441d-84f4-ce7f1ddfa026"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c11a3a37-dce8-4a3e-a65a-d777cee9e0c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0aea08fd-89cd-4ed2-8ee8-4256f543e1cb"
                    }
                  }
                ]
              },
              {
                "id": "230b7be2-2561-4806-ac98-d9d0ad18eedc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66d0e053-ff0a-43c2-a941-8c93eac185b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0c54e804-5254-4aab-a0bb-fe398c652655"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0a49627-aef0-4dac-9d96-9076004bad9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "192a7389-7242-496b-9c6b-9b14af635148"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2b8baf0c-97f1-4930-8640-0c50a1f2f13f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "edcf55d6-16aa-4b0d-8e92-ae8f8c6be21b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ce003491-7bd6-412c-9109-e81363d9a119",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "591a39dd-c886-4f05-9045-c805c43718fe"
            }
          }
        ]
      },
      {
        "id": "7b0f023a-409d-4cec-b46f-5efaed0bde26",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "74b84752-b1d9-4c54-b842-878d3d864001",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c79df4a-4424-4080-80ef-61ac3c54516d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d5229e9-73ed-49b2-9dd1-fb454c0a89b4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6546bbee-7f0f-49ef-9491-0a68b0dca1e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "066004b6-bf92-4b6b-8adc-7180d3cbc6f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "befd820b-c43b-4542-b12d-f0526033eee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "046c3e27-14ff-4c35-8ce6-673ea208ffb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ca76fedf-c8df-40f6-b1a2-be4b5bfa7d79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aea12bc9-ee06-4f41-91b7-e2c3bc762b64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4830f157-d68c-4ed8-97fd-5587a89a094d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db94984c-ee75-445f-85ca-514534e2396f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a8ae303-f553-473a-b25e-46cc6358b68b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e02b97eb-1251-4909-87b0-eb3d0a9aac66"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5f5b7b7-7c15-4688-8b13-2687ad07fb99",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0acfad5d-20d6-4556-8674-98927323f466"
            }
          }
        ]
      },
      {
        "id": "8006b4db-16dc-4df3-bb06-24aac1349e03",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "7c0c846e-5e9b-4b00-941c-d7e8fdb8ea4c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "750a81e6-7f4b-4b17-9e7f-e33abc17ca63",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2af426c8-6027-48a5-a0d3-90d349fa4627",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c9c536-d01c-497c-acb3-5eb6aac15025",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4e693af-298e-4840-8db1-96fb75b35c8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b43df1f0-7a91-48eb-bc28-7bdd12f4e91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b45132ff-0341-4861-a668-b0137e7c8b46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19cd7b17-e898-4257-9c09-4cbf871f9ae2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "783a2c10-492d-4a8a-b7bc-ee6cd8b83278"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bec3028a-c324-41e1-8cde-d28a15d51027",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa246e77-dfe0-4816-83e7-c877e4707e9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95950566-7717-4865-95d8-642d144a655b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a72ce7e4-52bc-4916-ad53-4aacf992ebf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86e837d7-a33f-4d3c-a830-e192db0e952b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df7fe81d-cea9-4b8d-88c0-92038583c331"
            }
          }
        ]
      },
      {
        "id": "e8474518-44c0-4451-957e-c22b8603cb3d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "51ce9750-9325-4eda-8637-7666804b50ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "24fc23b7-4162-4b6b-b6e1-0e858bd573d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c66bcf7-7118-4647-a310-e8eaab19c9b2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c627c88-c790-458d-a259-3abf9f51298b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed91f463-c02b-429c-849e-804572f8faa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bb32be-df95-465a-8c27-099c5454bd4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "982dbdad-05ca-45f9-a65d-e9257437d8a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1317a4d0-0493-4135-86f6-661e72ad7fac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcd75647-607f-4f5c-a339-c77bed8c6ef4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1fab5c0-51c5-4f1d-8241-c15b931a1548",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f9fc920-8270-4027-bd4c-a6efc1269d8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "21ea0794-e388-4368-b54c-e2147272fabc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5d049e5a-6ba8-4782-9f95-777e1ae46305"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2d3f8d9-f03b-4a21-9958-d49a3e6151b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0086f833-a853-4ab8-a021-fd179afd9506"
            }
          }
        ]
      },
      {
        "id": "4b5ba353-39ff-4fd6-a6b8-d215a5f95f36",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c6fc45e-cd2b-4878-8fae-70b254b68cf5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "930cda79-12b0-40d4-819d-c1cd6a7d91b2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b7c625eb-0627-46b1-8f49-158876330c54",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cdcef0b0-f960-4652-ad2a-63b4153bb4f0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b66bf77c-320b-4f7d-adbb-2a1b9b0cddef",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 94.64285714285714,
      "responseMin": 10,
      "responseMax": 7889,
      "responseSd": 535.8955042698144,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1719362291293,
      "completed": 1719362323385
    },
    "executions": [
      {
        "id": "d0cf5bf1-57b7-49a0-a2c2-c5bcebe72590",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e6a7b23c-83f8-4a75-bc4d-bb41c93cb520",
          "httpRequestId": "ecbf358d-b952-4c00-96c9-0ba93070ac0e"
        },
        "item": {
          "id": "d0cf5bf1-57b7-49a0-a2c2-c5bcebe72590",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1c2e8e8d-ace1-44e3-b3f5-2a5e7edb2950",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "b26db498-ba19-4369-a060-54da0f30d793",
        "cursor": {
          "ref": "35c92d92-c2a5-451c-bb0b-3fd679f87c27",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0d0d6d47-e33d-4da0-a2d7-81e141763c23"
        },
        "item": {
          "id": "b26db498-ba19-4369-a060-54da0f30d793",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "45cc1ff9-3217-4398-a2b6-854ac3e857af",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6f39cb9d-41b2-47e0-8f2f-3747b347df72",
        "cursor": {
          "ref": "ac677caf-b83b-4d5a-8803-5227138e987d",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "147d1723-e42a-416e-ba8d-3e27fa6b6265"
        },
        "item": {
          "id": "6f39cb9d-41b2-47e0-8f2f-3747b347df72",
          "name": "did_json"
        },
        "response": {
          "id": "d8bf3660-0b4e-4719-8bcf-649735fa65b2",
          "status": "OK",
          "code": 200,
          "responseTime": 323,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7e5290-4f89-475b-8a51-bdfe3939aa5f",
        "cursor": {
          "ref": "028f3a8d-7feb-4939-b3d3-7a24f21f9a67",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3827f18b-7d9b-4a9b-adbc-7991c44e1946"
        },
        "item": {
          "id": "1a7e5290-4f89-475b-8a51-bdfe3939aa5f",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bb79c8e-a21b-4476-8402-3603620aa197",
          "status": "Not Found",
          "code": 404,
          "responseTime": 356,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7e5290-4f89-475b-8a51-bdfe3939aa5f",
        "cursor": {
          "ref": "028f3a8d-7feb-4939-b3d3-7a24f21f9a67",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3827f18b-7d9b-4a9b-adbc-7991c44e1946"
        },
        "item": {
          "id": "1a7e5290-4f89-475b-8a51-bdfe3939aa5f",
          "name": "did:invalid"
        },
        "response": {
          "id": "5bb79c8e-a21b-4476-8402-3603620aa197",
          "status": "Not Found",
          "code": 404,
          "responseTime": 356,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad474c-0422-47f3-a10e-bfdd133d232c",
        "cursor": {
          "ref": "263945e0-d4ae-4ad4-86e1-7551c8f87da6",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "92098a91-8404-4a31-b72d-c814d4fa561d"
        },
        "item": {
          "id": "99ad474c-0422-47f3-a10e-bfdd133d232c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7c8da60d-5f94-4747-96fc-dfe880959fb0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377b224a-719f-4ab9-93cb-c346f6cdbe72",
        "cursor": {
          "ref": "2ea57c06-682d-44b5-947a-1748f5cc5846",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "34e689cf-38ff-4d5d-ba94-547c7582b684"
        },
        "item": {
          "id": "377b224a-719f-4ab9-93cb-c346f6cdbe72",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "df010031-0564-48bf-81af-a41ca3f27c5a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3118cb77-9e67-4814-8cd8-2b2dda5c000e",
        "cursor": {
          "ref": "cabf574f-da20-46c1-aa2a-45f4bb823de5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4530a79b-84d9-404c-8299-7d9c5ed3be46"
        },
        "item": {
          "id": "3118cb77-9e67-4814-8cd8-2b2dda5c000e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0a049428-18d5-4c47-81c3-cd95f2fb7c8b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f3dd71-7835-4aba-9c05-e568ae52ed3f",
        "cursor": {
          "ref": "15e00098-41e0-428c-b01f-eba1bf2f5d26",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "4e776098-cdbd-4ecc-a415-0f612c173c91"
        },
        "item": {
          "id": "63f3dd71-7835-4aba-9c05-e568ae52ed3f",
          "name": "identifiers"
        },
        "response": {
          "id": "a4b0ae2c-3a29-4bbc-b740-66e335c08125",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546d37c2-66f6-4af3-95af-0fb8ed082304",
        "cursor": {
          "ref": "37d1a3d2-9669-445c-8723-b430be0b03a5",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "a9f74808-7abe-4ee6-bbf8-ace6ac236ae1"
        },
        "item": {
          "id": "546d37c2-66f6-4af3-95af-0fb8ed082304",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "93243fe5-af57-40f3-a29c-f6b34a3bab33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2e2f89-5feb-4634-89c8-e4872f8e2000",
        "cursor": {
          "ref": "54880c03-d1e3-4bf4-9cc1-83d68174e17b",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "857e2aa5-4488-41c5-8518-c2097c75649c"
        },
        "item": {
          "id": "1d2e2f89-5feb-4634-89c8-e4872f8e2000",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "cabc41c6-76dc-408b-ac6a-69e3d56c751a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdb08a3-a56b-468e-a9d9-5f7d3d44cca7",
        "cursor": {
          "ref": "72af1ef2-6112-47a8-86f0-41e28115e646",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "86ac4c75-fc6e-4da9-abb1-dd3714a8dd9e"
        },
        "item": {
          "id": "5bdb08a3-a56b-468e-a9d9-5f7d3d44cca7",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "14477ea6-a67b-4f0c-9afe-311e457a6025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867169d2-4fe5-46c7-a4b4-a166bf9242c8",
        "cursor": {
          "ref": "365057df-b4d3-4657-bd9c-70c4a780b48a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "e51d5c54-730c-4188-b202-5ab6fcc059ce"
        },
        "item": {
          "id": "867169d2-4fe5-46c7-a4b4-a166bf9242c8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "6170df57-8a8f-432d-8d79-7ad06e3d504d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1fb0bd-2e74-49db-9fe1-8824514d25e1",
        "cursor": {
          "ref": "31228d5a-ea2a-4313-92bb-85f7342efda5",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ded45448-f2e5-4491-9422-e36769835656"
        },
        "item": {
          "id": "3b1fb0bd-2e74-49db-9fe1-8824514d25e1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "6a2db962-6c2c-4b87-93f3-9a79b5f76751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ad4745-2675-4d23-be90-8ef4b1b4c36c",
        "cursor": {
          "ref": "6fef452e-8dc9-4a73-a160-576833d27808",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9366a16b-e924-4f59-93e1-4f97f3f58382"
        },
        "item": {
          "id": "56ad4745-2675-4d23-be90-8ef4b1b4c36c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a5fd5aa8-a9d3-42a5-b494-8d25b3fa412f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcaa950-db42-4c47-9996-d285dd365c17",
        "cursor": {
          "ref": "62130711-0cf7-4933-bd3c-1caa8407751c",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3f9eeffb-8eb1-4a6a-8376-32629f4d0ea0"
        },
        "item": {
          "id": "5bcaa950-db42-4c47-9996-d285dd365c17",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1e564c4a-1f44-4115-8358-d81d86282c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70ba1a3-2ef5-4b56-b19a-adc0f7653812",
        "cursor": {
          "ref": "7606cc54-f0e3-4ff4-a755-6a0ba1145dfe",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "62e4a6ab-aad9-4d4a-8da5-ac04cb421586"
        },
        "item": {
          "id": "c70ba1a3-2ef5-4b56-b19a-adc0f7653812",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f26660a8-abf6-4f92-9099-3dd9f10ba3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e298ea-9ed1-4a50-9a33-c5ab9776c5b4",
        "cursor": {
          "ref": "24e74fcc-d4b8-4e66-87ee-6da836d174bc",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9444f089-b45d-428b-93a5-107784f76152"
        },
        "item": {
          "id": "e3e298ea-9ed1-4a50-9a33-c5ab9776c5b4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "66dc2d02-2b8e-4d95-9672-6da56ee6f9f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1602d0c-a923-4d75-9add-a097ad39b7a9",
        "cursor": {
          "ref": "cb0fb532-28d5-4a4e-8210-22c6a4a1364e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "472a45fe-b21b-4086-a31f-f605a720a81e"
        },
        "item": {
          "id": "a1602d0c-a923-4d75-9add-a097ad39b7a9",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8569550c-5735-458f-a97c-e1d5d6174584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab36f58-51d7-426b-8e89-bba0f9fc34bf",
        "cursor": {
          "ref": "ce22da87-2321-4180-aad8-ad97098f5585",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "76449dfe-8c10-435f-9f73-1127eac82cb3"
        },
        "item": {
          "id": "bab36f58-51d7-426b-8e89-bba0f9fc34bf",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ed9a5df7-1d45-4809-8529-01fefe0d47c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b7716c-7030-440a-a533-483c6d877f6d",
        "cursor": {
          "ref": "fa99e4a0-2b10-4253-8a27-39b52ea8c04d",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "e27096f1-a9f6-4d10-bd98-866cf281180b"
        },
        "item": {
          "id": "e9b7716c-7030-440a-a533-483c6d877f6d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a0739417-0310-4699-b04b-cb2675cda2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8eb174-a227-41e5-9b79-e5de201d7e86",
        "cursor": {
          "ref": "9104bd23-881f-41e7-bb5d-e99576c2ed94",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0fba29c8-1dbe-4bf2-bbf1-037a2bf41735"
        },
        "item": {
          "id": "ab8eb174-a227-41e5-9b79-e5de201d7e86",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d4521d96-3068-4dff-a5f1-846beec76952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f0ffa2-c0fd-4ef3-be86-fabcfe4db516",
        "cursor": {
          "ref": "9505cd0a-fc22-49f1-8cfd-db02afc05a62",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "62a18720-d935-46aa-8085-9d20e0ad2f5b"
        },
        "item": {
          "id": "15f0ffa2-c0fd-4ef3-be86-fabcfe4db516",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1fb2d374-9ad9-43a7-a693-110b27f4f6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88b2a38-42cb-4419-984f-e0423b7f2643",
        "cursor": {
          "ref": "351c5248-a578-4572-8723-6b7939633e6c",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "191bf701-618b-4e5d-985a-dd33d75f0420"
        },
        "item": {
          "id": "b88b2a38-42cb-4419-984f-e0423b7f2643",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "389608cd-a86a-4e7f-b9c1-63481f0ca77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723b460d-f8fc-489a-b1a4-58d95753ee1f",
        "cursor": {
          "ref": "38642dfb-8f0a-45b8-aa83-5f98a3f0fc96",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "3c13666f-c0a3-4ca3-a70e-68526b9d7eee"
        },
        "item": {
          "id": "723b460d-f8fc-489a-b1a4-58d95753ee1f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a86f391c-77df-4981-96a1-4e913fe81d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a970a0-c8ff-4fd4-bd81-56e49bc660dc",
        "cursor": {
          "ref": "95151ec2-8d25-4764-9eda-5f331cc8918c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "683e49a4-dc64-4394-b43b-6b11a1bc12bf"
        },
        "item": {
          "id": "e5a970a0-c8ff-4fd4-bd81-56e49bc660dc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "ada39432-1029-4cbd-8dc1-74006c58adbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4dc7a53-da8d-46bb-829e-8317daddc70f",
        "cursor": {
          "ref": "c97fcfdf-c47c-44e0-867e-b0ed5dd73841",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e4a4eb36-7680-480f-87c6-ce95554d792a"
        },
        "item": {
          "id": "f4dc7a53-da8d-46bb-829e-8317daddc70f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2ce0c091-9683-4ef2-9167-8d26bb1309f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34ca6b48-94b9-421b-b96e-74b922063fe4",
        "cursor": {
          "ref": "8e84f666-2f36-4666-bfbf-fcbfef9b1763",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "6e435843-f758-4bdc-b24b-f912dc65c16f"
        },
        "item": {
          "id": "34ca6b48-94b9-421b-b96e-74b922063fe4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "32b71801-84df-44b3-830f-4e872262984d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dca5497-9482-4073-962f-99287a53010f",
        "cursor": {
          "ref": "c8a28e80-fa0b-42bd-9321-dd6a39bbcf94",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "22d82ac5-301e-4c6c-a23e-08e053551361"
        },
        "item": {
          "id": "4dca5497-9482-4073-962f-99287a53010f",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6713c589-4ccc-445f-b297-9dfdaa16d13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843affa5-02a2-4444-a9f8-65664c681ab1",
        "cursor": {
          "ref": "58745bc7-1e67-476b-aa14-328fad64d8a3",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a536f310-831f-4a6c-a23e-b3574c680c53"
        },
        "item": {
          "id": "843affa5-02a2-4444-a9f8-65664c681ab1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6a2ddd61-aa95-49db-9ed5-bab0f433bcf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7208c8-51a2-4f81-b8fd-2bfc5568112e",
        "cursor": {
          "ref": "f7fb8875-a632-446f-b8ed-66c776080fe4",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9f027af0-3761-41d5-af05-49370784e3fc"
        },
        "item": {
          "id": "1c7208c8-51a2-4f81-b8fd-2bfc5568112e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4d39371c-db25-4575-bb60-988ed515b321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eff8402c-6210-4a08-a8a6-a21539421c12",
        "cursor": {
          "ref": "67e40077-7624-4966-ad60-51759ea90ea1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "809872b1-473a-4f2d-93fb-c496202b30b8"
        },
        "item": {
          "id": "eff8402c-6210-4a08-a8a6-a21539421c12",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "61e8e8c5-a569-4ae3-8685-41f25acf77a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442e03c2-47c0-4578-aa37-bb8640ec001c",
        "cursor": {
          "ref": "4d84acfc-70ce-49d6-b694-189c1cb0a7e7",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "173b112b-15b4-4286-b7ec-5fd64409af32"
        },
        "item": {
          "id": "442e03c2-47c0-4578-aa37-bb8640ec001c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1114299b-1b12-48ce-a2e2-23ef5c07debd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be885a0e-1322-46bf-ba6c-3e7b71351c39",
        "cursor": {
          "ref": "44cabb53-9c45-4d0b-a75b-06353b552062",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2b78dbd6-b8f3-4ee8-bd13-083c69eb48dd"
        },
        "item": {
          "id": "be885a0e-1322-46bf-ba6c-3e7b71351c39",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1201c87f-773d-41f2-aac2-a49d08e92b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50e70fd-2cf4-464c-b8b4-6b570f90df20",
        "cursor": {
          "ref": "00c58913-95f5-41f5-8ed7-d4d271765b1a",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "57d46939-5f22-4523-bf62-0809664b13c8"
        },
        "item": {
          "id": "d50e70fd-2cf4-464c-b8b4-6b570f90df20",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6e00d0b1-5fc2-4cb1-893b-06fb6c7f6680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ec9bf4-5b2a-4432-be36-a6460ddcf1a5",
        "cursor": {
          "ref": "9e83d6e3-cb67-4ad1-abd8-8c3489ab87f7",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "aaeed757-79b7-495d-9767-4bdc93521471"
        },
        "item": {
          "id": "f8ec9bf4-5b2a-4432-be36-a6460ddcf1a5",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "993567fe-bc39-4753-b3b2-b7bcdbbe4b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d8b8d47-6c36-484c-9c75-c6732830eca2",
        "cursor": {
          "ref": "c098fc51-f06d-419b-befd-1e62e810aae8",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c6af3f16-926d-4361-af9c-570f25fad1f5"
        },
        "item": {
          "id": "6d8b8d47-6c36-484c-9c75-c6732830eca2",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "3905361a-6d93-4c23-9f71-4a71db302272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de24e6c8-4d3f-406f-8488-d3ead1f2a456",
        "cursor": {
          "ref": "350f8a16-6850-44c0-a4a3-8bee4dda8cf7",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f808d34e-16e4-4d93-84cf-e8f538c3ff68"
        },
        "item": {
          "id": "de24e6c8-4d3f-406f-8488-d3ead1f2a456",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "323f01db-a452-4ee5-b026-937b5afd52ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd817f7f-7b9d-4e98-bf32-31aa2d8a8f51",
        "cursor": {
          "ref": "236f5de4-5496-4adb-89b9-960bc2f04432",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "54defae8-140b-4d45-a623-20fbd58cc1de"
        },
        "item": {
          "id": "bd817f7f-7b9d-4e98-bf32-31aa2d8a8f51",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "92b79671-37dc-42c5-84f8-2be777695bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8239af-88fa-480d-9890-40b76ccf9155",
        "cursor": {
          "ref": "5218fb19-c20a-4dc4-8394-3ec5d19be634",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7f0a05e5-ffbf-4f4e-ab27-e8dc36b267bc"
        },
        "item": {
          "id": "3a8239af-88fa-480d-9890-40b76ccf9155",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6743706a-9b57-45f1-b735-1becf83686bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad777791-8f6d-484d-b142-a79cea404b8c",
        "cursor": {
          "ref": "f1645fc9-2ebe-4c77-964b-5005ce3c88df",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3301b3d3-3686-44c0-b17e-a5045cb4ebfc"
        },
        "item": {
          "id": "ad777791-8f6d-484d-b142-a79cea404b8c",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b961f304-c07e-47eb-b6fa-aec3e6ab7683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79ddcb2-521e-4814-be21-0c28723bc245",
        "cursor": {
          "ref": "1817ab65-1363-4111-82d6-d722b7b80803",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "21b8661d-7a37-4d79-9b70-1aee5a75ccbc"
        },
        "item": {
          "id": "a79ddcb2-521e-4814-be21-0c28723bc245",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "23495972-e705-4510-b525-1bf130c36e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bc4fd36-7a10-4d3f-956b-5e3c32148fdc",
        "cursor": {
          "ref": "f7354ea7-c036-456c-8299-2733ddde98a1",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "33238500-44d5-4e56-9beb-6d9c621a57ec"
        },
        "item": {
          "id": "5bc4fd36-7a10-4d3f-956b-5e3c32148fdc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "0aa8c356-f53b-43ae-90a1-a03ea88daf01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bd5d70-48f8-4cdf-8f93-69445b4fc760",
        "cursor": {
          "ref": "7026cb7b-164e-406e-9880-def6a415f358",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1d9eede3-6e8b-461a-a987-9b1a436c5499"
        },
        "item": {
          "id": "b1bd5d70-48f8-4cdf-8f93-69445b4fc760",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b71933ec-42de-4279-8bec-8e3658efdd5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be45cae7-2278-4b24-8ca6-7e375ef1d649",
        "cursor": {
          "ref": "9fa3abf2-1eb9-443c-a8a3-c5aaf2dfd703",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "35e50966-2888-4592-9fd1-e84dc9308545"
        },
        "item": {
          "id": "be45cae7-2278-4b24-8ca6-7e375ef1d649",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1000b14d-c874-487a-9703-0f94a7a5ed2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75906f4-b6b6-40b4-9d18-6e77d7207abb",
        "cursor": {
          "ref": "49249001-5cbd-4f97-a14b-7df50e15d36d",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "eb9bb62d-826b-4be2-b596-2bc716fbb16d"
        },
        "item": {
          "id": "d75906f4-b6b6-40b4-9d18-6e77d7207abb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ac7c35e7-1a7f-4c4a-bc4e-60446eb1fed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cbcb5ec-b0bb-4083-9f5b-ddcd64d9fc83",
        "cursor": {
          "ref": "a2fbb26f-ce24-4eea-96dc-a204a518318e",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d46d4c8b-01a5-47c8-9383-ca28ff9cfc9e"
        },
        "item": {
          "id": "8cbcb5ec-b0bb-4083-9f5b-ddcd64d9fc83",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5b8a41b1-de04-49ef-a40f-d71ddf8146bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f93aaf-2cf0-4e3f-a903-c3547d9fb0a0",
        "cursor": {
          "ref": "da915d17-5770-41ae-8e97-5ea65ce1ce72",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "daeab1f3-f643-4a9c-9bd4-f56f3be0e95b"
        },
        "item": {
          "id": "29f93aaf-2cf0-4e3f-a903-c3547d9fb0a0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "86478d65-7eba-412b-a09b-52c44f01575d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4415a5cc-4430-4c6f-999d-25dedc1c53c5",
        "cursor": {
          "ref": "eea2fb45-af9a-4aea-a2de-e98eb481b46f",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5708cc5b-85bc-44c5-be31-183112983d5d"
        },
        "item": {
          "id": "4415a5cc-4430-4c6f-999d-25dedc1c53c5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ebf1a3b7-93b6-43cc-8554-fafe8c42812a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cecb8dc2-5697-44cc-b507-a9437edf5eb5",
        "cursor": {
          "ref": "370c8764-3344-4320-beb9-b6bd579cf0f7",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "07e0e9ec-0fae-4167-ab32-088e99933c9b"
        },
        "item": {
          "id": "cecb8dc2-5697-44cc-b507-a9437edf5eb5",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ac6e8da2-2ba4-4d3c-9688-d5050d62f184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35bc01ad-ed9f-4f6c-8af9-0187bb712629",
        "cursor": {
          "ref": "450bf18a-ce2c-427f-8754-4f4a1538643b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "92dc1f5d-ca53-4a59-b03c-90ecba4c8fdf"
        },
        "item": {
          "id": "35bc01ad-ed9f-4f6c-8af9-0187bb712629",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "564a9e5c-97c1-430c-8881-c58098cb367c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e24b22-0f40-4469-8522-bc089f42504c",
        "cursor": {
          "ref": "8f9fbf37-8309-4882-95fa-4ebf5f9db8f2",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3ecd4a27-7d1f-4263-a6fd-48fcf76413c4"
        },
        "item": {
          "id": "23e24b22-0f40-4469-8522-bc089f42504c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e5f29aa1-a105-44e3-a944-2573cb01d67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dd61c9-6173-4620-b924-038e141f67b8",
        "cursor": {
          "ref": "151fe456-04a1-49d4-9041-45ca7c4ab096",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "77bebf00-2d3a-4f74-a59e-28bd7c1498be"
        },
        "item": {
          "id": "30dd61c9-6173-4620-b924-038e141f67b8",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4e4edd73-eb92-4253-802c-aa17d997869f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af84ac06-745c-4c2b-b391-00b286410d4a",
        "cursor": {
          "ref": "83a8d68d-6c3a-4877-9481-0394936d9c59",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "b4d0a30b-d842-4c8a-aa42-9d0fd94d2983"
        },
        "item": {
          "id": "af84ac06-745c-4c2b-b391-00b286410d4a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c16b4184-1fc6-4853-bc9c-d600e1ee003b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6d3c3c-96dd-4ca5-ade1-b36474a34ac1",
        "cursor": {
          "ref": "b141db51-5841-483d-b90f-c9e11a05a1ac",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "becaa436-0087-4bcb-b84b-94ad91ae3e7a"
        },
        "item": {
          "id": "5a6d3c3c-96dd-4ca5-ade1-b36474a34ac1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4e28b567-8dce-4eb5-b2a6-b8446f28b0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e02503-0c4c-4424-8165-9f1f00a8a858",
        "cursor": {
          "ref": "3b377674-fa41-4bb1-b104-be0d53d2ea4a",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d8ca9cc6-f304-478a-931d-de4a62670408"
        },
        "item": {
          "id": "f8e02503-0c4c-4424-8165-9f1f00a8a858",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "50c314c9-210e-4a2a-9f3a-c00d8d9acbed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5382e42-b7bf-4b7d-9b6d-50a29b8e8616",
        "cursor": {
          "ref": "caef3a44-6842-4987-b94f-dbc58cc74ae9",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c02129cc-02bc-449e-9cde-3bacf403d6f6"
        },
        "item": {
          "id": "f5382e42-b7bf-4b7d-9b6d-50a29b8e8616",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1dfd1c0c-e196-49ca-a465-0a4aaff0369c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9be465-6252-4a27-9cdc-17e60a837883",
        "cursor": {
          "ref": "5a6700fa-9857-4ef1-89cd-28fc512286cd",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "482f8695-6b3f-48fc-aa88-d70185a6970e"
        },
        "item": {
          "id": "9d9be465-6252-4a27-9cdc-17e60a837883",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d848a38e-1ef6-4e94-8f10-2fb47f942970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79b2573-fcad-44b2-9bca-61dffbe7b2bd",
        "cursor": {
          "ref": "8abe349a-34ad-4bc0-9947-07c35c8484e1",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d3ab08ec-6f7c-45ed-bb35-eda57d829ab0"
        },
        "item": {
          "id": "d79b2573-fcad-44b2-9bca-61dffbe7b2bd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1454f424-9380-478b-851d-67e5a3f372ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f97874-6635-4421-83e9-b189f2c053f4",
        "cursor": {
          "ref": "24bae02c-eac9-436c-a532-90d29f95c16c",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "38aff46f-f9e0-42f1-9f06-ebdf78e9c162"
        },
        "item": {
          "id": "41f97874-6635-4421-83e9-b189f2c053f4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "860ce287-5eec-4073-aee6-141505a0af8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cace990f-64e6-413f-a659-240da2faf55a",
        "cursor": {
          "ref": "250f0516-e2b7-4075-ab01-b622203b6419",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "43be1f13-e0cf-4fd5-ae29-a79ed8f787b7"
        },
        "item": {
          "id": "cace990f-64e6-413f-a659-240da2faf55a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "aba7bac9-95db-47da-b4cf-0544a3ef56d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6597ad1-16ee-42a5-a8d7-27a515faca1c",
        "cursor": {
          "ref": "c88ec15a-529e-4ed8-a4b3-ce34ab47ce15",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "efdb20e1-fc1f-46cf-9b3e-bebc1edd2852"
        },
        "item": {
          "id": "e6597ad1-16ee-42a5-a8d7-27a515faca1c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "294e3bbf-d73e-4a65-8724-3936e039521a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4f1ee5-cd1f-41e1-a695-7168502ff45f",
        "cursor": {
          "ref": "5b2245d0-6c6c-4192-bbde-334c2d6ceea3",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "adf81049-dea8-4bcf-aaa8-8d59cf52befa"
        },
        "item": {
          "id": "4d4f1ee5-cd1f-41e1-a695-7168502ff45f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cb032dfd-f5a2-4b3c-9af8-c146a3d4a4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adaf1676-f8dc-4c9a-972c-f950f766329b",
        "cursor": {
          "ref": "4241f7ed-e9e4-4390-93cd-80f41ccfa07a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0746c883-8e51-4509-a96f-3345e014910a"
        },
        "item": {
          "id": "adaf1676-f8dc-4c9a-972c-f950f766329b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6c25e7be-3016-49ab-b422-21b811a760aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c011536a-0367-4dd7-b8b7-3d320330b890",
        "cursor": {
          "ref": "aff83ec8-fae5-4200-8b6a-5d4471f6e327",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "a47e28d0-9e21-4889-9007-50935bbfdaa4"
        },
        "item": {
          "id": "c011536a-0367-4dd7-b8b7-3d320330b890",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "29a6a5cb-e6b8-4c68-b98e-0c2d92f371a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb2cfdee-466b-4f21-8024-6bc7065afd64",
        "cursor": {
          "ref": "2ae53720-3e12-4924-b843-38266c5200b7",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "72cf187b-e215-451e-b31b-21ec560e880c"
        },
        "item": {
          "id": "cb2cfdee-466b-4f21-8024-6bc7065afd64",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5d96f4fe-adb6-47cf-8f14-ac3c0964406c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ddb197-8fe5-4279-8e73-241d2fc25a37",
        "cursor": {
          "ref": "67e2075e-ab54-49c0-a115-2f8b6eae6246",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f7f38c77-bf4e-420f-8d0a-5b76656213c9"
        },
        "item": {
          "id": "a9ddb197-8fe5-4279-8e73-241d2fc25a37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "912163c4-51fa-44c2-9e53-2cf07ca9fa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90854217-2f2a-4321-ab28-a5250dae7e5c",
        "cursor": {
          "ref": "b973b892-4d67-477e-89df-ec63519b5cca",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "36b8414e-b46a-4ddd-9cff-f74b386d809f"
        },
        "item": {
          "id": "90854217-2f2a-4321-ab28-a5250dae7e5c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b550b5f7-b1a0-47d1-9047-358c404705a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adc4c96a-2bfd-464a-b175-7f9835c07f60",
        "cursor": {
          "ref": "25612ec1-0375-4bbe-94a5-b90bf6dc864b",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4b234cee-f4a3-48fb-a21b-c041969b71ee"
        },
        "item": {
          "id": "adc4c96a-2bfd-464a-b175-7f9835c07f60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "63eb4faf-8759-4753-8c7b-25acc0df6b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d843818e-da67-4232-8e9d-a4beaee0163d",
        "cursor": {
          "ref": "150c6d90-7a4a-4b08-bea5-2ea2a9570ea3",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "43c2580c-95fb-468c-ba3a-9f506bcba236"
        },
        "item": {
          "id": "d843818e-da67-4232-8e9d-a4beaee0163d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "0bf70fa2-ed9c-428a-b4ed-f811b82470bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fc91af-f403-47ad-9579-47ef6b06176e",
        "cursor": {
          "ref": "5438e9d3-1e07-4b07-b0d2-ae2fdc3fe5c1",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0bc700b8-4a53-4143-a8c7-c8d65c3be2bf"
        },
        "item": {
          "id": "58fc91af-f403-47ad-9579-47ef6b06176e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d2919f04-d1ef-4e35-9872-1000cf0b7518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c440e1ea-8050-46f6-94be-a16ac239af78",
        "cursor": {
          "ref": "b2a74aac-86a0-4210-9e1a-315f97f34de8",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "00c31368-294b-4efd-896f-0e1792ce711b"
        },
        "item": {
          "id": "c440e1ea-8050-46f6-94be-a16ac239af78",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e8f6ce4a-7d38-4084-b778-e4637ff6e6dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43dfa61-6ae3-49ad-abda-1501f7ec0fc8",
        "cursor": {
          "ref": "cdfa1e3c-c787-4753-95d6-ca0e08957017",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "59f835e5-d484-492e-b36e-0d1f49f3bd57"
        },
        "item": {
          "id": "f43dfa61-6ae3-49ad-abda-1501f7ec0fc8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "85bbcb9f-acaa-4bcf-a1d1-0821fcee6b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ea534d-09f9-4ad4-8e5b-a1da4635298c",
        "cursor": {
          "ref": "29073008-ccd0-47e1-97e4-d610018480a6",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "c1cd8bec-7124-4e0b-ad36-6ea3cf544755"
        },
        "item": {
          "id": "d8ea534d-09f9-4ad4-8e5b-a1da4635298c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "30ce6207-23fe-4fec-ab2a-9ea45c4e668b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf50f1d9-c895-467c-9738-d97990bc964f",
        "cursor": {
          "ref": "260a4b60-414f-40ba-9252-4911ae37623c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d9be2943-550f-4caf-ac6c-cf0c896ef936"
        },
        "item": {
          "id": "cf50f1d9-c895-467c-9738-d97990bc964f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b2267452-09de-45af-877d-70aa300ce1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f84c37e-5044-443b-badb-df143e8abebb",
        "cursor": {
          "ref": "1c1b345e-256c-4348-af3b-e2fdb6c221c3",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4b64ae33-a72c-417b-8db6-67a9a15a0c90"
        },
        "item": {
          "id": "9f84c37e-5044-443b-badb-df143e8abebb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a508ef87-bb6b-41c5-9ade-913ef9cf1dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43af50f2-8bcf-4b14-a15d-04704b15adbb",
        "cursor": {
          "ref": "fbdcfb86-07b2-45b8-81db-760d91e63a3d",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "20cf622c-0771-41c0-93b9-0e1ac836ba3e"
        },
        "item": {
          "id": "43af50f2-8bcf-4b14-a15d-04704b15adbb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ef969efe-8852-49b7-aa47-244e858440c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06f1f821-b757-46da-80c1-8b0a4627a554",
        "cursor": {
          "ref": "bfa44cb0-8913-485d-8af6-1152267f3ff8",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "66d85087-da3f-4c5d-87ce-1e65031ed563"
        },
        "item": {
          "id": "06f1f821-b757-46da-80c1-8b0a4627a554",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "def2ff25-5754-4452-8bdc-797ab1b2175a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204bd190-73e2-4b96-bd2a-5c02266cf042",
        "cursor": {
          "ref": "1cae8a97-2f01-499d-9753-21b011b9615c",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "04fc6940-b5a6-469e-8de0-bf425c3f8e65"
        },
        "item": {
          "id": "204bd190-73e2-4b96-bd2a-5c02266cf042",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b20f6f8b-9a89-49ca-8435-f2a41e6db65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b5d5841-7f7a-4d48-935a-2397214cfdb4",
        "cursor": {
          "ref": "03d504d8-bab8-488d-bc4f-cf233299555c",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9629f74e-ff74-48b2-ad2b-df0a4f8b43bb"
        },
        "item": {
          "id": "5b5d5841-7f7a-4d48-935a-2397214cfdb4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "51d172c2-90ac-4c94-93ed-8d1f135ead2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81a09e79-b178-406c-a7ab-fbe45e85928d",
        "cursor": {
          "ref": "b2e0c728-42ce-4be7-a984-d532fcdf3e3f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "80c09b5f-a960-4bd9-a1bc-5166f0559cf3"
        },
        "item": {
          "id": "81a09e79-b178-406c-a7ab-fbe45e85928d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dd8b1c69-ffd7-4b11-8545-c9a77f174c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "093d6ec7-dbc1-449f-833e-af64f2a91ea8",
        "cursor": {
          "ref": "2c27728d-0d78-453c-97e2-67aa1977d2f8",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3e4a49c8-aac4-4e34-a7a0-ec4ced9af30f"
        },
        "item": {
          "id": "093d6ec7-dbc1-449f-833e-af64f2a91ea8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "88dd946f-7c41-461d-9d1a-ab6c04c20eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9dfb6b-aff3-46e2-ae9a-b0ea6525adea",
        "cursor": {
          "ref": "819c1f25-5d56-4048-92b2-f80020b4d677",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a57c521c-4cec-4a00-99b8-0926bf3ce892"
        },
        "item": {
          "id": "da9dfb6b-aff3-46e2-ae9a-b0ea6525adea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "eeb0082c-5ca4-40c9-a104-ed5e22a41019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475e29a1-f529-4ef4-b493-2c9343660c6c",
        "cursor": {
          "ref": "257f5fc9-1a1d-4a7b-8e83-78798dcfdfb6",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "321effd1-d7a1-4cc8-b038-f86ca0779361"
        },
        "item": {
          "id": "475e29a1-f529-4ef4-b493-2c9343660c6c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a7ad12f7-ad22-4128-b086-a3618bc7e83d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e698cf-c99d-4472-9e76-3c5a6e5a6f9a",
        "cursor": {
          "ref": "db48ffec-ad22-45f0-8068-be418d76ae78",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8fc6fdf6-201c-414b-aa2b-4c25f0ad82d1"
        },
        "item": {
          "id": "33e698cf-c99d-4472-9e76-3c5a6e5a6f9a",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2e5078b6-0dfd-4874-980a-23314b8a431b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fc59a9-3340-443e-9148-45ca0b76ffa0",
        "cursor": {
          "ref": "e2ad004d-bd34-469c-ac7f-b06215090aaf",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "14f0d985-50d8-4571-b349-eb3c2bcc3fdc"
        },
        "item": {
          "id": "a8fc59a9-3340-443e-9148-45ca0b76ffa0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ca3fa581-5311-4400-b0fc-753bea31df15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1682eaf-90ad-4bb4-8829-de76967f518d",
        "cursor": {
          "ref": "85472779-fa9a-4d27-b69f-6a71bdd5e427",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "02a55897-7511-4589-97c3-e3bd6969a0cb"
        },
        "item": {
          "id": "e1682eaf-90ad-4bb4-8829-de76967f518d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d976dc36-ce6f-46a3-89a5-4f2eb5007332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256b8500-48bc-4afd-9c86-7efcfc63bde4",
        "cursor": {
          "ref": "a08df540-0f07-465f-a73a-b847cfd3a4ea",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "91ad8152-2d8a-4df5-9674-f414a7f069a2"
        },
        "item": {
          "id": "256b8500-48bc-4afd-9c86-7efcfc63bde4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6515cddf-ef90-4ada-9bad-5862e53e9cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8d8e0a-d9b5-4126-b07e-e055646fc116",
        "cursor": {
          "ref": "f7e3929b-af3f-4e60-b703-e8eba4c2f980",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8c454da2-af17-4194-a9e0-35bbff004884"
        },
        "item": {
          "id": "fa8d8e0a-d9b5-4126-b07e-e055646fc116",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "16b74d42-c7a7-4571-9e37-3d38950d930d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e22dd7c-a09e-481a-aebc-978dcf642e76",
        "cursor": {
          "ref": "2e75ada2-7581-44a1-bccd-52b261bf62d9",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f5c99250-1c4f-4e78-8359-2ef94759a7d5"
        },
        "item": {
          "id": "1e22dd7c-a09e-481a-aebc-978dcf642e76",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b7ac6403-a767-405f-8ff1-06ce718bb4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f1e8d2a-5528-4fbe-8dda-ddd2eff488d0",
        "cursor": {
          "ref": "68950f71-e165-49f2-b302-809aebf615f2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "82a49b3a-ec1a-4f86-9389-c1903b1dea7e"
        },
        "item": {
          "id": "5f1e8d2a-5528-4fbe-8dda-ddd2eff488d0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6848aa36-488a-4283-989f-dec4ef78bb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f37de76a-c0eb-4087-a87f-a3e784113bf8",
        "cursor": {
          "ref": "46bf524a-cd0a-4dd0-9092-8d4933ca283c",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c6a34680-07cf-478e-ae60-0d2e8967c78c"
        },
        "item": {
          "id": "f37de76a-c0eb-4087-a87f-a3e784113bf8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cab44ed5-dda4-46fc-a2d8-1ea2e4fcdd2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc07d18-b25c-4b75-be11-d2b31a1b11ec",
        "cursor": {
          "ref": "dae132e5-23fd-4340-b9ee-c738670d0c11",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "191057a7-db30-4582-9de2-c41f6ce90b13"
        },
        "item": {
          "id": "8dc07d18-b25c-4b75-be11-d2b31a1b11ec",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f155e547-3422-46a4-ae13-7e3dafadb103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6343ad46-c6a4-42b7-81b4-73e73e24c029",
        "cursor": {
          "ref": "ab163f4b-9c56-46c3-867e-c6b9c054a91f",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "65d7bf6e-5a6b-4691-b937-7afa47e6c18e"
        },
        "item": {
          "id": "6343ad46-c6a4-42b7-81b4-73e73e24c029",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a778688b-b1ec-479c-9bad-a8e2a44964e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c162201-e9af-4dea-a282-4657a5853932",
        "cursor": {
          "ref": "9add794d-dab4-44c0-8dd5-d4aa611d1328",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "31475b90-7d6d-48df-908b-86fc54b194b4"
        },
        "item": {
          "id": "4c162201-e9af-4dea-a282-4657a5853932",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a2231c76-ffa3-4a05-a1fc-fd1fde9928f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4138f590-2734-4d25-b5e4-e919cbc1b5b0",
        "cursor": {
          "ref": "b3ed12d1-2250-4d86-945a-6fb837922c24",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "27ebc299-0dc8-4ebe-b920-85195272c51d"
        },
        "item": {
          "id": "4138f590-2734-4d25-b5e4-e919cbc1b5b0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "842b5fa5-574a-4e72-983c-b3bd331cedfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace5ec35-4256-412e-ace2-f3ebd4b93fa8",
        "cursor": {
          "ref": "8db5d660-0935-41bd-b881-acf1ebc099ca",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "98c9879c-25b5-4cca-9a72-7d2a876f826f"
        },
        "item": {
          "id": "ace5ec35-4256-412e-ace2-f3ebd4b93fa8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e77a00fa-a343-4cb1-82c0-4ff8226d6ef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70176735-a0d0-484e-b7db-32df77de0108",
        "cursor": {
          "ref": "9d6efee6-058c-4f7b-b04c-61dd0e5c5587",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a8345b49-4d57-4681-a7a1-ca922fee4919"
        },
        "item": {
          "id": "70176735-a0d0-484e-b7db-32df77de0108",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "540416d5-78d7-495c-944c-aa0570988ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141d31fe-f60b-4dab-9786-2d2bda43c5d7",
        "cursor": {
          "ref": "2b129d5a-3d4f-4d5a-91a9-63a7c337d8e3",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "745eb1ce-8d2b-4ddc-b8a8-61b8a1af7465"
        },
        "item": {
          "id": "141d31fe-f60b-4dab-9786-2d2bda43c5d7",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b3797a37-04c3-4644-9272-c9ecf4528074",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed12824-4477-429d-b165-5de7cdb52b8b",
        "cursor": {
          "ref": "dbd76fbe-7226-46df-ba77-6bb661cedf74",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "cf86c211-c255-404a-ae82-ae044bd9c517"
        },
        "item": {
          "id": "eed12824-4477-429d-b165-5de7cdb52b8b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f7bef3a8-a086-4c71-ac2d-d737935c69c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9743aa0d-51c1-4961-a010-3b2b9ada2358",
        "cursor": {
          "ref": "e93fdca4-6a14-464f-9911-d96530267625",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a126730e-6cec-49ca-8df1-7184c70c8427"
        },
        "item": {
          "id": "9743aa0d-51c1-4961-a010-3b2b9ada2358",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "12a4d559-8b27-4daf-908c-01b2742d7234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d309656-350c-4198-beab-859584cb2610",
        "cursor": {
          "ref": "5d417bd8-4c39-4bc6-b8e9-f51f0661b8a6",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "43224e04-1d83-442b-82ba-aaaef18c621e"
        },
        "item": {
          "id": "9d309656-350c-4198-beab-859584cb2610",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a3fd3d13-e2fe-4ab5-99ce-b9fe69462b9c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce1cfd9-9ff4-41e3-a342-39e5f2deae92",
        "cursor": {
          "ref": "0da4fe13-e345-4742-a1b5-5a95c32b1d2c",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d3443cfb-e475-4e59-8443-55fbd9d32f4e"
        },
        "item": {
          "id": "bce1cfd9-9ff4-41e3-a342-39e5f2deae92",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f6aae9c1-b8f9-4682-b45b-5d9bebc8de9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ee689f41-5054-404a-a0f9-2fcac884fdf9",
        "cursor": {
          "ref": "0b0c0a0d-8001-4aa2-9fcf-988e7597d48c",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6cc8329a-ee29-4e4c-8bb7-de17b107db81"
        },
        "item": {
          "id": "ee689f41-5054-404a-a0f9-2fcac884fdf9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eee62e78-cad6-44d6-a5ff-d2bceb9228a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "afc6e253-1358-4c41-97a2-a5e4ec1353df",
        "cursor": {
          "ref": "00936f14-8ecb-45d7-a851-fabc8b7d879b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6963051e-ae2a-4ab9-8431-233d4981fb09"
        },
        "item": {
          "id": "afc6e253-1358-4c41-97a2-a5e4ec1353df",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "364dfd22-4e75-4f8d-bac3-1f6bfb665a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "623d58af-f155-48db-ad35-a9ee0470dfcf",
        "cursor": {
          "ref": "fab14d39-e4c1-41b9-980d-43d044528a88",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d1b90cc3-52a2-4b59-8607-513cf3b1061d"
        },
        "item": {
          "id": "623d58af-f155-48db-ad35-a9ee0470dfcf",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1411faa9-150a-458d-a186-e9e0e013f745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "07d2e0f8-2c84-4fba-ab3d-91949a31456f",
        "cursor": {
          "ref": "10ac6517-8724-4b57-ab28-cdae4fe401b6",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "53b0d2c3-3fe1-4043-9def-e19b28105ab3"
        },
        "item": {
          "id": "07d2e0f8-2c84-4fba-ab3d-91949a31456f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d48076af-5811-473b-8b9f-e7b0e034158a",
          "status": "Created",
          "code": 201,
          "responseTime": 7889,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19774d5-b559-4f21-be5d-c958ca55cf6a",
        "cursor": {
          "ref": "10388189-eedf-423d-9f5f-79f177023af1",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "50f004ef-3cc0-43e4-a65f-9f860d9c6454"
        },
        "item": {
          "id": "f19774d5-b559-4f21-be5d-c958ca55cf6a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ff7aa672-d515-4284-a179-88e7fcfa946d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6b126315-783b-47bf-bd00-ec4a5b7989d0",
        "cursor": {
          "ref": "78173c86-aeef-40d4-b9b0-c6751531c0d3",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b9054302-7aa7-4a26-94c7-c35131068814"
        },
        "item": {
          "id": "6b126315-783b-47bf-bd00-ec4a5b7989d0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "51084d44-f686-43ce-a8b1-57f66c9892eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "084c963d-893f-41da-8db6-56a58d9b070b",
        "cursor": {
          "ref": "3695ab94-bfe9-4608-b3ea-0cdc21d8886b",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "50679228-7cd1-4a8f-b0bc-ea70a0937f64"
        },
        "item": {
          "id": "084c963d-893f-41da-8db6-56a58d9b070b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "255af528-7957-451e-91a4-ac4b1cad1232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d22eae2-569f-4322-9016-f0c55ca09cc1",
        "cursor": {
          "ref": "ae11f2f4-a85a-482c-91f7-1df399f78539",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9610ab14-7d72-4bad-b84a-96d1e8a71e55"
        },
        "item": {
          "id": "5d22eae2-569f-4322-9016-f0c55ca09cc1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9b03b622-e45f-4ceb-a0f1-e1456d09518b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f3e1c4-fbbf-4e58-86c4-9c6b4daf8175",
        "cursor": {
          "ref": "e8378466-ac31-439a-bd7a-fdeae41f0684",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c60a45ba-2ecb-411d-8a4e-9b98ddfaa21d"
        },
        "item": {
          "id": "e7f3e1c4-fbbf-4e58-86c4-9c6b4daf8175",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "adc76a5e-2338-45a1-960f-7a622ffd4e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba1af95c-0ba0-472b-9e05-2e9755b2b486",
        "cursor": {
          "ref": "df9a092b-de0a-4370-9b09-c06632f0aded",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2b68b981-6435-4db0-9cea-4af9669b095e"
        },
        "item": {
          "id": "ba1af95c-0ba0-472b-9e05-2e9755b2b486",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bc58ee42-9b81-4a5e-8fbc-77cf5e53f639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455bad14-8e1a-4f93-991f-a257523a86e7",
        "cursor": {
          "ref": "52c9fe8e-2d6c-4174-9f75-cd984f1f8adb",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "cc04110b-47c6-4b37-80b8-b4bc6544d509"
        },
        "item": {
          "id": "455bad14-8e1a-4f93-991f-a257523a86e7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6cee50b2-f319-422c-8852-6f82667a101b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab53887-ff03-4cb9-b264-cd98c2950480",
        "cursor": {
          "ref": "918246aa-a3ef-4ccc-b89e-b107aa0a1056",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "42e7e6fb-9bd5-4b26-86bd-664deb8fc991"
        },
        "item": {
          "id": "cab53887-ff03-4cb9-b264-cd98c2950480",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eb11b1e2-0a5b-4288-944b-dddd0f7a6753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c8a305-0d93-48c0-86c3-a26990f4f276",
        "cursor": {
          "ref": "3f321661-e8bd-412c-9f72-53e4e0ca64dd",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "aae3129f-1d9b-4260-a181-32b38d08085c"
        },
        "item": {
          "id": "e3c8a305-0d93-48c0-86c3-a26990f4f276",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "34e501e9-ee4b-484c-93f2-f8f0756ea3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea8badd-cb16-472d-abac-6aa8317067b3",
        "cursor": {
          "ref": "8d22924c-777c-4ba3-b59d-ab053406cad9",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f3e98f63-0fbe-457e-a96f-85cb043fc1f2"
        },
        "item": {
          "id": "9ea8badd-cb16-472d-abac-6aa8317067b3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "79af589b-c815-4b8f-a8ab-8572fce5fea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a830ba4c-adc0-4984-9142-287b97ddccac",
        "cursor": {
          "ref": "1365b1d3-4273-4b94-ad9a-ea07a6386b31",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a93a384b-1efe-4f49-af86-6b47a2400b4b"
        },
        "item": {
          "id": "a830ba4c-adc0-4984-9142-287b97ddccac",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "18542986-5868-40cf-a2e9-9204669fd9ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373301b6-f7f0-4c95-8521-bb3b1c002af3",
        "cursor": {
          "ref": "faab9dc9-3496-4396-9553-0b521d3adfff",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bd98d7c4-9fef-47e3-8648-08eb9e1a5e3e"
        },
        "item": {
          "id": "373301b6-f7f0-4c95-8521-bb3b1c002af3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1833894d-2a63-48d1-bef6-e645bf36176c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7496d0-650c-4704-ad1b-39c2c595dcdc",
        "cursor": {
          "ref": "f7092850-2bc4-439a-9989-cfd324c8d141",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2b849149-b496-488b-8526-d7644c35872f"
        },
        "item": {
          "id": "3e7496d0-650c-4704-ad1b-39c2c595dcdc",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9496144f-d20c-48b0-a926-76039e9fafd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da460e2-f0e7-4f04-aaae-6823f5fc3e61",
        "cursor": {
          "ref": "f03e6471-9280-496b-8d5b-de5346b879ca",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "dde59b11-d250-4c8d-b67e-b206a1b62bcf"
        },
        "item": {
          "id": "2da460e2-f0e7-4f04-aaae-6823f5fc3e61",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5537fe81-aad9-4bd3-9916-1744eef6bb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c350ba-3795-4276-9c9d-0b7970d6b9eb",
        "cursor": {
          "ref": "0e660cd9-e577-4667-b05d-4c8d80bf1bfe",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "dd6ed5b3-30f7-49f1-82e1-3d82bae1af34"
        },
        "item": {
          "id": "93c350ba-3795-4276-9c9d-0b7970d6b9eb",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6f9d286e-cef4-40a7-86a9-7a4c516675b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b440ca1c-fbee-418d-bf51-1755fa084a95",
        "cursor": {
          "ref": "12a46926-082a-43d8-bbce-b9daae146038",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "db4cef45-e0ca-4f8d-8d1c-fd825db613a2"
        },
        "item": {
          "id": "b440ca1c-fbee-418d-bf51-1755fa084a95",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "17b1f274-dbb8-4615-aa7a-41be79cfee78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a296ee-1cc8-4a6e-9980-4de741b0c78b",
        "cursor": {
          "ref": "2e5ce15f-df7e-4138-8f34-75844263fe57",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "10342574-5a97-4a65-afe3-d9bf36411532"
        },
        "item": {
          "id": "a8a296ee-1cc8-4a6e-9980-4de741b0c78b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1359b8ea-c0da-4bc3-a529-4371ecbdcad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d3c6b1-5bc4-443a-bbbe-d65ea4f29992",
        "cursor": {
          "ref": "0b0bcc4d-5e61-493b-bca5-f6be29d66a26",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "192ff628-25dd-4011-b44f-648945ff5c42"
        },
        "item": {
          "id": "a3d3c6b1-5bc4-443a-bbbe-d65ea4f29992",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "99379ee6-a0b7-48b6-aa39-b68636753252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e414adba-4d6d-4905-a607-0aca1c79c198",
        "cursor": {
          "ref": "10297097-4af5-4bf9-8192-a896a10ef98a",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a799f814-e9f4-4111-b188-16a0514e924b"
        },
        "item": {
          "id": "e414adba-4d6d-4905-a607-0aca1c79c198",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2761c893-01eb-40c3-b011-3efe14e61635",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "ab66069f-b926-4831-be37-fd582a75b442",
        "cursor": {
          "ref": "55cc9788-1001-4ab1-b097-6c744628b374",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4b148e7a-e3b8-4931-a16a-779593efb34c"
        },
        "item": {
          "id": "ab66069f-b926-4831-be37-fd582a75b442",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "40743c46-f63f-46ef-8da0-d746d8996217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f31fdb-86d0-4637-8d18-e6f853e4e2f5",
        "cursor": {
          "ref": "78265f01-93ef-4228-a6ef-5baa89c76cb1",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f0fa08a5-ecb2-429c-aeec-8c717df57d0c"
        },
        "item": {
          "id": "77f31fdb-86d0-4637-8d18-e6f853e4e2f5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0c045338-25d0-4462-86cb-eb07d1d50e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9c8256-f479-4a3c-8245-db2a100e7cce",
        "cursor": {
          "ref": "3b6b96d9-350e-4082-89bd-0cbc8b0abfe6",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4bdb0333-eb7c-40a4-92a1-d431f1bff538"
        },
        "item": {
          "id": "6b9c8256-f479-4a3c-8245-db2a100e7cce",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "48da430b-9b82-4fc7-89a9-08e492d3c835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc2e464-6876-4caf-93b3-ad4f0b0ee05f",
        "cursor": {
          "ref": "b80fc1fa-6c78-4b6c-8ff2-5d01ecfc0609",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "349cecdf-df37-41cf-b60b-76bdd9537a61"
        },
        "item": {
          "id": "1dc2e464-6876-4caf-93b3-ad4f0b0ee05f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "379c8577-d7d8-4339-a146-6b452d4acb99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670e9b24-e129-4de4-b07d-7b0a2dcf12ee",
        "cursor": {
          "ref": "1273ea6a-231a-4fa4-960e-db63bfaa87e5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "4e6ff3fd-37ae-4221-a42b-cd53e18e59ab"
        },
        "item": {
          "id": "670e9b24-e129-4de4-b07d-7b0a2dcf12ee",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "dc7ffc5e-b4dc-4b59-aca1-0ef2945b94cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227a0b37-91d4-415c-a60e-708f031ad918",
        "cursor": {
          "ref": "c7f25a75-50c7-4aeb-ad97-16b171a88495",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c6a16acc-aa5e-419e-88c3-a65e85d26f32"
        },
        "item": {
          "id": "227a0b37-91d4-415c-a60e-708f031ad918",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e5a2a861-8a06-40f7-b9ab-4844ac975f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dbffa3-2e53-4b8e-81ba-a074050cd3ec",
        "cursor": {
          "ref": "3e559ea6-14b6-49cc-8d2e-077df3d85f71",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9bf0d963-3fe2-4641-a46d-e28485932f76"
        },
        "item": {
          "id": "17dbffa3-2e53-4b8e-81ba-a074050cd3ec",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3c935837-95b3-423f-aa6d-4e55c841e2fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d8d731-956c-4596-97a6-e2bb7b74628f",
        "cursor": {
          "ref": "ef5d2f8f-adec-41b8-9a8d-f4e162d37e4f",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "35eb72e0-58dd-42d9-9375-54680c316017"
        },
        "item": {
          "id": "a3d8d731-956c-4596-97a6-e2bb7b74628f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6f164249-0f09-45b3-b5f5-fb6cb82a2a6b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "8f23cf36-6b77-4fbf-b040-99aab2c0c4df",
        "cursor": {
          "ref": "78139136-b70f-4c67-8e4c-e2bbe6d8d81a",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "a6a99514-5e69-485f-a466-87e26eb2f0c1"
        },
        "item": {
          "id": "8f23cf36-6b77-4fbf-b040-99aab2c0c4df",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "53357a27-120a-41c2-80e9-ef131f9dc371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1eebb3-d634-476f-92c8-fc1ceff710c2",
        "cursor": {
          "ref": "48a4fcc7-0414-4ad2-ab98-fb92a42ec120",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "45e96630-7ec6-4e7a-9026-bb2e1427505e"
        },
        "item": {
          "id": "fe1eebb3-d634-476f-92c8-fc1ceff710c2",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4eb0b5c8-1280-44ab-bba7-f2c9aaf97f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8343a9f9-1bf7-4181-a15e-b38df45e62dc",
        "cursor": {
          "ref": "0038483b-89fc-4fd5-b71d-2e35e5e94d2e",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a677d677-4968-4c71-8bfb-9732d6ba7c5e"
        },
        "item": {
          "id": "8343a9f9-1bf7-4181-a15e-b38df45e62dc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "15e3f634-a66b-462f-9b55-7a532f56d2d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d5b299-7639-4d07-976c-68c6ca252953",
        "cursor": {
          "ref": "20147f92-334f-441a-80fc-787d2ece9df5",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3ac3cf17-42c1-40d5-9302-a6066a3a4f64"
        },
        "item": {
          "id": "c3d5b299-7639-4d07-976c-68c6ca252953",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7cde2094-3fbc-4a52-ba47-e2c763e0b14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b426b82c-534f-494e-8408-3efb4aa9bacb",
        "cursor": {
          "ref": "144ab551-11e2-4c7f-a335-aa31aafc1558",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "82dc9a3c-d355-424b-8cd1-c1919b117e8e"
        },
        "item": {
          "id": "b426b82c-534f-494e-8408-3efb4aa9bacb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "16181cda-9f1a-4c78-8d9a-67e5af2bb5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c061290-dc64-4466-ac8c-3fd59f0dc7c5",
        "cursor": {
          "ref": "8f6b75bf-3142-44f5-892b-7e04933e54aa",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "97a1437c-df35-48b3-afba-4559426cb3a7"
        },
        "item": {
          "id": "7c061290-dc64-4466-ac8c-3fd59f0dc7c5",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "59cd1856-6c52-44ce-a833-217d99f7bbc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400d4e66-aa40-4db1-9f37-42e82ca7c4b8",
        "cursor": {
          "ref": "3283e3b1-f662-4eca-ac78-5ac87c8b2eb0",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5d436e7b-6cf4-4596-b10a-e43ca96964e4"
        },
        "item": {
          "id": "400d4e66-aa40-4db1-9f37-42e82ca7c4b8",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2fd2fb83-39eb-4e8f-9276-b2349ecd544b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "a843842f-bc5b-498b-afef-b06948b5af4d",
        "cursor": {
          "ref": "5607104d-027d-4130-a1a3-b6e49232e7e8",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "46103519-f363-44e5-ae12-2ac9bda21d49"
        },
        "item": {
          "id": "a843842f-bc5b-498b-afef-b06948b5af4d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "aa99b241-7559-41e9-8837-57c9a1b066cc",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "aace46d1-6810-4f1f-b36b-e7308f162740",
        "cursor": {
          "ref": "ce6ac4d4-78d5-438d-aa48-1986ba93ed71",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "58428560-aa80-4866-b0db-2e922b8ac486"
        },
        "item": {
          "id": "aace46d1-6810-4f1f-b36b-e7308f162740",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c3ed70aa-2223-45ed-b37f-fb988b57a072",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "555b901a-428f-4603-9c83-801b4f37d634",
        "cursor": {
          "ref": "97dfa97b-46c9-45e6-8668-e407c0fc58f5",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "3eb6b7d9-5da5-4b9a-b1d3-c7fcb82b62d8"
        },
        "item": {
          "id": "555b901a-428f-4603-9c83-801b4f37d634",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ec420fb9-fad7-4b70-96e4-da0f9d871574",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "717870cc-fb15-489b-916f-12545f69bfcb",
        "cursor": {
          "ref": "96221f25-7d4c-449e-a9a8-8f58ff05a594",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cb816d43-48a5-4ee9-869d-855c65c1d40f"
        },
        "item": {
          "id": "717870cc-fb15-489b-916f-12545f69bfcb",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7e4bbe16-8c3e-428f-ac7f-84b5b4f584fb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "1bda68b4-e8c7-4903-857c-1b25f78fc90d",
        "cursor": {
          "ref": "012a729d-22f4-4f97-bc3c-b7623f4cb993",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "39498777-5f1d-4c69-9aaa-ca77f008322f"
        },
        "item": {
          "id": "1bda68b4-e8c7-4903-857c-1b25f78fc90d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bff97468-c8e5-4fba-bc02-9f8b220aa6f8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "f7328f1f-aed6-4768-9ac8-2b2adbcc5cb4",
        "cursor": {
          "ref": "0004285b-3304-4de0-ade8-7981f21febac",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "565ad22d-d4a2-4ca6-8364-7245b957fa98"
        },
        "item": {
          "id": "f7328f1f-aed6-4768-9ac8-2b2adbcc5cb4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7e0837dd-7a4c-4b37-bc30-f382d4466e85",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bdb0a2e-484b-4f53-aee6-fa9ffc2242e9",
        "cursor": {
          "ref": "f1203257-fbae-497a-8a49-9ec6b5cf8b6c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "49a079c0-2202-497f-8b67-abb3d5990b06"
        },
        "item": {
          "id": "1bdb0a2e-484b-4f53-aee6-fa9ffc2242e9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f685005a-ac71-4174-bd50-27e5d82b8454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e0d481-0d16-457a-98ad-9af43939a938",
        "cursor": {
          "ref": "91cd8a0c-68ea-4ada-b4ef-c3e1146ab6f9",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "67f5cc43-21e2-42c0-b051-72a4dac36ce6"
        },
        "item": {
          "id": "b8e0d481-0d16-457a-98ad-9af43939a938",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "13941353-537d-46ad-b536-17a4685cc3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957baba3-0f47-4664-ab52-e9dfefa5f947",
        "cursor": {
          "ref": "5266e9df-50e2-45b8-b133-e144dc6ffe96",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0984535b-c804-4133-b459-2589b4345052"
        },
        "item": {
          "id": "957baba3-0f47-4664-ab52-e9dfefa5f947",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a02e34ae-7bca-435e-81fa-5dcc2cef6bf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a575c78-4409-4862-90c9-e9e5df2cb58a",
        "cursor": {
          "ref": "626a9952-4c89-456d-ab58-5daf0719bdba",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "45a0cc96-5b09-4443-9b0c-c549e7dec9c4"
        },
        "item": {
          "id": "2a575c78-4409-4862-90c9-e9e5df2cb58a",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "58f2d54e-ebc9-4e5b-b5e2-8d7a7650d2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc27d6b7-1db3-49c8-8905-070d45eff721",
        "cursor": {
          "ref": "3686c4b7-02ba-4a19-819b-d6186f2443dc",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0ba8ef27-d8d2-4f90-8c9c-c6d7dafb5d6d"
        },
        "item": {
          "id": "fc27d6b7-1db3-49c8-8905-070d45eff721",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "cb90f1ca-155b-467c-879b-99e6023358f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf891d4a-f556-48d6-b3d7-69ce7f7ee926",
        "cursor": {
          "ref": "ac74ad11-c91c-417b-8b36-449e9548e888",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "bc6babf7-cc30-437e-8af0-3ab45bc8c614"
        },
        "item": {
          "id": "cf891d4a-f556-48d6-b3d7-69ce7f7ee926",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e113e478-182e-4b62-b9da-f74f87c8ebd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88df5a6c-2fb5-483c-b50f-aa8f8b58a3f2",
        "cursor": {
          "ref": "06631512-d862-4ab9-b558-7faf3ff1dede",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "28fdaa82-894e-4afe-a896-5f68933734f4"
        },
        "item": {
          "id": "88df5a6c-2fb5-483c-b50f-aa8f8b58a3f2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6f9a8423-0617-4b79-ad6c-91246e930346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa019aa-4868-48a9-aa0e-40ac67799103",
        "cursor": {
          "ref": "6400e985-1dfc-4d9e-9906-21d3e173d8ab",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e49e9803-d3b8-4fd8-99b9-a769546b66fa"
        },
        "item": {
          "id": "1aa019aa-4868-48a9-aa0e-40ac67799103",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "28b348f3-fdae-4c1a-b194-f4dd2ae3910b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca70f56-f533-4d9e-a9ae-355ee8a03f79",
        "cursor": {
          "ref": "36916b4f-c3df-46a7-b3c7-1cf0e8170629",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "286d9f94-25e5-472f-8816-1231f05bcf9c"
        },
        "item": {
          "id": "fca70f56-f533-4d9e-a9ae-355ee8a03f79",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6e74b887-63e8-4467-bea6-5212bda3cb43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bcedd59-a285-477f-9e65-7237a7dd0e66",
        "cursor": {
          "ref": "30873bd6-e981-49fe-8797-bdaf8d58c221",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8f4a01ee-ca89-4cce-958c-68736a07dd93"
        },
        "item": {
          "id": "3bcedd59-a285-477f-9e65-7237a7dd0e66",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1e9282a7-611f-4015-b730-b2a21b4f0a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05143d7-573f-4437-a9d5-762d2ec9701a",
        "cursor": {
          "ref": "71715b30-0d35-46ba-a1b4-f894c2de6bc2",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "49a8e77c-c7d9-4d6c-98e4-68afa948ac82"
        },
        "item": {
          "id": "e05143d7-573f-4437-a9d5-762d2ec9701a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3513cc63-1166-4582-ba17-0274cdd6ee25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4881382a-1836-42d2-8a8b-6ba7317c9701",
        "cursor": {
          "ref": "adcb2c1d-ed04-40ca-af5a-42a1cb3220af",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "494aea68-7167-4257-82ae-4d59f5229e11"
        },
        "item": {
          "id": "4881382a-1836-42d2-8a8b-6ba7317c9701",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "995bac8a-2a0f-4c55-a185-761300592e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7b3532-42e6-4768-ab4a-9cf83d345783",
        "cursor": {
          "ref": "1957dd66-9c99-45c2-889d-395d3bb9740c",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "49ed2a33-70cc-4852-9fa8-a680e0183a4d"
        },
        "item": {
          "id": "dd7b3532-42e6-4768-ab4a-9cf83d345783",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d24366ca-8a33-41eb-a7c9-f3171c4a7112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8f1c46-b132-4070-8336-858e2217be51",
        "cursor": {
          "ref": "a81b7700-9376-4f51-ab00-90f0a4dc4e03",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0e27c3bf-3963-4e76-b965-d63663a25d52"
        },
        "item": {
          "id": "8a8f1c46-b132-4070-8336-858e2217be51",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c7768ca2-7d60-4e23-9dd9-376bbe12b821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f659978-8b45-4600-8a04-28d05a6e4991",
        "cursor": {
          "ref": "e3bb83ba-3cce-4bbe-bf08-b3ecec1a7059",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cb303c76-5639-41b7-bcd4-6b503d9fb6e5"
        },
        "item": {
          "id": "0f659978-8b45-4600-8a04-28d05a6e4991",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "3802d825-4249-43c5-b916-3331cdbd6c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a91c49-9f1e-47e1-837e-0cc2bb3d739e",
        "cursor": {
          "ref": "0a2724cd-15c5-4593-8ee1-d3aab5d57774",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "27271422-f9e6-4e1f-8aeb-3b18b7183a23"
        },
        "item": {
          "id": "b0a91c49-9f1e-47e1-837e-0cc2bb3d739e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d2db3040-cdeb-4878-862e-b94a9e1cbad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a734853-f273-4946-841d-41c040a34609",
        "cursor": {
          "ref": "8ce20de3-cfbe-49dc-8227-10f3ca3af631",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c4f65a45-c458-46f9-ac6b-8e95f6acdb98"
        },
        "item": {
          "id": "1a734853-f273-4946-841d-41c040a34609",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "40def68e-faed-4119-a493-123dcd8044cd",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "c5954d5c-c0a1-4854-8094-85ec3a8ad46f",
        "cursor": {
          "ref": "80f64dd7-e715-47fb-9c7f-e6574de72359",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e10d0356-aff1-403c-9a96-455622ce3cc6"
        },
        "item": {
          "id": "c5954d5c-c0a1-4854-8094-85ec3a8ad46f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "54f4aa43-c3e7-4801-8d76-8f5139c7eef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9ea651-cbcb-4423-9771-842374e53027",
        "cursor": {
          "ref": "2014fbfe-4216-4662-b421-9feb96e32297",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "29793181-090b-4a6a-b283-7ce8d53fd21e"
        },
        "item": {
          "id": "4a9ea651-cbcb-4423-9771-842374e53027",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "11f75660-73a4-49d0-a48a-a7e7af7cadc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4ef2b2-c97d-479c-8dfa-0e7e53ecd42f",
        "cursor": {
          "ref": "3322101d-b059-436f-afd5-a7da0ea0903c",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "05e3a915-a359-42e9-be05-9cf2c58a88a1"
        },
        "item": {
          "id": "9d4ef2b2-c97d-479c-8dfa-0e7e53ecd42f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "821abdab-5152-45c7-b227-b4fdc987c77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb76ed1-bc35-47a8-b366-d86575da1a6b",
        "cursor": {
          "ref": "ff630346-1a68-4d73-9aac-a1bbfb00e04b",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c159237f-cd05-4f24-9f4a-e353b9ae93f5"
        },
        "item": {
          "id": "0cb76ed1-bc35-47a8-b366-d86575da1a6b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b3047219-a920-45b1-a3d9-af37beb9ab67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e5c51c-baad-40ef-aa00-14def63b2973",
        "cursor": {
          "ref": "636157c5-85a2-43c1-b642-0230551a4da4",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "7d615894-d36f-4ceb-a401-c255f96f1652"
        },
        "item": {
          "id": "60e5c51c-baad-40ef-aa00-14def63b2973",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5b87b2da-d6a7-41da-bc02-713f6d443b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2c0446-978a-4c89-b347-ae70b7ac0791",
        "cursor": {
          "ref": "c6c0c509-ce2f-451e-8015-de895d63c34c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4d73da6c-2a24-4a0e-91df-53911655f8f9"
        },
        "item": {
          "id": "0e2c0446-978a-4c89-b347-ae70b7ac0791",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "b285429e-fb48-4441-ba98-66356e0f83ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f816bd7d-018d-4f11-b2dc-e68de26c560d",
        "cursor": {
          "ref": "da5ee3e6-e118-40f3-85bb-7908e9f6fc4e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ba23ea34-a374-4bf8-980a-a0ccabfc693e"
        },
        "item": {
          "id": "f816bd7d-018d-4f11-b2dc-e68de26c560d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "569ffd02-5dc1-4f2b-8512-2e18aa1232f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dde9e0f-aacb-4967-bc79-aeda72f3f99e",
        "cursor": {
          "ref": "d474da5a-286d-4fda-a6f3-8a2e9a4e0705",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5e35f6d5-20ce-4232-9fbc-b633b7985059"
        },
        "item": {
          "id": "6dde9e0f-aacb-4967-bc79-aeda72f3f99e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "773ce568-86ce-4a4f-a650-45f173d8d828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1453cc-af35-400f-a5e9-15dc270b5753",
        "cursor": {
          "ref": "778a0151-abc1-435c-bacf-9b1c1ee66e55",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "46f3be9d-c22b-4d52-a2c4-2bd29938db29"
        },
        "item": {
          "id": "0f1453cc-af35-400f-a5e9-15dc270b5753",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "9393d2e3-ca04-4912-bd97-29f88b0a9b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a3746e-4013-4b2f-a7f3-7b539cab10c0",
        "cursor": {
          "ref": "102fcb92-1bed-4ccc-a32a-8fe78c975fc5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "90828c3f-b12c-4259-bae8-d43d4600d87f"
        },
        "item": {
          "id": "a5a3746e-4013-4b2f-a7f3-7b539cab10c0",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "60b51e1f-afc8-4832-bf2c-d9722444d9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc00cdb7-62e4-4e12-a209-a47e4cf93a5b",
        "cursor": {
          "ref": "ad3f2958-4e15-4a25-b0fb-69c2aaafca9a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "349a3b51-17a7-48f4-a675-2db1f6a0363f"
        },
        "item": {
          "id": "bc00cdb7-62e4-4e12-a209-a47e4cf93a5b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c879173b-03ae-495e-bb7f-cadfbe8029f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de262d98-0375-47f3-aa3e-5d8235324bcf",
        "cursor": {
          "ref": "ecfb4b45-4ba4-4bbf-a8ae-9d1a69bf12ed",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "633690a5-73d5-4b02-b1ac-5a8f443c90b8"
        },
        "item": {
          "id": "de262d98-0375-47f3-aa3e-5d8235324bcf",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "322ba5d3-51be-49d3-af6b-e688947fabe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9a2b36-2d73-4d38-898b-96d26737f7a3",
        "cursor": {
          "ref": "bdc029a8-79d9-4366-b7e5-197fc1df8220",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6a740b4b-a416-405e-b562-ca35d9dcf409"
        },
        "item": {
          "id": "3a9a2b36-2d73-4d38-898b-96d26737f7a3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "81366c28-9d8a-4f01-b442-f3640144f398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec2c3043-61ee-4093-a811-b57bd611d73c",
        "cursor": {
          "ref": "1933fb73-b359-4a7f-978c-c06e9bf98308",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "657f3851-5787-4d5a-a7d5-8b1814afd00f"
        },
        "item": {
          "id": "ec2c3043-61ee-4093-a811-b57bd611d73c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8f0c6ce8-749b-4172-822e-f35fd203a87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a4ae34-94e4-4ee0-92b3-709f65eb3e18",
        "cursor": {
          "ref": "ebeceab2-bbe4-483f-92bb-140643681f5e",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c9902102-1a9a-49bc-ac52-5575d23a8132"
        },
        "item": {
          "id": "f7a4ae34-94e4-4ee0-92b3-709f65eb3e18",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "db8c5ffe-2f35-4426-8e10-fee99b159878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b0d0f9-c64b-46e9-9fb8-7c20c1c7a1c0",
        "cursor": {
          "ref": "65052d38-5ad1-49f6-9868-86f936cddf80",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d806f8bd-eb09-4886-a894-bc2bc6cf97cb"
        },
        "item": {
          "id": "f4b0d0f9-c64b-46e9-9fb8-7c20c1c7a1c0",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3b7a436e-c070-4585-9c92-7178e8dd48a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d5bdf3-c41f-4ad4-9e1a-6c503c66569c",
        "cursor": {
          "ref": "199ffaae-89e7-4734-9ac8-e2ac93217b0b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7830a431-02bf-4695-9656-b44f104932a7"
        },
        "item": {
          "id": "c0d5bdf3-c41f-4ad4-9e1a-6c503c66569c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d1f42d5b-6f23-4160-a6a8-863de2031cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66408deb-d92d-4856-847c-5bedbd2189ff",
        "cursor": {
          "ref": "27769de8-daaf-4719-bf66-927629ee1e44",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "26c40ebb-1995-42d6-aa20-d5f21504efec"
        },
        "item": {
          "id": "66408deb-d92d-4856-847c-5bedbd2189ff",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "634a3c9c-6695-45f6-8f4d-0dd1c3e08bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188f0ccb-7dc2-4d9c-9d74-bd25ac8559d4",
        "cursor": {
          "ref": "782a50f2-631a-41ca-a7db-ae81951359f1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "06355b3e-a356-409c-ab53-5226680a8133"
        },
        "item": {
          "id": "188f0ccb-7dc2-4d9c-9d74-bd25ac8559d4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bdd25b5d-07e4-4de8-8f98-67d81be9b787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5230a5a3-1861-4d3f-89bc-66184e33c14c",
        "cursor": {
          "ref": "d950fee1-238d-4481-bded-5df4bb3b5ead",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e082bf7b-14db-4caf-9652-d6a356e8703f"
        },
        "item": {
          "id": "5230a5a3-1861-4d3f-89bc-66184e33c14c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "873a4794-901a-4539-9470-3484e5c1c574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1a16ec-b8cb-4409-8a1d-d6193aad6ff9",
        "cursor": {
          "ref": "5bafe242-0e81-421a-97e5-a59a2d8cff38",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bc4b7bc2-361b-4415-b69a-faa4966eb570"
        },
        "item": {
          "id": "4c1a16ec-b8cb-4409-8a1d-d6193aad6ff9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9029e2b6-f6b4-455c-8601-e329ba91fe5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85dc3897-16f5-45c5-bb19-99cf868cc523",
        "cursor": {
          "ref": "f330f420-3555-4cd4-8484-95f14b1ef414",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d6e9483e-edcd-46c0-977f-62909da2ef65"
        },
        "item": {
          "id": "85dc3897-16f5-45c5-bb19-99cf868cc523",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "15159a05-6a4f-4ba4-82b9-a8e48890a6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfa37c5-2b3e-42fa-b2e0-ecaed9aada8b",
        "cursor": {
          "ref": "cb99098d-e2ff-44ce-a0a6-b6aa2c8147dd",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "72366bee-102d-4ffe-afe2-55858960c665"
        },
        "item": {
          "id": "2dfa37c5-2b3e-42fa-b2e0-ecaed9aada8b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "154118b5-aaaf-4bcb-9c17-127371547b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9bf8745-c831-407e-a4ad-5db8da33bae4",
        "cursor": {
          "ref": "2b7be84e-11d9-411c-abab-5e6d905fe57f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c6573f87-71bd-415d-8b91-3dfe71459deb"
        },
        "item": {
          "id": "a9bf8745-c831-407e-a4ad-5db8da33bae4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ba2511f0-0884-4fb5-9d43-c1cc2313ddd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d140406e-a7e2-491a-9f19-048dbe29b738",
        "cursor": {
          "ref": "2f5ec453-e845-4691-90c5-08ece3a76a07",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1a070ce5-8cda-49ae-99a3-b7de73c445e4"
        },
        "item": {
          "id": "d140406e-a7e2-491a-9f19-048dbe29b738",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "36c2f15d-86d2-4f36-8894-1e1e455f778d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed40440e-bb4e-440b-b49d-cefe2f1fbd70",
        "cursor": {
          "ref": "a95bc386-73ec-46a0-83b2-29fec14e2290",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "11730c7a-bc9f-4df8-8d20-26165e0890b3"
        },
        "item": {
          "id": "ed40440e-bb4e-440b-b49d-cefe2f1fbd70",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e4915f3b-763a-4137-99f9-36fe57db2e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1299618b-0db5-4cfc-a558-f3313cc4ff69",
        "cursor": {
          "ref": "53b77a3b-f415-4ffe-87a8-cd176d17be70",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0b7db177-e139-433d-a22a-dd58d0239380"
        },
        "item": {
          "id": "1299618b-0db5-4cfc-a558-f3313cc4ff69",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "888c4439-8c5a-4701-b07b-b280147b7475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33adc457-b43b-43b7-ae3b-402275d8dd47",
        "cursor": {
          "ref": "df2905c7-3625-43c3-9353-4caf6cf08fcd",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "4c95b80a-fc63-4a26-9133-a9bd51084bec"
        },
        "item": {
          "id": "33adc457-b43b-43b7-ae3b-402275d8dd47",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "2a83bdaa-a187-4a31-b406-93ad1ac92c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5170d475-97e3-40df-b77c-538e1319172b",
        "cursor": {
          "ref": "bb6b2929-c11b-4c5d-abf1-f4cab3d54baa",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "d0c65c75-299b-4bb2-8320-7f8e01e84630"
        },
        "item": {
          "id": "5170d475-97e3-40df-b77c-538e1319172b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6ad767d0-d3f9-4a4a-9040-496876dce224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e1a09f-5f5b-4b6e-901e-325093bb081e",
        "cursor": {
          "ref": "518985da-03a9-4102-9ab0-8e36aeab2e58",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b50930a3-4d17-45b1-86a4-0cdecfc5e35a"
        },
        "item": {
          "id": "d6e1a09f-5f5b-4b6e-901e-325093bb081e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2bc36865-33cd-4ec7-8d3d-75c389de70e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e6c2bb-7db2-42e0-89dc-72527a9d9834",
        "cursor": {
          "ref": "83cca3da-3003-4a45-8f02-ae2c3f4f0062",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c67b3217-d425-4710-8f39-b64c67ba59bd"
        },
        "item": {
          "id": "b0e6c2bb-7db2-42e0-89dc-72527a9d9834",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d241f376-7a6b-4de0-815f-3e2a25348ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4943c673-5ed8-40b2-9130-1e95225ac6fd",
        "cursor": {
          "ref": "cfc930e7-c869-4dc0-8198-5b5767a16418",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "14f9388b-719b-4556-8931-758fd6fdc505"
        },
        "item": {
          "id": "4943c673-5ed8-40b2-9130-1e95225ac6fd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6e866e8d-ab99-420e-aad3-d43acc45a6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18dfc18-d756-4656-935f-042d77c5393c",
        "cursor": {
          "ref": "cbe6aa78-56b5-4778-a4da-9ca243d16724",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ad99e042-2182-49b8-90d7-3911b69c0c97"
        },
        "item": {
          "id": "c18dfc18-d756-4656-935f-042d77c5393c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9c568dde-b13c-412a-9bfd-f91ec22636b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39c44de4-30de-4c23-8f64-c2a066b6c027",
        "cursor": {
          "ref": "52fdb808-6ac0-4143-bb04-b209093f9177",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "717f5737-6818-4dce-965b-a656d4969538"
        },
        "item": {
          "id": "39c44de4-30de-4c23-8f64-c2a066b6c027",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "33699a26-9481-430c-9f0c-65285d7142c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c741d4-b2b8-4352-84bd-ad1ff34f433b",
        "cursor": {
          "ref": "65163f4e-f8da-41b7-ae8f-9df378828dcc",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d9796413-7f88-4a26-bae8-1b4e8447f21f"
        },
        "item": {
          "id": "a1c741d4-b2b8-4352-84bd-ad1ff34f433b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c510cc24-12e8-4781-bc70-0c5e0fa3cf7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d72118d-625d-48dd-a0e2-453ef38ab2da",
        "cursor": {
          "ref": "7805a30d-2b13-4a84-a33a-77bb54621d20",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7df78333-781e-4139-a859-7d8c97f96354"
        },
        "item": {
          "id": "7d72118d-625d-48dd-a0e2-453ef38ab2da",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c3d7ed87-c130-4d8c-9058-005d4684a03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eeb5ddf-5e5c-4671-9576-12519a94c541",
        "cursor": {
          "ref": "bb0965cc-e2f5-4791-9722-4e61792682e5",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ade56bc5-579f-4ccf-bf1f-86d9e62f3bac"
        },
        "item": {
          "id": "3eeb5ddf-5e5c-4671-9576-12519a94c541",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "87619218-5bf1-4e56-b881-3acc8b57d9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d0f65f-bd05-4903-bd2b-e0970d2b04d8",
        "cursor": {
          "ref": "c0c7b300-01c5-46a2-bceb-3bf2c336b4d5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "84d79aec-dc62-4b39-bb5d-b75b1fd212f3"
        },
        "item": {
          "id": "04d0f65f-bd05-4903-bd2b-e0970d2b04d8",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "21baa0b0-1d2c-4f3b-8f75-ed9e2738d2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9aa01b-6251-487e-8c42-ce450462780b",
        "cursor": {
          "ref": "daeb50ec-31be-4fa4-8816-fc73e9599b6c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ba8de5d4-8110-40df-ad56-4c0307aab457"
        },
        "item": {
          "id": "ec9aa01b-6251-487e-8c42-ce450462780b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "662219c0-bf86-453d-8ee0-5571575f083c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d16243-020c-47de-8b48-d61d52166ce4",
        "cursor": {
          "ref": "534bc4e3-c9b7-467d-9200-8dad61781355",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c2985d47-5e74-4db9-8ea3-93d0d1a1098f"
        },
        "item": {
          "id": "a3d16243-020c-47de-8b48-d61d52166ce4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2a11f1c9-cdb1-4e58-9a39-be9f652af541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e5e7f4-b123-428c-8e5d-fc0935c3567f",
        "cursor": {
          "ref": "c4bedf63-450b-4008-8af0-c0246ec0d3f2",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d3372b39-82b7-436e-a24e-0e1658d85975"
        },
        "item": {
          "id": "09e5e7f4-b123-428c-8e5d-fc0935c3567f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f25b2993-96ae-49c0-a1f0-2a2a2ed224eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e92764-6e6b-4046-a292-c8761424406b",
        "cursor": {
          "ref": "3e2019ec-9933-4ee5-a45e-75acf4b63f71",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "df34c38e-df82-43c9-bd6d-d1bd5f789d37"
        },
        "item": {
          "id": "68e92764-6e6b-4046-a292-c8761424406b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "899d6002-adac-4417-aae2-f9d2469ee276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21192c07-80f6-40a9-9dfc-054a6784540e",
        "cursor": {
          "ref": "8be20396-922e-4a96-8a9e-d23121d30f20",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "73bc1b91-c3eb-4a29-8ab4-5494c53f89dd"
        },
        "item": {
          "id": "21192c07-80f6-40a9-9dfc-054a6784540e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f9a24399-c4c9-428f-aa7e-05685e960f20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8ba7c3-70af-460d-ae09-495062b39ac4",
        "cursor": {
          "ref": "cd0697ed-32b6-4782-9489-3fe2721944d5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b51b01be-508a-4e4a-9fa6-d18a37fb657b"
        },
        "item": {
          "id": "7e8ba7c3-70af-460d-ae09-495062b39ac4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b17470f5-4c7d-46b0-98cf-f362b69797cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c187e586-6682-4d2b-8bac-551703bba50f",
        "cursor": {
          "ref": "076666e9-fb5f-465d-bc83-04722697627b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "3bde85eb-b047-4bbc-8307-9b57ec1f290b"
        },
        "item": {
          "id": "c187e586-6682-4d2b-8bac-551703bba50f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "88a1e106-1911-45c0-b8d3-f9e4365aa125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd090b7-3654-4ad8-b440-7a97ea28878c",
        "cursor": {
          "ref": "e6a06564-ad99-41ed-b813-fe5a65e5e2cf",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a37ef8de-7e56-4cd4-b1f3-bbc64c176501"
        },
        "item": {
          "id": "6bd090b7-3654-4ad8-b440-7a97ea28878c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c4de07c6-b2bc-4fdf-9199-2358151c5599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de688db6-3957-4c99-88bb-adc915e0ad51",
        "cursor": {
          "ref": "3f68a902-45f1-4eb3-8488-3d32e891f5b4",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "18196ff6-f59c-4777-b01d-23f0bb75fea0"
        },
        "item": {
          "id": "de688db6-3957-4c99-88bb-adc915e0ad51",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "909657c3-723c-45f5-8349-ef50c4cda1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fa90db-0911-4805-99f3-788ca14d65a5",
        "cursor": {
          "ref": "366b53a6-8936-4066-9108-0fb48d0a32b1",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6c3a8ac0-09fa-419d-9983-4f9b2d5484d9"
        },
        "item": {
          "id": "73fa90db-0911-4805-99f3-788ca14d65a5",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fa025dda-0f8d-44e2-8090-32216166b40c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4829849d-741b-47c8-b2c8-04a858dbfca2",
        "cursor": {
          "ref": "abfa0881-a16a-4714-8397-509114c2789e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "1dffe49e-07f8-48f5-88c5-47110058903a"
        },
        "item": {
          "id": "4829849d-741b-47c8-b2c8-04a858dbfca2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dfcd55cb-cce7-4a98-9dbb-2354985363b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a0785a-cf59-4176-b236-43f746428b24",
        "cursor": {
          "ref": "593d13bd-0092-4447-b43d-594bedb66f8f",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "170542e4-e8c8-46ee-9128-211e94f856fb"
        },
        "item": {
          "id": "50a0785a-cf59-4176-b236-43f746428b24",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "92d8acd5-c0c0-4127-9c7d-ab31494e8d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fb7fa5-ccea-4b37-93a1-58093d58c127",
        "cursor": {
          "ref": "b13c74fc-1fe0-4359-a6b5-ef5138be36ea",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c7521cb5-963f-4875-82ac-67a34cd5c519"
        },
        "item": {
          "id": "54fb7fa5-ccea-4b37-93a1-58093d58c127",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f042be79-25b6-449d-b5ba-6efc9efac730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e292bbd-d882-4986-8b5a-cd8103979a13",
        "cursor": {
          "ref": "1c2b2756-9725-4cf1-ba8b-fd5084d97ef3",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5d884333-71c2-4f4d-a3bc-b3f67cdc4be0"
        },
        "item": {
          "id": "0e292bbd-d882-4986-8b5a-cd8103979a13",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "23a05f51-a269-4f4e-bab7-3171ff56f88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd10f4e-3adc-4d91-983e-d890ca26f062",
        "cursor": {
          "ref": "3953775e-fab9-4983-86eb-fe980ab577c6",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fd935f3e-9341-4e67-a042-ac1fb03e797e"
        },
        "item": {
          "id": "afd10f4e-3adc-4d91-983e-d890ca26f062",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4137846a-e4a5-432a-b921-440898eb9331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d44bf27-edad-4845-ad9a-1d369c7f9863",
        "cursor": {
          "ref": "8d96e638-d12a-4c4a-bcb4-49a34415a5de",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4650326d-85a8-42c1-856b-d7a5658575d9"
        },
        "item": {
          "id": "8d44bf27-edad-4845-ad9a-1d369c7f9863",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "afb940a0-e165-49b6-b2f1-7339aa6e29a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51c5862-ff8e-4ade-a18b-fd7f14cdc0d1",
        "cursor": {
          "ref": "8df8c9c8-2708-48bb-bbef-2419ed3435fa",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "54df9a21-7ac3-45ec-94c7-9b243832ef6d"
        },
        "item": {
          "id": "e51c5862-ff8e-4ade-a18b-fd7f14cdc0d1",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ff2c8fe6-fb8d-4e7b-a2e2-da79ee2afc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b36988-a8d5-4f81-bc8a-e24392e7ec50",
        "cursor": {
          "ref": "a942825b-6ad3-4f85-a3fe-6dbf22c1634a",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "fc404a4c-7258-4360-b3e4-8eaa7ef5b74f"
        },
        "item": {
          "id": "c1b36988-a8d5-4f81-bc8a-e24392e7ec50",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e4945dbb-9d59-49a7-9003-e3f515d7a4d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cfadc0-11f8-4d61-97da-352697dbfd28",
        "cursor": {
          "ref": "6375e817-3724-4b86-ac71-41c78b7adb8c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f239da72-68bb-4bed-afa6-93bfe025f47f"
        },
        "item": {
          "id": "e7cfadc0-11f8-4d61-97da-352697dbfd28",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "173194b5-c8bb-425f-a214-a46a1ec1e208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c3b4cf-9c14-4eb5-9c80-4a072358c756",
        "cursor": {
          "ref": "df4b4e45-ab3c-4cad-b9d7-5a517a0f27d8",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "21d8a99c-3482-4924-a907-19593c00ce3f"
        },
        "item": {
          "id": "e5c3b4cf-9c14-4eb5-9c80-4a072358c756",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d3c9a230-f374-465e-8d26-e351feb54182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d584f24e-a20b-45e6-ac3f-cfc0e88a694e",
        "cursor": {
          "ref": "746ac44a-b5c3-4010-93a6-c3b9537f7b4f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "da350cea-9480-4eb7-bbbf-b3b4012e6e30"
        },
        "item": {
          "id": "d584f24e-a20b-45e6-ac3f-cfc0e88a694e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e5b79c8d-e2c8-4dce-856c-46c601fd533f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1122e9a9-152c-4360-b1e5-e05103ed66eb",
        "cursor": {
          "ref": "415746fe-a71f-4c0d-8802-a94f2ba6aa8f",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "928ef743-6951-438c-89a9-d640121ed56f"
        },
        "item": {
          "id": "1122e9a9-152c-4360-b1e5-e05103ed66eb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8285d52b-55a8-4322-9475-bde787f8534d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d62bac4-f979-449d-b831-0b3f9961492f",
        "cursor": {
          "ref": "1f760f3a-cdeb-462c-a1d3-9a7ab3b21598",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ab5666b1-bfc8-4e82-9c94-23f9b3e5f1c4"
        },
        "item": {
          "id": "3d62bac4-f979-449d-b831-0b3f9961492f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e32588d8-4dff-4bb9-9e2e-dbe5d7457016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893e7530-33b1-4d61-9c48-f7151aef21ff",
        "cursor": {
          "ref": "5b1793c9-b766-49b4-90d1-552e4a6976ba",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "97c78130-1f78-40b4-bf41-45c3c2ca51b1"
        },
        "item": {
          "id": "893e7530-33b1-4d61-9c48-f7151aef21ff",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7cfa97c0-b4ee-483c-8a5e-7db643cb5564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce46f982-e434-4142-8018-67d85c32a651",
        "cursor": {
          "ref": "3f2318f5-9e24-4563-9ab6-dcd2ff026c5c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "382a6161-32fe-41ee-9547-52838289d2d2"
        },
        "item": {
          "id": "ce46f982-e434-4142-8018-67d85c32a651",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "05e21f23-b360-4ba7-b395-2a2f5244b1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfc0ffe9-7504-46ca-8662-c0cad27445a7",
        "cursor": {
          "ref": "db223715-ac3f-4327-b95f-80b40ac58f18",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "defa23a2-b8ab-4420-9a1d-a49e42217182"
        },
        "item": {
          "id": "bfc0ffe9-7504-46ca-8662-c0cad27445a7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "176cec34-e8fa-4ee0-ac17-54029978e68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66c91ae-2bc3-4800-9c7e-743b321e697c",
        "cursor": {
          "ref": "59c90e34-0baa-46c7-81e9-f96bd9bcf201",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "285bdeb6-fe38-4fc9-a4d5-555ee8a80a1a"
        },
        "item": {
          "id": "e66c91ae-2bc3-4800-9c7e-743b321e697c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "221d58fa-832b-48c9-97c5-72f54b595140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32ba1f4-d6c0-43f8-9571-27145867014a",
        "cursor": {
          "ref": "3f591b64-b8f7-4661-9b71-c934a6dcf233",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dbd7ad91-01ec-488d-98af-1bed46c589c1"
        },
        "item": {
          "id": "a32ba1f4-d6c0-43f8-9571-27145867014a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c9cfde5d-49b5-4d81-bff0-e6ac27ab4410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0668d972-9918-4e56-8751-9697bf7db515",
        "cursor": {
          "ref": "06728cae-dc43-48b9-8ca6-c17e895d8029",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "110f09f8-4b03-4045-b2f4-365c29706c77"
        },
        "item": {
          "id": "0668d972-9918-4e56-8751-9697bf7db515",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0702dca4-366c-4aa9-9f9f-91f52540d2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0576a293-cb9a-4fb9-a938-4e816aa45358",
        "cursor": {
          "ref": "8df71ac3-dd50-4d06-9146-82b20313a7a1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f996a092-be22-46d2-942c-6f995d1912bf"
        },
        "item": {
          "id": "0576a293-cb9a-4fb9-a938-4e816aa45358",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4dc6cf86-8c21-4c1b-92d6-280a80fe0016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1b68ec-94c6-44bf-9f0a-f3ee1a0af32d",
        "cursor": {
          "ref": "196b6ba8-91d6-4ab9-a177-330c59ad73b5",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "05dccf5c-a4fb-4900-bf3e-2af59e578244"
        },
        "item": {
          "id": "0a1b68ec-94c6-44bf-9f0a-f3ee1a0af32d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "08dd0bfe-f650-4375-95e5-7e20646233d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ceb8883-2478-45c5-bd54-a3cb806d80a2",
        "cursor": {
          "ref": "d2b41e31-703e-483d-83d2-4a627d339120",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e6adcedb-0055-467e-a150-1c1442b552c9"
        },
        "item": {
          "id": "8ceb8883-2478-45c5-bd54-a3cb806d80a2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "d4515375-0adb-4457-9a33-e6547e37ab38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7e4746-ec2d-447f-9f69-c6d0941f2362",
        "cursor": {
          "ref": "5dabd186-b354-4cdb-8cc5-0c0d3c7afb50",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "690d4561-e300-4b8e-a03c-a8bc3e173985"
        },
        "item": {
          "id": "2b7e4746-ec2d-447f-9f69-c6d0941f2362",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f278f498-7847-4528-8189-a0f21678c690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b856cf6-bf97-4904-8c0b-866690570cc5",
        "cursor": {
          "ref": "407ae9c0-67fa-4d0a-bfd1-622c8b4f5a10",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3db78c8c-2fda-4133-bed0-444f5caafc74"
        },
        "item": {
          "id": "2b856cf6-bf97-4904-8c0b-866690570cc5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3bc48b64-f5d4-47d3-b888-6921f6dd68c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3978aec-0e92-4bda-8ba0-dc37ced0f263",
        "cursor": {
          "ref": "97fbfb24-2d02-4974-b7f7-2c16c1dc765e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6a25cfc9-2996-49af-b792-911d73b0efc4"
        },
        "item": {
          "id": "a3978aec-0e92-4bda-8ba0-dc37ced0f263",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "389d70c9-1701-4bdc-9d07-0409095471a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81fdbdb-5a61-47e3-bb60-4df338403464",
        "cursor": {
          "ref": "7cc7f98f-6f79-420f-8de6-ff4177883bae",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0a2cd994-d2f2-43df-9ab1-800e1ebf52dd"
        },
        "item": {
          "id": "d81fdbdb-5a61-47e3-bb60-4df338403464",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "edae532f-6c82-4f2d-88b4-c65cbfd3674a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797a7e97-f341-4286-a2dd-6ebfd429bebc",
        "cursor": {
          "ref": "7ca4993a-a06f-4561-b1fc-bc717a57257c",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "8cd1b8c3-854e-4457-ad56-1c42bab41fe8"
        },
        "item": {
          "id": "797a7e97-f341-4286-a2dd-6ebfd429bebc",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cc87718a-7deb-4e47-bbb5-f7ae21289951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bc8373-8fdb-44cd-b123-cf06ffa4a4b5",
        "cursor": {
          "ref": "1b7a3051-26b8-4c22-a072-7cd35e5a63b1",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a66ceed9-060f-4327-ac00-0c030266ee69"
        },
        "item": {
          "id": "21bc8373-8fdb-44cd-b123-cf06ffa4a4b5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "38023d74-1558-423b-88dd-9928ebea24c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83888149-7b99-4b6c-8e81-777fb755ce94",
        "cursor": {
          "ref": "ae2190f1-21ba-480c-a150-38b6ee844430",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "690a373d-c4bc-4d25-9490-edd05850b85c"
        },
        "item": {
          "id": "83888149-7b99-4b6c-8e81-777fb755ce94",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1a56e26d-c0de-4da3-b1ab-9213d15c78be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767d50a3-32bd-4e8c-9fb0-377998d7c58a",
        "cursor": {
          "ref": "14dc5dfa-ead4-4e35-9e00-336538eb7bbb",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f68c1370-9047-4fb7-8605-a936aa39c347"
        },
        "item": {
          "id": "767d50a3-32bd-4e8c-9fb0-377998d7c58a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1fc113f7-a965-4c5c-888a-22a2e08c0c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec26b642-dc3f-4be4-89c4-cfcc56930835",
        "cursor": {
          "ref": "06ea8a0e-2668-4940-967b-d5ec244185e0",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3db3c79b-0433-444a-b172-8a7ee295297c"
        },
        "item": {
          "id": "ec26b642-dc3f-4be4-89c4-cfcc56930835",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8b6b93c5-3dfb-41d6-b27b-6f6639837e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18d21457-24fd-4ec2-8a4c-4294cbe9eab5",
        "cursor": {
          "ref": "e6369e62-f2a0-4205-afca-1086800de1c4",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2fad7805-d28c-4432-b721-21741fa9b1b3"
        },
        "item": {
          "id": "18d21457-24fd-4ec2-8a4c-4294cbe9eab5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "73fd3362-6b23-488f-8632-46514ad14b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d60234e-21bf-463c-8a68-722040052e54",
        "cursor": {
          "ref": "c4a31e52-4eab-451c-a8cc-d10fe658c4d8",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0d579c18-2a20-41da-93a3-75401d9ee212"
        },
        "item": {
          "id": "1d60234e-21bf-463c-8a68-722040052e54",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "04fef979-7a16-44c7-9c5b-dbaba220393a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af6dd45f-2472-4351-b91a-c68f86c7848c",
        "cursor": {
          "ref": "60c78fc1-6221-44b8-8c4d-e988c76f52af",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "91340a6c-c7a7-47b3-bbba-f57c4012c6b9"
        },
        "item": {
          "id": "af6dd45f-2472-4351-b91a-c68f86c7848c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f926d4d3-1e98-4c6d-9db1-6f7f23b13827",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd92bd65-69a6-4a21-b141-3af5b551ea2a",
        "cursor": {
          "ref": "e4d0d806-9e1d-426a-b4e5-a55a0ca55216",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6d2fbd40-4714-4d06-bcbc-657913c8aaf6"
        },
        "item": {
          "id": "cd92bd65-69a6-4a21-b141-3af5b551ea2a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6014f08d-05c4-4c27-96ee-97728ed1e454",
          "status": "OK",
          "code": 200,
          "responseTime": 2357,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "230b7be2-2561-4806-ac98-d9d0ad18eedc",
        "cursor": {
          "ref": "64e12811-7c9e-4ca8-9de9-00d16a552aa8",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "3ce7f923-f872-42f1-a88a-8691500ed67e"
        },
        "item": {
          "id": "230b7be2-2561-4806-ac98-d9d0ad18eedc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "25f0f0c9-6d79-400c-ba51-f577573356b2",
          "status": "OK",
          "code": 200,
          "responseTime": 2225,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5229e9-73ed-49b2-9dd1-fb454c0a89b4",
        "cursor": {
          "ref": "261aa37e-1fa6-45cf-9209-388ee2b92f85",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e8075625-aade-4399-98e3-9dce7787acfc"
        },
        "item": {
          "id": "1d5229e9-73ed-49b2-9dd1-fb454c0a89b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "58cffaa0-8bee-4a30-b048-48f0a5e30a55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5229e9-73ed-49b2-9dd1-fb454c0a89b4",
        "cursor": {
          "ref": "261aa37e-1fa6-45cf-9209-388ee2b92f85",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e8075625-aade-4399-98e3-9dce7787acfc"
        },
        "item": {
          "id": "1d5229e9-73ed-49b2-9dd1-fb454c0a89b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "58cffaa0-8bee-4a30-b048-48f0a5e30a55",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af426c8-6027-48a5-a0d3-90d349fa4627",
        "cursor": {
          "ref": "cd5eba68-5c6e-4dd1-9aec-020875095695",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f5f17846-26ad-4444-a47b-b2371dea15b5"
        },
        "item": {
          "id": "2af426c8-6027-48a5-a0d3-90d349fa4627",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "874281ca-188a-4d24-959b-28ee32d9ddab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c66bcf7-7118-4647-a310-e8eaab19c9b2",
        "cursor": {
          "ref": "4aed11fc-8bf0-4a7d-9717-bd781ced2d8f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7abb9f1e-f9ea-4ba1-90c6-c4b8bbf6b625"
        },
        "item": {
          "id": "9c66bcf7-7118-4647-a310-e8eaab19c9b2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "07c7c6c9-20fc-4991-9fa4-6e8eaf9476b3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}