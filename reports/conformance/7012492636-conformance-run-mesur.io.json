{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6964e31c-70ad-4d47-837f-7f0551094811",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b6dba8dc-b5d4-4522-b874-5aa149498f77",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1259d755-7177-4751-8cb0-e619551e1c9b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "df67e5c6-3238-4803-acd2-6efc35ec26f3"
                }
              }
            ]
          },
          {
            "id": "38797a8b-8941-40d4-8995-d37250d0f65f",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3c6f626a-d0dd-4893-b7ec-7eef78b7bd48",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "92388be0-3d85-40d3-a239-527ce89149c0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "df655a57-b322-466d-8755-17887819f584",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "70b31906-f482-4dad-823c-cc911bade968",
            "name": "Positive Testing",
            "item": [
              {
                "id": "28ddb26b-527c-4a6b-8382-0a3a37892361",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b01447a-ce9e-42a5-908d-b7d18648d632",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90073e7e-3b17-473f-8299-d69f259c42c5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f21239d6-9d10-4440-b6c4-c94309c74bd3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d5e38dcc-fcbf-4a72-808c-6f1b187d36ae"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6805e3b1-1a2c-4824-80ec-39dd45607c2a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bacdf957-2e28-4338-bfeb-e3e8436358fe"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cd1e56f-f657-4613-967b-e51058c5a874",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9b190637-3b7c-4df2-b2eb-6349a36c9ac6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60203c8c-2056-4ae8-9f2f-1c13bbc8feae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81cf1cb8-bc88-4b49-a33c-33d6c2223089"
            }
          }
        ]
      },
      {
        "id": "4717ee0a-1f4f-412c-82ec-bcb02faf07d7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "e14f014d-0cb5-44f8-a82e-8d1effe82cd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3135e31b-e659-4127-85e5-e94c0f6ff8a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5be01fb9-d0ad-48d6-bcbb-226cc551bb16",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d77295-2a3f-4b03-9ea6-aa4f519c75e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78c323d5-5c7c-4736-8fa2-b2f115602306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d832c6b5-e860-490c-a4bc-b0c401746c03",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e6dcd5-02ef-4cdd-a1d6-5311df7781b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91be8c4b-dde2-4b7f-92b6-0e5004e5a59e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428d811a-5eb2-4014-8f95-053f0ee87a30",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6aade6-5491-4054-9459-682e0d83ada2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0fb5d572-27ef-4d89-adc5-9631550f6fff"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a5b5a522-fe38-4710-bb38-9fd9d6a7b6fd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5454a433-916a-4285-a341-3e0e80e30dab",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "736fa6d6-a3fe-453f-84ba-77bdb1cfaab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61286523-c0aa-4dd5-b51d-13587be34363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2fb324-5bbb-4a38-9e4f-be29abc0f38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2506ebb-1f4c-4737-a159-5f6ae2e3fd6e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2722e5de-baf3-40db-94da-e62eb7c4dc3f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "87edd9f0-2fc9-4802-8256-339cdc5a7001",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05bbe63d-2314-4fed-8384-0dec14e0bb19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "998bb472-151f-4a68-8461-527f2d9725e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "62b9dfd0-2045-4489-b3d2-82c64b2ba8c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "2022a324-1d5b-48e5-8fff-80e414852132"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0613d577-dce9-47e5-af24-614f44af591c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60bc1f3f-5682-4d74-b2db-a3e1f65615c2"
            }
          }
        ]
      },
      {
        "id": "ce2b776a-9e95-4a81-b103-6d1420025fba",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b75712c9-31c4-4056-bc8f-1ba9f68a4939",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a778c99-1dc2-4419-be9a-295bbe976945",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "b9078642-1e65-488d-a375-95383a5daf92",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9bfb25-1f3b-405e-8c15-e515e101f197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eebd8da9-f8da-4712-8c0b-15a4bd759c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea862a7-7a8d-4450-a13c-95136256612c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4567848-f0ef-462a-9e81-f7b84c3fadd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970b9249-6afc-462b-b40a-a55c20a16132",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9555b6b-38fd-4e17-b6ac-25330796e287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f309df6d-5a94-4b7c-864a-7ea8c65585e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97533921-7bb2-4035-a22c-b36bc27c1e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "90c8999c-3652-4c75-8d7c-2e8cfe8e0b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da588f7-cab1-4523-a53f-795ab0c2c216",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc90a18-ead7-45e1-8f73-0f3a4db0453a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2915eb24-36f1-42c2-87c3-5f8958565a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce64e33a-2442-4d99-a003-25ca9a7f621f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db091b1f-6e07-4fe8-9a4a-5dec6d268928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f23d2df-6caf-4dcc-ac80-cc9d21707e4e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fd8857-3692-4ccf-86c1-03ff1deebb40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec71a5d5-80e0-48b2-9c00-3af385ebaacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074d523c-5784-4d1d-a113-caeca8d6f503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "811c3a70-d803-4d4c-8779-337c796f1cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78eb3796-c68d-4eec-ab6a-3999559d3d28",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcbe771-536c-4d4a-84ef-e41ce74f865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcc9a23f-297e-480d-a33d-e50d97435c18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "280fd661-8993-4bb2-8769-8c41b610f8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74b147b5-5d85-472e-88b8-af61b17f4f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10d239d-6dce-4cf7-b687-0a4694550380",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d04443-71b2-47a3-b4e5-dfb7da184b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c57dfa-0b67-4eac-90c9-cb72b3de4f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737f7253-a858-436f-951c-e74c7c92ff3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "976e922c-5d3e-45c7-9410-947cfca304f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f83f5a5-611c-424d-b825-387fd1ab4dfc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22a697a-efdc-4831-a929-0606c76453ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f3cce2-af49-42c7-9c6d-77ade9fe487c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c316da53-4032-465e-92d0-70bf9ec957eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5915fd6-8307-4906-9eb8-936cc20db459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba21f45-d5d4-4f25-a1ec-781061b6ecfd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e196fa-95e8-4562-8c02-0205b3ce7845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "082787ed-7961-4f4c-890c-ce879f7f843e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d126e40-5010-46fc-be9c-c391b51da3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e71d9ec0-f84a-491d-9caa-e7fbdf071f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6442d48-a9a9-461b-933b-4152b25bca0c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f206084-5247-4df3-ab05-a6bfb398413f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee02c794-64e9-41b4-88ea-816b4a3da6ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d094170-5dd9-46ab-b788-264c3bfc63a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58745843-21f6-4a70-9ea6-2eb8118e609c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60cb940-6daa-4fd4-8939-fc807fd5f2ea",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c252c2-7244-4328-b760-02778271f580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e72a9a-af2f-4fd7-8607-0096b5d41636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eabcd64-02ed-48aa-ae68-8bb631b6756a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3535e37b-5de1-410d-91e0-91d0a6fa2779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36e3e8c-04b6-437b-90a6-057ac2cfd62d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f77c9f-4aea-421c-9d03-6200b22797c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b4ea765-23b4-4bde-b692-385cd476775f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f0fa6c-26fd-4764-9075-0605a1bc3189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "107d1e75-c54c-4dac-a2f0-3f6ab4bb96c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ecce014-c12a-42d6-8a7d-a2ebdd844419",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "656b4273-889b-4714-90e5-09ed8d0e4dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b36389-a4b0-457e-962c-51e61d8f38f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f946c782-191e-44a0-a16b-00c1e7875bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95db56ad-53b5-43c8-acc4-4449adbeca57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d85d6471-67a4-4167-ad7f-e702606fcfe9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47aa1350-bc7b-40e7-b2b2-82b3c1d1245f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e43bb56-875c-4494-a428-416a6252c2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812636d0-0468-4652-9eec-66f8adf26bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a490558c-4681-4cf9-ba84-91df8c4865eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3638e9d-d4e4-4bd3-9ead-b7ee9a7f0016",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca18531-2ad7-4b95-86cd-eef5c3e2e09f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5520392e-12ca-4819-adde-0f8b57c56407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b14520-0440-4ae0-8cc4-b45bb34854c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2946fe89-1719-49b8-9e98-beeb92ceaadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c620a92c-b159-4752-952a-1f1ab9d1be69",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadc8b01-1dfa-40df-a973-d8d46b7bc4ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0187f3f7-dcf9-457d-b2fa-027f3b33833c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4bb99e-02f0-46d7-ad83-5d58b0f0aab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a850e8ba-f4b5-4222-85f8-b0dd64bf4be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48740847-033f-4908-8105-557a3cf2f3b7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6533d92-649e-4bf6-a0d2-71e83954472b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f57727-c4a8-43cd-b20e-f24e17189118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487bf42f-97f5-4dd4-8b3d-2785a6a00958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "201412fa-0c5d-4d65-a589-d0938a606c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41c7e02-f1fe-42d4-8fd0-299085e835e7",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8fbb29-a711-4d1a-98ce-86d640099ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884ee782-70b0-43d5-b703-305f4f63fd96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b1365d-2f0e-4782-aede-2780783982eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39b628f8-a23b-42ac-875a-4a4cfb90f68e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961482ea-339d-49ab-a9fb-747341060244",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1482db93-06c7-4ea8-9668-45189c6ff511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f528504-f99c-42e9-b191-a0da749a1395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec75b812-44d4-466a-884e-67b0f7e45b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "104e475b-82a9-4c31-bd4f-78a6dfde95bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bd5b96-fde4-4ce1-b26f-a933c418b1c6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d23ad8b-ddb3-476a-996f-1ebc5d0af0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34515703-abf7-4b59-bff6-433a2d2fc86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9381133b-5f6e-4b1c-943c-424a9ac83c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c20dbd8-5b0e-47b1-965b-aa2b002b44b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "839465a1-f30f-4fea-9825-9955cdeacf91",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b854e1-6f7c-4847-96fa-5a585514a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d6c0f4-08b1-4bc2-ae77-967f1a065edf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27483131-21c8-4e2a-aa02-0023bafbab05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9316ab82-fcfb-406d-96a9-c7963ffe5ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947c71ad-e475-4152-9e6c-f91c17e18230",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6533d92-c702-417e-b5f8-081eb3485165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236c517b-7e1f-4611-af87-8899c3a127af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5d1ba3-8914-4c0d-9102-07731c8a4ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a48c09-6f76-469c-aa6a-cc5d5b3d11e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d543e1-c1ce-4690-bb4b-60608b7402fd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11d90ce-d1b9-4fb4-a2d5-3270a5e7c744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67442950-6f5a-4d65-9a7d-2c60c51ffa45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "691cb640-754b-419a-9293-8ed1d91ee7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbe18d2-5990-42a2-8da0-7c3340b0b67d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec24f436-b232-462a-b6a9-fb7890d4cc53",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9c31c2-92e5-4d60-af8e-8483ebd41d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bc74e16-1aae-48e1-a1b4-3d479235dab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b790cb81-66b5-413e-9c43-063ca1fc5cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12744be1-011d-4949-859f-b5b5e350ac61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9095f6-8f8f-4634-b9e1-63ec55188b4b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95f7348-5ced-451b-b04a-04ecd3326726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0773aba-6307-47c0-96a6-506a089881da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540fee9e-380c-4e99-bfcc-bdf3185b37c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bade61e-5007-42f1-8662-d16203e95a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b6c54c-d73d-4a91-bd75-495b63ef5420",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406eaa67-b15b-45c1-9959-67e55add4f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1504cfa0-c4a5-4bb7-81b6-e774c67e542a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57863883-8c70-4f48-bec9-f65e5d128705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd8bd62-e58b-452b-b124-e43f6c3ab367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c68860a-3b5f-420a-a151-b5b84efb19a3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c92acf7f-e81d-4310-8e27-a695ca75ac0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "692eaab4-1119-436b-8ada-25bcc91cf581"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc4aa70-60c6-42c1-9381-063b37207652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "48144747-0192-4975-8882-23bb6775ee90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf05291-9ce2-425b-8353-d43f7c59595f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d990cb-b651-4718-80b9-fc4cd6cc8610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852f1c5f-2d0f-4a27-8911-1fa3f436731e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b7849a-94da-48bb-8f76-75d1a9813bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ade8b21-f94c-47c3-93b2-1bae9fdc32d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8394df-a6c7-43a2-a92c-67e82df89cff",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "683dedcd-59bf-49fd-85e8-2e8c78d3bf71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd94477f-7279-420c-bf58-e3244e979bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca8bbc2-4883-42be-9e9d-d38c861e62e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b811b371-0f64-4d37-b9a8-c07f9f3d93a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c76872-f911-4000-ae6b-1ad9d20d11f1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a7b2e3-72b4-4770-ab5a-99e65ff9b842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb7c133-cfbc-47f9-b631-5561335df8b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7ec6ab-7206-478d-a006-32f74a80d98c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4777ee9b-ef4d-4bcf-9f25-36e9999c60f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d53389-3977-447c-8037-dae9c9f42d84",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e8659e-dd4a-4dfb-9fb3-1859a560469a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaafbfb7-93b8-45ba-9a3b-e98d32a70fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4be3025d-a1cf-4ebc-9eb9-d0d0b1b1866c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbcf3a1-e94a-4312-86e4-9ffddd7c12c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c7671f-fac3-43e3-b3d0-ee9fb525dbf7",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc3fc92-86dc-40c9-a5c0-dd4a06deaa9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8b82d7f-8557-49e3-9475-5a092f0bb1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be026161-dd89-430b-b2af-af552416eb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "480f11df-99a3-4fb9-a2fd-c27dbf0ccf3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc35ea37-fe21-4261-b825-28f37f94780d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9ee2db-0198-426b-af4c-599905a1094d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16350a3a-2ac1-48a9-b560-2f80212139fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36b8814e-cf4e-4105-80d6-92f29a027306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "943b51bf-b116-4e37-81bb-f304c9fa24ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a288ec5a-c922-4150-a778-bf3f00b7166e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca813cb-c866-4229-acc0-8522d9496339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0e0187c-084a-4137-a176-6137579dccf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08a1e7b-182e-4e1b-9c5c-1d25c09a4448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81e71412-3306-48c7-9bc1-6c709a6f44f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a70b927-ff6c-4f56-8fb8-0ff94b73f87a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0feaec-9b8c-4f08-b959-353af815292b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed4edb8-704d-45e3-a3da-89c773925cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3198b97d-bfa9-4253-873c-7b73bfecb87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "14a9f13b-f2fa-4911-b433-48f62611680e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb00a10-987c-4c98-90e9-a3fb5cad2e6a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b3d6cf2-00c8-4985-b38c-e96d3fa4e8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d532f54f-2c0f-4f84-bf30-a1cb4723c203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496d3016-21a6-4414-bca1-02ee51ef64ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4a8644d0-bf3c-45d2-9483-55dbde24a97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc21f1c2-dd4a-4b49-9542-cb40270ec913",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7bfc03-d1bc-40a3-89cf-795a1b82e112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "712430ed-2b09-481b-abe8-f90544f55d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e43169a-3a40-42b4-9944-28f7fcd49077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f87ddef4-baee-4e6c-a504-daa024540ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc07bcae-c43e-48b8-9f7e-c6cc4447744e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a989c86-3e2e-4a9d-938a-134f8c7923f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3538b2c9-b27a-42f5-940c-27e2486ef0b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fbb174-0106-4647-961e-d1cdd0a67e7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe3c6787-5951-4d2c-8892-a129ee6c6f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74af6fc0-4e7c-4adf-93f4-6f381455a546",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5bf2da8-2f54-4090-8d0a-d1b12fb362ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3cb297d-08f7-4c0d-b487-1bd5ab7fa3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61f8e43c-1d75-4587-8b6d-12eebc0c9e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "429fe57d-55b7-449a-af63-16ea2a5e11f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9e236b-5e18-44b2-9e3e-61abd68cef80",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d916b4-5da1-4a78-a47f-500401bf7ec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd32ed42-077a-4da8-bb0b-39aa418af52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57930e28-9f4e-4337-a29a-3d940932f771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8b3b5b-08e3-4f31-b410-0b4ffb895cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcabc4af-3f20-41b8-b671-79489a221958",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f566f42-f020-46ce-9650-4fcf3d3e93da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551b7d86-383d-4bbf-a7e9-8f4be0fb23c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d184f2-4bd0-48cd-9de7-a863318b42d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6bdda3-d218-48da-b033-1c3110ac2612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1b4e34-6f5b-44aa-9c97-6f475fb45523",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d45ffbb6-8643-4bd8-9cf2-dc37bace9b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ffecbd8-6734-4f3f-ac34-e9365ad0d5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06935dc6-891d-46df-90df-e81672e700b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd345f16-6cd8-4ca9-8967-bc3692e18fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56ce07b-dfdf-4518-84eb-9a1a54302bc8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53262c87-a34a-4b3a-816a-815add15d3bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9b114f-31cc-4b32-86b6-6cfc0a35a458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5ece0c-1b15-4984-87d8-06fb9102b747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "49fb6a50-ffe8-4c49-9f8b-d05ce26e784d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "252404fe-e3e4-4808-9579-d01671b59fb4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8abf488-90cf-4d50-8d81-70f57bf91d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a976e42-eff4-42b8-94e2-4c03a4624f63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ef4c71-189b-429f-9724-d5f413be117c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd2362a-5633-4185-8308-47bf37cf545e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0ae6bb-4d25-4c6a-9e72-d898621a1a1d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f930604-cf29-4263-b468-6bbab0449b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9162836-57c0-464b-9b7c-670aa66d9e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0016c6c8-5ca9-4f28-bbbb-841bdf443865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f9ca822-9c50-425b-9408-81b46950660f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19d43999-e08e-408b-bec1-a708b797ed13",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "735eecaf-7030-44be-b47f-2f01f445356e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "248f1a63-586e-4d11-a4f4-9b9b85d15667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987308ca-2d5e-41ac-b62c-8018de851343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8a60b94-e3ee-4cc4-8213-e653320d2df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25335c4-a447-41b8-9324-e8e22b46d5e0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb10643d-b390-4b67-be60-01b15b1bf20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453c4b15-b73d-4547-9b6f-f98badd695a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e3e8b6-18a1-4651-855d-ba7c586ffb55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "57481e3b-031f-4d68-bd5f-969760a95c4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9aa137-0397-4d03-9b54-12ab475e17e5",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9588a9b-3430-4d5d-af81-f322be03ad85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49e457e9-a238-4bab-b8b4-03a828214319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5ef7c1-813a-433b-96e7-c1d4e2497773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73de3e7d-c4bc-4083-b8dd-2156279f0b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3657d7-e0a9-4808-9cca-713ca823c5a0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a816b69-4f52-416a-9b4b-2686dfc49d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49893b6-6541-41c3-a2e4-cea53e361d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede9f3f4-3954-4184-b271-4816047cd3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c161fa08-54eb-4f27-9852-60e00a88baad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4acc58-e1c4-4f86-993d-299b12879e67",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a92a5e-11cf-497d-af6b-2566ea93ae41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41a43b8-bcd2-4a5e-9c65-afc1512c47ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6976e9-cbf4-4fd0-83b8-b17724811fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e3c756-bee7-437d-a06b-65a769d9659a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd17f966-8377-465a-81fa-222c8d603dab",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b408cd-7486-4b94-9d52-4ebb51bc1dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b45ea9-4366-409c-9c92-4b8cfd2786f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad83bc5-580d-45ea-b529-ea3f687c2854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6627cd7-ba06-4a62-9b85-9405094eea22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807c0264-93a8-407f-aef0-56fb73b92094",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09ae3c1e-5ead-4e2b-853d-ea69fc6efaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4465d3-5ee1-483c-8c59-a2c2f3748a84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c0fbec-d702-44e3-8fbf-323d1c9735dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8d1c4c-8bd6-40f4-9df6-59c24ad7c9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100dfdf3-c0f9-4d19-950c-1257f4a6f119",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0bd7bfa-d7fc-4552-873d-03e9e4604136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "373db620-1edf-488f-a44c-4f3c2ccd6092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1017b635-885e-4681-ad4f-00fb349e5098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6609ca4-31bd-4e75-8e32-c281e6f157e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449de0e1-d991-45d8-89e8-7ab73379c862",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653579a7-970b-482e-9516-1105ed3887e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41693494-b37a-47dc-a417-9efb227c0dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9dbc57a-a385-4254-920d-929c2406db45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f688cd6-8041-43e4-80b3-fe4183d4ea75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac3357e-08c6-4d50-aaa6-fac7c6187e6d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5895a8-7275-4b37-b1c4-f007a385e546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b7c223-885a-4b61-a86f-849af5d46b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca71910-03b3-4c2f-af35-af64a362fbed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf3a6a7-f475-428f-9f71-1e3b5d5966c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2746aedf-5294-4cc7-a83a-0270b200f073",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4fa311-2e0f-49ee-95f2-f959f5254b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f369aad-f4c2-4900-a47b-5c4884c8e550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a9d7d0-bfdf-413e-9911-7a2560485af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c794259a-4b5d-4197-ab88-fd8efbe1b82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b358a64e-e252-415d-a8ad-faaa50161c4e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ef6199-73c7-4fab-b870-9df33754a3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4f1fee-057d-4ca5-ac0c-1b118d0e1a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da618cd8-793b-42ae-baa3-52eb08bcd489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ef5205-5da1-4201-9d4c-5794b4e16cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0fa07f-4afc-4d79-9461-8060f93f9418",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463c5243-0ef0-4eae-840e-2fda8cf9120f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3446d652-4f21-4960-a850-e0b82769d2c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd39cc14-ae7b-4ea0-9cda-64de6c411344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8e5f40-d71f-4f7c-862c-0f3ee98755fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b95af8-0351-44a6-9405-57e593c5a48a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2592950b-5b6d-4691-bbb5-83f97253ea9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5d39658-df78-4893-90b4-99355485baba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362ad0c2-d0ba-4206-9eae-af46cfa7365b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0afeab-d01f-43fc-a675-f7ac1148c3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9087e10c-f987-40ee-ba5a-403883218146",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78b3500-636a-4e9d-aecc-cfb273bf8675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "153f07a8-ccd8-4dfd-99a7-d716356e3d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355e0717-1816-4e15-a166-830c7e4de355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f94b523c-2439-46c2-8b1c-8ead945eb7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3676d3-39e9-4a28-b446-eba329a45601",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9984fd53-0020-4944-868a-867b1c253131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b064390c-57aa-4613-9493-475e2c0e25d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7093ed99-9efe-4c9d-8313-48841c5a6f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6462e8c6-cdc9-4cfe-9e38-4a1f44f48da3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4f5d3a-93d3-4426-849e-8e74043ddc1c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870b2f07-2aaa-42ee-a10b-ad178710d8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7be33456-395f-469b-b4ca-c7535c8d86ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b509330-850a-4a45-92dd-2f7f7b1c3757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d6e5a9-2eca-4804-b42f-2a69fc44c3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ba59f9-f645-44c3-8e4e-e4178404ed06",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93836e5b-2b74-4609-9ecc-2fc9cb075cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccf50c3-b53f-4f2a-abc1-2161e50eefff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3f74b5-a3cf-41d8-a66f-299ac737deeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa5a9b1-30da-404e-a34c-53df5dfce6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a61301-4f17-4514-a383-222eedab0aa4",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936c7328-1193-4eab-af56-e4ae0c0fa038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae68d65-0758-458e-9c3b-aaaa58a924b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b55204d-1279-4bc8-a384-7f5dfd3d4249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "390d2c4f-35b1-4cab-8dca-7267e16c44dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88d7a6d-7a2a-4fd1-b6cd-bab8bd3a5d5b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffaff07-e57c-467d-8132-34582cea8d89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42f81dc-f948-41b4-a4b8-f35371c2785b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fec102-321a-489d-a8c4-f9afec34ea92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d953969b-b29d-4d7f-ba3e-56b11ee7a6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2204a49-0ebb-46df-8044-fb4d36f902fe",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3082c5-822d-4eb5-bcdc-0e2addabdddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81970507-6535-4c4f-9f5c-298b407a8042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b708496-565f-4710-bea4-75047bd6da46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97ddc07c-e75e-4318-9111-de0695cd130f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2c8b4a-e98a-428a-a5ae-de423a318814",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61eda5e2-d168-454e-875b-8447fcb3c523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad285e88-57c6-4d05-9440-3ad2ea8619ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23a9c68-b1b1-4b99-a715-3cf5e9ccb317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88f458c7-6a10-4b2c-bf2d-c3ab72d55072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25ffab9-4552-4fe8-aeef-2a934f109541",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59cefbd1-329e-4e95-b462-a93fb274eaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2e3bae-be8b-4d60-8e9b-b55e22495125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771346e6-9609-413f-a910-b53e7d68de7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6595db5a-e5a8-423a-8a89-ef1bd63b9005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb585256-004f-4364-af90-62a1f9049ae9",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d0be19-bf41-4e2f-abdc-3b3574fc8699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58492c1d-8bc5-4c0b-a7b1-461aaf11ba7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40cbca5-c17d-4394-ac85-11a21839a888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a17c7faa-ea49-48a2-b37e-49cd34d90fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1322832-9f72-475b-ac7c-0739700ac928",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94b101cb-0357-4a03-aa44-10769757bcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0b2322-c7cf-4e00-98a8-c781a0b7c2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3508ede-c913-4056-b696-f4118dc69e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "434de7a1-1897-494d-84fe-e0dcaf0d6e58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bbc1d06-7a3d-4f65-85a3-ca30f6a8ad32",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b697ef5-72dd-4901-8180-4844956b471b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25892deb-10be-4b19-9677-06b0f5b8a9c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d10f6d-27a5-42a9-9b3a-537f19b34008",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c40f257-8e08-4296-be69-a4ea77c6211b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f32a37-7c82-4ca6-836d-1148df793007",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6bde0e-a8a8-45d6-b6da-ffed3073a928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "629dc797-657e-41d3-bd3b-d2b88b958944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1d47f9-95ac-45ef-8d7b-2b1a17a67deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5849b38f-4737-45b7-8f15-051a04d1c16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7cb387-80c0-40c4-ab74-4d4e7155c015",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584c24ab-b6ac-4b71-a828-310327fa7836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e836ed-be98-461d-9b06-dc66943acb0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9040d8fa-9a1d-4858-8d87-09e938d87a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db10d6b3-8843-46f3-b602-97f3fa569728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0575322c-5adf-44a1-ba0e-6b84cf53817c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc680284-c583-4f96-8916-0b3a7416f4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a70be5a-768c-4087-a88d-265d8dfbd6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe987f5f-184f-4d53-b56f-eb61f5d41de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da318f20-063a-475b-94ce-4f998c3b6667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593a97f9-482a-455f-a926-3dd98b589f04",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee26fc6-4d4f-439d-b626-92ee304f6e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ec63d28-dde7-4f80-8fc2-a15059cec13b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdeb36d-dfcc-4400-8357-9372ccc3f31b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b915d7a-e080-4a3d-8c03-b1d1880a9847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e411eb09-965a-4ecb-99c3-c94b1678b2f2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05028b8-251b-4534-be3a-c82918219e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58adf669-efb5-4afd-9f56-f49cf8f51142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1b9259-7ccc-4eac-83cc-060d7aef6ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65b7c710-add3-49a6-ad12-3c192191b917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff3388b-e11f-4a70-bbc2-80abb8e715a7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ab8673-c667-47a5-9b44-e5927f520ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a463a09a-2694-4bb9-9634-553731e247b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da14894b-38e2-4a31-80c1-4c8655a41dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2aa81b6-a170-46c2-a618-b83b853d7a43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb7524e-e750-4155-a22f-53c57bd31ed6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2869b27-9d33-498f-a7c2-85455d97cbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a50dac3b-ca4c-4c13-b085-7aff8e88c9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7dd19b-10ed-483b-a319-bec85ef765cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7306b847-3333-4e38-9bdf-6e9f2abac71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af4583e-3229-4004-9063-be449d6dafcf",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd5d01f-a132-4a11-93c7-89b729cff587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7bc0e8b-786c-413a-8c3f-82dfb8897254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5724eb1e-a40e-4cc9-98cc-c7e7dcb66687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ca5465-6fab-4adc-9ec4-2307dbd6c6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e9fa29b-2fb0-4ae1-a2a3-6b2401ed868a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062ac1fd-fa29-4c34-a418-27248972e0e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e8014d-be1d-49e9-b8db-fc315a2a75d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff92293f-8a89-42b9-a539-97cc348a7d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f34cdfbe-803b-4984-abb5-888d7aa64813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8328eed0-7ad6-4916-82ce-0ab65500a400",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4370468d-1862-4ed0-bd63-e78816ff6d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9a9d587-c239-4a72-8fd1-455bbfa030f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8321085-8126-488c-b33b-fa75d6c03b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e4281759-df64-4144-abef-d946bb9d65bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006364df-f69b-4d67-b6a1-05accc596c76",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1b5ce22-8841-43e5-91ce-2289694aa803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ecaf2c8-392e-4734-be0c-b6a1f60c369d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3d09ed-c1d6-4dcd-b802-a181d2d142bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b76216c-8ec7-4191-8450-462ad9ffa010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb66ec9-f28d-4b56-801b-46f5b8e37f34",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61b0eb2-fb01-43c1-b797-55372b5918dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca425a8-2848-441b-9e1b-2e0ef3dbaf87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e656f91-549e-4485-b539-1098da151023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f707cfe-a3b5-4b8d-bd15-56baa697169c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fc59ba-0676-42c1-9237-88ee7fcf104f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988be1f3-e4df-4312-b928-af49cc999ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7de66b-1155-438d-a515-77275f8c8ef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7069672f-714b-496e-aac9-c54b14d43052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d73c04-0e66-47d2-88da-b1cdf8e29d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629f17e8-3d05-45cc-8bb7-d1b7c5bdb471",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "448999a6-2f77-4365-8487-215ae2d0efee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d259d0a-f881-40fd-9db7-3e0e14418499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9071bab4-be15-4244-8cb4-58c9942793c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "07b3a25d-d85b-4e53-b1f3-036fc9fe27e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eebb78-5c4f-4a1c-acb1-6935c8a57a2b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd9ee8b-d33b-4711-9185-bfbd9898fe0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc99bc41-227c-4a0d-80e4-fc3d97c6c24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e0ff458-5cb1-4cfe-abcc-6592cd0d4832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a26064c9-6182-48d6-a1c7-26915326bd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee095e09-7f2c-49fc-aeb6-c36bb2b491a5",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea571dfb-424a-4f9f-9519-a39a569c8a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aafa414-2519-4b69-a845-717f868b9ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc70696-a6ad-453a-b094-c18df820fce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c92a5a2-2be2-4b6e-84a7-2b0325e3124f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8db887-45b3-4fbe-92d0-367943276b96",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b918349f-6e6c-45c9-bb4e-68ec8c3b86aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74afe920-7d5e-4bc0-98fb-34865f79ef45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4453c180-cbd3-4316-b304-d77d92ba1ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab293bd8-df2a-4050-bf5e-767f1b5abbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bed9152-dccb-4d23-828b-39b0c95f4b51",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b03192-4892-4cd3-8532-92f138153e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc85bd1-2ed5-45d3-bcac-99623a1118dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd764735-89e4-48c1-b508-67e0a57609d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1196a1eb-26db-4991-8a72-4a2d74d1712a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e154918b-95c8-4bba-9b04-34be96aa18a5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccafb790-bdde-4a8d-b9d6-e2d75f1e28e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59275581-7da8-4e47-ae62-7f04bd4e7783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfe66f6-4995-4805-990f-64a848a0e3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b89173-e6d5-490b-9e5f-b2b397c7734d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7359853e-30aa-4af4-9ea7-489985bc104c",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c544c97-a30e-4f51-9293-7ca9da17f17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cbf01b-3d70-47ca-9461-dae61bbe3774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a968ea11-4818-4fa4-a167-4e60ce38d6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ff0010-efad-43fb-8af3-66b7560b9735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a0b703-3555-4a9c-b337-33c877f8504e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37095974-899b-4c3f-9e42-0792da8fe473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99f8aca-f0a5-4431-81c9-94ccf0555667"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c6731b-f58e-4dca-9524-63bbbedaf1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6da2a45-2d9c-4217-a6b1-e30625ce5582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deedb674-5d8a-4fa1-b865-fba448928640",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "316b43a8-03a5-416d-9260-541f20aa8deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4dc00402-55db-4122-bc44-63bca3ef9ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ec7ce9-7676-4b8a-a11b-e83542f53a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "56ee0be4-ce0c-4f44-b447-9423dae2ae93"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6ced6d5c-f7cd-4814-8ddd-44bcd72e8128",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cf327761-1f3e-49e7-b342-ff5a0750c9d1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1c1bdf-6067-4fb9-9dc9-519335829bc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ccecd702-29c8-4523-bc9b-45175bcabe88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e701e440-8c77-4f60-8e87-9521121c20c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5420a3b9-b510-4d49-aadc-7b81b6cebab7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "087e014f-413e-485a-a5b5-108b9de9eb9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc0dc862-d8f5-48ad-a985-a9dcc640f8ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2827335-6320-4cea-8e7b-9ffc9f8dd459",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a103d5dd-9776-4d67-888c-2dfd9347e1de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7dd80d82-7413-4351-91ea-aff80239ab29",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bbf04a17-5d78-4dbc-b9ff-eed06a0c2ec2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9762c078-e1e2-4ca0-9062-1a9f196aa322",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cdf1da33-681d-440b-b96f-82f87d7a7288"
                }
              }
            ]
          },
          {
            "id": "2d508c8f-7fcd-48e5-b64d-b54b4ea9bbac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1267ece2-ce5b-4586-957c-99bc7f723f69",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dc45d066-1105-4055-b828-b16a6278bec2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51e0350-0feb-4b57-bd96-cf9badc6091a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ec5ae4c6-ca10-4108-84e6-f7de2b0e2e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ba6800-bf6a-475e-ab54-25c38424202b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa802c2-69f6-484a-a445-a800e369239a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "59d2214d-e7a8-47f7-99b1-207b1f9afd57",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fc69b37b-f306-4ca6-a87d-f1c657b55283",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd521e20-fc5a-463c-8110-8fffebe0d48b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12cbf03f-2728-438f-b118-66fe533236a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d30a40e0-a350-4d4c-9b15-19de2559a070"
                    }
                  }
                ]
              },
              {
                "id": "f58c4884-548d-4535-8fe4-b118f9951e0f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1145d172-081b-4243-bd22-5c92eea01e72",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16a0161c-d872-4d5a-932c-f88d8b3d8369"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ddf82347-0288-48ba-ad75-e8faef654b52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ee71d254-e5cf-4407-b638-a5edb55c41b7"
                    }
                  }
                ]
              },
              {
                "id": "1dd06209-5b3b-4179-80be-28ca09d6a8de",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc462d3c-c087-4d52-82b1-776a22852040",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d054143-f7bd-4bdd-bc8d-03f05de77cd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80d45473-9f61-4f59-93ce-f623df3d131b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08a9640c-7055-4429-99e3-15d1699a6217"
                    }
                  }
                ]
              },
              {
                "id": "b2aaeaac-47be-4a93-a0a4-8fc06928b84a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53a20463-6450-4349-8737-78cbf02eef91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b00f68ef-5eca-48a2-ac64-43962b2f4244"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a598f449-fcbf-40cb-8c06-48e2967bf71b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f0ada2e7-df1c-479e-a6a8-52f0625183b8"
                    }
                  }
                ]
              },
              {
                "id": "6e011714-c677-4f61-9aa9-701eef520881",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32484391-e39c-4a62-9395-ada9b34e900e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "55af99ce-11b9-43fb-987b-ba557ac0971f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d47e4ec9-61ed-477f-88f1-640b730c7da1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d200b103-10b8-4141-9678-86eaec3db8e4"
                    }
                  }
                ]
              },
              {
                "id": "355702d6-3c27-46d5-8e1b-5ec22c96f72e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "63bf1b06-88a0-4818-910a-714140d1879a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52158440-8b8a-4d8e-97f0-30e39e92504f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96b72596-1589-45e1-9758-801aa5d89312",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48358c6f-01f5-4798-a523-f9cf105dcbf9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3445861e-5fdd-4f9d-8109-4a6e92bbf165",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c61a6f5-7239-45a3-8b1e-64066364d95a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9538945f-7907-4539-b317-31771542c3ec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28ba52da-7a33-4644-afbe-895b2d4b3ff4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07b2d4be-a457-4d03-ba93-c644f5510fea",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f639cc7b-c14b-475e-b971-9775718945a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "111a54ad-5ac0-4af9-b756-23ab3f1d8c80",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3aacc41-e143-42ae-8a88-24a235fede7d"
            }
          }
        ]
      },
      {
        "id": "eb22f93e-44cf-4f8b-9b5a-5d4bf94e70d8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "a0344c12-e8b2-4775-8564-8921648cce04",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7255e705-df0d-453a-9df3-1e809abc48ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "397860f7-8b29-4a9b-bc32-36b155405d1b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c56275-a1de-4931-be55-79c2b368a996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8006ae06-837f-4677-8b57-32f6a5523447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29ea40a-bd74-4671-8149-aef5568936ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fdecc15-e485-46fa-b71c-61e142ff8977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e49dc9-af73-4964-a1fa-5e31cf293c3c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de40354-a05b-4a11-b431-0e651ee14066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d96835-d78c-49fd-8523-5b290ac60bb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc24386d-1354-4243-b649-f210f3652e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e23b4a58-1cb6-4b06-9e4f-d8a7fddbce7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75802d12-6b1a-4f39-9eb4-61e731564f67",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728f2a6d-215e-4602-a76e-76549c11f3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41270b6f-d6a6-4bfe-ae76-50165dc8b40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9caa777-c2e1-41f3-afe2-5b27566cdf1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a4819f-57d0-414a-b687-9187aafd6b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d209ea8-3256-4abf-8534-4522cbf8ab2b",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a530ca92-5a1c-4e02-9a79-dd31cb28c574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af103110-1a5a-4293-99a7-c46b0b40ff1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf018b0-82c0-4ae8-8574-8f04c13f22fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "569aae33-4e59-4783-b792-44f34a02cd4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7740360-117b-4c37-94d2-7ab7567dd979",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a8acc8-48b1-467e-9eb1-2bc3cf8efd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e13d50-ea7e-468d-9de7-5c08666b6800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83f4a31-8887-46e4-a0e7-e0be2a97702f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f9873b-e6ae-49da-970e-020337dfa3d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b640e9fd-3478-4175-aeda-ca4738bb67df",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be711e0-c835-4b94-87a3-74584e526ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cc901ca-11e5-4128-a6ab-f7c14932a848"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f41187-066f-43e6-8883-05ecce3984a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6991d3f6-56b3-41b4-b4c2-0599169e6de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb500f5-6d4b-4c3d-84ad-68a251993fb7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6af36f4-f8f2-487d-868c-5d6a18afc4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623c386c-6204-45a0-9435-9e99cf51114b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8495d60-a2e6-46b8-a2a1-cbcf66180276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8b8946-46d8-4443-9482-9ec8864f8a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f57938-274e-42ee-8d99-0eefaacbf263",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d930d708-a4bc-4deb-912e-234046bfcb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9262c3ed-2924-41f9-b00b-e7ced507ae47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5324d36-3908-41f9-923c-6fd7567ff1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f12d4398-609f-4aa8-9814-04930c1ae75e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b99bbc6-b74f-4beb-9b50-e3bb493e9943",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d11993b-737e-4221-9aa3-11abba4f0652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43c7266c-ff16-4498-8a21-9ffc16423c8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2234ec07-5ff0-4b4c-a04f-fba0bb3e3118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3621b04-8fdd-499b-96c7-9b485f8e3c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8530d4-745f-44e1-b3db-8f641937c0e7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ebf81f-3d84-4e8e-80f0-ed4d1f898ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612aa213-5a20-4198-9775-2d67573d4c04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9569e555-97c3-4d1c-aad9-3825d41a265a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "030f5df6-8a7f-4608-b8e2-6d61fe8993d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbead2d6-9d28-42a4-b65e-8d43128cb408",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8f3f1d-1630-4dfc-970f-c2c6ca14b446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee8db87-b2e8-4db9-85f5-1e7aa41f6362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f5110c-75a4-41c1-aae4-de2990323707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "69b1ce0d-4321-4f53-b579-93651d217a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8acb376-5aaa-4d25-a56e-0b79747e9e28",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a1bc92-e022-41d0-92ee-89f8b4910556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8972dd20-8a5f-458f-9e02-a764e3a84321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780b84f6-177a-4b8a-89f7-31be5bfb7d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b47c1a94-4dff-47a5-bd9e-8c54d5fe9996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171a145b-e4e1-4c5e-b921-a70643f1ff29",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "090d0b72-5487-408b-80ec-0e0ddda3db0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f63c9eb-863a-42f2-a046-cf127621636b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40a6735-9578-4809-9a04-b70cda088081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e891588f-ebc0-4b8b-9b50-900e691d9eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e6c541-3922-4117-ab2c-ef124afea5e0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38666aed-190a-4214-a83f-8cefabda4c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2875e979-3906-4569-b910-96bb6becd334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af61d08-2a16-4c52-8ff3-81ef089839fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5033f73-8a02-4502-89af-78790d809963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b583646-8241-4430-83b2-1124d2357c24",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f74aa92-ce9a-4cf2-bfd3-01f341e21deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d28c400-fb23-4e92-af46-0d741970e510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7241e03-74df-4837-a78b-cfd11f46112a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4011a140-2a85-4166-b9f0-c0ca6c75df92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3658ed64-c368-47ac-947f-e1e155c7fd28",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb6ad62-1aae-4724-bf93-fa93e288aa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8455dabb-a5a4-43e8-81dc-3e34627b85dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f2b35b-d4ab-469f-b2df-1ea61158e16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc576f21-c119-4f0a-8a18-f2336ae8ab85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4c3b15-2cee-4206-8fdd-cb8671965c9e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be01d11-ada5-4f5c-b995-54aa3819bf2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86460ec-4b21-4974-872e-598f6877fe53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbab44bd-b7a8-405c-be35-30a2df5961c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b41e0b5-a5c1-4170-85d5-ccb9a51a0b28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "971be681-2eab-46fc-8419-ba9f05770880",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859b7c6f-205f-40f3-a15d-15826c1d73a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf70410-fd27-464b-a561-9ff1ed55cea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd33aa55-0848-4c37-8398-f04174cd50e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae79da04-3236-4bd9-baed-0c27855f0a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b91838fd-79cd-4c7b-bf86-20075f4942d1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f080183f-eb54-4552-89b7-537de9fd1816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14aa67fa-12b7-414c-8fdf-1275924cdf8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29991e79-623b-4e63-839b-e589400c5935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c12a196e-8aeb-4aca-9972-91a6515df9d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12de1c19-0342-4ca9-8eb4-061347b39756",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d9c0e9-c4af-4f9c-a316-d5a9ad4fdc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0deb725-6aa0-4e3d-bde5-e3c75457b38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785b5fb0-5cfa-476e-b4a8-f4a0f538fb01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b0babe-d302-4e67-ab69-03b1af540959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f59ced-c437-4d02-9940-003039c922df",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef0484b2-8b7c-44cb-88d2-b882bb8b2f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8592a4d3-fb32-474f-bb18-33735c0dcb32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcf94b7-32a0-4785-8fc7-043b9491ad24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b097d355-3881-4d93-bef8-b23973ec1cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fea7fc3-f0d4-4148-8736-c3126a30a8ae",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb77ed7-9ba9-484d-b296-2579fd1573f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c784e84-c10c-4867-a5d9-fcd8be7daaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc0673e-e7bf-4c7b-bde8-f03d22ffd163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc5216d-499f-4d69-a788-23d60ec0cb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332141fd-cfc0-437c-bc68-293a240e12a1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4045296d-0e6b-4620-ad17-1d2cf8ee1380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e571e4-1977-4a65-ae2e-bebf8ed18765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef23297-f02d-4bae-ac45-a6068fa232c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "631dfea9-a7b0-458c-a613-5afe86b4f310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6ca046-7895-4a0c-b65b-c1fe94bdb0c2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99253930-7a45-408f-be03-d5de6e386b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94040614-0117-4ed9-a96a-b2ce935a2917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a230cc7-66be-4a3c-880d-0d244e725b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e02b6303-cef0-44cd-ba42-873c174ca91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9673c9ed-da8f-4e69-96a0-ef1aa25816c7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde8686d-3fd7-4cff-aecb-51bf9de938de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350f731e-12b6-4a89-b1bd-ca8e68d1e9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecff8a5-07ea-4df2-a3f3-67b99612bffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9967a612-9730-43d3-bba9-c90f96d84a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6311692-50a1-46d9-be90-05f88fc358af",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4e0496-db96-4b22-9d17-a7fbca22ee2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b04d1c39-e5d9-4670-9335-b2ecc07d6ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512b8d00-4ad7-448f-bb82-0cae5b16f29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "953898b3-2936-4633-8871-119dd63fbc9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e82c40cc-77f5-4434-b1f4-363f44e9aa06",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba5cc13-a7c3-4754-a708-1f34781cf191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ab6247-3d2f-4fe6-afa0-6ceff1e3aa12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a853e43-bb6d-4f7e-8370-2fbb0b9afcaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec2e74ab-90ba-4668-b90f-db096961f8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8d4416-0d4f-49ae-9774-ba5a73f64568",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7938a0fc-9014-4e4b-8a39-31260d67aa34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647b4622-48c6-4141-ad8f-b146ceaff63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61f05d2-a792-4bfc-a1f4-b57b29d922c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35d00382-225b-4ea5-bad1-09bb7ab249cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808d974c-e162-4796-8b92-2fd48c1e7c1a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79477de3-8d64-4add-90fd-513a39ff5f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773a687b-b949-4ea6-84f1-8218765b9c56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5815399d-3d3d-44d7-8939-d47690fc5231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d592b3-24e7-46fa-a010-dc09fdf70aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f38911-24c0-47f9-a57f-3d9577c6ac44",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353a4670-a1a0-482d-98c7-cda67f6fba00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdba72e0-a0d0-44a4-8b97-1d6044a698ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee82c1d-2911-479b-acc4-908b338be999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4535e3-1120-4dfb-bfb3-5052d82ff7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d89257-230a-45e4-bf8a-92169ae5abe3",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3238bace-0400-4748-b5b2-6b290213b2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b241ba9-92e5-4d02-830e-9392851e0290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb21366-be33-4491-a174-efcc40b99e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbb4f0d-31b7-4f9a-9c89-88005495042e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6783f2a-d8e5-4826-a5a1-5e9d4a077e75",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58ea19cc-5413-40d0-bf66-a3ec94339dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d97cbf3-8308-43a4-822e-242b82fd4660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a74db542-1588-489c-be6f-b0a5a8509799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4921a5a-2638-497f-9916-8765738ad862"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d062488e-b878-4a86-9485-229b825b822c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ae0dd208-2a1a-44f5-a307-ce2c151f8997",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2951e6a3-be7d-4b5f-a198-9d8839cbaa1c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "475bd505-959c-4f14-97f2-898e54b3b34b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a57183-7f75-48e6-8ff9-cf95167f6fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e86ff956-7bc5-4cd1-a640-5cfaa0d3f975"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58bb3221-48c4-4877-a4b2-2a32efe7ee58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14e26445-2229-4d4c-800a-f584125900f1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3c0b303-51c0-4af9-a93d-dd43314320a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f866dae4-f40d-400b-8b6c-72d7c3d492b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b460ac8-7d18-42a5-b1d8-20fe6e49be18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2d130849-a80c-402f-b22c-448f937a79b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7cf6472-3c6b-4315-8854-1f99206190c0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20e12c45-ffc9-4ea9-82a7-0873867bed57"
            }
          }
        ]
      },
      {
        "id": "eb1ecfc0-9040-4e0b-af27-498af01c6869",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "d3b63d64-690a-4db3-baef-650dafa20cb0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0fb6223b-773c-4bcf-aadb-568423e5adeb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a703a2d6-a762-4963-ad30-07398b236173",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b986deb6-a138-4340-917e-dd992695cc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d8170d-c3e6-408f-aaec-428fb49fd9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be122049-951a-40d0-bed9-89714f5e069e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "750ff443-ae42-4447-8a1f-8ae19df210a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f7e259-cbe1-413d-8a2d-4e929060d6d2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d10d308-7c28-4663-abbd-b3a162f79981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d50df96-85d5-40ec-94ad-a50250f588eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d641f252-b824-4ef9-8eea-66a3a623b54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ebfb6c8-cde5-48af-ab9d-1303b9ae5d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85feeb5-d2db-4ad9-8370-a5254d165d70",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86043b3a-c181-446c-a701-1103fa9c2a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a218b711-24f8-462e-801b-c872b3ae828f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31b6a2f-a0c7-48b8-bca8-abb48c58bc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "40d5c306-77a7-476e-9002-48c6ae153718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2874bb-2022-4059-a349-79c6692df102",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef807c32-6ca5-439b-ba1b-da8e48caf0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85e3413-85f9-4995-900b-979a180d18cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c960fa0-21d9-4ba9-b6fb-c3310a6ce3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58f4dc4a-8e18-40ab-9df8-97b55b346ac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b915db38-7174-41a6-8fba-80b8230a6e91",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a68ab303-d8b5-4791-8a2d-e71a9b674b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aec2156-2dcc-41aa-9e8c-2ba0b56f49ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3157dd25-3a64-44c2-bca9-5ed0d648d7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f772302-43d8-4936-9b48-f26c77ff2749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f3373e-172e-499e-9699-e510b0356969",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d249e8-adfa-48bf-a13d-60976ed53e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "702d4000-bd1b-4a6c-9fd2-15db6c1fb21f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57fe116-98b5-4d2e-b389-5a4846bcd1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6311ef2-8c8d-42a9-95fe-a4f00999d6d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5585798-f3be-415c-8047-c8240d56a7e4",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ee4a24-f2d4-4c61-965c-522fbfc5b647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3567d2-0276-451c-8143-f4813dbcbbd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ba90438-8807-4a8d-9cf4-5bbab9485210",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "86d74a91-6e2f-4d06-96eb-fbb4e130b27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e95edb-3bce-4641-af85-af58e097989d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7d4c41-99f4-43c1-b7a9-bc75b034919e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b33d89-2202-4a05-9797-c30adf2e2a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b7c814-036a-431d-ab50-31729b987535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dea05cf8-69c1-49ea-abff-736c18f8b1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce22653-7323-403d-a084-386b65b7e3ea",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f266fb-0d35-4a17-99a4-e49a45b1357a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fabf9289-8ba3-4161-82a8-1bcd31c86b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc5513f-276f-4fd2-a6c9-63cf60f7673d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d615fc10-a590-4561-b1c4-03491ca0be96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c3ac97-c5af-4e6b-9ff8-dfa952b299f4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605c8d0e-cb0a-4471-9fb9-f6062fa920a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568424c5-b421-4e13-bff1-e8131cf4be55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4de6455-92b7-420f-af33-6d781c2ade08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9def8f38-b0d2-4502-b57a-b89d75a3ae1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2f6068f-c8b9-4a56-ac56-30747b3e91d7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8b3015-7bbb-428e-a490-c8ea3d41bd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8010fe0-675e-45ca-8735-52ec90ee7611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85af8c29-8893-47da-9ab7-94241c3f2fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3d585af1-1fc8-4c4e-b7ab-e32792017cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ddcbab-8572-419d-bd4a-902b4b0a59f3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39fcec3e-b06c-4dd7-aa01-57496a357d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019c2f97-713c-4440-a1e4-b51a07e7d73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34312635-87c0-4044-8362-a9b39444b1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "51e4fcb6-20aa-4ded-a7d4-18caa72f1fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f62bb46b-f9f4-424d-93e9-7695592cfe01",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5d3962-12e4-47af-a14c-da7293452937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6acc45-a0a4-489a-964f-ef7772d39335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "450c8710-5317-4395-a19a-66f4a4be6492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c05ac6a4-cca7-45d8-9376-41d3de7679f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1918024a-28e2-4a30-a0b1-e5f115b2a53f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31b11b1-3c62-49d5-94c6-06500c16c06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc63f84-500a-42e2-b042-0b16906a5adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f3bcaf-fdae-45f5-a4a7-bec40caec58c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6b69327-21ca-4037-8f8d-b94ecfec70b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a408fa0-f4db-415e-8d39-70141c7e1c82",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02aae172-fd13-43c8-b587-de2d2c8c49f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89459d7-08fe-47a4-885f-f535ce6e6dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb18371e-7674-471e-a0d9-b6cd3cab8986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7947e4b1-e354-4a5e-a787-922a123193a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237d6c36-0a55-4ff0-ae24-b98de0569561",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ca8a26-824a-45c0-aaec-a72012950b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "668e68cb-d973-44ac-8fa5-21dcc909bd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ed7117-c16a-4f45-a81b-4a195e3fb6e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "79d1f36a-1096-46c3-bb62-c0039ddbf954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f03e08f-57fb-4a0d-b6de-b4c91b73854c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4feaeaea-952a-471b-8dd5-d8d2e73b92f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68e64dd-6dee-4cb3-a8bf-f56e85ba6ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c29c19-a72e-49a4-a204-e1bde9b2071b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "809aac42-a2ac-4231-9d0e-0e80dccec887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eeeeda2-7fbc-468b-a20a-2e2306f7b445",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb664185-408f-484c-ad68-6125b061e903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86fce26b-3c2e-43a2-a895-7de3b620d4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a489a489-e10e-430b-ab2b-b9b1a6204e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83195644-d40d-4e0f-bfe7-fd3ac66d6853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2100111e-c244-4605-a639-33e7ef8e2e7a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd3bc008-f364-44f4-83cc-5a9b394a8cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e927902c-65ee-4db8-bb8e-b3abd96aa9d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e6514e-be35-438c-9db4-f392a2f94a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3727624c-e396-444b-bebb-2bf398d7eecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39474125-10be-4ab5-accb-3e36871026c8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25721f36-13ca-4dbc-bcbb-bd00670fe2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba183929-dcb8-4e5b-afd4-150c743565f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150f3072-de18-4531-adf2-89d1304611b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a78e3c4e-83ea-4be3-a3e5-112faf41f33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b027f9-3553-4057-877c-06da5867c607",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23abc9c1-a3fe-4032-b1ad-87fdca8da036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e541b61-aa7f-40b9-b21f-c7c2e7b0918c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39af9d27-8db0-4bd6-bb70-08b64366a000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8dc5740-974b-4554-ba94-55f1c353e2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98e09fb-b0af-4056-8de8-fbb3d2389785",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0013a0-7b3c-4d61-8a70-49a5a8184a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36402406-0e03-466a-8234-4ee6dbe38814"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d04a381-39a8-4515-bf2b-75072467ed3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d5aac0b-4f98-4ae7-beb7-c8c4c6f084f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edcdd14a-1788-4538-ae07-1716d7e41d0a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce99821e-e9b1-41cf-a4d2-41f9fb1fd70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32dce09e-73cb-4fe6-a366-91ee8508baab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae17d1d-2288-4364-b20e-9209f46bed5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e647621-0865-4c7e-a3e8-462ffc36f536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a58f0e7-cb14-4bb0-8c61-e59897c8989c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bceab613-91bc-40aa-b951-c94c368036cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c453b7-e533-4992-a9e0-8a435c9414fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c179ab7f-506b-45cb-9c3e-8deebecc0aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72e68f39-1046-4901-91dc-6a17c165fea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fb5e6c-438f-40b4-8615-b24bbcff553f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289b7669-3003-440d-912d-a627acf93995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9154ecf1-e0ab-49b4-91f6-44c8a74e24fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e117c6-8d14-4a3d-8f55-ab98349fdea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70800323-f067-4e40-bc5b-105012e60590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cee806-123c-4610-ab76-d642af86a345",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162777fb-1d93-421b-8139-10984f445f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d5db13-1dba-4821-910f-0266ddc74316"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216ffeec-38a0-453d-b239-ef06a2e0a29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bd43be-6495-408f-9cbb-7bfe2f2879a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccb28da-347f-4b31-838e-641e9db9e58d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d973c0-cf5f-4b53-be5b-16c783f61547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90a1b96-d66d-4e14-83a7-37b6fb54aa7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dd80dd2-c006-4998-b9a1-51a95bf50c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e18674bb-0131-46b4-9236-706cd64ba486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d98b7e9-5dfa-429f-bc6e-ff93815c57eb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea549a8-fe52-4439-b0aa-1e76c7ddd60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e746ef-c6e8-4bdb-a812-6699814d0c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896f289f-fa49-42ba-a730-958860675d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "be58f2db-a291-43aa-bfdd-513d1b1762f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f7b206-2520-4d2a-bc27-ddbae81a772a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad60d9e5-7349-40e8-9ddd-bd680f684e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "801a40c5-e517-4a6a-b09d-bcf5a77025eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2978e452-8e68-4cf5-97a9-3a0f9ff4402b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "994cd078-9a6f-443c-a1df-84e162050b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e732f1-962a-4392-981d-b3b06e434050",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5050a409-9047-4153-acbe-ba29f7d42cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227b5508-8cbe-40f5-98b1-17e04f6e9b53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a6392c-245c-4a56-a850-dcf8c5bd49a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e332be0-92e1-477a-82fa-07bdc8a9aa67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f038ce00-295e-4fb0-83a8-d9e5df442429",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da2bf9cd-3f93-4cbb-982e-a955e14f3e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ea8e07-e236-4aa4-9197-68980b2186c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc551002-69d6-4167-b314-25b9b0782196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ff34f63-3990-44cd-afff-7e2ad21fc9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb422488-9fa8-47ed-a8b3-316adff59867",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa0bd89-ada7-4958-8395-d58947178879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e088e4b5-f9e4-4df6-979c-551ebb47d43c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a03d7ecc-b2a7-43e9-b293-1e1fdf72281b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eec47f59-427f-490c-b267-68199a3867ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c318d5f-1b98-4b08-8ee9-a399bce7dfa7",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49bf9e95-8600-4161-b6f3-555ee9b48bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99a273c-b439-4de5-8fda-8055ddc39faf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a747d8b2-1a12-4bb8-ad7b-38815b34c4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e42f56e-d6e1-4dab-b422-7c813fcd1b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e9e081-c331-4560-8e30-cf649516717e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd839def-85ea-4c82-84da-7f72b8cf4dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d1ae8c-b27e-4cbb-8b53-43916bbee8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cc27cb-1ec9-4197-a35f-175c26367333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8484574d-0054-4b72-99d9-2bbd9798f88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a916550-f3f0-4c8b-a0c3-254bf2a278b2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9121330c-1eaa-4117-810e-649769c83389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c58aa5-83dc-4fed-83c8-bf2a40d4c058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2201ea-1d20-4cf0-a9e3-38a21d7bc99a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77fcf8d3-f208-4c41-8058-c1ecd422601f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7acc0379-0f4f-422c-8e56-20f6ce23e136",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1589a1c6-18aa-4505-a5a2-ce09d276996b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a542bd01-43de-4167-b8fe-981f0f8e172f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909a7c4f-97b1-4651-8551-c3e4ed9a43d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c43f112-3b73-4f44-a185-72b913a894b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b267c775-de67-4d80-9519-11865d8f26f1",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9464fd30-ed01-4ca6-9f18-08079663d1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2951bf4c-322d-4a2b-bcaf-71b08e38318e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05acd03a-999f-44e5-8203-5f6590981c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "85baa4ba-c04c-486f-8198-cf5404c60784"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "419d3848-00b2-4b38-a4a9-11292cb4fa8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b5230a44-77b6-4a2e-8523-5309cae88b80",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f92711-3934-4fbe-b3be-0c62a2869bfb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b577a290-0049-44cf-91a7-48c0c4d9bfbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da407c7-4c38-4881-bb29-f1add26054b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f9a2894-2568-4920-b4c1-8a1bc88a9bb3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b08fb39-e5a1-4492-b628-7da2da46418b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d737d37d-62e2-4c5a-87d4-25dc79249418"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c22f9204-dd26-461b-9867-765dee143a87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a646aaf8-d8a7-4e0f-8913-94676cac2391"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe2a3a9a-dce7-430c-a91b-176d432a39bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2851d8eb-9408-451e-8c84-b75b14369d47"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b15d85d-5e3d-434d-aec9-897c0f4579e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f967b67-89ab-40f3-bf98-1b66c9b722b4"
            }
          }
        ]
      },
      {
        "id": "b36b0a67-685d-48ad-aa5a-9a3bb5cc980f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e12d1abd-6573-42d6-a7e2-73b9b09070f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3844195-87e8-454d-8f75-eaab04ba5175",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e4265e90-c104-4e61-b403-8eefbfb4a704",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c5bcde-956e-46dc-a9f6-fcdaae6b9f69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210fb213-cb93-41cf-9659-31d51bbd5d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6349b836-f447-498f-8f48-b9e528b74c27",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88b3a43-194b-47b2-bc50-91a92387973c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f66d769-5981-4991-81ae-c0db0572db79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e4f31b-54ab-49ae-8318-2bddea579d13",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc0dedb-e79b-47c9-8e66-92ff405012d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "288687af-5ac5-43d6-abc4-d3f93ba1cf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c50e60-8d30-40a7-9c79-efc1b4c95305",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a4e747-2234-464e-b4df-b858fddd39a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "704ea7c1-097b-47b8-8ad8-2b5ba55bed42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0af5d9-8bb8-4238-a15b-d5bf2ba97fd7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681e9ed4-3c8b-45fa-a24e-bfee457d7dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1602b585-e658-4613-8449-b4381771682d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc403720-cc59-406b-8925-1d25060ceaa4",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e641af88-57fb-4205-a85d-0549a2638f03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f2a12f-ae30-4201-9fd9-673bd0b19649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99109c2c-486a-415b-a8fd-743b876f06ce",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9082761-2894-4507-9175-63eed1f09da2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7805bd26-fd5e-4a41-afc4-ad0f8993a9b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e13db4-ef0f-4aac-8244-d99b6c4a5925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0482855-10e2-4592-b4eb-4f86b0761e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4abf3b11-8333-4ee9-ad1a-819821022100",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b35299-ad3b-4c66-a9b7-1e0c5aeaffe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "085d4568-ee19-45df-9a47-843cad2986f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7dce8a-6767-441a-8903-1e9310d8fdf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee15dff4-0755-47b3-96d1-d1d99cdb3848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152d0961-c3bb-4d90-a5f1-74b1e1286f2e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5d0211-6dfc-49c0-810f-cfa06e5af802",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c59e229-30d9-4b98-ac2f-4abade8995fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21595fde-d0ce-4da7-be02-386f2737273c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c25281-e30f-47d9-b11e-65fcecc3105a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da6729d-9e44-4a84-8533-0baf4d343b0e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a63800-eb48-4153-a401-5b0059f38e04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ce0ac95-43ea-472d-b21a-deb071ea00d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa74b38-7ff9-483b-97cd-8aed8c8af7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93338459-2bb9-4f2b-b4b5-425d794b062f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adccc7b-2a14-4f45-b97b-4b31920875e8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ca2b83-73a2-4e07-b786-a2921290dd55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eda9b54-7758-4ab5-902b-76afcaca46ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec241cb6-b9ea-4693-a268-0163dfa8acc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e593c9f6-cc30-4dd7-ac54-c7f2bb25f85e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02be3cfd-959f-4cc2-9593-41a6dcb562e8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eefe954-5b70-4038-addb-d3e4c123097a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0f58019-96d1-4fb6-b33d-dd439a758ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d687de0-1b97-488f-85bb-0bbad644613c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0be51d-34c0-4e31-83e2-84c49f2f2246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edda6c9f-30f6-436f-87d2-9a1d1cc24e49",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d20064-b21b-4639-b5dc-fb3c0716e215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "569ae30c-f8b5-4d8a-acf5-ed77bee9271f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d649b21-5b33-40a0-a07b-d9eb708925a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c5cf6e4-e538-4a32-bab5-ac8f143c1019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfadbebf-76f1-4adc-ad29-e179b70c02cc",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3a0789-a86f-443d-a83e-6b18ce78d4bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cada564-a7b3-4353-86ce-b2285bed51fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc96bba4-e10d-4a87-9654-91bae60fb983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4a5dab1-16d5-45cc-976a-82346fe4b139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb45b7b3-d76d-4c90-b554-eb7b1e9c4405",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b999a04-5862-4033-93b5-b77ff1cee975",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8521aca-a939-4c73-9640-b357303aa27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c747a0d-8873-4af4-a8c5-952a13170cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c1dd4d-5371-41da-af37-5ea349db805e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2493f7-1a2f-4b9b-8795-99e45628c010",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3fc5df-0073-44d6-86df-588c9361e300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0d56e7-2437-4a88-b196-82eca823d925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7d9d09-9fc8-4db2-9596-0eea78b2583e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76f9887b-7024-4772-a314-5278d35341b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7e13bf-6c97-4757-8c45-f05b4fad2487",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "905c6e8e-e115-4d98-8c25-5bdb5bb46abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a708517-4997-4861-b12e-351e910de6ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf85edf2-c2d9-4b1d-9265-28a987109964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37377996-a9f6-44ab-912c-a5d77d441c5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36c4b7f-1f1f-4626-90b4-a02123f78690",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71130866-adb7-490f-b3c6-28ea6a53df13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ba1968-cb70-42d1-be31-f47657d13af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "325bb79a-d969-4dc7-95fb-56cde91c9cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5820552-baec-44bd-b043-f86eac5f09d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cab946-f227-4171-bd7e-16baca2967ba",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17051f36-6046-40ed-97d7-53bf2bbd7584",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687599e9-680c-4ff3-9ca7-9f0ec9525ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c760ae50-8b8c-4c95-855c-fe86e41086b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663adf4b-393a-402c-9552-89007707a437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1b86ba-fe19-4aab-be03-ea30cd5ee68e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51416a0-11cc-494b-994f-c8351725852d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "959a8612-ce83-4b1e-98c8-b0c2b0555c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f714108f-8b8a-46d1-889d-c3145f251a85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83cd278e-64bd-4d6b-9058-f4a612f54f43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08168d4e-99f4-473f-8326-ec50a108739d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ae0d33-28a1-4612-9df1-eb766f0c3e16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7fff9e-563a-4d4a-b032-e37da246b093"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff17e77-71e0-42ac-aa25-b7231f35a12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "807be185-89c0-4659-883f-8e5326f7577e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e02560cb-04ce-4d37-ac16-4067182acc68",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f041c1b-8fbe-4dd7-bd2c-c7d6606a8500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b283c6-7623-447a-a413-f57baf1363d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c762a90-efc9-418a-945a-571b8923e9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d30df5-effa-4952-b543-c2ffffd28b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d101a8f4-e1bb-4f02-8687-576331332b4a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d67a8d7-ad24-4dfe-9069-7d9bbba15a58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b0599d5-7882-4d21-87e8-b4686cccad17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9095841b-c017-4849-82d6-ee1542c6404a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4872a199-1487-474a-9068-0e251a83fb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dd741ce-df6d-4293-af22-b9aea427dddf",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4aa11a-eaa9-4b23-8abb-1c413899cc1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15f21d45-20af-498c-a0ea-e5f747a07444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7e262b-89f3-4f3a-94f7-cf70a8b30625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d34820-9768-41be-9cfd-d161a84419a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6142800-2f2a-496c-93e2-aa436529b7b2",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a33b8b-f359-4bcb-a325-6e1bc54330d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "676c4617-7f5e-49b2-a30d-4516afbe1e33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f2ee5b-d77e-4b91-8f71-da2c9e44d040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f4f7bb-085f-4c2c-b2cb-59b9b532f209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a68cfe0-8caf-4d8a-8c39-d304c7728f2b",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c030196e-f7c1-4349-9eba-52176d89dfd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a847d38c-dcf2-4816-b44f-1ec26598ca72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedac78b-84f9-4479-a577-a34d1470fbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89353ef5-8d49-4d66-86c7-3af6f1fc806d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91fe73cd-fb6e-4ef0-8024-90b308a648be",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec843627-2779-4903-a55d-851e67339898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7daf9f2-3301-4e42-82b4-ec2da210b7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "000e74bf-aa71-4d1a-9bcb-345522107a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99587d62-5085-42a3-8349-c053dc981454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef73675-dcbd-4a64-8fd1-a2f6b97847ea",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95e259e-9512-4e1a-823d-d8812fd87452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57324a4e-f8a7-41af-80bf-bb2c5fb8a7cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "898c6e8f-35b8-4e36-80ac-8b57cc9a1fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00fa9093-36bd-40dd-afd9-a80f234f0b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877c039b-449c-40e5-9423-625746135714",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79cdd9d0-7701-482d-9d9d-361fdd7f081d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e986105-4068-469a-bee0-33b01bcd20ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37813e23-a129-432f-b18e-b6b51643048d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3b3873-3dd1-4d0b-91bb-fd05002266e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93e6099-b251-4703-9f2b-a95e58ac4050",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecea32f2-8d4d-4b58-b5f4-9bab06df8e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0f1027e-e2f2-4a49-8811-ba971f7eb404"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff90b86-d849-4c0a-ab09-01d93d7b58ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2acde7b0-3e3b-4a86-bd01-a1d667d49625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac324a4-60da-48c9-b887-32df2d5f1424",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f26a78-3145-416f-8ea3-7e0975fa7e98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80e91b2d-5687-4c9d-9fb5-7bd84995c058"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170af0c6-994e-440a-8cba-13cea0a1ee3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fadb78-4117-441b-819c-cc68bd1fe63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a4a2571-4776-482a-ae0a-06221bfcc27d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497beb6f-822d-4be0-a3ee-a6e0516170b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b6653a5-30f4-4587-841c-623476028d05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcca4d77-4bba-4f79-97c2-e2dcc43d3a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b76af737-8807-4774-bc6d-5dbc8f7eaf0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8e375f-8f4c-417b-966a-9d7ed687728a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01e3bfe-b335-4fff-a2b0-0d5d983038bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a720428-5cd4-4082-a453-065a71f2ca85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02c9a7e-560b-4957-9943-ed963e90a7d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71ab949-c11a-4148-9616-fab33dc6a718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdc3ab3-82bf-4889-8040-15315ea7c367",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3a0bff4-cb46-4c30-85f0-848ba4590963",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d18caec-9d6c-4f28-ad43-c41b7756bf44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "492244ad-75c3-4d61-b3ba-a5c89524ae26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff485a8f-e5a3-4ff4-8af0-64d2c7fe99fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbb8daf-66a4-4629-8e75-3e2ed3f3e0f4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b59b7a-73ab-4dc1-a712-c8a01950282b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e96c92f-354c-404c-a556-dcee25557803"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aabe335-2ef6-4afb-a45f-d7ce98622849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7db87e3-e1ce-47e4-befa-2e250f44ed01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e69975-0823-4a3b-bdfa-5c26f7d58bb0",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9bdc70a-96b2-4035-96b2-7056a77f2f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "745a7dca-f266-48f3-8ba7-13f09cd18684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3dc1dd0-2b30-459c-847a-161b21eae36e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3892606f-6acb-4f6d-91e6-e093ed239318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15a31c1-9720-4619-ac17-7d6f8874e21b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc72f972-4368-484a-a999-f969fb40260a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ed7c86-c849-4d34-9e26-34876dabd952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1345775-589b-4faa-82e7-89dd025ba1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac183fb4-0a3c-463e-bbec-ea06ec552b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1eeede-6a0d-479b-82f3-00ebf3d59dff",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9ec87d-7cd2-461b-8f1d-bed2901a8aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522552cd-6cfa-49a5-991f-113cec9f60ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9f9fec-7be7-420e-8955-cdde53c4460c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c46a52e8-deda-4326-bd9a-c3f475af7d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca6724d-8708-4a27-bc1b-5f717600a601",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070fbd81-b321-4cf5-9a26-35bf444e48e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32d9fb34-1a14-44b9-861d-ff47934d25a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd11ea1b-bbd2-4283-9321-47eba311bbf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eb450e-32a3-492b-9038-636eba64fe88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7014489-03e6-4c8c-83b4-9b108e616972",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5826941-9e9d-4e18-87ea-b1bfaaff4b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b562ff0-947e-4cf4-9270-850a7f08fa2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e93ec2d-1ac0-46ab-a6df-1cde3a29e629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7fafab8-e08e-4bb3-8edb-aa82996fae60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b55d1d-7272-4272-9471-f2140b4e2688",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70f72662-a372-446c-9493-1b0b32819542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d545a761-182f-42ca-8cea-1937fd0ecb7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ddf2fb-377d-4e40-b62d-addc1850767d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d313bb35-9ee4-493b-b0ea-d3a2960ca4f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbee236d-217c-43ef-a747-0708568d214c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bc5059-80af-4cbf-9a09-51a3c71499bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccfc406-342c-4143-847c-d19aeead9d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "260034fc-894d-4765-8e1b-7c1ce8e9b3c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b4000f9-2fbe-4b0e-952c-e520817f0be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46ecb5a-3004-4398-b666-3e5524698c38",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41721d55-9cb8-4d12-a9e1-6e242716bd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26212ff-79cf-4c77-8ec8-e06573994401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645db683-2553-4360-bd42-abc8d7ffb0e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c859b3-1021-45cd-88a6-c6085a8275bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ea96d7-f022-486f-b1d5-30360bebaa66",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a3ca70-589c-4a8b-a5c2-a1f300ea434d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84084c58-e577-48e8-9906-5a6984cbb4ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c06c41-a9b0-4236-8b1d-65ee7ab65f36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b276e1-08c3-44f0-97ec-5ca5e2d538c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38bc67bd-f1df-4dd9-80a3-41b3acbcf0b5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281312ed-3e57-46ab-a643-7cd53efb7747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "524a149f-9738-4536-963b-60e2982c4a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18d9ed4-1617-40a2-b6b3-6118761b2e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a42248e1-55e7-4700-8b2b-721d4996f542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3a9d66-4518-44c8-9218-dce1fa7ca417",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81113dae-5544-40ea-9744-722cfcb718f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9efeff-3db1-4d16-826c-2ce5d1a1965c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1292d9c8-9be4-4480-b53d-8af45b011250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db2ef9d-71f0-4073-8692-433513c1d18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a025acb-7c8c-4d12-83cf-0b8bd5196fae",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbb4936-c891-4d97-b437-3586ccb04a2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e53ab0a-37fe-4afd-b82b-f4a7d1b3a928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4190cb75-6fc4-4d29-98e5-6c957cdaf7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b12c640-9b4b-4e6f-accd-b75905a1c6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d24a5a13-5972-498a-b894-488e5790fdf6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766d620f-ac72-4cf8-91ac-974d319aad41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a134262c-2d21-4c52-bbf8-92238055d7db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2426a45f-e2ad-4161-a20b-882412bae7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc000ede-36f3-4574-aaaa-60c0512c26a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc82591a-d627-4e38-9431-5f6ad911a25a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a03d5a-e054-432f-8cc8-056ca4b710c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de202877-c484-4bfc-811d-da4cb47c5edf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cfebd9b-1151-4f85-95c9-9fdf9801451c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a177f9b6-25a6-470e-85c1-e80dfc273041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b624298-149d-4a0c-94d4-5e29a18e1d04",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13615288-76ee-4e39-8a63-7c6e58e6874d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b088c38-9db2-4f27-99e3-b4ce5357dbdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3820e514-10f0-4b11-b37c-641e24e6d1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9ab63a1-42f5-4109-8647-a5dddba61e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813b265e-38a3-4063-88cb-2879ad6cab8b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0695ef-f1c8-4b05-ad2e-38658f20c18b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b044a0ac-62e0-4b0d-958c-0b66bbf740a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6316dbb1-825d-4f0a-a047-1f0e16bb3d71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2df0045-68bc-4a2f-bf11-9d96742ae485"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12a02d47-a142-4153-b8f3-0835f52b5b3e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af0d3f2-3b77-45d9-80c4-7665e4c1980d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7498c7d7-b8e5-41a7-a5bd-a8c95bb599ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d999ceea-c317-47fc-962c-134431887fe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffdb2600-9502-41cd-8ba7-4728d0965702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74167774-6463-4157-ba55-96aa6e80f836",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b17e381-ea44-44f4-8132-986faab94155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b38d0977-db82-4ad7-ae9a-65e9cdd1856d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e9023c-9cf1-4518-8c79-3ad912a0d7f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6649be-6ed1-43ae-8a15-6d677c32e58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03ba31b-9875-4c0c-9649-bd81fec47755",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26443fd2-0f72-492f-978e-c959922c69c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "615f52a9-3962-4892-bc11-10714a395605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a77c55-a87c-49bc-a22e-1af7ddf84ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5d08c2-7d39-40fa-a52e-acd92ba49423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a755a0a-1893-4440-9d33-12c82fc7c5b7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014276b5-607a-4fea-92a4-7cf6d25bb495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb6fdd0-794f-43c8-a735-aa5113bf15ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61bb49e1-2556-4152-9b5c-1e4a2061e6e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b478975-7e57-4648-8efc-11bd038ec81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31a20c45-6b34-476c-824a-e256e2ceac21",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cd99d1-40ef-4b65-a3e3-c7cded6b2b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "237f9897-8fa3-4c17-b2ed-8d7e14acdf72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54a1469-ad7a-4bea-94ec-890b79c61d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a7dca4-9e73-489f-8e39-43c0adb165d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72ed025-afef-44a2-bdcb-d83dfa3c67f7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55b5663-cb10-447b-af5e-d51b7f4dace3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58839922-63ff-4b04-9536-ae23119acff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13a7557-b31c-44bd-b276-6ab3342a72be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d579792f-d0b5-484e-a6a8-7cc270081b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f09f3c3-8f55-4e3b-b762-c437759bc975",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f83e7fa-e011-4355-b2ee-bd03b5725b7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d85b96-65bb-479c-abdd-9977382e81a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b287818-aeed-43b0-bb65-79e68fdb43e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912c5451-352c-4a53-ab21-167b639a42e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c932ee54-76b4-4354-83bd-bdf7eba9f2ec",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97b3bc4-ae96-42fe-a759-6fc310783deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24707042-cead-4212-a103-d21ee5251d19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ce515e9-4584-42fa-9070-8a346aeba6b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4506ef24-5874-4547-8961-f0edf2b2c125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1345053d-7f90-402c-b932-5ac7f5cd7e66",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f9950b-0c08-4b51-9222-bc71eb918a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9226174b-c5a8-4679-b1e1-b6af90d2c3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68aa5df5-7a96-49f0-a776-116ad6c48e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b677478-c9ce-493b-bbbb-16cd1bf24832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54825298-11ea-4148-9388-712a8d0e2f48",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "649f6634-3f01-43cf-b8a2-0dddd7975a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2e7df38-16e5-42fc-806a-972e930e56ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "217271e2-667f-4eb1-b281-41a1cc399f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ea47c1-bab8-43fa-a24c-b5fd1db0c8c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9893e78f-e8f2-4871-bded-48a53bdee149",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a76a2a5-7ec1-4205-8b4c-4568b9e33c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65e44ad-08ee-4121-b1d0-1dffecf8a18f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "413776ea-653f-44cf-86b3-8e2ee1386e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b2395e-4a8f-427d-b2bc-0bae61709e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dae16c-1a00-4284-ae92-2ec83058bc83",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9a58d5-b108-4dc8-934b-ae313c703692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d6d7513-84e6-46d9-bb77-6c0af6288257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "648465f7-d0e6-4858-963f-d36a41e9b8cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aee0cd1d-77b8-49bc-bdb8-74215ecfd45d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a023ee9-947f-47ea-9b44-59220ea273f6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a982cf2-4023-45d1-b2f3-0116c68b4f48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abef6b88-646c-4853-8ab1-0a7e5bba9b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "809f70b6-d1b8-497e-aa24-1099fef9fa2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5698815-499d-41c2-8e40-3eda6c4c6ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9de64d3-ec61-47bf-98dd-f5de5ee85400",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870a9f7d-648d-41ce-9de6-f9f67760d2c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26b3bd31-45ac-42f9-96d4-2ed919c95cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf8bef9-1e6f-4e42-ab89-b71cc68e32b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ed9f90-ea22-406b-baf8-561d39388da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875e0b64-7d8d-4e94-8d17-85c87b46e828",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076017b5-b840-4eda-a0ff-72e2bee5e3ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c3c80d4-4d51-4b72-b395-308ed97d7422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696e0972-45f1-45bf-a881-7757b6362089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834efa28-0222-4ccc-b897-f9fa8c39fac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722dd601-52c7-484b-9959-90bc75752d1c",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53403949-1624-476c-ac28-7d4237eb4ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "085db403-8cfa-4ec9-b9b5-f24e3fb3f03c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "314194ce-91d6-451a-a2a2-ce420f5e19b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7958447f-fff6-4f2e-8021-6ba46bf41fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d325d4-60df-410d-82ef-26f644dc1af2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d9b6f3-4e53-4de3-91b9-8b6517bd513c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664fd705-8313-43ed-80a2-e09e7973b6fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f99c7b-79f8-4b5e-ab4a-7ec585247c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6c3cc43-76c7-4dbc-852b-92cfc3c65d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fe5722-2747-48eb-8796-33efefc4e602",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3a268b-a9dd-4cc8-839a-27c858e7f516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b24eee2-3533-4faf-ab24-01667a79d125"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67cf0d35-4862-4ca4-a587-c2aba86de28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f168096-4991-4c80-b661-d65f556e5afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b11978fd-9680-48b8-a9d3-67d35cac7463",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7628799-4ac2-4364-a57b-58b85a1df1de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72cf885f-9a31-4861-9eba-ea6726f389a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b945d77-c9a9-4942-96f2-a24142f017dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7708ca51-6841-4df0-b8c8-5e2096b13301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4115ff1a-e4dc-4dfa-9554-813b84af5519",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7afe881e-4a3a-4fe6-8e76-baadccd8bcab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1467503-827b-40d7-b734-2fd663442b54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cca5c8-0266-46a6-8100-cc6b44465cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae12e67-c807-4979-81df-5f102cc0919f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb26e5a-5f7d-4a3e-b5d4-c0e16df63756",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a127090-3166-42f8-b826-6d52835f46b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dd8d754-4566-4426-9d2e-d5203dddbcf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f967411c-c4d5-4ee3-ac08-149931536bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd191fe0-ff3c-47d7-93fc-30de7ce99d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2119b5-abf4-41f5-8db4-972c8c91e594",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e62589-90af-4dc5-a658-40e821ef7eb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0870291-8499-43d0-a482-4205467d1f55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483940fa-53ac-43a7-80bd-45cdc62bb069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4249ed0-1378-425a-814a-8a5e90c32556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632b15d3-692c-4798-9302-33253b75ec2d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68215cb6-34a3-4ced-b16f-58569bac021e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80bf3a4a-6a12-4292-b8d3-7fff711eee0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c917526b-cbe8-41f6-a604-4a9b111dd6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f75862a-4721-4c29-b336-7ae9bee2fb03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f15e843-d733-4813-9cdf-3c2cee0c95c0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e24899d-40cf-4e84-b706-069b5333a412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d6083da-990a-41a1-8c93-58721a7e72c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f651a4-0024-4f4c-b999-ced10cc1107e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08162705-4658-4018-bd0b-271a4cbafb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0446d1-a1e4-4d35-9868-9d271818c024",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba6c568e-1ab6-4402-b27a-8757c3d63d6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4fb21a9-e8ed-4178-915f-fdde51efbab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6532deee-f848-4956-99e0-cba19c43ddf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a96042dd-f58c-462d-b910-dd464551c469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f64a7e-6ac1-4743-b7e2-f41f1f4c6b75",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b320ca98-5c21-4526-8517-f10c432684df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d5534eb-141d-4ea2-8201-af7b727281a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e330c3-ac87-4bdd-9616-06491c8c6ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebd27e8-5eb2-4d4f-b193-050fdeb6ca0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f785cc-1f39-440a-9da1-0c7c5b65b23f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66515be0-332c-4eb8-9d8c-d79802f0ddd2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1093eab4-a313-44e5-810e-9738dd414735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ae213e-ea5d-4028-9351-fd24cfdf8496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9a9cbe-299e-4fd9-8eac-957aa7190f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98f6077-5f14-479b-803b-4122acabfe5e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7844ec67-efe0-42e8-9c3a-510ec715f09d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dd0c486-0968-4f0e-85f6-2658b249e789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83336cfa-4dd8-4ece-87e0-47f120ccb782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44a648c-3927-4d6b-9549-d835a3a050f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e66088e-05d7-45aa-9170-8c4b7805a7ae",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbc2f40-ca9b-48a3-8c92-915da06cf2ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b3f0b79-206b-46b8-8694-2ae72a2ed581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f222ae1-7080-43a8-8314-e84518c6107d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "646a7242-762c-4d52-a3fd-6eaca292c84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fbc309-25f1-47e9-ab8a-64588e05fab4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb41ba1-1ee4-43f1-965f-98345e7fa572",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5d74717-8a97-414c-ac95-81a87a775d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b39b65d-e037-4c19-95b9-7d946a40370e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7a5d57-40a2-4d23-8b64-444819e835c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a010ea-bb2e-43f5-bdb5-f7b4577db07d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97227952-288c-429b-a2f7-ce1cdf37fe3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f52fec-7d21-4c2e-900e-23fc58567d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e70993-3349-4916-8a0c-e36f1fc32009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2abdc0e6-11d4-41d8-ab6a-cc3384e152b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7ab873-c688-4e50-ba2e-02ab99d08125",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa63a476-359a-4ebf-a6b6-7bfd1ebe1e0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea4acbd-df77-4f51-ad29-82337ccf5d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3941a4aa-498b-4ce8-8f9d-8ea6a3550402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c3df3d-cd5a-4120-9962-9eacb47d8a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "135dd299-a0c5-4108-976e-c77bfca587f2",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3735fd21-a8ab-48ad-ae9a-f25aa6c4f840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f4e80bc-fe06-453f-9d30-5e20cc446603"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d4fb932-cf5a-4c52-9f20-b056fa330d8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0628dac4-064e-4e9a-af04-150af6f50aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51800bd3-426a-4c82-a049-dc644ebd0cac",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de349dd4-9f3c-4385-9092-2d0bbd2b704e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "772d4c8c-1078-4119-8bba-fe4d9014384f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2f1eef-dd6d-4e2a-bd0d-49d854b8ade0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a165bc85-492d-4ad6-86a0-94aeb5203d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d283b48-e6f8-43b0-bae4-bd4773d68b3c",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ce5779-3ae8-4c2f-905e-111ea7722499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "624555e5-4bab-4a39-bfcb-b5e687a220d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72c09dcd-5ae0-43af-aaa0-a7c4508fbbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c222c5-af1e-4d06-b1eb-4b29e1803c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed19b77-c924-4c51-ae3e-4b22691d0841",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d874960-e401-4a98-8d10-4893e4d238fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18765c55-e36c-478c-a6be-0c83d8d98f04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6cb023-a633-4e74-857e-c23d4f3c4451",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4ebe31-ee54-4dd0-bfb0-f5e711aa8dad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa3a8f2-2b05-4d8c-8ee4-3bf461c62baf",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daffb44c-cdd4-4e3f-9af1-cf6329fda319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fec67438-5e08-4cbd-9084-71577e8e95dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f76d67-6f11-4cef-9868-cd8f25099617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1423da9b-46e8-46a6-85fa-d215b0ba9e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a867c6c-f1cf-482c-a487-c5c7b74849e9",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe63391-56ff-4576-aa49-4f8847950a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5c408d9-1064-4f39-bd16-44270016d0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c832108-42ba-47f1-a635-8a7c69750841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f7a417-6546-49e3-ba4a-b9d8be5d4ba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3992f205-ad4d-4668-a82c-bfd96a1db253",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb3e8aa0-c4a9-4dc4-9a07-6817a9fa43a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cee6f84c-0e37-4899-8d05-ed0ae9c97d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3d8363c-7e23-419e-8799-c162ceed2cc7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27dbf934-c5ab-477d-bb21-caa8bfd08463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcd77d3-ef22-43bb-99af-3e1b57bdd789",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b984bcf-c513-4dc0-b37a-e7ec43fb6e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1006be6-542a-4c64-b477-df653123e979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ca9bb1-05c6-4593-beb8-340799f16270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580ddf64-24ba-405c-8020-68b51821824f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b107813b-2a4f-4477-a1e6-b6c5de34239c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21eaffd2-f91f-4ac7-a13b-46c3703a773e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6be716d8-9a8e-4558-a231-edd30d2c5169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67608eb8-9e5c-42ce-9960-345c4acf2679",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c8ea98-d2d7-42ea-875c-670910b0bd2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8d039ec-4868-42be-9b4a-70561526fce9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c450be33-004f-45a5-b654-01e310418a01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ccac99-20e5-4b4c-96ea-9885dc2f996f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "589e2363-e184-4221-a61d-11cdefb72890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddcced17-5696-4cbf-a55b-a0b1dbd22a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be9ea9b-2f62-45cb-850e-e1a5f9a1f5a9",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b022712a-245b-4dae-b5ec-2d7c573395ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b594358-de6c-4555-a2c4-58dae283c092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96ab332-6450-40ae-8d99-d01d5f7baf1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e3e8a11-c732-4803-b48c-7c04ffd63365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98269ed1-043d-4cf4-aced-96f71a4d900f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e5d2e9-5b97-4ecb-9014-cc166951a375",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed031666-b980-45dd-8eed-659d37f11b73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "581d3040-6122-43f5-80a7-402cfdb2258f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e56c10-4de9-45b3-8056-c946bc71199b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c147123-40a7-409c-83bd-cbcf643039d2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7187ea-533a-4e31-bbd4-8c7459381a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae027c7-4b62-4158-96d7-6b2824668dcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decd7d71-7848-4e44-a3cd-e02c497c1139",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8541b140-5955-4256-9e98-e9e5ed3010ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159d1bda-4985-4bcf-9c3f-562a21e1d775",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09c678a-52a8-408c-96b3-74459672c1e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1744aa7a-2d3c-492c-a092-d9bf0c8b07ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e888f46a-681f-4f83-838c-3bc777701575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf5637b-ff6e-4bed-ad4a-8bfb723fbf8a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d361b3a5-af8f-4e17-b8f9-df517d636373",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "037d807c-a613-4272-a6e3-bd1a52e2410e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f60d8c57-5d53-4d0a-9f07-8b26a5d92435",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e8dc097-b581-4708-9e62-a987c7a3d0c3"
                    }
                  }
                ]
              },
              {
                "id": "6abe1a5d-1c75-4702-8409-b29c147dedcb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7345c43b-4b90-48b3-92c6-a96e10d9f1c3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8bada3-8c4d-43e1-9eb4-aff0853598c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "cfcc729e-ef0b-4c49-a621-8bbe940aa3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86932db-cea3-426b-9b4d-813564c058f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf7f2017-eed6-4c04-8f4b-0fdae3012687"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df699769-9e47-4a0f-b299-5e0342a5741c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f165e13-3a67-48fa-849c-2246b0fbd65f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d3a898e-06df-49ff-b0cc-b8c9474a1d22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d7c77ae-798f-4dd4-94cb-7a35fd514b93"
                    }
                  }
                ]
              },
              {
                "id": "4bd35d38-572b-4449-bba0-49604834329e",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "632c5150-b4f7-45d7-920f-3c3b0830fd0e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1ad8c6-185d-4691-a86b-498e5f257c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a329f854-8146-419b-94f9-a745c01b5b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed9a0fc-4c1e-40a4-86a5-51275ae959a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa05b67-ffbd-4b61-8894-aff9c596c74e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "572a78e0-0e52-47bc-b09c-4d4ef37edf13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1fe5c231-654b-4fe0-9b74-9f21435f3fb1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5721eee3-b483-48d4-948d-0cce6703ae92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2c83472d-0f5d-4bf6-9ae4-5f3bec9f306b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1873a90a-8c6f-4722-8f81-8a474a838153",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "471efed8-2c1f-41e3-9a96-fbe579d9facd"
                    }
                  }
                ]
              },
              {
                "id": "11b97de9-aaa7-4210-be7f-af1862d4d1c6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "639b51cd-82ad-4a12-acf3-813af8642d5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0d911c2e-3e0d-470e-a560-30e6501b03a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee644761-6172-4b03-a9f2-bf94d01940b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddb9fb90-face-427c-a583-a8e3d14f96c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "70275e9e-6cbe-446a-91bc-5dcd00c8ce69",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "47b9027e-4171-4e89-8e0f-cfb09d1e4ae9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b4d2c09f-2424-4009-a6eb-4fb44527856e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3d8f58ab-067b-4960-b178-76187c07398d"
            }
          }
        ]
      },
      {
        "id": "7af7d851-aabc-4f90-a5b9-d7f07f968593",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ee8c35c2-ecbb-4fce-86e3-18b75a1baec3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56c162e6-859e-4e09-b6fb-777ceb5ee96c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "405ee699-2af9-43e9-8400-2b6c3044d766",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313bc35f-dff2-4ece-8c24-ba13b22ca2bf",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "05aad5fa-bae6-480c-9a96-fa5a763b51dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a714091-75dd-45a1-9334-7937a17507fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2f61fb0-e87f-42f9-82ac-8036057067fb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bd5f2537-cc1c-4fd6-966d-f5a48487f346",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d9f58e8d-12f3-432d-afd7-b331962af1af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2aa51bf8-4da0-4d5a-89cc-88b1a6211352",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "543262a6-fcaf-4b8f-bbf0-d28a534f666b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6510c662-00f2-4cc5-bc54-aa550d588be6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "97f9de85-1e01-4916-b4ed-acb7e166591d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f885e24b-22b9-4ba5-b4fa-58b44f2f617c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4e572523-9355-4e86-8b42-e12c345b7d12"
            }
          }
        ]
      },
      {
        "id": "d713e29f-2ad0-42b9-b60e-f25cade476c3",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4b5ab38b-0408-44ea-9db3-623fb04a466b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e74e96ff-bd0a-418a-bece-9ea3ecac22c2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e80cf55b-1b18-4542-8035-db38c9966b3b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aae6818-52bb-4758-935a-0d7a89ae3303",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0147fc9d-ef8d-4405-b892-dd1d50e48485"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4309dd-ee12-49e0-b676-36b1a1bc01c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bf98737f-74e5-4add-834a-48b828cfe86d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06563335-63c6-4556-95d4-4477c5c2ed5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d3a8fee-abde-4a59-a98f-39cd62775b47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ef94c6a-547e-4096-9cb3-644c9e3f6aa7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89eee778-d5b1-4747-bfb5-f7660e250c30"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6355d91f-656f-4e49-baad-59904f0bd008",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3a16d7d-d030-4f53-ace1-43eb6a01788d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9b97dab-7f2c-4fcc-937b-9897f6ade426",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a40888f0-dc7f-4edf-b97b-0f60f35a3a4e"
            }
          }
        ]
      },
      {
        "id": "40cdd7bf-0b10-47c4-9049-d1d9d7984daf",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6430bb55-c15a-46f6-9eb6-282a9c11d6f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22fe7090-e9b8-43af-974f-8bf88954d1a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f739825e-b9a0-4094-b55e-5cc107751593",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1395cea-88d1-4fbb-b3d1-9da2f5988f6c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1dbdead-f7e8-419b-9a3e-d2629ead9f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542e1644-c2f6-4b38-bbf0-2510543853f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77209e55-67c8-4b38-8a22-b1b815f8ed46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bafaf21f-86a4-489d-b7e7-06a7eec9df84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "060501a8-5898-48f8-94f3-93407c5dea36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "995162b5-1c42-43b4-bb78-de883c5293e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c64b47dc-34e6-4863-8247-eb2ec8b97644"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4e9bbba-6f49-4de0-b11c-335feda182e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a9671f70-3f1e-4149-8e2a-593e23c8cc25"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ecea84c8-cfca-46b8-b48d-44d235caeadb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bf07fef-1b1c-48dc-aee2-ad6745688bda"
            }
          }
        ]
      },
      {
        "id": "be16b48f-7a3e-4e48-a5d9-022ab2e71542",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ccbd447-9fad-44f1-b6e5-7ab7cacb955c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "db6fcc5b-e3ac-4e66-86c8-2f88b22592a1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "fa43e31b-fe38-4089-8d89-fd3dd0110fd5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "518f69a3-ca8a-4b94-a0a6-11e4cb24adb7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "64aa9dc0-d28a-4ccd-9d45-d8e1827abd8c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 66.95789473684204,
      "responseMin": 5,
      "responseMax": 308,
      "responseSd": 22.82392517688723,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701131771371,
      "completed": 1701131799525
    },
    "executions": [
      {
        "id": "b6dba8dc-b5d4-4522-b874-5aa149498f77",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "23678a9c-50da-498c-8592-dc731fd3c2ab",
          "httpRequestId": "9eebba02-da98-4765-952e-20a266168dc9"
        },
        "item": {
          "id": "b6dba8dc-b5d4-4522-b874-5aa149498f77",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "031caad7-5824-40b2-8248-a0f6c7a46d97",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 0
        }
      },
      {
        "id": "38797a8b-8941-40d4-8995-d37250d0f65f",
        "cursor": {
          "ref": "787509c5-65da-4a21-acc2-e3d82f46a5c9",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "59d39dc2-0b54-4ded-854d-60a38ebff643"
        },
        "item": {
          "id": "38797a8b-8941-40d4-8995-d37250d0f65f",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f676a2fa-ac02-4919-a512-61e971242c67",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "28ddb26b-527c-4a6b-8382-0a3a37892361",
        "cursor": {
          "ref": "dfd6eb47-8fbd-4e6d-8167-44e21d7dd4ab",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a34297f5-7115-4029-8e49-6c8e0dc25a96"
        },
        "item": {
          "id": "28ddb26b-527c-4a6b-8382-0a3a37892361",
          "name": "did_json"
        },
        "response": {
          "id": "b0db05a8-b142-43db-bfe7-530d79f83ca0",
          "status": "OK",
          "code": 200,
          "responseTime": 308,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be01fb9-d0ad-48d6-bcbb-226cc551bb16",
        "cursor": {
          "ref": "ad5d170c-a14e-47a6-8ed5-ba3e5abc0886",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fb8b5935-b324-44f7-8a41-3ef2b465db21"
        },
        "item": {
          "id": "5be01fb9-d0ad-48d6-bcbb-226cc551bb16",
          "name": "did:invalid"
        },
        "response": {
          "id": "b72057f6-4353-4090-811b-9ede4fe88c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be01fb9-d0ad-48d6-bcbb-226cc551bb16",
        "cursor": {
          "ref": "ad5d170c-a14e-47a6-8ed5-ba3e5abc0886",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fb8b5935-b324-44f7-8a41-3ef2b465db21"
        },
        "item": {
          "id": "5be01fb9-d0ad-48d6-bcbb-226cc551bb16",
          "name": "did:invalid"
        },
        "response": {
          "id": "b72057f6-4353-4090-811b-9ede4fe88c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d832c6b5-e860-490c-a4bc-b0c401746c03",
        "cursor": {
          "ref": "24aec5a5-5b09-4080-bc83-69fbc56786fd",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5c74cb2b-1f99-4a9b-bdb5-c5e72957ccea"
        },
        "item": {
          "id": "d832c6b5-e860-490c-a4bc-b0c401746c03",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9a63e177-fd13-4f90-902f-832c061ed347",
          "status": "Not Found",
          "code": 404,
          "responseTime": 105,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428d811a-5eb2-4014-8f95-053f0ee87a30",
        "cursor": {
          "ref": "d3bbf211-acf4-4263-bf9f-1d9d25e604a2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "476a6b4b-9dd0-4a9f-92c1-fd0133478209"
        },
        "item": {
          "id": "428d811a-5eb2-4014-8f95-053f0ee87a30",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "394b9dc4-dee0-4330-8de6-64a6c02bc5d6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5454a433-916a-4285-a341-3e0e80e30dab",
        "cursor": {
          "ref": "058ef8a2-9562-49bf-ba62-a1a84c23456f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a1e15ea8-ddaf-4eae-9e94-3b1d3b26d157"
        },
        "item": {
          "id": "5454a433-916a-4285-a341-3e0e80e30dab",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "89b09195-d70b-45a3-9235-0d753c30bbc2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87edd9f0-2fc9-4802-8256-339cdc5a7001",
        "cursor": {
          "ref": "a2da38c4-35d2-443e-9fc2-0403f436d36f",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8a6a1232-aa66-4499-9286-33cc1bd90e6d"
        },
        "item": {
          "id": "87edd9f0-2fc9-4802-8256-339cdc5a7001",
          "name": "identifiers"
        },
        "response": {
          "id": "61307c94-3171-4dba-8cfc-d277ca7c66b5",
          "status": "OK",
          "code": 200,
          "responseTime": 102,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9078642-1e65-488d-a375-95383a5daf92",
        "cursor": {
          "ref": "ae9b21bc-d8a5-4981-917d-08d8134da941",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5250ebd6-c7ac-44a6-8433-a0618089bedd"
        },
        "item": {
          "id": "b9078642-1e65-488d-a375-95383a5daf92",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "990337e6-350f-4c65-8288-7401402e914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970b9249-6afc-462b-b40a-a55c20a16132",
        "cursor": {
          "ref": "9aa42794-653c-4d8c-9c87-160b9a33a4ba",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8df46222-7212-4b07-80ae-e941e85e27c2"
        },
        "item": {
          "id": "970b9249-6afc-462b-b40a-a55c20a16132",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2762ba98-f6d7-4e85-b73c-388e3acb4399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da588f7-cab1-4523-a53f-795ab0c2c216",
        "cursor": {
          "ref": "5dc2a1ae-7c4f-4298-b1d9-6dccf8e4edd6",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7a1a9aec-8982-48df-87df-ae6e674340df"
        },
        "item": {
          "id": "3da588f7-cab1-4523-a53f-795ab0c2c216",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "b3a6699d-0e4c-4a73-9089-23bddbfe5ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f23d2df-6caf-4dcc-ac80-cc9d21707e4e",
        "cursor": {
          "ref": "ae4c8dce-67f5-4f8f-8871-e68b4a66c652",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2b902f86-092f-4132-8b68-20a640bb40df"
        },
        "item": {
          "id": "2f23d2df-6caf-4dcc-ac80-cc9d21707e4e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7395a72e-187e-44c1-aa07-acecc328e537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78eb3796-c68d-4eec-ab6a-3999559d3d28",
        "cursor": {
          "ref": "513dd2b2-3508-4d6f-bd56-f56a0aeba5bb",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7bbbeb82-f611-4408-bbc0-08fde36959a4"
        },
        "item": {
          "id": "78eb3796-c68d-4eec-ab6a-3999559d3d28",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "84603c3f-3d9a-44d5-bd0c-0b8662267b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10d239d-6dce-4cf7-b687-0a4694550380",
        "cursor": {
          "ref": "17d5a0a5-1fd3-4591-9b11-11d68d2998ea",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bd2dc322-5f0a-48b9-bc21-2e7a6da79c88"
        },
        "item": {
          "id": "d10d239d-6dce-4cf7-b687-0a4694550380",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e95eecd2-4686-4903-a000-5398d918f5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f83f5a5-611c-424d-b825-387fd1ab4dfc",
        "cursor": {
          "ref": "37f441dc-5627-434b-97b2-ee9fccfdc91c",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c29a5f82-e4dd-46d9-9da3-ca96d3a892a0"
        },
        "item": {
          "id": "1f83f5a5-611c-424d-b825-387fd1ab4dfc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "959b6f07-09d9-409f-8622-0836cb42297f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba21f45-d5d4-4f25-a1ec-781061b6ecfd",
        "cursor": {
          "ref": "01595752-b8f0-4703-aa8f-b36bf521dbfc",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "615d202d-4945-4443-8eb6-f5733cd44106"
        },
        "item": {
          "id": "cba21f45-d5d4-4f25-a1ec-781061b6ecfd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "36ca48a6-74fb-4d87-9a99-0b53e0e7c0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6442d48-a9a9-461b-933b-4152b25bca0c",
        "cursor": {
          "ref": "bc13fab5-4183-4bf9-a9c0-d85258ebc918",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ff6e266c-b096-4768-930c-f5e0a9d4c61f"
        },
        "item": {
          "id": "e6442d48-a9a9-461b-933b-4152b25bca0c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b3a47339-3433-4f76-9ca8-83d774c92bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60cb940-6daa-4fd4-8939-fc807fd5f2ea",
        "cursor": {
          "ref": "f82d762d-fc1c-4110-b3cb-1d8cbbb2a62f",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "21e0642a-28c6-4a24-a7b0-5421122dba50"
        },
        "item": {
          "id": "f60cb940-6daa-4fd4-8939-fc807fd5f2ea",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "29830b6d-9fbd-46a5-bc86-82848ca1511b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36e3e8c-04b6-437b-90a6-057ac2cfd62d",
        "cursor": {
          "ref": "f751e5cf-62e8-4c04-96b9-bd134bca8054",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8ea17f18-4a11-444f-baff-ef741765d4e2"
        },
        "item": {
          "id": "d36e3e8c-04b6-437b-90a6-057ac2cfd62d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ef52f634-5a4d-49b4-a2a0-fe9007e2cb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ecce014-c12a-42d6-8a7d-a2ebdd844419",
        "cursor": {
          "ref": "dec72583-3a5a-4ae3-93ca-4ded838165c5",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d638902d-acda-401b-b0e9-74e0a2ecd37d"
        },
        "item": {
          "id": "1ecce014-c12a-42d6-8a7d-a2ebdd844419",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6150e17d-871a-4063-b327-44c938b35b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d85d6471-67a4-4167-ad7f-e702606fcfe9",
        "cursor": {
          "ref": "83fb6c6e-1df7-4443-ae83-2e7f592ba49e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "54e7f3c2-726e-4249-b8af-e074023815a5"
        },
        "item": {
          "id": "d85d6471-67a4-4167-ad7f-e702606fcfe9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "92cc3541-b634-490b-95b3-b8243683916e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3638e9d-d4e4-4bd3-9ead-b7ee9a7f0016",
        "cursor": {
          "ref": "360f62f9-93c7-46a0-8bbf-be749a8cfccf",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4caf3e6a-dae4-4888-9a26-de37dbfee330"
        },
        "item": {
          "id": "c3638e9d-d4e4-4bd3-9ead-b7ee9a7f0016",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5b81cc81-c53c-45c0-aed9-0c0c857aeb23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c620a92c-b159-4752-952a-1f1ab9d1be69",
        "cursor": {
          "ref": "d4cb3de2-bd12-44e5-80c2-ad8fdc84d7f6",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "06140482-3037-4f03-95c4-f33ebf159cb0"
        },
        "item": {
          "id": "c620a92c-b159-4752-952a-1f1ab9d1be69",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3bd890bf-4389-48d0-b3c4-7da2dff76ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48740847-033f-4908-8105-557a3cf2f3b7",
        "cursor": {
          "ref": "f021795d-6d7c-4b1b-9ea8-efcb3c71d4ca",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "08e075fd-5e9f-43f3-b0bc-603bab5bd362"
        },
        "item": {
          "id": "48740847-033f-4908-8105-557a3cf2f3b7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e83e814f-7567-43b0-9a00-b7fff76d7f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41c7e02-f1fe-42d4-8fd0-299085e835e7",
        "cursor": {
          "ref": "16d26576-feda-4560-8444-767e1eae5fb4",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "920848cb-1dd3-4b56-abf4-f35391423e6a"
        },
        "item": {
          "id": "c41c7e02-f1fe-42d4-8fd0-299085e835e7",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a830ca4a-a2c8-4a98-8ef4-64e3ceddd9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961482ea-339d-49ab-a9fb-747341060244",
        "cursor": {
          "ref": "6409c693-2330-4d7a-9c77-a183b1b0c3e5",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "22b25537-56a3-4881-84c4-3a7d237a86d2"
        },
        "item": {
          "id": "961482ea-339d-49ab-a9fb-747341060244",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a64da173-a997-442b-8c36-b74cdf975900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bd5b96-fde4-4ce1-b26f-a933c418b1c6",
        "cursor": {
          "ref": "ff24cca3-77a2-44d3-b7b5-bf2cbf7accd3",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "5d5183d3-228f-4b0f-8423-a2c3bb6e8950"
        },
        "item": {
          "id": "a4bd5b96-fde4-4ce1-b26f-a933c418b1c6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "dcf5d475-a8ca-4507-9aea-11cdbc6a59b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "839465a1-f30f-4fea-9825-9955cdeacf91",
        "cursor": {
          "ref": "23080d7e-2f4d-48b6-bf38-247f6927cc71",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "fa1e2e86-ce2e-4340-af04-d666bee12362"
        },
        "item": {
          "id": "839465a1-f30f-4fea-9825-9955cdeacf91",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "235613c1-8698-444c-937e-cf2b204b5fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947c71ad-e475-4152-9e6c-f91c17e18230",
        "cursor": {
          "ref": "f85e3210-c301-45cb-a4da-f2bf6f67378b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ba3b4d23-7373-4868-9258-c5647bb0e946"
        },
        "item": {
          "id": "947c71ad-e475-4152-9e6c-f91c17e18230",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "658123bc-51e8-4b90-87f2-dc8575a7bbdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d543e1-c1ce-4690-bb4b-60608b7402fd",
        "cursor": {
          "ref": "a659a914-8f34-41a8-9f0b-d9130c22cdd4",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e32affd0-aca6-4dd6-b7d1-65544fc2c08b"
        },
        "item": {
          "id": "f4d543e1-c1ce-4690-bb4b-60608b7402fd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7bbf2905-0aac-4941-8990-c6e2c14528b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec24f436-b232-462a-b6a9-fb7890d4cc53",
        "cursor": {
          "ref": "898870c4-f3af-4fa8-b0e3-0fceee17b0a8",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7a71c41b-80e9-4e56-ad3b-44e4bf847d69"
        },
        "item": {
          "id": "ec24f436-b232-462a-b6a9-fb7890d4cc53",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d35b3116-6f57-47b0-a2e6-3827893251e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9095f6-8f8f-4634-b9e1-63ec55188b4b",
        "cursor": {
          "ref": "e482d27f-52b3-4eef-a1bb-e640c284edd8",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3f39f353-7cee-4b89-a6bd-875f25e44ef2"
        },
        "item": {
          "id": "9b9095f6-8f8f-4634-b9e1-63ec55188b4b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "fba3368d-139b-42d6-ba2a-adaf04e0443a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b6c54c-d73d-4a91-bd75-495b63ef5420",
        "cursor": {
          "ref": "c6b8bd56-5036-433c-9d1c-03845006912b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b13efae4-a112-4e73-ad63-c9b9d22d9cc0"
        },
        "item": {
          "id": "54b6c54c-d73d-4a91-bd75-495b63ef5420",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7012750b-baa7-4440-b083-8de8c2ff9dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c68860a-3b5f-420a-a151-b5b84efb19a3",
        "cursor": {
          "ref": "79ff5453-d3ca-442e-ab8a-2853a0b4e38f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9884c679-f4e6-4483-9ce0-ad4bdc68da4c"
        },
        "item": {
          "id": "7c68860a-3b5f-420a-a151-b5b84efb19a3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "074caf72-36e2-4aa8-8d5e-b1dc3b6540d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf05291-9ce2-425b-8353-d43f7c59595f",
        "cursor": {
          "ref": "0ab8a6f8-e1a8-45ba-9c68-d148bddb2621",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "17a9de9e-84fd-4ff6-bd0e-d5a9940f8e40"
        },
        "item": {
          "id": "ecf05291-9ce2-425b-8353-d43f7c59595f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a5e7a5f8-cc03-44d0-90f7-ab647c653877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8394df-a6c7-43a2-a92c-67e82df89cff",
        "cursor": {
          "ref": "b3814342-771a-4a22-8576-41645567cae6",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "1d609837-5843-4b04-99de-7ab15e020c5f"
        },
        "item": {
          "id": "4a8394df-a6c7-43a2-a92c-67e82df89cff",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f669d96a-111a-4428-b58f-918e60835cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c76872-f911-4000-ae6b-1ad9d20d11f1",
        "cursor": {
          "ref": "ce7b80a3-bf74-46d1-86a8-8b87bdd4dd3b",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "099107ad-9278-4391-a0d5-adfbd8d0f082"
        },
        "item": {
          "id": "46c76872-f911-4000-ae6b-1ad9d20d11f1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4016ed43-0c02-4d82-9911-6b06ae8a8c52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d53389-3977-447c-8037-dae9c9f42d84",
        "cursor": {
          "ref": "a8134bc0-ee23-45a6-b850-3a7e50e26a00",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "07881307-1537-4a98-963f-b8afead96db0"
        },
        "item": {
          "id": "59d53389-3977-447c-8037-dae9c9f42d84",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "799effe7-e60f-4bdf-bac4-25992ad81269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c7671f-fac3-43e3-b3d0-ee9fb525dbf7",
        "cursor": {
          "ref": "7464fc19-3fe7-4440-97f1-34c02f0bd1e3",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "93219547-5eee-4c84-b51f-dbcf898d4548"
        },
        "item": {
          "id": "a4c7671f-fac3-43e3-b3d0-ee9fb525dbf7",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "df2501ef-3e9f-4070-b1e4-b63876e3ca30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc35ea37-fe21-4261-b825-28f37f94780d",
        "cursor": {
          "ref": "77810737-12d2-4b41-8223-f4f5f2b9a1c7",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "96c857ee-4438-4b45-842f-9c771ed10f7f"
        },
        "item": {
          "id": "cc35ea37-fe21-4261-b825-28f37f94780d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "0caf3331-db5c-4825-88b1-198406c85c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a288ec5a-c922-4150-a778-bf3f00b7166e",
        "cursor": {
          "ref": "4e830ef6-464c-4aba-8baf-12ac1e23788e",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "fa5afb23-2351-4543-8aeb-92710a72ebe0"
        },
        "item": {
          "id": "a288ec5a-c922-4150-a778-bf3f00b7166e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fc9e70f6-1641-42a2-9f05-20f6b5364b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a70b927-ff6c-4f56-8fb8-0ff94b73f87a",
        "cursor": {
          "ref": "a8ef0e13-9b8f-4a02-9b33-5e500f790d71",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "5d4a8abf-48db-4db9-a00d-7e2140b742e5"
        },
        "item": {
          "id": "8a70b927-ff6c-4f56-8fb8-0ff94b73f87a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "84393368-1be9-49c3-b0be-61c1005ec926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb00a10-987c-4c98-90e9-a3fb5cad2e6a",
        "cursor": {
          "ref": "68cf7687-1429-4826-a6c4-f801475023af",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a42ace75-b88b-4cbb-a512-51894429cb33"
        },
        "item": {
          "id": "bbb00a10-987c-4c98-90e9-a3fb5cad2e6a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "abef63ae-8508-4450-9867-9764df31971c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc21f1c2-dd4a-4b49-9542-cb40270ec913",
        "cursor": {
          "ref": "6c05974d-546f-4186-b288-720216914bb8",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e2fac912-7b33-49ba-9d13-a9dc6908882e"
        },
        "item": {
          "id": "cc21f1c2-dd4a-4b49-9542-cb40270ec913",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "533dc2cb-5121-4428-9323-9b3eb6e3f318",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 86,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc07bcae-c43e-48b8-9f7e-c6cc4447744e",
        "cursor": {
          "ref": "39c36200-9936-497e-8dc9-5673a8614e2e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "48f5a8b7-90e4-4469-891b-5f454a5a129a"
        },
        "item": {
          "id": "dc07bcae-c43e-48b8-9f7e-c6cc4447744e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "02dfbdd5-0650-432f-bd1c-15d57e75cc19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74af6fc0-4e7c-4adf-93f4-6f381455a546",
        "cursor": {
          "ref": "e2512ab5-6a5b-428b-87a4-54a73deaaf25",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3e34f60b-2343-487b-b398-f6cf7a1c2ee3"
        },
        "item": {
          "id": "74af6fc0-4e7c-4adf-93f4-6f381455a546",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f1683513-abe9-49ad-82ea-02dd78a20208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9e236b-5e18-44b2-9e3e-61abd68cef80",
        "cursor": {
          "ref": "26b18fe3-5d95-4ac8-b6fe-a6806d1255bc",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b4f3d249-568d-4373-bf91-a6138e58cec6"
        },
        "item": {
          "id": "0b9e236b-5e18-44b2-9e3e-61abd68cef80",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "159455d0-718f-4314-a305-72053b31c0f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcabc4af-3f20-41b8-b671-79489a221958",
        "cursor": {
          "ref": "b30709df-7439-448e-a160-35262c8ed3b8",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2264c625-cea0-4c3e-96c7-789025e886df"
        },
        "item": {
          "id": "fcabc4af-3f20-41b8-b671-79489a221958",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bf85abab-0777-4a4b-a52d-fc375978940a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1b4e34-6f5b-44aa-9c97-6f475fb45523",
        "cursor": {
          "ref": "ea9c5ea6-fa43-42cb-9b4b-d1d2628bf4ba",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6beea392-a549-4d69-b9a7-4f92e43e05bc"
        },
        "item": {
          "id": "ee1b4e34-6f5b-44aa-9c97-6f475fb45523",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "858ef248-b0ee-4b8e-9819-372a08e699e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56ce07b-dfdf-4518-84eb-9a1a54302bc8",
        "cursor": {
          "ref": "e4a337f6-0522-4a6e-9349-c7c6e84364b2",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "94bd2a50-2352-4a65-81ca-c9a503619fb7"
        },
        "item": {
          "id": "b56ce07b-dfdf-4518-84eb-9a1a54302bc8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "08a8d489-88a4-4045-bfa1-3b3e09f22ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "252404fe-e3e4-4808-9579-d01671b59fb4",
        "cursor": {
          "ref": "1903fbf0-3ba3-46cb-bb77-9219789e7d07",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0dee1662-8ad5-42e9-97e8-796fb09b2d6d"
        },
        "item": {
          "id": "252404fe-e3e4-4808-9579-d01671b59fb4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8dc8af22-d0c2-4ace-8f5d-fef9b28a6be7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0ae6bb-4d25-4c6a-9e72-d898621a1a1d",
        "cursor": {
          "ref": "5ceff55c-f713-491b-b2f3-f1ff93d05288",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "75fd3532-0d7e-4a99-915e-2fbf8c9463a5"
        },
        "item": {
          "id": "db0ae6bb-4d25-4c6a-9e72-d898621a1a1d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f909733f-e869-47a9-98bf-ab63d12bd294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19d43999-e08e-408b-bec1-a708b797ed13",
        "cursor": {
          "ref": "ed8c0d9a-41a6-4912-b58a-32a2cfac60ed",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d7a0caf9-0568-4b34-9475-2a61d29d8a62"
        },
        "item": {
          "id": "19d43999-e08e-408b-bec1-a708b797ed13",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0b2744f1-054f-45ee-99a5-b3e065614844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25335c4-a447-41b8-9324-e8e22b46d5e0",
        "cursor": {
          "ref": "d91a1102-5592-40bb-ad03-5f26e9400931",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e981eb1c-8fea-4e50-a458-5c738f4ddc5e"
        },
        "item": {
          "id": "b25335c4-a447-41b8-9324-e8e22b46d5e0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c311e3bd-97d4-467a-93c3-7589b664993c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9aa137-0397-4d03-9b54-12ab475e17e5",
        "cursor": {
          "ref": "f6cb6cf0-fe5b-4322-88dc-3a226f97de40",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ccdd310f-52a7-4378-abe7-797363c07e1f"
        },
        "item": {
          "id": "0a9aa137-0397-4d03-9b54-12ab475e17e5",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e5ce992b-810d-409c-895e-bbc29011ddf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3657d7-e0a9-4808-9cca-713ca823c5a0",
        "cursor": {
          "ref": "4f8c1c88-9f44-4272-9f58-7fb684332be3",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "87102b54-883a-49b7-83b5-f5f50a4a406d"
        },
        "item": {
          "id": "ce3657d7-e0a9-4808-9cca-713ca823c5a0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2a404f37-affd-4e28-abaa-044c83c77757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4acc58-e1c4-4f86-993d-299b12879e67",
        "cursor": {
          "ref": "b297b4bd-3258-41b6-8b1e-598400e5534d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6555492b-470d-4d60-8947-4ed6c9895082"
        },
        "item": {
          "id": "db4acc58-e1c4-4f86-993d-299b12879e67",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1c54b7d0-99cf-4f21-9bad-32dbe196f1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd17f966-8377-465a-81fa-222c8d603dab",
        "cursor": {
          "ref": "9087bcc8-42ff-42c6-bec2-675cb1be5df2",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a87fe073-424f-4c9c-adec-0c92f76dfc2f"
        },
        "item": {
          "id": "fd17f966-8377-465a-81fa-222c8d603dab",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7158e813-7abf-49d0-9b13-8e29df5ad96f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807c0264-93a8-407f-aef0-56fb73b92094",
        "cursor": {
          "ref": "53153a5c-105c-48c8-a02c-19128cef0747",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "686e9a97-82f8-4e8e-8a64-a70dc78fa3e9"
        },
        "item": {
          "id": "807c0264-93a8-407f-aef0-56fb73b92094",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5eb44188-74af-4742-a196-6b97038257b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100dfdf3-c0f9-4d19-950c-1257f4a6f119",
        "cursor": {
          "ref": "b8876c28-fdce-4ec4-8193-84a6029df7a9",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e6a43308-e38e-40ba-8f7c-69c84cec0258"
        },
        "item": {
          "id": "100dfdf3-c0f9-4d19-950c-1257f4a6f119",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ad392b48-b14a-490e-bdb9-191868cf4645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449de0e1-d991-45d8-89e8-7ab73379c862",
        "cursor": {
          "ref": "3ea8800e-441c-47a5-b22c-75984f19c56f",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d3735974-ab74-44e7-9949-c7375e1bb2ca"
        },
        "item": {
          "id": "449de0e1-d991-45d8-89e8-7ab73379c862",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6b3626be-f59c-49a2-813c-c22b9cfa3144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac3357e-08c6-4d50-aaa6-fac7c6187e6d",
        "cursor": {
          "ref": "58b9a8f9-d8db-4846-bf95-5aec7561601f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "097df2dd-312f-4623-8cf7-8ac42eb5bb6e"
        },
        "item": {
          "id": "8ac3357e-08c6-4d50-aaa6-fac7c6187e6d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "21c74cf2-7ae8-447d-9ed4-7eefaed12950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2746aedf-5294-4cc7-a83a-0270b200f073",
        "cursor": {
          "ref": "dbb4d9f8-071e-4a44-a1d0-546599baed1c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "2f48c934-0559-491f-8e8e-bc6e862abfc6"
        },
        "item": {
          "id": "2746aedf-5294-4cc7-a83a-0270b200f073",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "31d1f649-8b3a-4af6-a00c-15c1d4f2a0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b358a64e-e252-415d-a8ad-faaa50161c4e",
        "cursor": {
          "ref": "b5525200-2095-413a-890e-5a1abceba526",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "343e0304-379a-4fdf-9849-08429f38eeda"
        },
        "item": {
          "id": "b358a64e-e252-415d-a8ad-faaa50161c4e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "daae3d8f-fdf4-4fe7-ac8b-546e4738b990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0fa07f-4afc-4d79-9461-8060f93f9418",
        "cursor": {
          "ref": "94aee07e-872c-46b2-aaac-2b3c09c3645d",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0ebcb9ed-6498-4927-8f49-e5edae46edeb"
        },
        "item": {
          "id": "5d0fa07f-4afc-4d79-9461-8060f93f9418",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "2339bfaf-a31e-4e89-b038-377ea68ae60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b95af8-0351-44a6-9405-57e593c5a48a",
        "cursor": {
          "ref": "3d16399a-6f3f-461d-9d13-810ab88463cd",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "72b30e67-634a-43f2-afba-e16b9e48da01"
        },
        "item": {
          "id": "c9b95af8-0351-44a6-9405-57e593c5a48a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "24dd5363-2ed5-44a2-8e06-e2ec65876969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9087e10c-f987-40ee-ba5a-403883218146",
        "cursor": {
          "ref": "e39e5a32-0932-4b6b-9290-28f0a72b70d3",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3e2cf629-8075-44d3-bca7-c922ffd84c9d"
        },
        "item": {
          "id": "9087e10c-f987-40ee-ba5a-403883218146",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cfa8772b-d4fd-4324-848b-ccf0124d854c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3676d3-39e9-4a28-b446-eba329a45601",
        "cursor": {
          "ref": "60b7f0d0-45ac-42db-9776-cd01639939ca",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3a780b94-7790-4776-81ed-99b7d77a68d5"
        },
        "item": {
          "id": "ae3676d3-39e9-4a28-b446-eba329a45601",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "7385b60e-8fb4-4197-98ca-e6f2c6d3d8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4f5d3a-93d3-4426-849e-8e74043ddc1c",
        "cursor": {
          "ref": "f2054751-8f34-490d-b8cd-4c3f9fb2a457",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "22b38401-ae5c-4bb8-aeb6-0220324d06c7"
        },
        "item": {
          "id": "ee4f5d3a-93d3-4426-849e-8e74043ddc1c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7fe83561-a646-4bec-8f24-44cf4e0c613d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ba59f9-f645-44c3-8e4e-e4178404ed06",
        "cursor": {
          "ref": "b6c8a216-e69c-48d6-91e8-71870797afaa",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "515d28ed-24e2-48f2-9e0d-7e776162d80f"
        },
        "item": {
          "id": "a8ba59f9-f645-44c3-8e4e-e4178404ed06",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ef110058-1c92-4ac1-bfec-14a795850fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a61301-4f17-4514-a383-222eedab0aa4",
        "cursor": {
          "ref": "be7c54d1-3fae-4b2a-84f6-2ad4c181ca9d",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ec4622a3-3307-467d-abee-3a602ae76b66"
        },
        "item": {
          "id": "49a61301-4f17-4514-a383-222eedab0aa4",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f2a90165-8d5c-4a10-9d85-b3f65bbe3665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88d7a6d-7a2a-4fd1-b6cd-bab8bd3a5d5b",
        "cursor": {
          "ref": "2f85e7b8-28b8-473e-a9fe-4acb1b12a843",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "25997539-ddfb-45fc-b048-5896d97441e7"
        },
        "item": {
          "id": "b88d7a6d-7a2a-4fd1-b6cd-bab8bd3a5d5b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "6676bb10-bc56-49a8-9f7c-b6bca18f350a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2204a49-0ebb-46df-8044-fb4d36f902fe",
        "cursor": {
          "ref": "5e3fe5bc-4b14-46c5-85cf-5b46ecb3d039",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "191e1283-52be-485f-b79f-a8017a70b134"
        },
        "item": {
          "id": "b2204a49-0ebb-46df-8044-fb4d36f902fe",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ba2cf3c3-9773-4949-9f7c-7c18fa4ca92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2c8b4a-e98a-428a-a5ae-de423a318814",
        "cursor": {
          "ref": "d00a33fd-ab18-4c65-af32-3f222530ab0a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "86f5256d-c917-4bca-816c-35594f5c92a5"
        },
        "item": {
          "id": "ab2c8b4a-e98a-428a-a5ae-de423a318814",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "804b0cbc-8e1d-48d6-9298-1d81e4bfca5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25ffab9-4552-4fe8-aeef-2a934f109541",
        "cursor": {
          "ref": "aaf4c228-8b5b-4e2f-b9ae-526c730b45b7",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9bf136ed-a253-459c-95f9-4afd28270e31"
        },
        "item": {
          "id": "b25ffab9-4552-4fe8-aeef-2a934f109541",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "2f47e6ed-e64a-406a-9c93-05d772cf7228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb585256-004f-4364-af90-62a1f9049ae9",
        "cursor": {
          "ref": "2ebb3065-56b7-4ffb-9925-5dbef3de9eef",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0974100b-b4a2-43e6-a0ec-73f2d25862cf"
        },
        "item": {
          "id": "eb585256-004f-4364-af90-62a1f9049ae9",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6c13fd53-54de-4de8-928d-655d12144189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1322832-9f72-475b-ac7c-0739700ac928",
        "cursor": {
          "ref": "d0351ae6-ce2a-426a-8172-79baa4df2e82",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1ef06c80-95fc-42eb-968a-55a3e1b38fff"
        },
        "item": {
          "id": "a1322832-9f72-475b-ac7c-0739700ac928",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "abc3a200-0ecc-4656-a8f2-2f6823491535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bbc1d06-7a3d-4f65-85a3-ca30f6a8ad32",
        "cursor": {
          "ref": "58fb5598-367a-4424-9ecc-f06fbaad70fb",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "02f9c8c9-5a35-4355-aa52-c6bc27f2774f"
        },
        "item": {
          "id": "4bbc1d06-7a3d-4f65-85a3-ca30f6a8ad32",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "94bf333b-fc89-4753-94eb-6200adc0e6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f32a37-7c82-4ca6-836d-1148df793007",
        "cursor": {
          "ref": "67564f2a-36c5-49d2-b454-fb1e6a8955fd",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "86e2c2dd-e463-46a8-b31f-d8dc145833cc"
        },
        "item": {
          "id": "48f32a37-7c82-4ca6-836d-1148df793007",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "878c421d-bb03-4655-844b-36f817548d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7cb387-80c0-40c4-ab74-4d4e7155c015",
        "cursor": {
          "ref": "a00ca867-2ef1-47aa-aa25-4580cb60dce5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "f61b03ce-9053-490e-a432-5c727a39a6f2"
        },
        "item": {
          "id": "cb7cb387-80c0-40c4-ab74-4d4e7155c015",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "35062093-7eb7-4a5d-8539-e262578f017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0575322c-5adf-44a1-ba0e-6b84cf53817c",
        "cursor": {
          "ref": "2b7eb8b0-dce8-414a-8da5-1be933727fad",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "3a6d793a-6539-432e-90ef-73e1cbe9e3af"
        },
        "item": {
          "id": "0575322c-5adf-44a1-ba0e-6b84cf53817c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "91782aa5-1c7f-4b8d-a254-8c75b1540ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593a97f9-482a-455f-a926-3dd98b589f04",
        "cursor": {
          "ref": "a727660b-551a-4f3c-8488-6e9666f05cf3",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "5afc2c96-1d48-44c5-bbe6-6cd6a0ae5d19"
        },
        "item": {
          "id": "593a97f9-482a-455f-a926-3dd98b589f04",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "97d97783-0aeb-4ec9-8ec2-e99f9dea145a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e411eb09-965a-4ecb-99c3-c94b1678b2f2",
        "cursor": {
          "ref": "43f2481f-0605-4969-a9bf-cae4214db5f5",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1d5f8295-2671-4973-a16c-30e0ac5795a2"
        },
        "item": {
          "id": "e411eb09-965a-4ecb-99c3-c94b1678b2f2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "11d349a1-5ab7-4500-b238-3e7198e3be13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff3388b-e11f-4a70-bbc2-80abb8e715a7",
        "cursor": {
          "ref": "36f69be8-81cc-4029-84cc-20effffdd758",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4bb3465f-012e-47cd-ae69-7f04aa090036"
        },
        "item": {
          "id": "7ff3388b-e11f-4a70-bbc2-80abb8e715a7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "0563518b-954f-414f-9074-b634f7e7a4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb7524e-e750-4155-a22f-53c57bd31ed6",
        "cursor": {
          "ref": "3d195bd0-22f8-4d38-8a12-09450f21821c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "45c5b5a7-9888-4432-b12a-8437553f983d"
        },
        "item": {
          "id": "5fb7524e-e750-4155-a22f-53c57bd31ed6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "365eb81c-33ac-45b5-b9d7-faf51849e09d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af4583e-3229-4004-9063-be449d6dafcf",
        "cursor": {
          "ref": "07bc9eb6-64d4-4b00-b719-bd662d18d82b",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "55fa274e-7986-4b4d-93a9-2a99e8b4b679"
        },
        "item": {
          "id": "7af4583e-3229-4004-9063-be449d6dafcf",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dd75c72e-bbe1-4e4c-9dbc-0fce6baf7d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e9fa29b-2fb0-4ae1-a2a3-6b2401ed868a",
        "cursor": {
          "ref": "299a7b89-0f17-438f-848e-8dcff8d29866",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "d783e05b-0982-4a3b-bbd3-b1e6a3194f06"
        },
        "item": {
          "id": "5e9fa29b-2fb0-4ae1-a2a3-6b2401ed868a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "227d2a9d-1e49-44c8-8abd-36a9a2d7ce58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8328eed0-7ad6-4916-82ce-0ab65500a400",
        "cursor": {
          "ref": "112ae9e4-78c7-4ea3-ac7f-2f11b6bcd651",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "f3fff88f-b932-4082-af68-cf1d029ad1ee"
        },
        "item": {
          "id": "8328eed0-7ad6-4916-82ce-0ab65500a400",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "747764d4-1d6a-40e1-bf49-331759290de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006364df-f69b-4d67-b6a1-05accc596c76",
        "cursor": {
          "ref": "9ec70c32-96f7-424d-a334-38e3d322f1e4",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "bf80dc0f-ae5e-4164-b2e9-e90289d03430"
        },
        "item": {
          "id": "006364df-f69b-4d67-b6a1-05accc596c76",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "22ea30ab-4fdf-4498-82a5-9357656a6e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb66ec9-f28d-4b56-801b-46f5b8e37f34",
        "cursor": {
          "ref": "a1270087-44df-4c64-a276-a078f1ff826f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "fb7422b4-ac68-4bbb-bff7-aab0e9c7920f"
        },
        "item": {
          "id": "1fb66ec9-f28d-4b56-801b-46f5b8e37f34",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a241b236-26ca-43f2-b5ec-3dbba13c8300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fc59ba-0676-42c1-9237-88ee7fcf104f",
        "cursor": {
          "ref": "bc486bd4-2f62-43ac-b4db-595b7f02242c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "daa68885-5dd5-4739-80d2-5ced6f309dd7"
        },
        "item": {
          "id": "a5fc59ba-0676-42c1-9237-88ee7fcf104f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "b8cbdcb1-252f-4d6b-b6af-defb9560d33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629f17e8-3d05-45cc-8bb7-d1b7c5bdb471",
        "cursor": {
          "ref": "ce2e5a95-15c4-48b6-9bd7-4f0a74337736",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fea5e5e4-0457-4e18-b422-44c183dd36db"
        },
        "item": {
          "id": "629f17e8-3d05-45cc-8bb7-d1b7c5bdb471",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "6eb681d8-9d0a-4a0f-bd8e-1f5791dafe85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eebb78-5c4f-4a1c-acb1-6935c8a57a2b",
        "cursor": {
          "ref": "f2526c04-23f5-4569-b22a-6b3c8f475735",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a2d7612e-2ba4-45f6-a883-6f9bb53ce57e"
        },
        "item": {
          "id": "b1eebb78-5c4f-4a1c-acb1-6935c8a57a2b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1b66312b-a559-4079-9fe3-48ed670d04e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee095e09-7f2c-49fc-aeb6-c36bb2b491a5",
        "cursor": {
          "ref": "77fd2af6-60c8-4d49-b3f0-53309357bc46",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "59833d40-2868-4a96-a2f6-85cc8fb68a46"
        },
        "item": {
          "id": "ee095e09-7f2c-49fc-aeb6-c36bb2b491a5",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ec4ed65d-ef50-4abe-bbdc-d7322c91660d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8db887-45b3-4fbe-92d0-367943276b96",
        "cursor": {
          "ref": "e1df6ad4-42ad-46cb-9978-527db25af0d2",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ab902965-67eb-4fcc-ac88-eb34589555d9"
        },
        "item": {
          "id": "dd8db887-45b3-4fbe-92d0-367943276b96",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dca276f4-3273-4466-86d3-eca2beb7dff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bed9152-dccb-4d23-828b-39b0c95f4b51",
        "cursor": {
          "ref": "aa12facc-0120-446c-ac67-e0901ae56f22",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "054d31e2-ac5b-4680-9d0e-a0773c017a88"
        },
        "item": {
          "id": "1bed9152-dccb-4d23-828b-39b0c95f4b51",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cadb068b-bc19-4cb0-bbd1-cef9c1c578a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e154918b-95c8-4bba-9b04-34be96aa18a5",
        "cursor": {
          "ref": "651ed309-2487-405f-acfb-270edaf90e80",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "14e9528f-9366-45f2-a472-1f5bd14eb22a"
        },
        "item": {
          "id": "e154918b-95c8-4bba-9b04-34be96aa18a5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "61f70daf-3160-43bf-9df4-01e750a71dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7359853e-30aa-4af4-9ea7-489985bc104c",
        "cursor": {
          "ref": "e50056d6-2eb4-4684-af64-cdcdc9294cce",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "00fda56b-3cb4-4286-bfbd-c33d8c90ebcf"
        },
        "item": {
          "id": "7359853e-30aa-4af4-9ea7-489985bc104c",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "30461998-531b-46b7-acbf-2199ad04c2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a0b703-3555-4a9c-b337-33c877f8504e",
        "cursor": {
          "ref": "7f44af0c-23e0-488a-a18c-6408b64e116a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "150d48e3-cbb0-4026-953a-ae9270b7a221"
        },
        "item": {
          "id": "26a0b703-3555-4a9c-b337-33c877f8504e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "0d21b056-ad28-4f47-942c-b09bd5c4720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deedb674-5d8a-4fa1-b865-fba448928640",
        "cursor": {
          "ref": "d280a7bc-a49f-4b15-baa3-032c68e15d99",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c4614e86-3eca-4fc8-9f6d-a95403d20d99"
        },
        "item": {
          "id": "deedb674-5d8a-4fa1-b865-fba448928640",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "eac4bec8-2428-4fae-815c-2afd64f2d5be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf327761-1f3e-49e7-b342-ff5a0750c9d1",
        "cursor": {
          "ref": "98a4ba84-acf8-4452-b69a-521afe9ca6a2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "16c7a0e8-ba4d-459f-a0b7-d26527e466c5"
        },
        "item": {
          "id": "cf327761-1f3e-49e7-b342-ff5a0750c9d1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f8f55920-ad05-4d88-b452-d3e98d0586bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc45d066-1105-4055-b828-b16a6278bec2",
        "cursor": {
          "ref": "beac021f-05b6-41f5-afee-f38209995138",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3c375a03-f2a6-4f91-bb7c-6f3257cc5f11"
        },
        "item": {
          "id": "dc45d066-1105-4055-b828-b16a6278bec2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "72b11380-d040-4694-ad97-362815ef1fea",
          "status": "Created",
          "code": 201,
          "responseTime": 108,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d2214d-e7a8-47f7-99b1-207b1f9afd57",
        "cursor": {
          "ref": "fdd6bba2-3ce0-4078-8a36-37ea6fa728c5",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "73aefd1d-1f0d-46f4-ae32-7079a06d7b2d"
        },
        "item": {
          "id": "59d2214d-e7a8-47f7-99b1-207b1f9afd57",
          "name": "credentials_issue"
        },
        "response": {
          "id": "07c797e7-0364-4ece-b321-1171825ddf68",
          "status": "Created",
          "code": 201,
          "responseTime": 252,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58c4884-548d-4535-8fe4-b118f9951e0f",
        "cursor": {
          "ref": "8a16f335-987b-4fbc-a839-c0c6a159a96d",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dcbbe8e5-b67f-4e41-848b-9868d74a0547"
        },
        "item": {
          "id": "f58c4884-548d-4535-8fe4-b118f9951e0f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "773364ec-0891-43aa-b426-6e3996f66ac1",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd06209-5b3b-4179-80be-28ca09d6a8de",
        "cursor": {
          "ref": "a3d01fc9-04d7-451e-b81b-9374889a58c1",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0d399d8f-f5e9-418b-a998-36fddf1de8e3"
        },
        "item": {
          "id": "1dd06209-5b3b-4179-80be-28ca09d6a8de",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "76684a27-e09b-4a5f-9c9e-19a0d5ef672a",
          "status": "Created",
          "code": 201,
          "responseTime": 102,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2aaeaac-47be-4a93-a0a4-8fc06928b84a",
        "cursor": {
          "ref": "4b780f7a-6cbf-4144-8606-2c3a453aab60",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "54c12f64-88f1-4784-9faf-f2f05ba8f94d"
        },
        "item": {
          "id": "b2aaeaac-47be-4a93-a0a4-8fc06928b84a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "df5ac6f9-efb1-475c-80ae-a99632b57fb0",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e011714-c677-4f61-9aa9-701eef520881",
        "cursor": {
          "ref": "cc25b589-3179-478e-9411-3458401ab3f8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "bce657e5-3279-4643-8e40-5306bd6be537"
        },
        "item": {
          "id": "6e011714-c677-4f61-9aa9-701eef520881",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "1bd415f8-1068-408b-b0e8-290fd6211ecb",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "355702d6-3c27-46d5-8e1b-5ec22c96f72e",
        "cursor": {
          "ref": "4e38493e-1671-4736-a04a-1f71ea8751fe",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0e6d8c0a-54d2-4511-85e6-45a3028edde4"
        },
        "item": {
          "id": "355702d6-3c27-46d5-8e1b-5ec22c96f72e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "134a8afa-4e15-47dc-9e18-a6444d915939",
          "status": "Created",
          "code": 201,
          "responseTime": 91,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397860f7-8b29-4a9b-bc32-36b155405d1b",
        "cursor": {
          "ref": "1d8d1bb1-d3c9-4cdf-a400-365c7467af1d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ec7a0bd2-f66e-41b5-b5c4-74c2ed1d5b70"
        },
        "item": {
          "id": "397860f7-8b29-4a9b-bc32-36b155405d1b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "904ead52-1ec4-4014-ac4e-a31921555b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e49dc9-af73-4964-a1fa-5e31cf293c3c",
        "cursor": {
          "ref": "c57b569b-8b55-4232-9d8b-d44998236281",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9c96099f-5c10-40b1-8003-9c580473e4dd"
        },
        "item": {
          "id": "23e49dc9-af73-4964-a1fa-5e31cf293c3c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0f207fcd-4bc0-422a-97b8-21801e8b5d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75802d12-6b1a-4f39-9eb4-61e731564f67",
        "cursor": {
          "ref": "fc503bb1-f3f0-43c6-84d7-7cc1fd83abb1",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "0996f2a3-c308-445d-9c0f-066bae8bd8c5"
        },
        "item": {
          "id": "75802d12-6b1a-4f39-9eb4-61e731564f67",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "330ceffd-cca0-4a81-a495-f10e214656ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d209ea8-3256-4abf-8534-4522cbf8ab2b",
        "cursor": {
          "ref": "da7178b1-047e-458c-a159-cfc5d60b95a4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "3bcd1ec6-6f37-4997-8c1e-e6a2c7d923dc"
        },
        "item": {
          "id": "7d209ea8-3256-4abf-8534-4522cbf8ab2b",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "36f607fc-33c2-417d-a972-e41c3a8b5121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7740360-117b-4c37-94d2-7ab7567dd979",
        "cursor": {
          "ref": "ec433072-1ef7-4518-a26a-1ba4e95b897f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "93e6c862-738d-4319-90fd-53e71b931c7e"
        },
        "item": {
          "id": "e7740360-117b-4c37-94d2-7ab7567dd979",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "78582fbc-f6ca-40b6-bdfe-a79a24c43edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b640e9fd-3478-4175-aeda-ca4738bb67df",
        "cursor": {
          "ref": "303af773-3cbf-4b38-97a5-11f01819795f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "5bedf59e-8065-4ef2-acbe-6aac4d1b867d"
        },
        "item": {
          "id": "b640e9fd-3478-4175-aeda-ca4738bb67df",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "58f89f7e-c8cd-47a8-bf10-1c65b311f518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb500f5-6d4b-4c3d-84ad-68a251993fb7",
        "cursor": {
          "ref": "f24e7a6a-2005-467e-af91-7adb6257844e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "fae256b2-384c-4fc3-9cf0-898f6157a1d6"
        },
        "item": {
          "id": "2fb500f5-6d4b-4c3d-84ad-68a251993fb7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "701d12fe-a139-4aad-8fe1-d43c3cfa1610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f57938-274e-42ee-8d99-0eefaacbf263",
        "cursor": {
          "ref": "150ea35f-85d0-4379-b29f-4a6e45fdd6f4",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "50a49068-f862-4f78-91c3-d5bb2c6c52c5"
        },
        "item": {
          "id": "43f57938-274e-42ee-8d99-0eefaacbf263",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9cd91e79-6a49-4370-a277-17633531bad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b99bbc6-b74f-4beb-9b50-e3bb493e9943",
        "cursor": {
          "ref": "f79ad660-2c0e-4136-b65c-11b9962e2444",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "531b20ca-497e-4964-ab41-907fc5356315"
        },
        "item": {
          "id": "4b99bbc6-b74f-4beb-9b50-e3bb493e9943",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b2addf96-936e-4ede-8e0f-99d58b789fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8530d4-745f-44e1-b3db-8f641937c0e7",
        "cursor": {
          "ref": "3e140820-a0ff-4b48-a547-9977e53eb8e9",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1f81f643-9144-4a52-b8a6-beb7a4e70b8b"
        },
        "item": {
          "id": "be8530d4-745f-44e1-b3db-8f641937c0e7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "83863b34-7b5f-4b56-b371-d778f22956fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbead2d6-9d28-42a4-b65e-8d43128cb408",
        "cursor": {
          "ref": "a3a611c4-6b8a-4207-ba8f-c2f87c911781",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0d84c39e-adaa-4030-a87e-15b5a4e38187"
        },
        "item": {
          "id": "cbead2d6-9d28-42a4-b65e-8d43128cb408",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fd5b2e0f-c1fc-4656-9780-77e3bf468eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8acb376-5aaa-4d25-a56e-0b79747e9e28",
        "cursor": {
          "ref": "cd90071c-585f-4890-a3d6-9b10e0408b2b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d1bd535f-1eda-4b4a-83ce-e61247083773"
        },
        "item": {
          "id": "e8acb376-5aaa-4d25-a56e-0b79747e9e28",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f0021761-8faa-4b6b-9759-b93c65d0c64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171a145b-e4e1-4c5e-b921-a70643f1ff29",
        "cursor": {
          "ref": "b3e510d0-d14a-42a0-8b91-df4bf6b282d0",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ea927d5a-483d-4c6c-b997-51788aa95808"
        },
        "item": {
          "id": "171a145b-e4e1-4c5e-b921-a70643f1ff29",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1d028c82-139b-4a63-b7b0-8cca04a84cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e6c541-3922-4117-ab2c-ef124afea5e0",
        "cursor": {
          "ref": "ee094edb-b0d2-48f8-b2f8-c16d35737457",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "807adab9-90d3-4c5b-90a7-8d491d7b254a"
        },
        "item": {
          "id": "d6e6c541-3922-4117-ab2c-ef124afea5e0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "aac0463c-9b5f-482d-8953-f90bd765f8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b583646-8241-4430-83b2-1124d2357c24",
        "cursor": {
          "ref": "82856bdb-0999-44cb-bd34-fa11f19da1cd",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "74d75ede-b094-4ed5-8c44-e96880c23fa1"
        },
        "item": {
          "id": "9b583646-8241-4430-83b2-1124d2357c24",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c7124e3d-e533-4754-a385-1c1fa8dc7ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3658ed64-c368-47ac-947f-e1e155c7fd28",
        "cursor": {
          "ref": "6303ee07-a1c2-4dad-b497-8f07c943408e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "cf633b71-ddee-4e83-8a21-eaf895c799fa"
        },
        "item": {
          "id": "3658ed64-c368-47ac-947f-e1e155c7fd28",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c9de3d3b-72df-4632-bb0f-da17fc0e20b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4c3b15-2cee-4206-8fdd-cb8671965c9e",
        "cursor": {
          "ref": "cbaae6e9-dd2e-4ea7-b8d9-9bb9e1dcab11",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3c10103a-5d39-4614-ba48-7d25c98f2a16"
        },
        "item": {
          "id": "ba4c3b15-2cee-4206-8fdd-cb8671965c9e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f2585694-9520-4572-ab60-2d6aa9d47e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971be681-2eab-46fc-8419-ba9f05770880",
        "cursor": {
          "ref": "43ebe44c-cd18-47ed-9142-b5cce95e917a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a6a945a4-5e86-41e2-bd52-76c289faa3cf"
        },
        "item": {
          "id": "971be681-2eab-46fc-8419-ba9f05770880",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e7ed87cd-7ea3-4cc1-a78e-39be6d8dcbac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b91838fd-79cd-4c7b-bf86-20075f4942d1",
        "cursor": {
          "ref": "0ae45342-c0a9-4072-8a49-3618433aa9e5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1a413a3d-f7af-4db6-8b8c-193df1557a14"
        },
        "item": {
          "id": "b91838fd-79cd-4c7b-bf86-20075f4942d1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e9439f3c-b770-4b49-8b9e-6a074b5cd4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12de1c19-0342-4ca9-8eb4-061347b39756",
        "cursor": {
          "ref": "19875423-7594-4c3e-96d8-fc74e3f7d383",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c2795c13-2abc-4a87-8cce-3842e17ac4d2"
        },
        "item": {
          "id": "12de1c19-0342-4ca9-8eb4-061347b39756",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3d697926-f3ab-4847-bb9d-c3f0cf43c99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f59ced-c437-4d02-9940-003039c922df",
        "cursor": {
          "ref": "c6f3c133-442f-4c10-96f7-cc13d5e75598",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5c7e7112-2779-40e8-b48a-a8e71e98c8bb"
        },
        "item": {
          "id": "12f59ced-c437-4d02-9940-003039c922df",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c98ff671-65d5-4cac-8881-92a5ddeace3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fea7fc3-f0d4-4148-8736-c3126a30a8ae",
        "cursor": {
          "ref": "356ea84c-b174-42cd-ae69-712d44157b36",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3e23d0b5-6aad-4e0a-9a4a-225b2f2da863"
        },
        "item": {
          "id": "8fea7fc3-f0d4-4148-8736-c3126a30a8ae",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d3120f07-eaa3-459d-8dcc-53af423d1474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332141fd-cfc0-437c-bc68-293a240e12a1",
        "cursor": {
          "ref": "f5b789e2-3b65-4efe-963d-0a9a88aeda46",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bfe0815d-6d81-4ba9-96b8-b3c984c725a9"
        },
        "item": {
          "id": "332141fd-cfc0-437c-bc68-293a240e12a1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6dd89e36-3a26-4d2b-8137-f4ccb401a043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6ca046-7895-4a0c-b65b-c1fe94bdb0c2",
        "cursor": {
          "ref": "0371316d-40dc-4d99-a42a-6bafa40483ea",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a076b6dd-7471-4ec3-ab54-f3c2b9aec75b"
        },
        "item": {
          "id": "5d6ca046-7895-4a0c-b65b-c1fe94bdb0c2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "46b677b9-c4d0-464d-b20f-e1c7c6ee3d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9673c9ed-da8f-4e69-96a0-ef1aa25816c7",
        "cursor": {
          "ref": "f2028e48-3105-4e42-9ff2-b38cb6b6160a",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f7e982cd-6e56-4a9f-99e3-c0bbfb796739"
        },
        "item": {
          "id": "9673c9ed-da8f-4e69-96a0-ef1aa25816c7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dc45cdc9-3feb-46eb-9d20-8ec742906c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6311692-50a1-46d9-be90-05f88fc358af",
        "cursor": {
          "ref": "7a73d37f-8afa-4498-b571-db7b3e8e23ee",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "58b11840-858d-4cbc-84ea-27fc79f94453"
        },
        "item": {
          "id": "a6311692-50a1-46d9-be90-05f88fc358af",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "558605fd-eefd-448a-9be2-e8bb7bc4fb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e82c40cc-77f5-4434-b1f4-363f44e9aa06",
        "cursor": {
          "ref": "2315172b-a046-46d3-90a8-909d4e9f7750",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8b787f95-329e-4e61-81c8-e42f4a879082"
        },
        "item": {
          "id": "e82c40cc-77f5-4434-b1f4-363f44e9aa06",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f7b9b3aa-fab9-4ad4-b8d0-b246baf1f5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d8d4416-0d4f-49ae-9774-ba5a73f64568",
        "cursor": {
          "ref": "89d354ac-a62b-4014-ae6c-f5f9dab40415",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "15b56347-6ebb-4e3d-8692-c6ddba55fa74"
        },
        "item": {
          "id": "0d8d4416-0d4f-49ae-9774-ba5a73f64568",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0fcf51c8-7044-48e7-9f75-19e5e00ce431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808d974c-e162-4796-8b92-2fd48c1e7c1a",
        "cursor": {
          "ref": "bf131ab4-cd10-4e53-a7dd-cb13f26f63ce",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b52cc85a-368f-403c-b728-8f688e43483e"
        },
        "item": {
          "id": "808d974c-e162-4796-8b92-2fd48c1e7c1a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6ca46435-53b6-413d-98da-edcc9787b534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f38911-24c0-47f9-a57f-3d9577c6ac44",
        "cursor": {
          "ref": "eb2e7b36-e0f1-4a6a-9352-c96fbd3d2776",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "42b7e005-c7ba-43aa-8ab3-609c86976773"
        },
        "item": {
          "id": "b0f38911-24c0-47f9-a57f-3d9577c6ac44",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9784f512-776c-44cc-9dc3-54660c16bded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d89257-230a-45e4-bf8a-92169ae5abe3",
        "cursor": {
          "ref": "3253cf24-bcec-4315-821a-664fd8de9758",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4bfbf409-8c3a-4a4a-82aa-cbcda627acd3"
        },
        "item": {
          "id": "c4d89257-230a-45e4-bf8a-92169ae5abe3",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bff1b043-b18f-4c2a-89d4-9c639c03d760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6783f2a-d8e5-4826-a5a1-5e9d4a077e75",
        "cursor": {
          "ref": "7a9cb5ba-af7f-46f7-8aa8-7b6298cbeff8",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ab7dc921-8acb-4611-a8e5-7700d5e9071f"
        },
        "item": {
          "id": "d6783f2a-d8e5-4826-a5a1-5e9d4a077e75",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c29e2960-eeff-4a78-b3f3-ad908afe7320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0dd208-2a1a-44f5-a307-ce2c151f8997",
        "cursor": {
          "ref": "4e174262-250e-4ee7-88e3-92b60bff319c",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9a6ec45e-ac40-4f83-86b6-0cad01366ba7"
        },
        "item": {
          "id": "ae0dd208-2a1a-44f5-a307-ce2c151f8997",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "35f2437c-fae3-4771-b099-46ec1c761cae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a703a2d6-a762-4963-ad30-07398b236173",
        "cursor": {
          "ref": "fca17ed7-d452-49ba-a4bb-f31b420f7e3c",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6d655623-85e6-4037-8630-e365c851be97"
        },
        "item": {
          "id": "a703a2d6-a762-4963-ad30-07398b236173",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "25707708-c821-4e9b-a16e-13ad8a318abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f7e259-cbe1-413d-8a2d-4e929060d6d2",
        "cursor": {
          "ref": "879de828-f1f7-44c7-9809-65438ee47559",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ad9238e8-f475-4a23-813b-82686cdc263b"
        },
        "item": {
          "id": "b9f7e259-cbe1-413d-8a2d-4e929060d6d2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e04e0a4f-da8e-4922-ad02-98080a8533fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85feeb5-d2db-4ad9-8370-a5254d165d70",
        "cursor": {
          "ref": "25e58fb1-7f72-4af4-8670-8044e5e2120d",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "254a13fb-495a-4337-a037-d96588c6b7c2"
        },
        "item": {
          "id": "c85feeb5-d2db-4ad9-8370-a5254d165d70",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "16e3ab03-57c5-40a1-b687-b79dda9c9171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2874bb-2022-4059-a349-79c6692df102",
        "cursor": {
          "ref": "e9bccd5c-e1e4-4320-b56a-996cf60fe7ad",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f3928247-1a17-4ee1-8587-d722e5302924"
        },
        "item": {
          "id": "2b2874bb-2022-4059-a349-79c6692df102",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ce8c2fde-3b68-46b6-a5e5-257593005d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b915db38-7174-41a6-8fba-80b8230a6e91",
        "cursor": {
          "ref": "92d4fea7-fab9-4406-ab9c-c813f2dc6d97",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6cf67dc2-bac7-4c3d-b792-a0765ee01f9e"
        },
        "item": {
          "id": "b915db38-7174-41a6-8fba-80b8230a6e91",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0337a5a5-16d2-4b9f-81df-e86d43c8f338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f3373e-172e-499e-9699-e510b0356969",
        "cursor": {
          "ref": "35b58d20-d5a0-4033-8b10-879fb8f32520",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "38384f04-64b8-4765-89c8-3d3b3ee6b275"
        },
        "item": {
          "id": "a9f3373e-172e-499e-9699-e510b0356969",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e44d4d93-102d-4fa0-bb73-2399a631e0b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5585798-f3be-415c-8047-c8240d56a7e4",
        "cursor": {
          "ref": "ed70ce4a-c792-4a03-b1e9-ee98e9e96d00",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7cce373e-6889-4bfb-8c92-db62543cac6d"
        },
        "item": {
          "id": "c5585798-f3be-415c-8047-c8240d56a7e4",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b87e294c-8d1d-40f9-84c7-4e3cf79df7e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e95edb-3bce-4641-af85-af58e097989d",
        "cursor": {
          "ref": "60152757-d624-4442-be54-fd1683c66ee9",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "349c3d9f-64de-480b-89b4-684f138bf8c4"
        },
        "item": {
          "id": "b4e95edb-3bce-4641-af85-af58e097989d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5d82741d-4332-4c34-b2ca-599e699b90ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce22653-7323-403d-a084-386b65b7e3ea",
        "cursor": {
          "ref": "ba3e8db5-64e1-4e52-962a-93f786a22920",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "8a2adc57-d0cd-468b-94e2-2bef74bce99c"
        },
        "item": {
          "id": "2ce22653-7323-403d-a084-386b65b7e3ea",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f627fd72-dcb3-4cf4-9481-8ab828f5644e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c3ac97-c5af-4e6b-9ff8-dfa952b299f4",
        "cursor": {
          "ref": "2190233a-dd96-414b-9a55-e13d21d3ef59",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "665e6d85-d5b7-413f-a65b-03de22b2b4b4"
        },
        "item": {
          "id": "19c3ac97-c5af-4e6b-9ff8-dfa952b299f4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "de0f8cac-290a-4d6d-9559-43851d6ea1c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2f6068f-c8b9-4a56-ac56-30747b3e91d7",
        "cursor": {
          "ref": "8341434e-469f-49f4-9f73-1fcbbd7f4772",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "dfe2a204-e302-44ff-9ac7-5fac7f20ee90"
        },
        "item": {
          "id": "e2f6068f-c8b9-4a56-ac56-30747b3e91d7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "512fa7b2-84fc-4092-af10-c94b62501029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ddcbab-8572-419d-bd4a-902b4b0a59f3",
        "cursor": {
          "ref": "17d7d0d9-30b2-47df-8ccf-e0697f8d598b",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3b0d5bd8-f04b-4bc0-86ca-11e11f8fb410"
        },
        "item": {
          "id": "97ddcbab-8572-419d-bd4a-902b4b0a59f3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c7676933-20aa-482a-ad16-c776058d0bd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f62bb46b-f9f4-424d-93e9-7695592cfe01",
        "cursor": {
          "ref": "7eb109cb-f763-47e8-852a-463131a82f94",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "697f6b48-31d9-4099-b716-8d31bafb278e"
        },
        "item": {
          "id": "f62bb46b-f9f4-424d-93e9-7695592cfe01",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "01b8a304-e83f-4070-a8a2-bb18597aba6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1918024a-28e2-4a30-a0b1-e5f115b2a53f",
        "cursor": {
          "ref": "e792d662-0594-4856-bd2b-9fef1709597b",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "b5d22dab-832f-4c4d-b4d4-1d08bf1284d3"
        },
        "item": {
          "id": "1918024a-28e2-4a30-a0b1-e5f115b2a53f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b9413506-1e67-48a3-9e32-79c40735d001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a408fa0-f4db-415e-8d39-70141c7e1c82",
        "cursor": {
          "ref": "4d13e164-b590-4ce5-9301-2122501aef81",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7d4138cd-ca73-4567-9e2d-c5a3386b65bb"
        },
        "item": {
          "id": "9a408fa0-f4db-415e-8d39-70141c7e1c82",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "93a4e41e-b398-49b7-a33c-4adbfc421bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237d6c36-0a55-4ff0-ae24-b98de0569561",
        "cursor": {
          "ref": "366a8d3e-4f3f-422a-a5e5-d0d13fef77ad",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5b2b6ad6-7330-4930-885f-ff442ecde693"
        },
        "item": {
          "id": "237d6c36-0a55-4ff0-ae24-b98de0569561",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3a20dcd0-a3e0-4b41-81ff-2f9bf9f342a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f03e08f-57fb-4a0d-b6de-b4c91b73854c",
        "cursor": {
          "ref": "c9555ac8-9014-4093-b3ff-37121d3a9f9b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "5a04b1e6-7656-4bff-8b0a-0fd9847a5a65"
        },
        "item": {
          "id": "3f03e08f-57fb-4a0d-b6de-b4c91b73854c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "79184f6e-9fd9-4c5a-b846-133384004e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eeeeda2-7fbc-468b-a20a-2e2306f7b445",
        "cursor": {
          "ref": "110901de-aabd-4411-81dc-bf9225944736",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f7c4a5e9-9aaf-4055-a089-b093c794963d"
        },
        "item": {
          "id": "8eeeeda2-7fbc-468b-a20a-2e2306f7b445",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9756068e-b27d-4ef3-8a01-790aa7d4f3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2100111e-c244-4605-a639-33e7ef8e2e7a",
        "cursor": {
          "ref": "108e4b69-354b-4f11-9d0b-3671869eb625",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "71ac2828-21a0-4248-b646-3419dc9b4900"
        },
        "item": {
          "id": "2100111e-c244-4605-a639-33e7ef8e2e7a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "db545473-02fe-4fea-a56f-44d1805a9850",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39474125-10be-4ab5-accb-3e36871026c8",
        "cursor": {
          "ref": "b860c176-a889-4e2b-9814-be2fd8770a73",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b9798800-6f89-4fa1-a506-562e932f89ad"
        },
        "item": {
          "id": "39474125-10be-4ab5-accb-3e36871026c8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c8a7e095-299f-4dab-b738-2fe2f5ee09c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b027f9-3553-4057-877c-06da5867c607",
        "cursor": {
          "ref": "863bd1d4-36a3-4de5-a471-537e90c9580a",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5dc494cb-ef4b-41a8-8d26-f543d48cad73"
        },
        "item": {
          "id": "11b027f9-3553-4057-877c-06da5867c607",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4faaf69b-3afd-4cb3-bfd1-6fa006c9131f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98e09fb-b0af-4056-8de8-fbb3d2389785",
        "cursor": {
          "ref": "5d3af1a2-f669-428c-9a65-602e98649093",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7081e781-a804-40f6-8da3-7b497008e2e1"
        },
        "item": {
          "id": "f98e09fb-b0af-4056-8de8-fbb3d2389785",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d3fb5901-7f94-4314-8a4c-95e25fb68e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edcdd14a-1788-4538-ae07-1716d7e41d0a",
        "cursor": {
          "ref": "6053e8b3-10b1-49a6-a66a-6948dfc37294",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "b5fe5793-8898-49e5-aa49-ca330a692efc"
        },
        "item": {
          "id": "edcdd14a-1788-4538-ae07-1716d7e41d0a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "923720d4-1734-4938-94fb-baf2249f2b59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a58f0e7-cb14-4bb0-8c61-e59897c8989c",
        "cursor": {
          "ref": "3e03bdbc-c6d3-461a-8391-e6053a310c4e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7fd63884-ec71-4a72-87b1-67e11f56ef1a"
        },
        "item": {
          "id": "1a58f0e7-cb14-4bb0-8c61-e59897c8989c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "794245f7-463a-4859-b903-fa8c87849492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fb5e6c-438f-40b4-8615-b24bbcff553f",
        "cursor": {
          "ref": "666e2d4b-33af-4128-ab59-1d8b294b11c3",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f261e028-c086-48fa-9379-195b906916cd"
        },
        "item": {
          "id": "18fb5e6c-438f-40b4-8615-b24bbcff553f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9c89d07f-f068-4730-8293-b1fc373bd35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cee806-123c-4610-ab76-d642af86a345",
        "cursor": {
          "ref": "e0a06c11-8d74-479e-8468-de207d45b2fd",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ebcc5342-0c85-4222-9f41-ef1a7115b99c"
        },
        "item": {
          "id": "56cee806-123c-4610-ab76-d642af86a345",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "db2fe0d4-b6b2-4d25-8a37-6f1c2bf857b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccb28da-347f-4b31-838e-641e9db9e58d",
        "cursor": {
          "ref": "1de17b04-0d62-436c-a121-9f070f1491a3",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4bf99640-37f3-49cf-a94a-a9e265ed7bd9"
        },
        "item": {
          "id": "1ccb28da-347f-4b31-838e-641e9db9e58d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8df5e25a-12a9-4e7e-9499-b5308da51bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d98b7e9-5dfa-429f-bc6e-ff93815c57eb",
        "cursor": {
          "ref": "d17daaaa-1e6d-4629-b31a-738f14a9adc8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "384fc859-6c22-4c45-9416-3ebd3e2b5078"
        },
        "item": {
          "id": "7d98b7e9-5dfa-429f-bc6e-ff93815c57eb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "823afd74-5c9a-4719-877d-3a310803866f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f7b206-2520-4d2a-bc27-ddbae81a772a",
        "cursor": {
          "ref": "7842150b-e910-4f04-97b7-a140d184c13b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "94bc0c7b-7d94-46bb-bf62-ea02b55c3b6f"
        },
        "item": {
          "id": "e0f7b206-2520-4d2a-bc27-ddbae81a772a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1daf77a4-1274-492d-b3f9-e47045b8d00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e732f1-962a-4392-981d-b3b06e434050",
        "cursor": {
          "ref": "17da6296-f2d1-4b85-9d7a-6ca7f733d1f8",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3a46a17b-be77-4423-8dd4-f6b419b719ad"
        },
        "item": {
          "id": "13e732f1-962a-4392-981d-b3b06e434050",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "33b06ba0-94f8-484f-a038-45adb7761330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f038ce00-295e-4fb0-83a8-d9e5df442429",
        "cursor": {
          "ref": "83594f4a-92e9-45db-bd42-09106cd556f8",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a1917c14-a134-4c01-b915-caef5001083b"
        },
        "item": {
          "id": "f038ce00-295e-4fb0-83a8-d9e5df442429",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2e53e30d-78fe-4283-b16c-99801280baf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb422488-9fa8-47ed-a8b3-316adff59867",
        "cursor": {
          "ref": "a1055b21-6e04-4ecb-a877-d6e11ed16650",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d8e48128-6ac0-4eef-bea6-ed4d115e783f"
        },
        "item": {
          "id": "bb422488-9fa8-47ed-a8b3-316adff59867",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "9cee35ed-8c1d-4602-bf55-1809ce28f947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c318d5f-1b98-4b08-8ee9-a399bce7dfa7",
        "cursor": {
          "ref": "4ec41337-ce30-4e64-8986-5282e450b15f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6c04a0be-fd60-45fb-b5fb-581cf6ce5060"
        },
        "item": {
          "id": "8c318d5f-1b98-4b08-8ee9-a399bce7dfa7",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f3e596ef-e70b-4687-9ad0-3309cb68820c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e9e081-c331-4560-8e30-cf649516717e",
        "cursor": {
          "ref": "5c081354-5b30-4f83-a503-c26de07bdb48",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f2fa489c-bcbc-4614-8015-1501857de92f"
        },
        "item": {
          "id": "23e9e081-c331-4560-8e30-cf649516717e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f1ac91c3-cbeb-47d9-b8ff-3734e251b877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a916550-f3f0-4c8b-a0c3-254bf2a278b2",
        "cursor": {
          "ref": "3d81ae5f-b87e-40c7-a44b-e1bf859b4c7b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6bcbcb86-d5df-4b87-970b-96f52c0c8445"
        },
        "item": {
          "id": "1a916550-f3f0-4c8b-a0c3-254bf2a278b2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7fef7853-f5f3-4d1b-bc1c-4cd80d471978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7acc0379-0f4f-422c-8e56-20f6ce23e136",
        "cursor": {
          "ref": "2b7a7cbd-95d5-4c8a-9b81-3c3e35265ebd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "6d90e72e-1dab-482f-aac5-9df3e95ddc56"
        },
        "item": {
          "id": "7acc0379-0f4f-422c-8e56-20f6ce23e136",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "81c64bdd-242d-4374-b4f1-d849432276fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b267c775-de67-4d80-9519-11865d8f26f1",
        "cursor": {
          "ref": "9217fe7f-34c6-489b-a7dd-f2267bf9a2c6",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3273082c-4174-4fe0-9b6e-0cd74c9246b3"
        },
        "item": {
          "id": "b267c775-de67-4d80-9519-11865d8f26f1",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e11c6c0c-db95-4bc3-a2e7-4b3b987e893a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5230a44-77b6-4a2e-8523-5309cae88b80",
        "cursor": {
          "ref": "f3d39a44-d159-4cad-ae55-cdc7c47c2da9",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8b8f628d-57e1-4053-ab32-ff10efa82a9b"
        },
        "item": {
          "id": "b5230a44-77b6-4a2e-8523-5309cae88b80",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "93912c49-e3f4-4257-a9a9-4dd0db9f279b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4265e90-c104-4e61-b403-8eefbfb4a704",
        "cursor": {
          "ref": "88d03ef6-fc53-462a-a767-8831c692e1c1",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3e4ba732-0088-4cce-867a-2e724cb12911"
        },
        "item": {
          "id": "e4265e90-c104-4e61-b403-8eefbfb4a704",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "891bafaa-8efd-4841-9295-6e7bf7980d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6349b836-f447-498f-8f48-b9e528b74c27",
        "cursor": {
          "ref": "2ae057f8-e15d-4bb9-b631-70a07a1c51fe",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "433c1f37-bcb0-4ea0-a00f-bba1acbeb88a"
        },
        "item": {
          "id": "6349b836-f447-498f-8f48-b9e528b74c27",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8e5573e9-1dba-4cdc-9c2a-42709cf65b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e4f31b-54ab-49ae-8318-2bddea579d13",
        "cursor": {
          "ref": "ca164c4e-0b3c-458a-b153-8757a8a79986",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "69ee3414-1efe-4a3d-a082-f13419df19f1"
        },
        "item": {
          "id": "36e4f31b-54ab-49ae-8318-2bddea579d13",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e4a53640-fb0c-4318-8835-59c11b3bd007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c50e60-8d30-40a7-9c79-efc1b4c95305",
        "cursor": {
          "ref": "3b25cc9b-8e69-4251-b093-3d3c2bfa1c9d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "98e5a08b-763c-4b8d-b3a2-cfd85e81c5f9"
        },
        "item": {
          "id": "14c50e60-8d30-40a7-9c79-efc1b4c95305",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "aa40120a-5286-4b6f-917f-f3c461314125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0af5d9-8bb8-4238-a15b-d5bf2ba97fd7",
        "cursor": {
          "ref": "82fe43f0-47fe-4e0f-8a34-4c9a00f3afcc",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3f37cae8-152c-4720-8dde-c08ffb603854"
        },
        "item": {
          "id": "3d0af5d9-8bb8-4238-a15b-d5bf2ba97fd7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a46cc9e3-23d1-49d3-84f5-8574c368bd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc403720-cc59-406b-8925-1d25060ceaa4",
        "cursor": {
          "ref": "1c131843-6c79-4919-8794-2fdcd0d80c16",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fce98473-8bb1-4302-b876-812b14d57329"
        },
        "item": {
          "id": "fc403720-cc59-406b-8925-1d25060ceaa4",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "b4084f6b-a096-4f8f-83e6-8b22cc112437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99109c2c-486a-415b-a8fd-743b876f06ce",
        "cursor": {
          "ref": "49999ee8-1b8f-4658-8715-522d1d023572",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c3d4d507-e419-4f08-83e2-757e3c83975e"
        },
        "item": {
          "id": "99109c2c-486a-415b-a8fd-743b876f06ce",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "2c1078b3-1c87-4ccd-af77-57fa4c986171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4abf3b11-8333-4ee9-ad1a-819821022100",
        "cursor": {
          "ref": "c026f9cf-8cd9-4a3f-8685-be4ce8383788",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "57c53f64-10ab-4738-abc4-51af922df47f"
        },
        "item": {
          "id": "4abf3b11-8333-4ee9-ad1a-819821022100",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "de59432f-ce37-4b35-a4d4-f5e58c469829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152d0961-c3bb-4d90-a5f1-74b1e1286f2e",
        "cursor": {
          "ref": "e734a96c-15ac-46de-a3bc-147c5feba003",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8bb0b9eb-52e9-44ed-9713-d5d8b821e162"
        },
        "item": {
          "id": "152d0961-c3bb-4d90-a5f1-74b1e1286f2e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5265fd6f-5c0e-4fa7-9d65-fef03cfc77a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da6729d-9e44-4a84-8533-0baf4d343b0e",
        "cursor": {
          "ref": "94e31280-6813-4d45-a0c3-cf31ebfeceec",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e8952777-7869-40f9-b5b1-fc0758ff60b0"
        },
        "item": {
          "id": "7da6729d-9e44-4a84-8533-0baf4d343b0e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5d2840a4-8196-4606-823c-690c6940b39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adccc7b-2a14-4f45-b97b-4b31920875e8",
        "cursor": {
          "ref": "f03881cf-1a6a-4252-afd6-993ae27e59b4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "731ddbd2-416d-43eb-9332-98c605c25256"
        },
        "item": {
          "id": "4adccc7b-2a14-4f45-b97b-4b31920875e8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0c786731-97b4-479e-aaae-2606fa36d2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02be3cfd-959f-4cc2-9593-41a6dcb562e8",
        "cursor": {
          "ref": "bd8ac5a0-e427-4509-9f2a-8d8791e402d0",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "596da340-f136-40b2-ae3f-e992829762fe"
        },
        "item": {
          "id": "02be3cfd-959f-4cc2-9593-41a6dcb562e8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6eaf0e52-591c-4a3a-8d17-b33a0bb96b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edda6c9f-30f6-436f-87d2-9a1d1cc24e49",
        "cursor": {
          "ref": "2a7f2482-d7b2-4999-a7d1-b4cfdb6e473f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2aa36d6c-f0d9-4738-81ab-374a806c560c"
        },
        "item": {
          "id": "edda6c9f-30f6-436f-87d2-9a1d1cc24e49",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d194a316-cce8-4b46-ae9b-34c476330b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfadbebf-76f1-4adc-ad29-e179b70c02cc",
        "cursor": {
          "ref": "375553b0-150a-45d9-9932-6e8a0818a126",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c48e518e-0efd-4bcf-86cc-155afda18829"
        },
        "item": {
          "id": "dfadbebf-76f1-4adc-ad29-e179b70c02cc",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "de348351-89a9-45d0-8d5f-23fe5d1e9d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb45b7b3-d76d-4c90-b554-eb7b1e9c4405",
        "cursor": {
          "ref": "319068cd-1d95-4bc3-8fe5-41e7f6dd96e9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e8f99386-2ed3-4b50-bcbe-91a1e60954e9"
        },
        "item": {
          "id": "fb45b7b3-d76d-4c90-b554-eb7b1e9c4405",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7285f993-7d09-4580-8c4e-780f05e40675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2493f7-1a2f-4b9b-8795-99e45628c010",
        "cursor": {
          "ref": "677451d9-f244-4df9-ab3a-0fcb2048e94a",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6e316432-3a58-4c9c-9375-12f993983de8"
        },
        "item": {
          "id": "8d2493f7-1a2f-4b9b-8795-99e45628c010",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4f723a99-5bf3-462a-986d-bfa8970821b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7e13bf-6c97-4757-8c45-f05b4fad2487",
        "cursor": {
          "ref": "a41354e3-b026-4300-a44e-5ee3f25c52a9",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "784fbd57-b266-49b8-b38c-21eefe4744ac"
        },
        "item": {
          "id": "fd7e13bf-6c97-4757-8c45-f05b4fad2487",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "04b88294-892e-496e-83df-4cd3bf3c9ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36c4b7f-1f1f-4626-90b4-a02123f78690",
        "cursor": {
          "ref": "f1e60cac-7cce-4b84-a1e2-42778a796437",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e196c68d-298f-4a28-9935-1042a6bad2ed"
        },
        "item": {
          "id": "e36c4b7f-1f1f-4626-90b4-a02123f78690",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1c988890-9c0e-4f53-b048-742ccf6d0cc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cab946-f227-4171-bd7e-16baca2967ba",
        "cursor": {
          "ref": "c5cae67d-01ad-4539-aec5-7e07016160fb",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e2c5ef0b-3446-4f4e-8c3c-e01c22824c0d"
        },
        "item": {
          "id": "e7cab946-f227-4171-bd7e-16baca2967ba",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "acef55b7-eca9-46ed-9132-1a0169d8d169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1b86ba-fe19-4aab-be03-ea30cd5ee68e",
        "cursor": {
          "ref": "f6bb6f91-32f9-4414-8283-f9a9d568c1c4",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "353ae9b2-dc5a-4246-a25e-e5b5cf55b485"
        },
        "item": {
          "id": "0e1b86ba-fe19-4aab-be03-ea30cd5ee68e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a3f5259a-11da-4c51-bf6c-6ad01f817e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08168d4e-99f4-473f-8326-ec50a108739d",
        "cursor": {
          "ref": "450c32b0-55dd-42e9-846b-0f04dc264a1f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6b71dd07-d32d-41a2-aff1-7295819c46fa"
        },
        "item": {
          "id": "08168d4e-99f4-473f-8326-ec50a108739d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5ce3e05a-b24d-4a3b-af43-f1365daeda10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e02560cb-04ce-4d37-ac16-4067182acc68",
        "cursor": {
          "ref": "6412c19b-40f3-408d-b486-085e80354bcc",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "74b96544-0974-412b-93a4-184c66a780c8"
        },
        "item": {
          "id": "e02560cb-04ce-4d37-ac16-4067182acc68",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3cd2538c-3a9e-4ee0-a679-8d34e7d3f75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d101a8f4-e1bb-4f02-8687-576331332b4a",
        "cursor": {
          "ref": "ca0e134f-da85-4813-b654-f72da8e300a6",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "7bdabfc3-b19f-4d91-805b-f0f145eb41dc"
        },
        "item": {
          "id": "d101a8f4-e1bb-4f02-8687-576331332b4a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a8690e6c-7c05-418b-bada-2884e6e3826c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dd741ce-df6d-4293-af22-b9aea427dddf",
        "cursor": {
          "ref": "34b7074e-41c2-4f4b-9c9d-b30be2cb38e7",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5ab9befd-ea37-4578-838a-db6377aa145f"
        },
        "item": {
          "id": "8dd741ce-df6d-4293-af22-b9aea427dddf",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "09be3e99-e93b-4e48-8210-a9517664547d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6142800-2f2a-496c-93e2-aa436529b7b2",
        "cursor": {
          "ref": "a93811a5-a85b-4249-b0ce-b8f7068068f7",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "afbfb9c6-95cd-4dcf-91ae-5fca47073171"
        },
        "item": {
          "id": "b6142800-2f2a-496c-93e2-aa436529b7b2",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "83d5e31c-3bd5-4709-bb9c-db0a54a2cad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a68cfe0-8caf-4d8a-8c39-d304c7728f2b",
        "cursor": {
          "ref": "ff623a5c-6142-4039-8ab1-ced77de29e25",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "531470d6-43ca-402b-a3b3-1a5e7fbdea3a"
        },
        "item": {
          "id": "1a68cfe0-8caf-4d8a-8c39-d304c7728f2b",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f0e8ae98-5d70-4954-86df-fdb54f9de821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91fe73cd-fb6e-4ef0-8024-90b308a648be",
        "cursor": {
          "ref": "b1330dbb-9b01-4613-abda-427e78890660",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8c27d646-14dc-4925-bfb6-b4ba27347113"
        },
        "item": {
          "id": "91fe73cd-fb6e-4ef0-8024-90b308a648be",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f9260071-7ace-4766-9c39-6cfdcec28bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef73675-dcbd-4a64-8fd1-a2f6b97847ea",
        "cursor": {
          "ref": "cf8c1cde-6e4a-44f5-bf5c-a3cd885773bf",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "53964880-7390-4a6b-b0b2-595715e3f4d2"
        },
        "item": {
          "id": "eef73675-dcbd-4a64-8fd1-a2f6b97847ea",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3f347f08-922c-47bb-b20f-7359c9669b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877c039b-449c-40e5-9423-625746135714",
        "cursor": {
          "ref": "b96c8b9c-c8e4-4f2a-9ff5-0eb52d559422",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7c2a41e5-3c5f-440a-92f9-e13db816d6c2"
        },
        "item": {
          "id": "877c039b-449c-40e5-9423-625746135714",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "401df4a4-ce6e-4126-b3df-408a9205953d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93e6099-b251-4703-9f2b-a95e58ac4050",
        "cursor": {
          "ref": "a23708f4-104a-476d-8f84-ecf9c159530f",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "02ac8914-06a2-40c8-9629-5049c22b0001"
        },
        "item": {
          "id": "c93e6099-b251-4703-9f2b-a95e58ac4050",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "462b89aa-1b79-4c08-a607-92cf3022a9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac324a4-60da-48c9-b887-32df2d5f1424",
        "cursor": {
          "ref": "48523255-b737-4bf0-9da3-a5213be52660",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "afb28e20-9c96-4970-8794-c10e03b25391"
        },
        "item": {
          "id": "7ac324a4-60da-48c9-b887-32df2d5f1424",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "43492a32-bd6a-44ef-a2b7-c0fd4a77a72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a4a2571-4776-482a-ae0a-06221bfcc27d",
        "cursor": {
          "ref": "1111e7cf-dba8-4b3a-a508-bbb9a8b17cb6",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "21454158-1411-49c4-bf5e-f7efe6688223"
        },
        "item": {
          "id": "9a4a2571-4776-482a-ae0a-06221bfcc27d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e7c4dced-d067-4cb9-94b1-815c5a2397a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8e375f-8f4c-417b-966a-9d7ed687728a",
        "cursor": {
          "ref": "a1d6c335-c58e-4839-9d2c-aa897741acca",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "73468bab-a061-41cb-94dd-331d19ee6e4c"
        },
        "item": {
          "id": "2a8e375f-8f4c-417b-966a-9d7ed687728a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "41a6d8c7-f048-42fa-9abb-2e1ff405135d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdc3ab3-82bf-4889-8040-15315ea7c367",
        "cursor": {
          "ref": "8eb5b97a-7cfc-4d4b-b87c-b5ff64760c07",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "24bfc8b2-9f46-442a-81bf-8d1a14095ae5"
        },
        "item": {
          "id": "fbdc3ab3-82bf-4889-8040-15315ea7c367",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f42949e1-49b8-4256-b49a-36ce510b7c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbb8daf-66a4-4629-8e75-3e2ed3f3e0f4",
        "cursor": {
          "ref": "b49980da-e247-45f2-bb66-0ef789ce39ef",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "08e652f9-f8fc-481b-9107-6cee2f222a6d"
        },
        "item": {
          "id": "9dbb8daf-66a4-4629-8e75-3e2ed3f3e0f4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "776d02d2-3242-43ab-9013-ab02176b0150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e69975-0823-4a3b-bdfa-5c26f7d58bb0",
        "cursor": {
          "ref": "904f8b54-3e27-4fdb-b15d-16a06e19d8e5",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "16f31148-81c1-49e5-bd97-3c15c948d3b9"
        },
        "item": {
          "id": "a9e69975-0823-4a3b-bdfa-5c26f7d58bb0",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9c98c958-cbe4-4a2d-b779-d1a4002ad1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15a31c1-9720-4619-ac17-7d6f8874e21b",
        "cursor": {
          "ref": "e79b13c0-54e2-4cea-a862-4130f33dae6f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b4a4966c-a05c-4086-954f-1fc0151e868d"
        },
        "item": {
          "id": "e15a31c1-9720-4619-ac17-7d6f8874e21b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "741ae192-bc6d-4d3c-abc0-2fbaf436e490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1eeede-6a0d-479b-82f3-00ebf3d59dff",
        "cursor": {
          "ref": "e6c46083-0256-4147-8f5f-856c0cd949bb",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a5ab7203-4c68-4ed5-89fd-189ced02a415"
        },
        "item": {
          "id": "2b1eeede-6a0d-479b-82f3-00ebf3d59dff",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7febe085-4b98-48d2-9fa3-5685fa511085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca6724d-8708-4a27-bc1b-5f717600a601",
        "cursor": {
          "ref": "b32df6ab-abd2-4203-b826-cbfa8858d9a8",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c6be0ba6-0457-4276-a895-d96453c1c5cc"
        },
        "item": {
          "id": "8ca6724d-8708-4a27-bc1b-5f717600a601",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c03c6d36-136f-460b-acf7-92f21656aacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7014489-03e6-4c8c-83b4-9b108e616972",
        "cursor": {
          "ref": "8e44fcb4-39dd-4f4c-9ba0-e744b5e59f32",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "5a87de7b-870f-49f5-8bea-9baf27a5c2cf"
        },
        "item": {
          "id": "a7014489-03e6-4c8c-83b4-9b108e616972",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "32419a13-f501-49f5-b63d-260aa70f2ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b55d1d-7272-4272-9471-f2140b4e2688",
        "cursor": {
          "ref": "b9058c0d-96ab-4781-80d0-fc5ade6e2feb",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "78322d8f-5ec0-44a5-8c89-ab7ba9846485"
        },
        "item": {
          "id": "b5b55d1d-7272-4272-9471-f2140b4e2688",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5b877454-2fac-492b-bd84-49c690119d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbee236d-217c-43ef-a747-0708568d214c",
        "cursor": {
          "ref": "dad72edd-9201-421e-8a76-c0dff8fee6fb",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a088f88b-ba0e-411c-bf40-93a8d1d93c3d"
        },
        "item": {
          "id": "bbee236d-217c-43ef-a747-0708568d214c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "98a53a74-60a0-4db4-897a-a14c4205d8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46ecb5a-3004-4398-b666-3e5524698c38",
        "cursor": {
          "ref": "b37927ef-d2b0-406f-be84-f1d1d5dc6145",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0507ff87-dc87-4a21-9eda-f23f862cf93d"
        },
        "item": {
          "id": "b46ecb5a-3004-4398-b666-3e5524698c38",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "23b8e1ea-1f96-48e2-86cb-4adca5057d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ea96d7-f022-486f-b1d5-30360bebaa66",
        "cursor": {
          "ref": "0b10d98c-4001-4eaa-9734-f8bf38cbd693",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1a84ff7f-0a6e-42ab-8e14-26b965da669f"
        },
        "item": {
          "id": "12ea96d7-f022-486f-b1d5-30360bebaa66",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "9a6de2dc-782b-4892-af47-c975588ca0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38bc67bd-f1df-4dd9-80a3-41b3acbcf0b5",
        "cursor": {
          "ref": "0e14695e-0586-468f-a4e9-724253ae825c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "7a70b845-c383-49ad-8408-60c175b86ed0"
        },
        "item": {
          "id": "38bc67bd-f1df-4dd9-80a3-41b3acbcf0b5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4a1286c0-e342-4bd4-bb7a-e8bcfe53d61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3a9d66-4518-44c8-9218-dce1fa7ca417",
        "cursor": {
          "ref": "634b3cdb-fe62-40d4-a5b2-7a2cc4c95839",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ee2186db-3836-4d70-85b9-de1db243e82b"
        },
        "item": {
          "id": "bd3a9d66-4518-44c8-9218-dce1fa7ca417",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "906acf4e-ff1b-4153-9310-3d5c89739293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a025acb-7c8c-4d12-83cf-0b8bd5196fae",
        "cursor": {
          "ref": "45ec8735-ce90-4b63-a42d-dd7fc3ab2083",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3518615c-0e8b-4308-9e24-8279f986b001"
        },
        "item": {
          "id": "4a025acb-7c8c-4d12-83cf-0b8bd5196fae",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "41ef8987-af23-4e55-a3fc-476748796e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d24a5a13-5972-498a-b894-488e5790fdf6",
        "cursor": {
          "ref": "3c85852f-ab9f-410e-a636-3ea34dffab64",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8d854f03-6d4a-445a-9635-7c8c665e6e30"
        },
        "item": {
          "id": "d24a5a13-5972-498a-b894-488e5790fdf6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "954c58f5-0592-42d4-aca6-85ebf445c1d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc82591a-d627-4e38-9431-5f6ad911a25a",
        "cursor": {
          "ref": "2f69f2f0-5913-48e5-aec9-02a2e312bfc4",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "02833643-03c9-4a38-a3d2-c42c0e16201c"
        },
        "item": {
          "id": "dc82591a-d627-4e38-9431-5f6ad911a25a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "71b1a4e0-bc47-44a9-8615-762d6be9abe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b624298-149d-4a0c-94d4-5e29a18e1d04",
        "cursor": {
          "ref": "f40d1029-a4b1-4421-b618-ad96e87f9358",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0641df9d-5fac-4934-a778-1c02bf0aeb53"
        },
        "item": {
          "id": "5b624298-149d-4a0c-94d4-5e29a18e1d04",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e2717d5a-e6a8-460c-bb5c-c4b9818119a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813b265e-38a3-4063-88cb-2879ad6cab8b",
        "cursor": {
          "ref": "a957264e-bc04-472b-bdaa-e12e34bb1cd7",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "197050ac-c41f-48f1-8803-f5dd474796f1"
        },
        "item": {
          "id": "813b265e-38a3-4063-88cb-2879ad6cab8b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a8f77b0b-8c56-4983-bb0a-e9554a92fe3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a02d47-a142-4153-b8f3-0835f52b5b3e",
        "cursor": {
          "ref": "581a2f4f-83b8-4027-88a6-b1ef99222ae4",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b0e32d29-3f85-4679-8ef4-c63589cc9894"
        },
        "item": {
          "id": "12a02d47-a142-4153-b8f3-0835f52b5b3e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6a98c8a5-dddd-48e0-b735-63c746afd271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74167774-6463-4157-ba55-96aa6e80f836",
        "cursor": {
          "ref": "acb7d9d9-77ae-4591-853b-0884fbc4a280",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f5a68cd8-0a9f-4f6c-b848-f612da12748b"
        },
        "item": {
          "id": "74167774-6463-4157-ba55-96aa6e80f836",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e3dfce41-6783-4bfa-9d67-4d6d25199fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03ba31b-9875-4c0c-9649-bd81fec47755",
        "cursor": {
          "ref": "3d4392da-9026-4b1e-bb6b-1600fa96a797",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "0bf6414d-1c54-40b2-8b88-116f64e631a3"
        },
        "item": {
          "id": "d03ba31b-9875-4c0c-9649-bd81fec47755",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9bc3406d-6a4b-428b-a2f1-b7ce170569aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a755a0a-1893-4440-9d33-12c82fc7c5b7",
        "cursor": {
          "ref": "c50eabc8-a44d-440d-9deb-a0a3b42ead43",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9c1030c7-acbc-4f91-91c2-eaa9b298475c"
        },
        "item": {
          "id": "7a755a0a-1893-4440-9d33-12c82fc7c5b7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ffd45b57-35db-47a9-b90c-99e61dc6a61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31a20c45-6b34-476c-824a-e256e2ceac21",
        "cursor": {
          "ref": "0b29eb16-1bd5-4c42-b4a8-b87736b2b6e1",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "150ee82e-5638-47fa-b43a-f7c5d295b8a6"
        },
        "item": {
          "id": "31a20c45-6b34-476c-824a-e256e2ceac21",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3a52f70d-f999-4250-9eaf-0670eea88f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72ed025-afef-44a2-bdcb-d83dfa3c67f7",
        "cursor": {
          "ref": "3b4104e6-1153-486d-b572-84b48b172cbb",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ba4de952-bf16-4095-9905-c515b9041d88"
        },
        "item": {
          "id": "b72ed025-afef-44a2-bdcb-d83dfa3c67f7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "a9aff803-4d55-47f0-b1c1-a59fb57e7101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f09f3c3-8f55-4e3b-b762-c437759bc975",
        "cursor": {
          "ref": "da130c99-e1c8-4859-a5ab-baaa0278dc83",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9f629442-3a95-4294-856d-ed6e10a6e99f"
        },
        "item": {
          "id": "5f09f3c3-8f55-4e3b-b762-c437759bc975",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "8c419995-b0da-4759-a034-cfd4ad0be8ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c932ee54-76b4-4354-83bd-bdf7eba9f2ec",
        "cursor": {
          "ref": "b08a717a-5812-4cf1-985d-e6aa02242d4f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c6ae8c06-3724-411b-9395-d53da05a114d"
        },
        "item": {
          "id": "c932ee54-76b4-4354-83bd-bdf7eba9f2ec",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d49c98de-78f6-4c35-8177-80be37a65b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1345053d-7f90-402c-b932-5ac7f5cd7e66",
        "cursor": {
          "ref": "6611e967-2cfa-46c7-b8f8-d162a11dfc47",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dcd4d05b-57db-4a2b-8264-6939e2086539"
        },
        "item": {
          "id": "1345053d-7f90-402c-b932-5ac7f5cd7e66",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d4759048-6bfe-43c9-8012-22dbc8f621b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54825298-11ea-4148-9388-712a8d0e2f48",
        "cursor": {
          "ref": "21c8b8bc-9b7a-4dac-b647-f4bb07dce187",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7abd4c86-6ee8-49a6-896b-5b38e403db29"
        },
        "item": {
          "id": "54825298-11ea-4148-9388-712a8d0e2f48",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "cb2f4a77-c4eb-4d60-a1f6-91ff95f01e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9893e78f-e8f2-4871-bded-48a53bdee149",
        "cursor": {
          "ref": "532e0a2c-e278-4ab7-8ec3-a1b21693c84b",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2513fb74-0154-4325-b8f8-7c4ab45484fe"
        },
        "item": {
          "id": "9893e78f-e8f2-4871-bded-48a53bdee149",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b6d2ae3d-b914-40b3-8020-aeb8af65d3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dae16c-1a00-4284-ae92-2ec83058bc83",
        "cursor": {
          "ref": "cb157c4d-63c1-4d8b-94a5-efa9a2cbc44d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e11973ff-9bdd-4db2-9bfc-35217687c8cc"
        },
        "item": {
          "id": "b6dae16c-1a00-4284-ae92-2ec83058bc83",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5698f228-bb0d-45ac-b80f-a0827dc43749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a023ee9-947f-47ea-9b44-59220ea273f6",
        "cursor": {
          "ref": "50e00921-7e6a-4ad1-aa7f-a9ce664ab4a2",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "23196900-c406-48d6-8465-26694feda06f"
        },
        "item": {
          "id": "9a023ee9-947f-47ea-9b44-59220ea273f6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1e691049-fcf2-4d6d-9192-511480e08a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9de64d3-ec61-47bf-98dd-f5de5ee85400",
        "cursor": {
          "ref": "ba8c5b9b-26a7-49f9-8b94-016bf578c72b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8c74c5af-e06b-405e-be4d-132b8dddbeef"
        },
        "item": {
          "id": "d9de64d3-ec61-47bf-98dd-f5de5ee85400",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f116dbd0-7da4-4dc5-af81-ad829297c849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875e0b64-7d8d-4e94-8d17-85c87b46e828",
        "cursor": {
          "ref": "818113f6-f9bb-4d2d-96ce-1533856e9480",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c08c8d79-d7ef-4779-ac2e-921506ac98d8"
        },
        "item": {
          "id": "875e0b64-7d8d-4e94-8d17-85c87b46e828",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c03691ec-4c0d-4d21-80c9-dec6d61a3afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722dd601-52c7-484b-9959-90bc75752d1c",
        "cursor": {
          "ref": "b78f4056-db98-4694-9fa8-209526935a2b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "152f6fa0-4518-45c5-91c5-a4caa4f91ac6"
        },
        "item": {
          "id": "722dd601-52c7-484b-9959-90bc75752d1c",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f9237cf9-03d2-4a7f-9765-ac0bcdcea555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d325d4-60df-410d-82ef-26f644dc1af2",
        "cursor": {
          "ref": "4d26bb58-0409-4398-be69-ab8630f19485",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "efb6aa06-df04-495d-b5dc-070279b9efa7"
        },
        "item": {
          "id": "f2d325d4-60df-410d-82ef-26f644dc1af2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8ffdaf3c-f3e2-4fe9-89f4-2ef7c39402f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fe5722-2747-48eb-8796-33efefc4e602",
        "cursor": {
          "ref": "8678286c-515e-4301-bfd2-c5e580c09ee0",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "12b810be-ef84-4016-a317-d0b1675ebc6b"
        },
        "item": {
          "id": "e1fe5722-2747-48eb-8796-33efefc4e602",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e5e87234-61fd-4499-afe8-1b484ae8024a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11978fd-9680-48b8-a9d3-67d35cac7463",
        "cursor": {
          "ref": "e1b6b253-6c93-45a8-8f41-804991cc3e2e",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "68044b1b-e378-4aee-afb0-27e7005fafb5"
        },
        "item": {
          "id": "b11978fd-9680-48b8-a9d3-67d35cac7463",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "be878212-d072-42dc-981a-cec5be393318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4115ff1a-e4dc-4dfa-9554-813b84af5519",
        "cursor": {
          "ref": "b1c620ef-19cc-40e8-b93c-c4b4a31b300c",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5c60caca-027c-44ef-9c5c-d64d61abfda7"
        },
        "item": {
          "id": "4115ff1a-e4dc-4dfa-9554-813b84af5519",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d8e5299b-730d-44f0-b801-de74ae16baef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb26e5a-5f7d-4a3e-b5d4-c0e16df63756",
        "cursor": {
          "ref": "d57b3720-ad10-457a-a272-128d8e3234e6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4bd1b6fa-bcb3-4a80-bbcc-c8049c58085c"
        },
        "item": {
          "id": "bdb26e5a-5f7d-4a3e-b5d4-c0e16df63756",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "e83a8fa3-6fbe-4152-9abc-db315ebd12bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2119b5-abf4-41f5-8db4-972c8c91e594",
        "cursor": {
          "ref": "c13c1a91-030d-4d0d-8a06-1d4704b55f52",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "788426a8-0d3e-448f-9251-8a794264776b"
        },
        "item": {
          "id": "5a2119b5-abf4-41f5-8db4-972c8c91e594",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "00cdb85f-e4f8-4347-9e66-5c04a1a484f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632b15d3-692c-4798-9302-33253b75ec2d",
        "cursor": {
          "ref": "891f9cc4-8658-490c-a71c-1c272d8b07f4",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "190851b5-a46f-4499-8420-8ac107a7e8f5"
        },
        "item": {
          "id": "632b15d3-692c-4798-9302-33253b75ec2d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3f6f2884-f4ca-4042-b7f5-8e8c6355ed24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f15e843-d733-4813-9cdf-3c2cee0c95c0",
        "cursor": {
          "ref": "e01500cc-46cb-4d54-9487-c72ce23bf18f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "499d8432-33d1-4954-a805-4ee60d9fbbdc"
        },
        "item": {
          "id": "3f15e843-d733-4813-9cdf-3c2cee0c95c0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "f8cb7628-8d8b-4450-84fd-d9cc49a5d9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0446d1-a1e4-4d35-9868-9d271818c024",
        "cursor": {
          "ref": "4475c766-217e-4fa3-a219-bcc560d73930",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cbaafc12-746d-455c-9ff6-4d608e8e485e"
        },
        "item": {
          "id": "bc0446d1-a1e4-4d35-9868-9d271818c024",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "79329d72-c1c9-4683-a9fb-b998acd33231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f64a7e-6ac1-4743-b7e2-f41f1f4c6b75",
        "cursor": {
          "ref": "5149a96f-f83d-4d8d-9f82-8d161f8b2d6f",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e2d24314-fbd7-4f7b-a9e0-12c56124bf1c"
        },
        "item": {
          "id": "78f64a7e-6ac1-4743-b7e2-f41f1f4c6b75",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "dfac83d9-13f2-4f6a-91f2-2368d0590236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f785cc-1f39-440a-9da1-0c7c5b65b23f",
        "cursor": {
          "ref": "5150e13b-34c8-49e0-9946-50576ec77e76",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c79c4b50-7d64-44cf-86a8-2227656bd3ee"
        },
        "item": {
          "id": "22f785cc-1f39-440a-9da1-0c7c5b65b23f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "9af956e8-30d0-4e7c-b040-d47601ed2642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98f6077-5f14-479b-803b-4122acabfe5e",
        "cursor": {
          "ref": "132b71f7-044e-47e1-bc22-59e6be23e1cc",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "322b4ae3-f07d-4856-9a52-144983238eb2"
        },
        "item": {
          "id": "d98f6077-5f14-479b-803b-4122acabfe5e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c578c68b-90c5-4560-a857-eeaaf713eae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e66088e-05d7-45aa-9170-8c4b7805a7ae",
        "cursor": {
          "ref": "490aed52-bce7-4a1b-9f2f-2140807f8e2e",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "1384ce34-bba9-4a5a-88d9-4f344cfb26b7"
        },
        "item": {
          "id": "8e66088e-05d7-45aa-9170-8c4b7805a7ae",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cbb66641-79a0-4d08-b234-3931850fd9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fbc309-25f1-47e9-ab8a-64588e05fab4",
        "cursor": {
          "ref": "672428f5-c4c5-413c-bae8-0e4858f5fe48",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "80c8457e-e236-41a3-b4aa-b332797224b0"
        },
        "item": {
          "id": "b6fbc309-25f1-47e9-ab8a-64588e05fab4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cd513c58-083c-4137-b0d8-273451252907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a010ea-bb2e-43f5-bdb5-f7b4577db07d",
        "cursor": {
          "ref": "f4ad67bd-81db-4e81-90de-b1b7f625ef5f",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "9fe68cd9-15dc-4f9d-9790-f92c6e58832c"
        },
        "item": {
          "id": "f3a010ea-bb2e-43f5-bdb5-f7b4577db07d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3fabbdab-298a-43cc-859a-7cd7ae88b1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7ab873-c688-4e50-ba2e-02ab99d08125",
        "cursor": {
          "ref": "e66d4fcb-5c6f-43fb-86fc-794978cd3052",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ab411672-1595-4d4a-8a94-3d8aab836a67"
        },
        "item": {
          "id": "ae7ab873-c688-4e50-ba2e-02ab99d08125",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "86918d46-1a78-45ee-8372-d53ce39b15cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "135dd299-a0c5-4108-976e-c77bfca587f2",
        "cursor": {
          "ref": "b0330115-64a1-4ffb-82bb-2e176001fd7d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "ea96e592-baee-4bd4-8809-745943e4a0f5"
        },
        "item": {
          "id": "135dd299-a0c5-4108-976e-c77bfca587f2",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5ca5a564-ef3d-4d6f-8915-58721ea64d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51800bd3-426a-4c82-a049-dc644ebd0cac",
        "cursor": {
          "ref": "84a26bd0-1aca-45ff-bce9-1452c3887e8e",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "69de956c-014b-41e4-92b5-80789d4d3613"
        },
        "item": {
          "id": "51800bd3-426a-4c82-a049-dc644ebd0cac",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "757a9e1e-3caf-4fe2-98ce-0cde87bc55ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d283b48-e6f8-43b0-bae4-bd4773d68b3c",
        "cursor": {
          "ref": "7cc14551-a772-4b91-a7cc-378730874426",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "ae5ad40c-cf26-4429-aa19-4f16a12f7d5c"
        },
        "item": {
          "id": "3d283b48-e6f8-43b0-bae4-bd4773d68b3c",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2626d277-1594-4c65-b476-c4e9a229cde9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed19b77-c924-4c51-ae3e-4b22691d0841",
        "cursor": {
          "ref": "8936ebd8-c62f-4b81-a9ae-3dc4fb7ae214",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "5a83b0cc-78e3-4f91-92c9-dfa1e3ffdd1e"
        },
        "item": {
          "id": "aed19b77-c924-4c51-ae3e-4b22691d0841",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6762c759-7d58-4fab-90a5-c72a3a48b042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa3a8f2-2b05-4d8c-8ee4-3bf461c62baf",
        "cursor": {
          "ref": "77bc8b61-bf85-4456-b043-5dfbad81b6a5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "6e584cb3-19b5-4231-9ce4-01a1963e63e9"
        },
        "item": {
          "id": "7fa3a8f2-2b05-4d8c-8ee4-3bf461c62baf",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5a765b77-3e44-4324-b9b1-d7af3082adbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a867c6c-f1cf-482c-a487-c5c7b74849e9",
        "cursor": {
          "ref": "1841034e-d1f4-4680-bf6e-4f48323f02ae",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "74f4c44b-917c-4e45-bc24-dbef3df783c2"
        },
        "item": {
          "id": "0a867c6c-f1cf-482c-a487-c5c7b74849e9",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b3b2b245-af69-4a42-bd47-ee0b50345803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3992f205-ad4d-4668-a82c-bfd96a1db253",
        "cursor": {
          "ref": "77394e6e-9568-42c4-b161-999132604f86",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "002731f1-1613-440f-b6fe-fc038e1b5118"
        },
        "item": {
          "id": "3992f205-ad4d-4668-a82c-bfd96a1db253",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "73cb2e58-9d06-4bad-b31d-47bdf6c4b1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcd77d3-ef22-43bb-99af-3e1b57bdd789",
        "cursor": {
          "ref": "eef22337-07eb-4445-bb8a-0b9aa3b5b892",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "939d0554-871f-4b9a-afdb-47c854a02afc"
        },
        "item": {
          "id": "fdcd77d3-ef22-43bb-99af-3e1b57bdd789",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "1ca42f5c-3316-441c-972d-06cd27c3c9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b107813b-2a4f-4477-a1e6-b6c5de34239c",
        "cursor": {
          "ref": "b96ee4ce-29c1-4aa7-a75a-dedd60379ebd",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "cb6bacc8-2cdc-403a-b384-352833d0b9c3"
        },
        "item": {
          "id": "b107813b-2a4f-4477-a1e6-b6c5de34239c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5911d2ca-5896-40f6-bb56-0b7a49ea65fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8d039ec-4868-42be-9b4a-70561526fce9",
        "cursor": {
          "ref": "732c4c89-4b61-4dad-b3bb-36a742bba667",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b37e2426-6899-4399-b714-cf852c2ce28c"
        },
        "item": {
          "id": "b8d039ec-4868-42be-9b4a-70561526fce9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "d84b4caa-d7b0-4574-83d2-35b48a7716c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be9ea9b-2f62-45cb-850e-e1a5f9a1f5a9",
        "cursor": {
          "ref": "2a635b91-3c86-4a5d-8db6-693f828d2d00",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "477defa1-383c-4365-958a-a520cf17e4b8"
        },
        "item": {
          "id": "7be9ea9b-2f62-45cb-850e-e1a5f9a1f5a9",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c2dc93d4-956a-4d3a-89a0-fad349adee62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98269ed1-043d-4cf4-aced-96f71a4d900f",
        "cursor": {
          "ref": "3e447897-8128-4cf5-8586-6cb1a815753d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "94a77ed2-ae3c-4ef3-b1a6-84c2699b8b44"
        },
        "item": {
          "id": "98269ed1-043d-4cf4-aced-96f71a4d900f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1198e89a-7eca-477c-86ee-34e898ba11aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c147123-40a7-409c-83bd-cbcf643039d2",
        "cursor": {
          "ref": "4d92553d-3b38-4359-9651-ef7a34949b59",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "f26be130-252d-4d0f-9a83-07c63f9c5253"
        },
        "item": {
          "id": "8c147123-40a7-409c-83bd-cbcf643039d2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7f5c4941-ece2-476f-beb8-6dd8f9a2bf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159d1bda-4985-4bcf-9c3f-562a21e1d775",
        "cursor": {
          "ref": "3581d768-d795-440e-81a5-e99a2115e3fb",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "35947a63-6efd-4974-b420-fd848412c19b"
        },
        "item": {
          "id": "159d1bda-4985-4bcf-9c3f-562a21e1d775",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "af879e57-51d8-4143-8e16-98d29aa7a946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7345c43b-4b90-48b3-92c6-a96e10d9f1c3",
        "cursor": {
          "ref": "263ec2b6-fb0b-44eb-9457-1c3099ba0586",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2da7f5cf-f761-4167-a977-df8d789a9f05"
        },
        "item": {
          "id": "7345c43b-4b90-48b3-92c6-a96e10d9f1c3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3504d6c0-328e-4409-955a-7970042815d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632c5150-b4f7-45d7-920f-3c3b0830fd0e",
        "cursor": {
          "ref": "dc0475e4-5b07-400a-b181-c3be8f47a5af",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c3bbcafb-563f-4fe8-a287-c7137f54bb79"
        },
        "item": {
          "id": "632c5150-b4f7-45d7-920f-3c3b0830fd0e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "57ce2317-036d-43a4-9107-88be618e307a",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe5c231-654b-4fe0-9b74-9f21435f3fb1",
        "cursor": {
          "ref": "08a1ccb2-3977-4292-b302-f52dbaa89edb",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "aa88dc70-3a73-48df-bca3-9b7ebb282043"
        },
        "item": {
          "id": "1fe5c231-654b-4fe0-9b74-9f21435f3fb1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a1c9e240-0e9f-47b6-9d1b-ffe32020997c",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b97de9-aaa7-4210-be7f-af1862d4d1c6",
        "cursor": {
          "ref": "298bb580-0cf3-4c17-9c09-736a9c1dcb51",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "67f58814-ce85-4d64-848d-e10abb5db435"
        },
        "item": {
          "id": "11b97de9-aaa7-4210-be7f-af1862d4d1c6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "90b43243-110c-4579-8675-1b918ed88b1d",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "405ee699-2af9-43e9-8400-2b6c3044d766",
        "cursor": {
          "ref": "1e972a4c-dc71-43e7-b51b-60d063d2b66d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "359fccc1-026c-4f85-bfba-95f44f1ccf0a"
        },
        "item": {
          "id": "405ee699-2af9-43e9-8400-2b6c3044d766",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0f4d9b1f-ea09-470a-8176-591268afe56d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405ee699-2af9-43e9-8400-2b6c3044d766",
        "cursor": {
          "ref": "1e972a4c-dc71-43e7-b51b-60d063d2b66d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "359fccc1-026c-4f85-bfba-95f44f1ccf0a"
        },
        "item": {
          "id": "405ee699-2af9-43e9-8400-2b6c3044d766",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0f4d9b1f-ea09-470a-8176-591268afe56d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80cf55b-1b18-4542-8035-db38c9966b3b",
        "cursor": {
          "ref": "ebf95dff-2c41-4ae7-9813-070f2d9b480a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "507058cb-f1fe-4e84-9f3c-b57b0923ce45"
        },
        "item": {
          "id": "e80cf55b-1b18-4542-8035-db38c9966b3b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7d9b1610-f574-4606-8acd-0a3fe3b2e633",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f739825e-b9a0-4094-b55e-5cc107751593",
        "cursor": {
          "ref": "b56c0d22-f53c-4c9a-a3fc-e2e6ba051552",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8dbcb569-0926-4181-a2d4-33a2abf1ce51"
        },
        "item": {
          "id": "f739825e-b9a0-4094-b55e-5cc107751593",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "aeca20b7-e403-4ea1-83da-fb0ce87a93c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}