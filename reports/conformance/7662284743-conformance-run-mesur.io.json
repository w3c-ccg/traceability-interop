{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "18702850-b2f2-4419-bb09-6a6917c46965",
        "name": "Clear Cache",
        "item": [
          {
            "id": "946fb24a-6e69-4312-91ef-2b5a359722d7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15ad4f5f-1261-40a8-a120-80bf5973a75a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c79a2216-c57b-44d6-8bd5-08cae96f7c9a"
                }
              }
            ]
          },
          {
            "id": "e22b23d8-5f88-4987-8a0b-778652a79e81",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a408485-6823-470f-84e1-50c238489c8e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eccba5e8-18de-4815-a5cf-7915b3181129"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "78c3de18-8cfd-4dcd-95f3-a89065fac331",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e3bf1959-d00f-4939-a830-be343cc96abd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "32718047-4a9e-4d47-971d-0adfb22b2ffa",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b81f8d4b-dda1-4acf-bebd-0d48dfdb2250",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c9801356-c9ba-4659-b217-1a4504bc2388"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c96934ae-1de6-4454-9a84-d2a41e89003e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "97dfbdf4-50a2-4656-a727-01e729200481"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ed18461-2a86-4673-a5cc-d00ec5badd9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6823be2-91bd-4000-ace6-81b3a1a19e6a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fdaafeeb-605c-47e7-af74-b8608333f89c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4d6e6a67-9330-4836-8fda-eb7e6114fa71"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ec7c1c0-2e50-4a9f-8654-196673db7dc7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "850d762d-ea1a-4bd5-9e65-889bcf166db7"
            }
          }
        ]
      },
      {
        "id": "3f92cf9d-a312-44ce-b44c-3ed1e78d1bdb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7e1e038b-d2cb-4f9d-a631-4a0a1ecaca9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b7c6642-2795-48dd-98a6-e6b2cd36dfc7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "defb7673-fc21-4ee3-9a80-3a4fdbb7a6e9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e79a67a-31bf-4925-a926-c912c3006e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e939c7bc-40b9-4850-83b7-53d264e2c49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca83e0e6-0a93-4e21-a677-55916f92fae1",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3706848e-99f5-4849-9a2c-42c17d09f9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0410ec5-703c-4901-98b9-80f6a96517a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62fe893f-c1f2-421f-9251-9f551a1d6fd3",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943f6717-d34a-4269-a874-66c2cda6a924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70acebc0-ce43-4d8d-a92f-689072db2537"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4b88bc2d-ab2b-4146-a553-f4180e472ba2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f5ec657-7caf-4432-a64e-1084bda409f9",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb1d108-09ff-498c-a95c-07ff2567df67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75804fc6-5549-4ef1-9acb-91499edcbdb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194bff60-da4a-4b04-b8f5-f45771e2d007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "519d0db0-15ea-436e-9a66-a540dd5d5770"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "63b15f37-710c-4950-aefb-cfa6505aa977",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23242d36-595c-4d67-ab63-2c74b3d8e9e9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b074198a-fc0c-47a4-8392-5e1eac952fca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dccb968f-7790-435d-8f52-0183d90961af"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "089da779-70e8-4872-a802-8980c0d45c3c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6e09105f-e527-4eab-9215-b1acebda4dae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "84ada904-23cb-4095-8498-b29d7652b821",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46d43e1a-2101-412b-ac98-ad8b290ec938"
            }
          }
        ]
      },
      {
        "id": "2f954d0d-915e-4af3-84a7-25c908fdc238",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "553c1b6f-ed46-4b33-8882-9930b1519380",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ecfbe27-283d-47c0-a0b1-d08fd123edbe",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4e90f22b-32bc-4f64-b47f-d08295662592",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4cb6ee-d281-40d3-9909-91b41256784d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8587692b-f79d-4410-bd0e-bd10f19ae537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4250ea-f36f-43b9-bf12-20d4933e09cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a880ee4a-4d86-435b-8b15-74599e6b6883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e8134f-0393-4e87-ab29-ccc771f6262c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93997306-1f9b-44d0-94b1-eda30127b803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10df0d9-0d39-41ae-a1d0-266a8e7c1239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36540407-fc77-41d8-802c-34701340e87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad984076-094d-48d3-8edc-626311f1bb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b05277f0-9d04-44c7-8029-2d1ac7b792a9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee7424a-91e3-4adf-9b0d-1d3661cc6abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7bd747-ed3a-4285-92fb-19dd239c9682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f1abf4-07a6-4f41-a82c-fb4bf57ab08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "066e8009-2e74-46e4-aedc-4e5d84b877ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae4183f8-4152-4707-8dbb-53b49cc5e2e9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6f9c1b-8ad7-499c-be32-c75fc8d25ae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e131876-2620-40aa-ab13-45de28831791"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7e951c7-5752-40fe-a274-86e49bb9bd68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3050c4e3-0cc0-4ad9-9652-37f294693ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f06a66-5404-45de-a1a1-01fb33f3dd9f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "416bafb4-1c83-4a60-a996-e63af109172c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea76db58-a07d-4479-9da2-b8790e13d744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb2563d-1e71-41f5-b773-6dd24dbd020c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1529abca-444e-4724-80b7-d7c9585a58a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f2b77a-c58f-404a-bc9d-b6387ddc97e1",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c96034f-e34b-4538-b7b7-e15970472f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da7b0f8-eed8-477e-b62e-132387ccb131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c47b46-b648-4108-8de0-9881727a2e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37105cdb-cd08-4c3d-b12d-1d611d72bfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a66691-c790-42db-bb3b-8639c72c133d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6261b973-214c-427e-ac28-46783d2a4f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8caa89b-077c-4e4f-b9d8-7ad396e5190e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2693c6-91a2-46f0-b8a5-8aca8d488c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e7243ca-3a5f-4245-b5e1-88972466576b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2af391-27a8-465c-9129-1ceb388f7700",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1dd781-29d4-4bc4-a8a4-54480812b930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21538f0e-1f14-4c0d-bda6-baa63dce0cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0100697c-e079-471c-a197-5eab6c02b39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3227971f-b698-4867-8b6c-01e30c3aa8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07ff10a-985d-4ada-9789-f0956348187d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e0f9ed-9d10-415e-89b7-6c7955d703e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e68597ec-c7de-43b3-9f67-dd4d52c138db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e576cf25-5190-4b2c-a031-514ffc6e7235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7de639c-a7bc-4d2e-9e42-b211b78dc3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e267332-9b98-4eb0-8a51-5d7647d36dbd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b17efb-c885-4431-a790-f48489dca5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae40971-3ea4-450d-bc06-5100292116d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9195920c-a0bf-4581-94c0-bc4b055ac798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4954923-9f10-4312-84af-84ebc0f48a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b5ad7a-4ba8-4dee-9f3e-1440b9ba53b2",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32d29eab-b346-4985-abb2-1a92484e346c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "122f29f4-3fec-4ff7-910c-6be4e9d7d726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da59d1c-1f65-4170-ae48-7d0161d6265b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74cae556-c0bf-4cb9-8d42-4b87ff82c165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66632852-d0f4-4d29-97d2-49bbbc29f767",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0c583c5-77c1-4d12-841a-487f2b0848e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ee38b1-fb54-433c-8c9d-a391b5673ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88505f63-edee-45e1-9830-7a4ded170c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e248ce44-4293-4ba7-bf86-79d5e0a75d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7732fa-eba2-4ad6-86f0-e7778800ecb0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d10821-1f16-4b05-a012-4bf55ca19cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18b8401-acc7-4b89-aa56-25d9e5b574a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f2eb7f-8d05-4337-9407-e0623867b2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f67a1ece-60ad-448d-89d9-3b8c53705929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba360c7d-fb87-415f-a177-a253227655a8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be4c981-1bb6-4da7-9520-12ea556b5fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd2d380-6e50-4e0e-a6e6-f43b51812c36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd42cc7b-9d3c-4898-a8c5-1a4627123d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97dd6628-02bf-4717-8278-782f8232dec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32226986-a9dc-495d-98e4-92f9610bbbf8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37320cca-3e23-4520-8307-30bdf1b0493c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21562326-4011-4917-b2d4-7718a40b51fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2db221-7e18-4c9f-bcf7-3be09657022c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03182b18-06aa-4f54-a0bb-6f4412e9a86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae17fd23-f080-48cc-8b8b-e6ff3f8e9cbb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcdd4a2-d5ee-422f-bb54-e318b45bc39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e6d404-d291-48b0-871c-91c4f91b8311"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6600f87b-faad-45bb-8ad1-41c78018b66a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8db319c5-8606-4892-bc2b-47991bf1c004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf6ca0d-bbeb-47b8-b45e-201a36cb44e8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3eff585-b250-44c9-aa0b-99294e68acfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbb4e19-2480-472f-b44f-81afabef2db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672e94da-2182-4685-837d-035de26d7207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2286dd9-681d-4be6-825f-8748be2f6451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bc674b-3348-41fd-81b0-7c4fda6ff849",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95038d7-6c99-4209-aa5c-b16fc1f49b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53846751-b305-432d-b3b6-4e0b39da186b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1e93e0-dddc-4422-9538-0a03f273368b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd22d18-117d-4f59-9290-00032757a790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b61635-b704-4e86-acc9-03f15c6bddd0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0540243a-cb1e-436c-8ea5-ea30e977a685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ae9b62-35ab-4119-a753-301d36edc80e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9627bcb8-b888-4d01-a4e3-57d3c0400c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc2e17b-677c-4dcd-9966-8ae82171cf5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b20f7a-7e80-4c72-a41a-64cfa0d1a136",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27930e5e-4f5c-4fa1-b022-f188c42e9371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886f9b34-181f-49d5-9180-266dba0cfbda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1c29285-b3a1-460a-a1b4-a2a6a41add27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc06f2d3-58dd-4dda-bfdc-572623e20924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eff8873-cba2-4280-a048-ffbfb90de3ac",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75905099-4861-4a10-9bd6-f2fd0711e355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc678e7c-0b0d-47cb-8395-bc37c8a74a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bffa07d-07a3-4d95-94d1-025e43835dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8803443-7f2f-4f3a-88bd-8d1142ab195f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e457b216-9373-4bd1-8712-a6f68ddeaf8f",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5326162-cf63-4770-a10d-b4d4af884adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254a5bdd-474c-41c9-92dc-1fb27f10f071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb94a63-adcf-43e9-8cf2-80d84bf321d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc616c35-6d98-411d-a9ae-ccea425a39b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecdcd1e-d45c-4315-846a-ae542e149584",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad634028-01bc-43c9-9ac6-a264e6e3a9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47be0083-7fab-44c2-96c7-3db6147f3e90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626d32e3-e648-4df3-811c-3be66b5ae5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ec6ae3-f4c4-42b3-9ce4-aff7f6add1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ecbab4-71c1-4867-8951-0e0295668195",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc408d82-f356-4533-a818-c2b27bc5012d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdaa86a-5c27-422e-8584-b1db1e8a4aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8481bd9b-f904-4b4e-b618-5b7babe0b327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "84577111-cacd-4a43-961d-9cacb38f66a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184fa1d8-4502-478b-8323-a533bddfcc00",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686765fa-9317-46eb-b330-cf8aef1503ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f6a298-8764-4488-aba9-569365adf23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253e9c1b-ceea-4b48-ac0e-10323246d7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3af312a0-2c28-45cc-8437-d64b0be865e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2fa667-13ec-4776-86cd-947624ea349a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a218c15-d24c-42d2-b211-ac549d59cc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2453079a-d3a0-4704-805e-cbf831b40bb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933018ea-d281-4393-954b-1ebb53648c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c01a599-2181-4343-a06a-5fb2aa33e74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d691f7-da69-4704-8da1-9d5823f1308e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7988f1ad-3c20-4c71-b10c-b600cee29ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296c5a13-8022-4ba5-acee-71d083285c32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eff3f0e-e15d-449a-aa46-f089c4007acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1778a0bf-1fb1-4025-aab9-4bf5d419dede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc8a94d-84ea-4f23-aa28-612977d57de9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1276c9d2-72a6-449c-8cd5-544bd2c7355c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d32304f-b0f8-4a5b-b202-d7f54853c7bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff184ee9-97bf-4261-9aac-619b138810f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9963cd-c50f-4a9a-9b79-5b5b9e5aa459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1259f2a2-fa2b-41ea-a727-79c7c3a3d7cd",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414ed3a0-c922-4bba-827d-f34ec33b9d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcd518cf-fcb5-4d66-817a-309a28f81547"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e55aff4-a9dd-4b73-91d2-717161964662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b103bcba-1c25-4e52-9b2e-ce9c91a53466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd606e9-8c4e-4f53-8010-7df81c5647ff",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d174fe-e57b-47a7-a814-8bf414192c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc81b44f-4ab0-47c7-b50e-59946124b71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e831280-de01-44dc-857d-42d57c08c266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f9e563-5267-4261-bb57-a675e2113f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b072897a-720f-406f-8c84-b10c7059d0a6",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e9e5e08-3ae1-44c3-9198-c873bbf3a3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ffc9640-99fc-4a3b-930e-3702efde9772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992b6daf-fb25-44f4-a06e-93f169048847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64d6ebf3-466e-4f1f-94e5-73eeb98364e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51ef1af-a8ed-4d4d-9385-e317e07f2efe",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5db674-fb6a-4d38-ab74-0f3210b6d4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3735d7bb-c2d5-4b9f-9402-b562815f2011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a091d6f-7e1c-44e5-9f7f-8461e9b72faf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bafa9f81-21ca-4bc9-86c8-364f05f7c20a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481bea66-7ef0-4e47-adce-638deb2f7bf0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a692fb-6681-45fb-b244-ac2787ae888b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bf5811-1b75-4378-8468-c58682fbcfcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91b16b4-af04-4988-b350-c8449bb635bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "366e2d9f-6a77-4a76-a22d-cf541c4c5f97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3954ed2-9227-4e18-8451-21e99f1cb26d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b5744a3-2853-41dc-ab80-39286ad38280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "624953e2-d5fe-4340-bbed-379828c76e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dacee4c-97d7-4a9a-8c6c-34d088f2a2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc4e963-0f4f-468e-9f86-044932ffe429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b7d4f0-b472-454d-bb64-a6278240f80c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eb8b8a-626a-4265-9bdb-6a2d2b46987f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4ed1936-e1a1-419f-85d5-15c3f78b4fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43a2d6b0-1968-4881-a654-e592d5b2c000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "58727bd2-f8df-47c5-921e-17c6c1016401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b4c18a-3015-496e-a4f9-7ef93c6accea",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caceb1f-1935-4471-98ab-b8bb33e54990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4d94c1c-1712-48ae-bcfb-04843bdbbb8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf449f5b-9f94-4788-aaa4-3a8fb9783984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "744c7a09-8182-4379-9ac4-f4e709f041a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6551ee-a698-49cd-8467-f2de143f745a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13250525-f5b9-4f50-8016-b3ceddb972aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2885f18a-a70c-418c-9ca6-ef166ee011cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc705ff-63ce-45cd-a46a-803ba1db610e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "592e8b83-96b6-4f95-bce2-2647fb5674cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1386fd95-2d2d-44eb-9f64-3a55f7d3c78e",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94520610-9c92-4220-a0f6-7c77b66fe8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86669846-add3-4f4c-aecb-82fe7e521e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50a1c63f-581d-4e57-b23d-6fde9daac94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dee94db-14d9-49d4-9493-c81423146bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b88933-2742-4cdf-90fc-19676efef988",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef118439-a24a-46b8-b35a-3d92262a9dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4aee67-c58c-4241-bf72-fdf0d9579fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d11e75-04af-4370-9709-b53211b0f36a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa8014d-aa6e-4519-8f76-f79b591506f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8976fa11-682c-4146-b459-77e1ea782e12",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7661a688-3983-406d-8c65-66efe8b0b452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b662596-936d-4e43-a478-661199a00b29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4691cf-3689-4f08-ad0e-1ab4ee999c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "956c0f96-ad05-4ca4-b7e1-373269656ade"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8132b90-53fe-4d63-8807-8c2f33384383",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbd2c20-f9c9-4f8e-bebc-0ba443b8329e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa0fc3e-fa25-41c1-8109-7c5a5db3f8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1075a71c-f959-4456-a2ed-23f09efc2a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d75f2d15-e64c-4604-91cc-755768c9ae91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a647a776-d82a-4546-a208-94ef6eac4c16",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5e0970-93e7-437d-aab1-7eb886abbe94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ca3f158-baff-4eab-b8c0-2696abf78fa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ee02fd-1b37-43c9-9fab-64b54d6df154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c721e99a-b1b1-4f91-abb1-e55996bf27da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a4691a-d997-4c08-875c-6d79e6a192d6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e815b81-c36c-4501-9175-90d3798dc83e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a62f5ac-4a44-4fc9-a9c9-6a68071742bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ab3915-8dda-4733-bfb0-e42aa8c329e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "82bcd39c-0160-4715-bfd5-e028aa13f125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c8e2e8-f624-41ad-a20e-1746bff7c94f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdbae85b-d728-49fb-a597-990763eba0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71920688-aab1-4259-b07d-743d41fe7492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae7fd8bb-21c0-48a1-ac70-1b8b1b1f09f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18d0f74-d0f3-4534-a610-778434c4a9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de449b56-eaed-484a-83d2-87556b4624da",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed88fa2-2ebb-457f-b534-a460561ff016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb13c397-ea64-4766-ae7d-c214b850e86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1bf2717-731c-40d9-99e8-b1ad60a032b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f026bfe-0be7-46ef-a855-6eef73d4189d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419a3afb-818b-47b7-a0a1-b47c2d6ecada",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41a6592f-4f4c-40c9-a3e9-65068796c74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81c62422-a561-43c5-906b-271e93c7825e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2af911-b566-4e53-8296-29ed4319ea1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eec6b6f4-07a8-4124-9c1f-fcfb21d8fcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b602d460-0fad-40ae-b495-7ff019a1622b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aaeab2d-e434-47a6-afce-11a52036261d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7bfd7d-4054-4363-9425-605d11767115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f42444-2444-41f2-a9e9-a5cdab545ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6aa8487-92f5-4e12-9f20-b307bc4cb8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e8837e-de1e-4383-82b8-8a600ddb6adb",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8366fa-0e13-413f-a39f-20f4d06c5276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26113e2-5b86-4b86-980b-bcbe2f95940a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1280a2c-7cae-41d3-9744-0f2f0f1adf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c40e637-2468-44da-aeb3-ca47fb501435"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f77ac63-a737-40f3-b9ea-bcddf38ab1b2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1210b64-a8ee-4e15-9bd2-25d1072e9b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96fb7d2f-92e0-4b11-8de8-ef0ec4b5ac0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58ded3c-77ee-4e4a-8476-eeb06206e466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee922a85-4b50-4311-9855-b516c911159f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5792e0d-d5ae-46a8-9b4f-86835319ab71",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d58f97-b7b3-47c7-977e-e06173fb94b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a90e1cad-138e-4a80-a4c3-407857c1f223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62ec774-5124-4269-864d-4ffbed9604db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b11e589f-7b5f-457d-928b-e4859ab458f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61591fd4-3bcc-48c3-8326-0e0885563d7d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "762145ad-de21-4c52-bf7b-bec59802a506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052dbea5-08d4-44f4-8490-5b1159b32219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d965076-63a2-4564-bb49-1638f244f3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b499e51-b0c1-4cd0-bfd4-8ce7e6df4826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617b42e4-32b0-49eb-a616-a2e6da9359d9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780c9801-3894-4a3c-8a32-04248a565902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4388ebdb-72ce-4c3a-8792-0e4db26b7e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226b92a6-09cc-4951-b0a4-d11172addfe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3dcc8e4-298e-42fc-be55-e4825a6f012e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409f0743-1bb8-4b19-af84-8ff97fe9a941",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84cb74f8-fcbd-4449-a4c6-d009b6549856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abfda8e4-c84c-4c51-8d7d-6cda9b103834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe45250-eafb-4b92-ae60-9558166b024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a823e129-e935-4a61-a9f6-6e6d334f7251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a452afbe-957d-4a2a-acc0-5ec4369ef8ae",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92f5873-5353-4cb1-a868-49e4ff27e062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee8bf09-1b38-4332-a743-142e959936ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6894440c-7428-497c-985a-6006ed98c69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9325ed6-95aa-4d6f-ab8c-d75b2c1860ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a468ce50-13c0-4bd1-ad8b-b637d973f26d",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12879cf-e4f8-4834-803b-a5e8544ba096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6165b79-161e-45b2-9857-92ef7c6b2a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "687b1224-70ca-431c-b9fa-31787f96542b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8372c097-d7e3-4e6c-90c0-77678d4eab69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9f8706-f942-4436-b63a-72bb41ab1221",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "935accf8-0c58-4976-a86c-160015a23c59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb631850-776c-42fb-a3e7-9b42d7e3a9c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28dc738-5afc-4b3a-9dfc-656a17a3387c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "50db330e-b29e-4596-93bf-cb4657b1d2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a07e816d-dde9-44a1-85e9-ac66602da407",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038b61d0-72f4-4eef-b2fd-5c1dee07a80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cad0b28-fef0-4a7e-b461-9ffa144a4f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826531f6-eb2b-4d04-a469-3a1317a16d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "902fc402-974d-4228-9a58-7c06397d38e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a1dc58-8a52-403b-823a-c3dafef4155d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5260795b-f13d-4ce9-9024-bb805c19fe4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7376115-3957-4ef4-bf89-62e58e96aec6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8694a19-0669-403f-a89f-1b470c4bfaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc0c962-6e7f-4d69-bfb8-678896b434eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cb45f6-9380-43fd-8f64-5e75918db952",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2b5e74-cd7b-40ba-b9c7-6a6cf211a4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30f0511-3c54-481c-84cf-d03cc153f593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a4c6a4-4fc3-4a54-89e5-b56f214b085d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "33468a15-1982-4695-8dcb-744b222de173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af5b3e7-227b-4aae-bd8d-c30ca8656328",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20f11b7-a07d-4f12-9d57-f5127062b15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b14ea648-f8ca-4b10-bae1-cc6c37c6970f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08771f1a-6e79-4c25-9031-aeea2bcb9506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "28225f56-051c-4e2f-933a-8d971d99fee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af79711-f9a0-4b2f-a478-c0ac1b876400",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0502c738-9ee9-4927-9c01-9861f4b22480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59882a4-bc7d-4a6d-9e81-2fdfbacfb26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bacb09cd-9613-4b4a-997b-2ceba8246207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1ec4ffc-b864-4ac8-9da8-b4b486c6764d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165a8232-e906-447e-a684-97fd637dd135",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0935dbf6-afe8-4382-8420-70efe8a9113d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fb7dee-bb27-4ee2-a3a2-baa2a4e6a0d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84a2542-770c-4aaf-8219-9262f86c42b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "7293e1c3-0e24-4914-90cd-7d60f68f063b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65d657f6-b4cf-4eff-a667-a072ba3ef649",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fad71a6-d010-44c2-bc18-c4ed6dac8a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cb4ab10-1d03-479a-8971-0e8cc886bcfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a6c4cc-646a-4f43-94ba-ff2f6e706025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8e5ba1-2e86-45ed-942a-1a2d2f845363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac22a032-80ba-4efb-9c5c-04a365d09945",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70714d7-6523-4924-8121-e5baced71b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99bfefb6-094f-46cb-a45a-535abd6f85c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ee76e84-5f06-46d7-9626-382aa5172384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffbf8ca0-e155-44eb-ae35-cc89bf75b322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a022655f-d898-4b50-901c-e7d99ab46b9a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e51cab1-fc44-4bef-84d3-98e480dbb5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f0c8ec-ff3a-4663-9dbf-1e0c579e060d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948c6f85-6a0f-4b01-b2aa-9914256f47b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d6f4c7-cdfe-490b-8761-4bc046571f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f271ee-4529-46fe-ae7e-50094b51b97e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "886f3d63-c6e6-4373-a8af-ee747211f329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82924da-f709-4700-b493-870fa75a0041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e094e31a-e52e-4d1c-b7ca-e294f90549dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0920282b-f0f0-45dd-8cf7-9d24c271410b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de9ee2d-e16d-4628-bb11-489e670c807d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70284c6b-486f-4066-894d-2aa5706da18f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202978e7-eec0-4f0b-a8bf-b2610b0b496d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0993d7-5aa0-4b97-9f3d-3ec40e5fe5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb519008-df51-4467-a22e-95fc1fbcb524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519151b5-b247-420c-85c5-b16ccd79d86f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9e28482-a292-42ef-9491-25371cf92595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06336c9c-e0bc-4ba1-a3a8-6c46018b7dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daf172c-4aa9-4408-b1db-9f007ccdf7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f929a4fc-221c-4ca6-9678-9569e45e8e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf985ea7-97ab-4d3d-81f6-abd2498b857e",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7f5e38-ebf3-472c-b344-37ee22fcc95f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c794f67b-d096-4ce9-b7ec-6f396920921c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbca0fd-c719-43f9-86a1-d9e3a0160f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "72f06022-05dc-41ea-887f-66cb3dbf5076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e7044a-7dc6-45cb-b9eb-281bf1d52a6e",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a05da45-6696-4bcb-8afc-b6af399e9f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc49e32-7344-40c2-8c92-9bbdea5114b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e2a175-13e9-468c-95c2-5349b606257d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3c7e63-9dba-4257-b77d-9dfa9ef8b7b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ba2354-f65e-4642-8855-339b77978ee2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23939fa6-ba1c-4c29-873a-d2aab166881a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877ddc2a-b48e-49a6-b0aa-dab355caa227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6872a957-a7a0-4f4e-8210-197a8ecf6d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8167dd-bfe1-4ab4-9e58-b6b0adfeaea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9367356f-2526-4290-903e-6cf8771003bd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b28eb94-b401-4206-9b94-f02a216d2248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7c7c17b-459f-40bc-a896-64bd0a153dac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "399ec027-b746-4e46-847d-ad787cc4e84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "738b6c99-71f0-4970-8746-b4d15b0460c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f433efd4-680f-4662-802c-798fcd862e25",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738ce8f6-631b-40ac-8766-52e3467dcd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a97d2e-7908-4789-9793-3087e783bd9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec38dd97-0745-42a2-94c7-87c1a31a62f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2810df49-806e-46cc-86f4-23ab94a0fc16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3530a109-216b-4ac4-ab4e-85694a7c8333",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec61bf4-f3c2-4eb3-84e2-a9d8834da647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bd24b55-9c1f-474a-9296-d3823d16627e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8c61d6-84a0-4d20-a37f-ecdd04e2f32c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "905016b0-5474-4178-93ab-85ecff9bdf7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e03101-aa25-49b0-9d75-5e460c1a9ee9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d485582-c521-4336-9c44-66bfd62081fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a786bb7-b2d6-4e9d-b33d-f34fe1631f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8223211-cfd6-4507-a295-1f854cf3b5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "979c90c7-fceb-4a5e-9760-97b4d9d4ba5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb871bd1-95ee-44bd-92d0-159a37eb1089",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1bc8a1-963d-4a04-af87-333f26f0bcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfd0166-c47d-4bb9-94cb-73e9bd0d5b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a14e01b-d439-4932-926e-79c173459194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14470063-4688-4958-8a91-41adb6a93ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19a7ff9-6dc5-4808-b972-2f0cb80dbd85",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de3b0e6a-210d-4d3b-b713-6e2f5d193d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36053ff5-baf8-43fd-9ec5-63b9baa7f8e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b8d6366-1ec3-4e2d-9221-de29f74fea86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6359f888-bdef-4f89-9c99-afe7e22ca182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830bf5ec-8137-452e-8023-a4d6deeab1e7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2fda93-4ed0-49dd-98e2-f44fb913734f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698e05ce-5f4b-4ce9-85b6-dc0012eb6487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d601cbf9-44a1-42a4-97a4-1a427dd1e4c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4771eac4-a819-4988-b45c-288dd81a9b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea08e64f-58f7-4a72-83f7-db592b99934c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70b411e-29d2-4aae-bb20-875a68e82ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a61b1b-c8b7-469a-aff5-aedaf880a6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf2ea8c-f6bd-42ef-bc49-8c501faa9ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a958f54d-b63c-4f6e-99b3-f9a1f66f3965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56e4a480-8180-4dbb-a383-fb83fbada320",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a608f1e9-f0a6-4a18-978c-599b5e5bc6a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca99f284-ae32-4bee-b673-da292f863266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7530c88f-eab5-4183-936f-1f6695bb733a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2250224c-6ae7-4f65-abfd-fccb0fbfa90e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a316d7ac-47cd-49a0-90c1-20b7a6fd3ff4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be2e9ed-7fdc-4fde-8cad-296bb47312c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbaad71b-a1af-4ed4-bc97-2e3241dedc52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7611c8a0-996d-4ccc-839a-07ca508d83a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f0e3a2-65d0-44b9-94a6-b1fd30580168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6862ba86-8adf-4392-8731-78e6848e04c5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1718e590-b62d-4e9e-84ee-ded9f48deefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f29c2a2-9907-4c4e-87a9-9de056341d1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74bd060-9b39-4c60-aafb-300946343c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "16666886-b308-4415-bd47-74ba5170f169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e57cfd-1ae7-4de9-9214-59debfdffa00",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73566880-14d8-4883-9b0b-21ffbba6c93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6b85bd5-6196-4ef7-a9fe-db295ec255b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ba4e4f-5bc7-46cc-bc8f-d238461c756a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a89ded0e-6d3e-4516-aa0a-8bb2a7b3dc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d0ce03-9314-451d-ae1e-6df6d3e2bfab",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb156c3c-e5d2-47d6-9681-323316c81515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413cab7c-b553-4071-9599-fc1fb6ff98c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8036f837-071b-46f3-b08a-a569da7abcb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "771a7467-207f-4b04-954a-6309cc532e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0a255d-5081-4e07-acf1-e9305a20a160",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d50c86c-9100-45b0-8e5a-4f7d00a7784a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b3bcf3-8427-4344-9c94-b0747cbf9ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f838fc90-2b49-4cc2-b206-2de8cb1bf498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f694e958-211a-4817-8a15-290841ed475e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29fa284-2ebb-4dd0-aeb6-fd99127af837",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d964cca-7758-4a58-9aff-f3833261ee36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8707f0-1f92-4678-92fd-1943298bccd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e809a6-8ffa-4f06-a2ed-2f98323ef36d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83e04a95-3aea-4820-803f-bfe7bc4dcaaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a5f93a-c5fb-4b77-815e-8c01591d5dfb",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7689f62-ed9c-4c47-ac6b-391d71ebe180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888f01f8-107a-4d39-9b1f-0f2505749c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3379c2-faff-4881-8076-a157c5721421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5866feb5-4fe7-4fef-9ee2-3e543ae53a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22da9766-6208-450b-b3bc-3e0bf1ad3e7f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f5e2cb5-5cad-452e-935b-f78ec3e0aa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c357c9-18a6-45bc-8933-24e7f3861c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53a08ea-1fe6-4e17-ac28-cc2962ded96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f21399bd-2e03-4c29-a633-8b1f090501dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "644386ab-3551-4c8f-8aa1-447cf31bcf67",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7c9157-afb1-40a2-821a-6f0963c79820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a54b5e04-7ef9-4607-9c3d-f9ced6d5c509"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c460c841-e43f-4ebd-99de-d109ffce1381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd8ece7-0370-43b6-85b4-724214678f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cae0501-bb37-47ae-8669-e6f3c42482ff",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e14efa-dde5-4368-8992-64695a0737be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11e507cb-28dc-42ce-9af0-f65f162e3fb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f2b3f3-1710-4ec4-9d76-429974cae07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be36591c-6f4e-44d1-a0e1-a9c68aad476b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6981a5bf-2066-46be-a05b-a633f63d2223",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e459c8-d281-4e95-8514-9cc44084dc47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c820b56d-1987-4d3b-a78e-7ac317ce7b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12153770-34d4-45b3-8963-854e90e0a1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d847cf71-fade-469f-8a14-5e1c318e112f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761d2a2f-c157-47cf-baea-0b2e021b00f7",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074712bb-b1f1-487d-97c7-a385b84b6fe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "adb07cfc-575b-4ebb-8c6e-df360fdae540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85e4906-715d-4dd0-a4c2-a1d1e456a87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ffb5af0-d134-4327-afee-8e6219089902"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9551a79b-1681-4bd9-881d-1cb8452a9795",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "162a383e-cbe3-4d4c-8c5d-42681f3f7bae",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a0c516-36b4-4eb0-a7b6-56903a4fca14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc6fa925-832b-47f9-904d-35698a5ca35d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9b7f9b-d087-425d-9a7f-cfc7d5c82f77",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb8989b9-1690-4b07-a3f1-c611cfae5cb5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f47b327-c88c-49ba-989b-7c0060faecf6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d3bfa53a-0037-4fc1-9897-e3ddc2137772"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2a39fafb-7d13-4066-ae26-0a4f33903390",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f66d101f-63fa-43a2-a2b5-b37d6018e859"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18f499c3-bb36-4c0a-a0a1-2226a917518f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "786500de-36f4-48ef-ac1e-9f7a648d6b30"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1eee7698-c782-4e2a-b470-71a7a0bcf48f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ad590689-18bc-4871-b693-b32e9c7e0ebe"
                }
              }
            ]
          },
          {
            "id": "331b190b-fb50-413b-9fc2-ad9109ba7274",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7654e9ea-7ed7-4f44-9448-a89be93c063c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c64ee106-0928-4b3a-a198-20cebfb69ed8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d1de8d-8288-493a-a3b6-657d17aa0333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e1456aa6-4d62-422c-ad48-8904f0c1ea8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d44b7c3-c3f6-4fc9-a490-65ed127b65ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af80b5ad-d102-4168-bd80-a2ceeb5f8c58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b708a66a-7788-4ddb-89e1-f1c167be92de",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1480e2c-65b4-4529-b3fc-9ec50010a04b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e889ea5-edba-4a60-ae1b-689be3343c47"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f4dee90-1899-4f37-955b-18242e6f3b88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab7b18ef-390d-4cd8-aacf-dd24fcff29fa"
                    }
                  }
                ]
              },
              {
                "id": "d997eb2a-ac26-4ddf-ace7-92947b2b2377",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "67c7be71-f366-4e75-af5e-f370934a12f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff164bbd-bf96-42f9-b026-61117f91079a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ab32488-47c5-4553-954e-9581921a26f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a331da57-a20c-4dd4-8ed4-9b8f6cf7ea6c"
                    }
                  }
                ]
              },
              {
                "id": "1aaec903-a415-4577-93af-dcdebceab54c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75ce3cad-7010-48c9-969a-136fd57b3d34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "60f69989-5910-4ab8-8304-e29ea114491e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2929fc1-3529-4d47-9642-6394cdd57065",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65439aaa-0e6e-4daf-8c3b-58397341bfe5"
                    }
                  }
                ]
              },
              {
                "id": "1dae5e1a-7b2c-415f-be17-33eb5991336a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d0b945c-5da9-42d3-aed8-a80b2a441492",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "022036b2-3c9c-480d-ad57-0dbfff908a4e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94021fea-c514-4ce1-ad39-96ee9932675c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1ba7fc43-2412-416f-922b-aff5f1df1dd6"
                    }
                  }
                ]
              },
              {
                "id": "d5071b32-4259-4cd4-badc-166cf88ba1ec",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6df5b20c-f7f2-4441-8827-79b520941357",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "864a7c11-7df5-4fa9-a454-ba97c43549d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "497f4ce7-724e-4812-a7f2-b65fe1426f81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4825049a-dd9f-498d-b467-c52b2e5fa5d0"
                    }
                  }
                ]
              },
              {
                "id": "96653b7b-bfe9-4dcc-aed7-3e85f487d0d8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c4e3114-ea66-4d4e-b9e0-fa305d6b49ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7628b07d-fbcd-4ca6-9191-a0bacf85d0c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "133577c7-c072-4f0b-93dd-6a0c5792a6a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8466dd7f-f317-4d4a-9aef-a2eb7f94ec1d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a2d6294-5543-42d4-901c-cd0c5be86775",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbbb9457-3554-43ed-a13d-d736d09ac2fe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "26ef59ac-10aa-45e6-ae60-637d2c062caa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6e5de769-e994-467d-aa42-95a218f5aef0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a6f1c7e-e9ec-4d61-bffd-e2c1f596a3f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e9873b8a-d43c-4edc-96f8-cbbacbcfd0ed"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4ac5e49a-4c4d-43a3-96a5-7f1dbf718d13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4fb574f5-fa87-46f6-a07a-586e7e00f92a"
            }
          }
        ]
      },
      {
        "id": "86359eed-e08b-4b13-97da-41860fa9f215",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "bb06940b-9b10-4123-9b30-d888b4b8edb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb0a32ed-c19e-4598-93c3-d85b2e09913e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "baa7c1d4-87a8-4220-9c3e-decdb9e556ed",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e429ed-4760-4cf4-9d14-e5a0b936f989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28310373-d5a1-495a-bbd6-e0adc0120c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bb1178-b68e-4ee7-a867-2fa2f6b9797e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c2d931-a2ce-487d-8df7-d2dc68f2ea82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3240396b-34fc-49fa-9ee9-8d8bc08e9433",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "055974f2-e070-447d-9dcd-0191f03bc00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8729f7d-b201-4591-98d0-4c108173cbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aff88c1-5404-4c97-ab4c-07e22b59a47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dba3f4b7-2834-4ebc-9035-66c506fb6033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c67a06-03e3-4951-8f0f-bdb8a2fc335b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206613ac-7965-4ffd-8733-85f846436c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95979e6e-56a0-4221-87d4-0917ae1e4f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40727f91-155c-44f9-a80a-430da6f22b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "673a8fba-d6bb-4538-93e7-3c3c9cdca083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeea8507-6ff7-416f-8cae-ee46536ce905",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "debb878e-e35a-4b7e-bc31-ec747231a988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10d562da-c518-4781-9381-53e322ba4679"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc73370e-9341-4675-bb03-492ed48b4e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0f04961-2047-449b-a428-d7ff6ab4f49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74e9497e-d2d2-4fa3-96bc-c82a3f1744ef",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f9be0b-2802-4990-a0f3-a023abf88324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc9550e-27ae-4072-95cf-4ceb63bdb5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2218c280-d01e-4ce5-a984-65e3b5b822fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb9e4da-7aca-45c0-815a-deb219d7efcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421a72b2-6c84-4df4-8f87-c5aad3db7c6f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0abf98-8785-468f-92b3-c6f85c68d454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb4610be-5058-46e9-b068-9e7558429800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c11eba-2786-4369-9e10-81bb7badb625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8711dd46-be76-4b16-8206-092a15eb79ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14ca254-3dc8-432c-93ca-6884bf4f18ca",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbe6023e-1aab-456b-96a1-a6ee773e0ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4c59af-5411-47d0-938d-54dcb68a34d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7a415e-94f7-47c5-b479-7646c5d43b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa94a363-55c1-4750-bb86-5c36fddf03f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddfa01ac-1051-4fcf-9c6b-6e0fcc21704b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6359eecd-f11e-4da5-b4d0-d8888d30240d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886b7e12-0fb0-4bcb-9832-9d887f66e18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5023496b-405e-4a47-8ddf-c80f4aa63553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc62ae18-1ae0-4869-9e05-7a400e250bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520565c6-4bef-4535-b536-41beb2a1b25e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01292401-9798-42f5-bd21-eafe6b00933a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e2291cc-5677-4ff7-bd90-6d741721acd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feefddf5-8182-48d0-a8ff-b8bd7aa9bb82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f7e391e-3494-453b-803f-77403ad51cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da54e96-1f6c-4203-95a2-816cfad87604",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "666a0fd6-ef9b-469c-95ef-ee9db6a1f75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "776cba02-d3a8-4d34-9358-47782ffdab64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56865585-29b2-471d-880d-58ed78d38354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e85f7ed-a126-49f8-9a66-8641ddb0e403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd0332d-72db-4668-8c53-26fd424cc8a9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ad3c6c-3a8c-4676-96bf-128880de7fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ecb5fb5-eeb9-46ef-ae2a-2a67575bfb63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b2642f-38c9-4f8a-8424-e838e89c9de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "89110957-f36f-4fec-a67b-053163a3da38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c462779c-1e5e-4be3-8a5f-3c0813b0e18c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ea8532-5598-487c-b153-cd59868c6f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c825fc69-5878-42a4-81d3-bcc0b2399e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1779ac81-1e7b-4320-a048-2bde870456fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a31031-8e1b-4a5e-b719-460bb876b58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85792920-bb7a-4b01-b86c-96e99a4df373",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8719a254-5818-4e9e-9a97-1eed2af9610c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcaf100b-b40c-4aa1-a68a-ce0b9811895b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c93341-8f1e-45d6-b9e5-cee1f9f08d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "691ce308-06f0-414f-b709-c839b7e9cd38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d541a8db-0ec4-490e-9558-344d7e1814ac",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2aa0702-73e0-4032-abf6-d1b1b85e33b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73af8437-ed42-4362-b623-2c4fcee86fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bf977c4-bba2-4eef-a462-bd517f286b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd63e25-4bec-422b-8d53-56967078b50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb736042-014f-481f-9b75-8c313bf2ef84",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595647a1-00cd-46db-bc24-3af15b92e66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c58e997-c2ea-40f8-9588-937cab700d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486040b4-9c4e-459a-80f2-50df50622054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d23f668-48f2-4d5c-9139-4add40ab8827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2594b13b-da43-4a17-a1e6-9c0f2b3c58d8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309d6235-47d8-4f90-89cb-bfa3705849ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc79195f-f948-4072-b2bd-3ac4300a0768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3a690e-abc8-4bcd-b9df-d88aefc37662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fde131f1-0592-4ca0-ba95-b1281ed68f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3566b103-da1c-466d-bdfc-a466aa21f78a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff5d42d-349a-4b98-af85-155986062a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830d8a95-9137-4d0a-927d-179b2fd7347b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1896fdbb-dda8-4837-8b36-b8a51bb16e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "511e6dc8-e6c8-4713-9a33-d7f007232596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a43845-4c93-4373-a86a-36b6f150afd1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f454b18-7813-4f8c-9bd4-1b9e43304190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d867d2-2be3-452a-85ba-04c2112e86cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de1b610-ba06-4ea9-99e4-be58d4ebf60d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f3fa962-791e-4168-a4d2-f1ff2f61124b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dad4c89-32fe-4070-9f04-10fb60a9e9a2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251ccbbd-39b3-470b-999e-40a5bc6f8c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2a5822e-bd12-40d6-b1cd-cea08fae94e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349c82ee-57e8-465c-9c93-22e71c8e1f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "704d3540-0765-4bed-bc44-9e27b3c9be35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2be31d7-6995-4e69-91ab-f66fe5d47375",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0902ec-4468-4689-b68f-04dcb3cace39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810f0003-598f-4c24-95cf-99fe99f8c398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13dbfc3-4758-4300-a16d-c3716100c094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccb45608-1227-4352-aa2e-1aadf01f55a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6552038-c1df-43f6-92a8-df5d5ed442ed",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cf480b-b43b-4c0b-819a-07af0bbe4b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c334eff0-5cdd-477f-9634-ece9c9e3b9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8145002-7fb1-4ad1-9e41-8b28d55c4d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1508bff0-6425-418f-82b9-47a5d5640506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162ccccf-66b3-4d5b-9da1-03c6c5c07816",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8573b2e-54e6-4371-82f3-ffbe74edc790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5704cd2b-4948-43f8-a0d2-3d6dc037caf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43519b3e-1765-4d2a-a9c0-07fe972644b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca0d94e9-66ab-4e3c-be9c-30ae68a71727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe18c87-9738-4fbb-93ed-dece50ec1a31",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a7f77a5-a5bd-4a55-8271-0fb03ed24f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3417f8ad-91e5-4d80-a597-5bb2a0be29fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5a7781-0fec-4a0f-8fb3-a193a002e195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa98177-3961-46cb-8bb9-45d76509dba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ae5003-fe00-475b-9612-93cf00db59a8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12888505-71bf-4fc5-9f58-cb33b002b449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3156d803-8060-4e08-a985-f320c5e0d83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17df78c3-bb54-47dd-b7b8-672a9584b068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "380eb7d4-f91b-4abd-b0d4-240e5a17fb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61c6a2d-72fd-400a-9ee1-345a57570ea6",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc34040f-ae3e-427a-9b99-96bced46d334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c47289-13be-4591-b335-08380c0e2905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5845f3f5-48fe-45ba-a8f8-0e127a5b03f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4476f8c0-0bea-40b8-b249-fa9fae44229f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ba9f0d-22cb-4947-a9d0-6e47a78e3b29",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b34263-420b-4a20-ae86-74a895f45f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ef7d0d-02c1-496c-b2b5-5c0f1a0c77ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93da3b1f-6ab2-4a75-96cc-d624b3eb936c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33cd730b-697f-42fb-b241-46428ef10a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4a8310-4bab-419a-8bf5-1ff247375908",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6d5180-97bc-4e5b-83a4-589d29aa5b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "558bff6c-dab5-498d-b6a0-0010f735990f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf50bde-e9a1-4c43-afaa-69e8fe0a434c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6a338b7-f31e-4991-8fca-5c0c6b568678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a7b37b-3761-4c28-a40c-bb9ef18b2ad9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac13557-92d4-44ce-a4d9-7d2d32c50abd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ef2440-3e3f-4663-be7e-f5c5b3069ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2075d543-8ffc-451a-b682-5f5ecf494b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b123d1-d887-4eb7-8592-fd3295d2687d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff091f3b-459d-4060-a1c4-9bf650f4a3e7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3809e70e-e7f6-4e42-8506-8bc2d5172a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "363da212-39bf-4631-a4a7-08104c9e893e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4a0247-9e2d-4f87-9c9d-4264b58cc34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8d39e5-8d4c-415f-ab6e-e66e802f5705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00446e8-5326-40bf-8aeb-9ae81df1ba7d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5996b9e2-18c6-4822-949c-574cdf17e478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f8119a-195f-4c99-86ca-92af1858c042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63cdfb97-1b24-4d98-91d1-750e65f559ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fba33eb-8489-45fa-b489-3ea1e29e8b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e04ea4-c569-435f-9c4e-842a619dda74",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7123456d-940b-4856-9aad-8f017fed4616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05938d0e-b53d-422b-a873-82abf98de041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e46dfd7-98c6-4781-aee1-41e3f7791d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90ec6c4f-9123-4781-8b6a-b3018bd57eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d29e1f1-31cf-4250-a126-020c38fe70e7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053d1217-4d86-40db-a471-57662296e275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf3dc6e-ce46-4ecb-99de-a6323a8f34ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4e1925-204f-4362-8e5c-1f1690def462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e19921d3-364d-488b-88fe-280e221475a5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45b9422a-610a-4968-aec1-e4ad6b415735",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "849ab9ee-6c7c-4da2-a86b-8dd618196c35",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc86eea-1b5a-4bab-8cd5-6512e76d0f39",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "be287378-d356-4a4f-b608-c1e7e41da080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "530aeca1-ca9b-4811-b31a-829c80c88a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c972aee-8df1-4391-8d89-8b179b380c23"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45a0aaaa-974b-4b9b-9490-0751cfcd9eaa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a82b7b4-711e-4a60-b349-2e77e7b60099"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6cf4fd6-b92e-47b6-a20b-1807e4aa76e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a0a49ed-f66b-43e6-9554-aaa3da1cc0a0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "193bcfa7-50e7-4dde-8506-d97a708a17e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "817958c5-456e-4b61-bc55-8d8746f15581"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f147c0d4-f058-49e8-b8e1-3fc002b8eb4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f344069a-a0f6-41e4-b5b8-e4ca30551070"
            }
          }
        ]
      },
      {
        "id": "698c4573-2a59-4805-a14b-c346d2c17b91",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "efeb3a73-14ce-48b3-b118-4e7cff9724cf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4126e4e9-adb7-4ef8-b066-351e3fede440",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "be0cc9a8-dc5b-47f8-aded-b2a7d149394f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b098b393-b166-440a-b9fe-52e1855aae20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df2b683-f438-4782-a006-0fed65d31987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb30986-cca2-4106-a564-9f6811226090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "833720fd-8b98-44b9-8c16-a813de0de05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9f1c67-8080-4d2e-8dd1-e0dd35512195",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afd8fd6-4c08-41ce-b299-72955893cb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db9716e2-d994-40ec-bf9d-693e2ea23c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d19bf34-47b7-4079-8dfa-19feffe3d8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c6946e-8c36-42e7-ae16-ba98187b5071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74de7a8f-3145-467f-8765-480f991c3df2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2da49c-5e3b-476b-8688-53078c4fea67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f524ab-3b2c-421a-ad1a-949bb4fd4cab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4041d401-b551-4965-b85b-411116f71603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cc7055-c1c9-4b75-bcc4-938b30b4a7c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4484cea-f646-418b-9bdd-49f82cc0892c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "646eca6f-b3b7-491a-bba3-9a459793b6ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3eab19-78e4-49f0-8039-c736ce75a3fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7eb1d62-36d1-48b7-b42f-8550989c34ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b97b9dc-2943-4c03-b611-6229f41233e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647394ee-0d9c-419f-a154-d4fa45f8e17e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44723d17-8fa2-43af-be51-c0c3fd07c90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8e8825-3d32-44e7-ace1-763e4bdecbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b77ef7-e1a7-47c4-b2e1-2fcef9a375fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "918a882b-c951-4500-90dd-5405bc3d07c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d53313-526d-4865-b5fe-fde4f5341387",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9190db94-76d0-40f6-a34f-c9a92025d4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b2ad15f-05a5-411c-8e62-5c6f1c33143a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66e2e95f-4ca1-451a-a64f-6e291c5be059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd806da-e36f-4eba-bc3c-32b9f655bbaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcaa807-3ebd-46a7-82f4-4edd5594f3b1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f9ff8a-0078-49e0-be57-faedf06b3660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3de8f3a-8147-44b0-8390-fed9703c8a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a916a2-1d56-4b04-9cd3-a32a67306a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "19e5fbd7-e74d-45f4-8c36-3a0c6234c7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf73edf-c558-4df0-9bc5-596ca2543304",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3f5fb7-1ddf-4eef-a2dc-56eecdc36a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72225c40-2f3f-43ad-8530-b513fc911705"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604c8ba1-350a-4462-89de-bd0192e0d881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5b60629-f298-458c-8534-870bd1b9a089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acd3568-a8e6-4774-8b6b-6e7b4f985100",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8104e72a-9529-44b7-b123-15263e3d2817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f8475e-b522-4f80-a219-692556bcf980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844deac2-1476-4874-84a7-9c3dfdc7de84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9005197f-3934-4006-bdb7-7593674f4374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8aadbb-c45a-4407-8c9b-f16029b7cd45",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249e32b7-10d4-4e24-b16a-e20242baedb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89ad758-100b-483c-aded-4439f1f1cca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b1186f-2461-4faa-b327-26757d0db7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b675ae35-6350-4d9b-a46b-b764508074a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6267b095-7723-4e7c-8527-acd7eda79994",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f620910-51e4-4cfc-b731-48b28b5e499e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc521235-970f-4e4f-a617-f3b90ddd7250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b2faf3-7c06-41a1-ba71-b7521cfcc310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "794285cc-dc87-475f-adde-2894b1601dbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a565bec-ab0d-4b58-96f5-2fac22c9afba",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a7bcb1-7274-4ed7-a277-618ac1ac0f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f75cec8-9156-48e4-946e-493b939add89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f381ba0c-dfea-463c-b89e-6f9e1e4d3abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5cb8b0-7581-4d36-8d94-1f69e616f486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f47f5f-e43f-4ebb-ba55-d27ff3f696dc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6018320-9be0-49ba-9216-30d3fc596cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9af257-81ef-4a23-8347-7c9dcb86e1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045ee37a-1d57-4809-8a53-f45703359cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "767bcb34-8b87-461d-96ba-9b9d54c8401a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2c3791-da06-4e3e-a704-d2da8559fae1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3750f11c-9afb-42a3-833a-7f881eb0b0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01eeea17-d7d3-45d3-85b8-5ec852c1427d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0228a4fa-61cf-444e-acdb-b20d3c274633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "09eb7fdd-b838-4945-b82e-559c782bd1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1ef922-9c6a-4d24-9aae-0962ba2ef760",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfdf4d4-ae61-4993-bc1f-6412de065856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0806d83-b786-4ac1-9523-3161aa279ab7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ad2d1e-b50e-47e5-9de6-88db5b43875d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "73132837-4eb3-4b01-ba11-d1a1c59b3e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1213ff6-ee60-4a24-a999-97ccea6e94d9",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403ebf1e-e37d-40fc-8844-dbdb6d6dc9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b230856c-fb24-4f8b-b494-68013dea3d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5edda31c-4742-485f-ab1b-4c1ea69ea104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc82e0f-5ea2-4995-9631-07ba7c6393eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "125fcc35-adb2-431f-a5df-de81810fdb23",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc423a7-f359-4949-a148-2cdb32270146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "092942f5-e661-4aab-b1b2-253637ab1d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15d89da-9df8-4a69-98c9-a9d8893f844d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d7be2f3-4b43-462a-af26-4f2da619548f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8fd5c4-6aaa-4108-8463-3b038b48d915",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d686f667-4576-4bee-888f-72bf41236ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526d1020-aa5e-4c85-b74e-6e84ff431d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3779d6fb-b07b-4664-b261-360c19afa8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "de03519f-88ad-40b9-83ef-f5b2ad3fec0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b3510ba-b2ff-44cd-bc14-a35b4e8728d2",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e83e8c-4db7-412d-bce2-3f1c62b68a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "544e3302-1d2b-4dc2-b15b-1c52c9efd71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf5f71c-317a-4135-b9ad-700f0a53248a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fff0e89-ffba-47e3-adb3-da7fd3b1f922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7638e132-f49e-4359-9fd8-757b5cf6575e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a87fd6-951f-4c4b-9dda-7c633af9d430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a7b0e3f-96e3-4faf-90a5-30e57a092008"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a761b84-97e1-4481-ba32-410293d36e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "098a2d1b-ec8b-4bc3-8b09-bb79a2580825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ea4428-e995-4b4a-a394-24ac4cf00ad7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d615f773-534e-4487-8150-0dd53e429346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd20dd9a-899b-4d81-a1a0-cd6e0d03b99f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93434436-c4cf-4990-b4e6-a3c309e2a71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "682bb56f-da43-439a-bb7d-a47ae8a08523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5672e83f-fd26-4108-a077-2b841b6d6f4b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444fe682-91fe-4746-a08b-b0b68e01bac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a878749-fa3a-4d8f-a70a-07d523f3083c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9453d784-3523-4e61-9551-2434a8d3b885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7383a37-de35-4a94-aeff-ec5676c250f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4652faf5-92ac-4afd-81ac-9b28ccd08b1e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f334c854-e909-4c7b-87ad-cab0d990d419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b5f456c-bbe2-4b96-8580-bda2a6edf040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28db9fe5-cee2-4365-81c2-b7e59fea1815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaade56b-5d67-4014-8def-e56817fa779a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e7986c-6603-4af9-bac5-c9440ebef317",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8a37a9-ba6f-4169-9476-76fdfec8e707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef38b39-36e8-4461-acb0-b13840fd3d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbd5d37-29c0-4cec-b8b7-012c73e8b6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1b5e27-1893-4ad3-a0dd-0a9ef7a3b9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c7072e-0db4-43df-b61c-44fc453e1ed2",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd156583-98fb-4de3-bcf8-d2e2a987373c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73b917c-0086-47d3-b147-1103822059e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d9e617-428b-4d65-857f-9aa9b58243b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0cf6e28-f7eb-4317-87b5-ac17882e0a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30bd44c-c3a5-46d5-9683-a54e1fa5faba",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a062e8-b6b5-40a9-9d0f-deb16724943d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2eb7d7-4939-4b04-9b4b-d1e85bb13528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b0b3a7-40ba-4788-8827-f5ffdffa16e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1347fdf3-4703-4ba4-bf3a-5bdc48936b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836bbb24-a56f-485c-a1c6-4dea4785304f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a348e0b-1644-4ff3-83ef-340d0bb6915d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98842ff-0867-4d21-a42b-a3d20c0a992c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65c0807-0630-44de-84c9-6d91fa57bdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bdedfc4-d069-4730-ab36-a120dc9be16b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2823ca-f476-4cd8-8687-1b9d01681b24",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d534cd-f74f-45f0-af31-92813a83a765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c411a35-46d3-4217-b5af-3bb86fcf9454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97d54fc-8f59-4e7d-b297-6059ad64f9dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "276268ae-cc0d-4e58-99aa-ecd5a7ff5246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4670985-9e8d-4f58-bb0a-9cbda1104003",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb5f565-d2aa-4f39-a4ba-4909e428ef2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c4099e7-e320-4832-bae5-413bd429c062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03376a5-66fc-4e49-96b1-67f0b1831a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1ff1e1c-877e-4190-94b6-753c584a61de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e885984-52f4-4b4b-988a-4af8939fe708",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b5ee645-4d51-44e2-b15f-e535f5133218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c85bace3-1975-4cf7-ad39-f6e75735caea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d857fd2-7fe4-4a26-a107-9e66c47747b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d208a1d-c4a6-49f7-8172-763e18bfacec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6688bff2-41bf-48d5-b78d-36c65f760135",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30e9f898-0f65-4b7d-bb46-ed8704ef95fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2d4552-b0d1-4d40-a90c-5bab968d17ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c988a7f9-6882-401d-aa48-889967f2b23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22eb6a86-8d81-4cbf-92fb-3103d11d79d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2767da-c3c5-4803-aea3-9b66e66e6fa9",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4a0ea9-3c44-40eb-80a9-7605c6a2ab2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec079fce-de52-46b9-96ab-493b33244d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de1f4c4-465e-4ef8-91e7-9dcd4a34d542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c924f5bb-af12-4b95-b498-a2f1b095eb15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e178033-2b88-4dff-8867-5da3131b4fdd",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734d979c-e962-4a19-860a-97154c9d1641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60210fcc-2f89-44b7-a6cd-54e598aa5b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3a8ff8-6837-4e94-bc23-f6577f79c584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd4f2975-55e3-4b63-8a99-85b0d42db158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5593ac-0d68-463f-a710-cf0ede13abe3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7054425d-f380-4d00-94fd-ba95f402fa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca62524-f9ea-4487-88a3-91617fec8eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e1e951-3cc9-468a-ae47-685c7facf44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "86879c4c-7570-4fdf-bf20-0621b26e696c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8141eff0-425a-4465-8194-7005458aa2a2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a24398-84d5-4220-9887-2235cf6b8347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60058164-87e8-4508-a844-3e349d70f0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a17a06-bfc4-4386-b495-3cbd48946908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7603dc-d3f5-43f8-b532-df726498b18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e0163b4-3caf-472d-82c4-7c259090c615",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ddbc26-e32d-4fb0-bdf7-579034404cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ef3d04-7049-42f0-b9ed-e16a32f9d0b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641dbaeb-dd35-4604-a3a8-aba1ba579516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0de85b8-8d3c-4c5d-9314-6eb88cb45999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5144d6d5-eea0-4fe9-9f5a-8b53129df051",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d563d8fd-44c4-4892-ac9e-9399c250a34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f08b9b-2c72-4601-8ed8-4b36d4f4b8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef9523a-efd3-490c-aeee-0675446e00c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6115aaf-01ef-4f13-88f4-f244032e864d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b7843af-935d-41d6-8081-cb20ef05d7fe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e20a0cb2-71fe-4f36-9d5c-df8adeb7300b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8575c812-226e-4ae5-8e6d-ca24548a4ecf",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a1668fe0-2199-4f29-b7b9-9ba756382168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb65660-0d4a-41ed-8feb-51cfb06667f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ebbecab3-40d4-4466-9cb1-0703b39fe8c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ceaaa95-75b0-4a90-b9bd-d14c483f624f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e96fe06-682c-45f9-a779-7e3f637175bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0d9d0cd-5402-4cf3-8d32-3bc60b5e9964",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a1cb714-5f0f-4759-b6dd-5c2fabe6d077"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15db6391-d109-40c9-992c-d7f4d11dd62f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "16fb383a-b731-4469-aabd-81ee6b6c063f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8bec1870-3389-40ac-b0ef-f4cc01aff66e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "12f914a3-008f-4e21-979f-c0f3555c2016"
            }
          }
        ]
      },
      {
        "id": "e8a77451-ea1f-426e-b53c-76583f2bf452",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "7b69956a-d55c-40c6-9ea4-f6789e619d9e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d652747d-f71c-4634-91a4-a6c0bd399429",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b42d8891-dab1-431a-b39a-696126656b00",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee579f3-aec4-4192-a92c-1d199dac98b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d05b87-6a4b-4ad9-a1ca-e500a866a7ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f568fd1-7190-4e24-b94f-d3614c87ed1c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0aa820-1658-4725-b14d-21577a4b19c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8506b5c-13b6-4e0e-b133-044147e3d1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daf5d6a-8d73-4fbd-88ee-ec3fcf8b4caa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e706ee-cafd-4ecb-8264-6425f5dd8065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98adb98-43df-469b-ada9-bee85ea7775d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840fb1e5-5525-458a-8c9b-3f37d17e82b0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10bb2e3b-2605-48fe-8c23-4836cdb57e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe2317c-2d1f-403d-a5f2-89b9fdc1d4d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ff7f21-7329-4876-8d59-4193880ce245",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c2a95c-6abb-4c40-96a1-530a55af17ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d62c6d-0bf6-40c7-9e31-2267484a2c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1be778-ca22-42d6-8fe0-6db6b3d4300e",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23acc751-68ac-4c98-b92c-926a353965ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503d455c-6fe5-4547-a56c-d941cc43f64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db564ed-4819-4ef7-b6bd-26829940beb2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3d6427-4feb-4eff-bb16-545647207650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f22baa-80bc-4158-ab6d-31dd11a49bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d92e333-7f39-4dfe-8cdb-5718f1256e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b5b9c4-34a2-4d5e-86a6-5b326e16a6fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e8fc9be-f077-4aaf-a95c-73789c03ed61",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313ea77c-5090-4517-92d6-7c12dc7aa719",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ca590ee-305f-42fa-8521-a42a4b286911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2c6b17c-f91c-4db9-8a05-5599637a2f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560379c9-afcd-4ef6-8f14-cb55c7817448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c260a951-0694-4af9-b18a-a3d14652391f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86868037-c843-4e8e-afda-8144a783680f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb1d79ee-8434-4ae1-b940-bf910e3c058b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8cf4654-55a6-4ecf-bf54-6a62b8fe1f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd76c56-5310-4b2b-943a-8e66ee8dfa17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1df6f67-3e42-414e-b3b5-766cbcc535de",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36329077-6e05-4c06-b042-53a4e18741ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "111a8aae-64cc-491c-9da3-0e9a06b5f386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20c9bc8-f08d-4790-9448-55666878a6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "621a9e0c-38bb-4b32-acfe-33e81416f8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f681fe5e-e48d-4484-87b2-ba59b9dad34e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48bdaf4-a60d-4555-9bdd-f49ab6aff843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf57093-2220-45e5-89a0-c2aa9b798787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d925d8-f876-4ad2-bef7-b48d3a663ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcda5ff5-2388-4f5f-ba04-aa4261d0a590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff982909-09ac-44d1-881e-3ea8ad7f0d09",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bafec51-aa96-4088-909a-fbe95f925aa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "907881ce-4fea-4326-985c-5c08c5ddad3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e2586b-a384-4d29-b3ef-479d242e624f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3c485a-4826-4645-9482-b4d9c1533dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2552db13-2bdb-49ee-b844-79c00cc17e21",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19cae42d-fca5-4a71-9eaa-58655ace3782",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5949cde8-5f23-4479-abde-a6d11a40d03b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e7cfbb-e486-443f-9d7e-b2ad0ef8a0ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4032878-e45e-4f02-8e4f-fc428ef99a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4a4e24-ad77-470b-a0f5-1c44bbf33623",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7f0d89-b88e-4f19-8509-241f4a547ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7e3b3d5-47c3-494c-8537-a6ef15d4b8bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b207f268-3564-4b24-b32a-35850dcbe035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62116ca6-df45-417a-984a-0db39085c61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cac3ce-cd7b-450a-b9c2-59cdae0cb1d5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b525c55b-3112-4055-afda-39e4b36a6177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658ab3b6-9344-4a65-b397-9760cd6ee0d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "180d59e0-b1b2-4f28-9679-79b012e511f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9460086-a89c-41cd-80d0-a736cf823175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe30ca9d-eb94-46fc-995b-79fe70889009",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb57ab1-dc2b-4efa-aaa3-bc6edcaecb4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73cb1fb5-61c1-4b65-ba16-febb7c40cdaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f11adf-aa4c-4baa-b03d-4fbeee1a3ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46f9593-30f4-4191-b55f-69e065fc5437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc04f40-305b-40c7-a695-5cb4a8e69ca5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c075f258-903c-4276-bf14-d23fe5232b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d402d7f-f597-4d38-b30b-a381fb670eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28091b7f-9968-4c5d-a4fd-179fad3b91c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72562620-e37b-4532-ba6d-176b5aad603a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87873807-4318-4b9f-9bd4-29de02520903",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df68db55-0ce1-4276-9687-dc1beafa9a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76baf7bd-2526-4aec-8beb-03a4cc8347bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06f4eba-684d-43e7-8637-4b8a8908cd57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "069acd72-53e7-4803-8d61-0a3f14736f09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62c419e-36a4-4849-8948-78884b349b04",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f505055-6e58-4b07-9a4b-a0d45f1ec59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c3abd1-7e8d-4bc9-8b68-75777601e688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca3f126-f3fe-4765-8826-555dbeb54240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c57183f-ba23-44f9-a238-2aa1e30ea475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece9da13-9298-4ffc-b06a-5017ff23acd7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf0136e-eb5e-4037-abbd-475846dff518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5028c8f6-ddb7-4382-a509-23eea7c18993"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e32be8-4296-4bb5-a28f-007c9e65a44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7fae11-34e5-4e52-9a4e-a678e592ab91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a41cc4d-f1e2-4660-93dd-176d0aa15384",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3f39f4-d380-4bc7-a6d3-d0d9b898d146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873511d4-4122-4f1c-bc9c-309f217e59b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a1d0e4-0e48-4ab4-923b-171154ae8ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6856d180-6dac-4da2-9c60-f09428ccdf83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6ee3ce-9fc6-4a79-ab42-6ac827130061",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "629a7cb8-9bfb-4c3f-abea-03a7f3a6c7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbb1490-da17-4aa5-bbc4-98794368d0ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd18b61a-eef9-4772-826d-637a0111875e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7278f79-81b4-42a7-a431-0e5494d4b021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfee003b-b137-42b8-a326-29c4ab851ab1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba914d1-679c-420b-9480-0ed2ab252f96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c66daf07-226d-4ba2-a0a0-e735bcdd192b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9fa3964-7ae9-4a67-ab92-0d1ec79614bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e51d59b8-5c0b-4dc4-80b3-05f19e8f3348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b231e3a-d3da-4186-82fd-74c1b44c1635",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737ac81b-1adc-49b5-852d-b871cfd827f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab059638-ef60-43e4-9ea5-341a25e909f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42d0822-4e62-4ed8-a58b-99f2aa2fd6ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f2ea1b-5207-4ca1-9cc8-2d1909a6f0bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989dd96e-1ed4-4bc5-b720-7a9b1f47b271",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91599b8-da38-43e9-9b8d-ce93ae82974b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f9aed77-16d1-4a14-a357-fdaeb7f00679"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea2011bb-3d3a-483b-ba9d-0099fe31e0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df9f8cfe-d882-4a7a-ab12-56047ceb3aa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34142d5-d495-4387-8b78-da6e76c95abd",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11898d50-0a25-4be1-a206-98109f3fed4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac5d6ffe-5718-4b23-91af-4259d2d07281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976dd286-40be-49c7-a0e0-2fef8c7bc199",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbcdf520-4cb6-4eac-9ff0-bfe5567f601d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e767bd2a-9be1-4df9-880d-55431f191ab3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a63cbc9-939d-4827-8cc8-15d32ba00a7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6663b96-26ad-48cd-85d7-4e59a02242dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0f30d5-9f23-4c62-984f-953b8e2f2baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6f6cab-6747-4310-a2bf-f19960c2d598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d15d0ba-9fbe-4eaa-bbe4-ec991a98a76e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cff7907-acdc-4dd7-9ab2-771d1552e6ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9953c276-4573-4fcc-950f-59d3e6e8bae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c66643-532d-45dd-a22a-5ecce5b0ed11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466e9d6a-34f7-43d1-847a-65d3fdf568af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480de6c6-052d-48f1-936f-a1f8632d604d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c45ed8bd-b923-4783-ae4b-97bba4c2276b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ccb9924f-28af-49a1-873c-10a3b2a6e6bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb64437-91f0-4379-989d-616a042ed389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ecd9f9-a5a6-40a0-b25f-c57b232f0465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8df97f8-48dc-4bc2-bdbf-46f97e83b2e1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37a8932b-0a64-48bc-8df2-378602aca6f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd593d5c-cdb3-4131-ad8b-6ab46764f32f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12f0001-c1cd-4415-9219-3090a160aa73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88b1540-44a3-4657-aac7-a2df33c0c4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21533eb6-30d6-4202-bfcf-b6fd811bb0a4",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f45c50-840a-4cd0-bf39-26379b4b774e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9fefe96-8c65-45d7-ac51-449375e65d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14436dd-3c78-490f-9406-13e98958ef16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52017bfb-f5c7-4001-a15e-b6db3102844d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b49a27-af63-45a4-b4ee-20d6ea57ede4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740ccd9b-3d87-4066-bb96-1bbaa485f50f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e46dc54-94bf-458b-b136-7cd383d98cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc8ecb7-0fa0-494f-89da-56143bb493f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860283df-2289-41e6-b14a-536239338a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85fcec10-6abe-4f4b-bd4b-84a7df275cad",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c073ee38-09ce-484f-a879-964d4f75ff14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36255e3c-2f08-4e6d-9f2e-f5c07c96ea98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "378eca4c-2754-45eb-a1c8-de792a106912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff6c57f-d2a1-499b-832e-e92ce89ff129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783195bd-bb19-43b3-b86c-c54ff78bad10",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9771d2-2828-4869-bdf6-e15a1e5ca8da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "835ef99a-2faa-473a-a8a5-f50eafab5934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999e176f-0cd8-4fe2-a615-52719cf4530c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe444443-a35f-4347-8dba-4c21acb8ee28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a5b662-7dc4-4258-9c2f-7068bbd712d8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e2c0ed-110f-4597-ad90-6f4f48c1876c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c31314b-3c69-447f-8d92-6c556f65e1f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5421c07d-cf11-4954-a1c0-110d906f720e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9907c45-476e-445a-b016-2cfe42a2859d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1476f7-b0e4-46d8-8648-e0b2ff51be58",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54cef1f-9ac3-4849-b255-b35588edf4ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9cfcfa-6134-4dd1-8f60-a561e7d70453"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73805bb-978d-4b4f-badc-761c3250bb70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9669da12-5fef-4174-a5be-f8651708cfe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6904619-1b4d-49b0-a6f7-65cd4504b6ac",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644f4ece-4716-4a4c-b345-11802aec7e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724f502e-e4af-439f-aca8-a72518059f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9849ec-cb69-43e6-8e8a-ceca41856b2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d756e363-cdd2-42cf-96fa-de6030c8a342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2b8186-dd02-49cd-9ded-7af3f780ba92",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01efc314-1caf-4d1c-b139-b0e3e7b511d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd41055-2645-482f-bd95-9644decdfcb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c712248-1498-486e-abea-bdc0a67583f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d47ea2d9-3be5-49b6-a052-f1194e72f513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f904d74-7053-4a53-9dd3-f01b5a2eff6d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d20a1a-a252-419a-9b01-ece10c48511f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd20269-540f-4f0e-b576-d046536d01de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f6ff9a-8461-48cc-aade-4472dd129e06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60941849-37e1-4ec2-b648-739954de02c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77005134-2779-4117-8d2c-15c28b689aee",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2f3b55-1859-4694-98a7-6bef08eef124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07b7e68-e3f6-461c-afa7-38b4805fc3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9445f475-7da5-4bcc-b40a-586b693ed5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7d1323-2013-4db6-bf3e-2f894e850696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43980bc8-8bb5-4c23-a6b0-1285ffbceaff",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463397b4-a324-432a-bb3d-e6d34bd21133",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc736e4-8676-4a6e-a7a9-e4b9f06d7ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec69b731-8cea-42e0-b09d-91cec1c3c259",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532eb740-a51d-46ca-9cad-7c7babb8bdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f9bcd1-c62b-4069-b1ba-84afd5ec2553",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d710e66a-1065-4de0-8db4-536253df0389",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b39f29d-0244-4e7d-bea1-6c3c25d70366"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dfe1c1b-0282-4a01-80bc-14a5077d2cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54850a76-6219-4dcf-bf48-4fce1dd6bbad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581ece54-d83c-4d41-afbd-8b2a3b0608f2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97082d13-5ccc-4393-b96d-95a2a486217c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48f0388b-2092-48fc-b393-a67233a44458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b0e162-4f6d-44bb-b389-739bf22472cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dab2abb-706c-4fbb-878b-df189564054f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "693f8ed6-9ba3-44c8-83ff-cc2410e4dbd3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0787b7c6-e9cd-4642-b8ea-b158848a32e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802f118e-b71f-45d3-808b-d4c16ee5c707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2038f411-e770-406d-ac4e-08853584e983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d76578b4-86af-46ae-90d7-0fb190c1e039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac5fcda-ebb4-41d1-a511-e31177aeb95d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c62a624-c422-4789-a0f4-6d257fae84d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a2ed07-3878-43e5-a9cb-25e1ccb920a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f61bb52-b62e-4a31-bdbc-439a56f857be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4ed764-5bbf-4066-ae86-031a17359319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4a289b-a861-4302-94f7-5abe4883037c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23a8e36-adf8-48d9-a852-024a2837547c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9eb40d-1154-4430-a7ec-64fbf3de660c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8c7b39-3dd9-4955-92f4-0c75a3e2b84c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a6e9faf-4775-4d1e-98c5-71cc0f6cfdcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393fb5d3-360f-4f70-89fb-4883072f5af4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c54f804-3eb2-4cee-88ce-5eb09289e922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed9d60a-1ac6-462c-86d1-5e32f327d3a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f07761-0301-4ff8-80f5-354feac4f66a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641ef285-0b84-4107-816c-1821000b8adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65de8f0-ed93-4bc1-8087-b58d03207f4f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab35c4f-8061-4759-a381-95f7424168ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612d7105-75ac-4ab6-9cea-262ef6bcea5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f288527d-189f-472a-bbc1-d81920b16ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652e6dc9-c8b0-4b4d-a44c-e7a57dcbb103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5034ed-8eee-4d79-a7ee-eac986e7bc6c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a276da-2456-49f9-9a4f-503ff028110a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab550a0-0cbc-4ef0-ac2a-e3d2e37654bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd254c4-8059-46c4-8979-f65e5d0f053e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e088987-675d-4303-b5b1-9903a9f026a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca37808-4dc4-4f40-8389-eee1dda5411f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87712589-5fb9-4990-a742-b4b648912bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59ea6b0c-4a7d-406b-b580-c26b7f670126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55584357-a811-41cf-8614-33e3738a7a77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4f875f-5ada-435f-81b3-22f9e03b9deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d365024-71a8-474d-8b8d-e85c7305db86",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c905806-0cf7-42b4-9620-c4fb15af69fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9969a3ad-33e3-4afb-ab01-1ce150935d31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce70b092-625b-4ee0-a142-c08ee771a870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b417af-1403-4898-bd66-3d0e2c0495c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fad3a6-97f6-46eb-ace6-bc6ea089dae6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16041db2-ebca-4563-9def-30d9eec794e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c846d6-04a1-4488-be44-f55aa61a7518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa1fb13-7082-43d8-8e82-dad2e5a48da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e226c6d2-e12d-458a-b507-9a94eac8cccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26efabdc-6bb7-4c6d-b0ef-e3208fc4452a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54138c38-cd43-4674-b098-949230ddbbb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af28099a-5b76-44f5-be25-171deb20e221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a225d23-7c46-4976-a058-7dc175cc6004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7085133-5192-4d81-9ea6-1ee99a2b5cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b4e02b-0824-4140-a99e-15e9f30cba04",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e88c67-ae0c-4943-903b-366f4355cbcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd61fde-c712-4479-a573-379af28d8fb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7919c32-dfaf-448a-a5ae-8528327c8fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36670a06-81ad-47d2-b4d0-bdd764ff9896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b34238c-d65d-4e47-9172-99e72575e2e7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5a4270-bb46-4e7f-a9bb-629c891f1df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3384c2bb-8669-4983-94bc-548d75d76d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ab0587-8efe-4130-97b6-bd70f942c2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62926780-55d5-47f4-be54-ba06e685c39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2e3cf8-a5a8-4bf6-b35f-f662afa6a90e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11544cec-112c-4ef3-a0b6-54bb2fb8c650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532d0123-054c-4300-86b0-badc4ed61a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72dbe80e-840e-40da-86a4-9d895330e184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d146ca13-d9dd-4781-801d-741cb248b74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0436b9fc-68fa-46e6-af4b-e2121041607f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc23af1-2429-46ed-a954-0c1a9c231b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc28824a-649e-4318-91da-19ee148dfd3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2669c2f6-5cb2-4793-b1ef-fcaef67d798f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed80e82-ed1c-48d9-98fe-d6236bc6304e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bb0e57-ddef-453e-b25c-7838779d5d80",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5918901e-7b62-4572-ad95-e75971fa95f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5cb2eff-f492-4422-86bb-5025b6bc41b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89289775-22ee-4515-8eb4-8a79ba4b4cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee7c3ef-7b18-4ca0-9782-83d68f235573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "963d050c-8763-418e-a323-c93f2be373fd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178b7285-b4f7-4816-9a90-58e10e5f234e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab6de95-84ce-4d28-9f66-e1429e74886b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5bc345-8c3b-4e7a-bfea-611d0d7c897d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a236e21-2b6a-4f9c-b2c3-9ebd6dea57ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07710296-73c7-4771-b421-e9e6a5390d90",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e739e9-270c-40b6-9851-ee9c8ef07c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a7d5f4c-1879-4efd-8fd6-6737268ac3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38687c8b-4e61-4612-8ee0-52a12caae42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9066834c-962d-4204-86b6-8fdafe91b627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6e88d6c-80c3-4b8e-90c2-7326d3de8627",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd55fa9-ed2b-4727-b271-aea957046ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f14daa0-668a-4883-a6d8-e1fb252db70c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0022e68c-bc11-4f04-b56a-6b694fc289b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa6290b-30a5-4dc4-99a6-05080d47d50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12d6a12a-8922-4838-90be-b02f675af90d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c523944-e994-409c-95db-091590528c98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3153f96e-5fb8-4aa2-ad55-d86d32033be2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6ae166-fd03-4553-a8cb-23af2b6b1e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "792da473-7ed7-4c6a-9e03-c43d796bcebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080fda98-8194-4354-8256-80206a24f96e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51901b07-12be-4861-928c-5ac844f4d519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecf0cef-25ce-4d67-a5ea-940af94d64c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d8f8dde-aed8-41ef-8045-00b1e4bd56da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73a7234d-5d70-4fd8-8c0d-9467186c9421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "342be9a2-e1b2-48a0-88f5-0e47580e2b27",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a37ba36-1468-4805-b61a-82f55716fb38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e1ab12a-ed74-4683-a48d-3d6e90320c0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37757ec-a357-4bb9-8ab7-78ca53d3f7c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c71fe7a-b27f-4284-927d-d4b52f672678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfc55eb-f994-46a8-8fed-b8eb9e823125",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a75744dc-135a-490e-a82a-8027352bdc67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b275e5d3-fa6f-4f24-8d44-9a17864223ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ad9fcb-0158-46ac-b539-08aeb8771967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15c6ae12-7636-4045-85b8-299e54587b8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d397048-fef3-4265-9b84-fed4a0d4a8a6",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e15b249-e44a-4461-be64-8e3ebc704b2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb56b724-4e1d-4082-bd15-c2bee9a293b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b9cde7-e167-44fa-ac5b-4422504cecc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa5bcac-5ab7-43ef-8326-d31c44e43e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a15fc9d-caf5-4c60-a38d-77fb9eadd0ff",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a80a9b-5a82-421d-b7ba-958747b11d39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dc2f717-ef66-4766-9a31-0e2fd18331d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7add40-664e-4483-8854-40bdbca8d349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd60585-4572-4d1e-9982-869940042504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da93ac0-e865-4ec4-8778-393ea65ee563",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e0c974-bb63-4d58-8b4d-137e28ae7594",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b65a08e4-195b-475a-a728-a6228b3e2177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373ad2b2-a3c9-4641-97ce-9bb9c03497af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c7609d-4dcf-448e-823a-8cc9548db7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cf6271-0c39-47ef-a81c-d9682058a177",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711f4cda-b821-47bd-a89d-bb1c86381bd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b914b2-20a3-4157-b363-cdb06582b041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5074212e-cc19-4a68-9a1c-5191206b9a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c7bcdc-b5ff-4f8d-a615-916973f586a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186725a6-4302-4367-8024-db136e20df36",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db6ef0f-436c-491e-9ff3-8232cfcbe555",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ee6d11a-118a-479f-a185-e43e78fb3293"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e88261bb-1c0c-4eb4-a022-a352271bfe01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75efe13-bb08-4bb0-979f-896fe9040791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b751bd1d-9a63-4dad-880e-89a0bc7ba213",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff65ea2-61f2-46f9-84f4-f251cfd83571",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84c0d4ef-cb9e-447f-91ad-d5e20bdc3135"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e478f6d9-c5de-4d0e-9766-89890a29e9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8947c179-4130-4854-a212-5eaf34336f46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e55dbb9-0e3e-43be-91f4-2495bc7e3b7b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e0e65fa-00ff-406e-aee8-6f07dec8872e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c54824-c6d4-4881-8ca8-59a85f1d4584"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5fe800-ead1-4ccf-9d18-906cc44cdb12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe040a2-e12e-4bb6-99c5-b6ad3b091252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a120f4a9-c01c-409b-94e1-9815eceaaa4d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "624f7926-f897-43cd-8a93-372e25901769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a9b97c-e65e-483b-8973-c5fde4cfab82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcb4a3c5-ae6c-45bd-b2c3-8419e8c4b204",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1f371fb-3ce0-437c-a9ca-0486ae145142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19fa28c-c70d-43cd-b14f-c1bedd3fa415",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dd3a65-3718-42d9-a65f-add87f23dec3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8cc6975-b25e-4223-be07-a155314da0b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b963968-800e-4600-ace3-5f299946050e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62b1f69-84b1-47c8-84fb-90377afac47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f16ed28-5980-47fa-81fa-6a05ccf8c486",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734b9763-f263-456b-9522-48ad50555362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cac3312-4fac-4eb5-af18-26de7d90ff7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87320fff-e6b9-4238-b740-02d231f7017a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ad536b-6aae-482d-b0f5-3fe1493558f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ca76c3-ee36-4bc1-8576-b4a7c489fa9e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955c6acc-8c48-4f89-8a91-342aadf1f3e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb025a67-a0a6-47b2-abf1-920464ced9cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a147f2d-e846-419e-8d1c-4cf3e5183480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22566219-51f3-4543-9104-fd51bc8943e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c78dc09-1251-4220-8f6c-9ca3b755bf90",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45bece1-f410-4910-92cc-4bac8afbe0ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "398e4e6a-8f6c-4d96-a915-3306cdc187d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "946893dc-3e97-483f-9e13-08086880efff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8189f018-fcb3-4cfe-a9f3-498542e529b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9fe3be-008e-421e-bab3-6be9f59cbf2c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c7a35d-5f68-499f-aa71-bf0ffe967ca3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d472968-ca87-4dcf-80cf-6aef87e81b5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5567cbc-3b9d-4b48-bf87-c7a5140bd723",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e12ae8-32d9-45ba-9de1-956208dad11d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5927b581-2dbd-4d6b-8d98-39034dbab02b",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61e05d7-37bc-4ac6-98b2-7f9ffeccba8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c514be-3bec-4e09-aadb-834c78ddd6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68a91cc-df09-4560-84ec-650f3af32f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38ba2eec-e90e-472d-8cde-c55b6f2062f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f18a8d9-95bb-4735-b7a9-375f6acb5ce8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac66460-7a16-42eb-99a8-3f80ae459507",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f2c08be-2fec-4e20-b158-fbf9c1261736"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2b9bb6-efb4-4182-a443-8261b4a2fe9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f89c82a2-dc0d-4184-851c-e53178bd2b69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187102e0-5119-4d14-9cc8-06caa2f8024c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f069b909-d06f-4a6f-bc71-5c816cda267a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f57cfbd5-1f95-40a4-a627-d5114b6fa3f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d7fefa-877d-4268-b354-2885a47f8c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54cc372-2018-4f02-9983-3fb23e3f84a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f242db05-ee35-4ede-bc35-796461ea924d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17939011-e6d8-4d60-9548-66ce57e2d09b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8584cb6-6134-4d97-bdd4-efc1033982b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d7b6ee-1405-4cd7-b4ae-3d85f0f0a334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284767b6-950a-42d1-992c-9e235e64c548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f97423-b297-4d09-8c42-6c6caa34a617",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9e927f-fce4-4e75-98fd-d7137a18605c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddf84854-f484-4ccf-9837-b25680fc0a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3920eb2-1bbb-4005-b7d5-c7fcadf94881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8855b6a9-c54c-4229-99d9-d7885f085415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3a6a17-d93c-4b13-8335-d36adcd445b1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51569fe2-dd5b-4f76-8fd2-0e9a6ed0a570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "993bc66b-a616-4bbe-a0c8-d073cf853f8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d0209b-13a5-44da-b273-25085592a79d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d169faaf-39f6-43de-aba7-88aa707f6411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b264aa7d-776a-47ab-8cb1-9404d45b3527",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b79d27-b1fa-4915-aca5-94ab85163d80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b859847a-8cce-4069-b9cd-d18dd6d8838f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7a78bb-0b49-49b7-8a91-6f75deda51ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d819e221-bb0c-4b6d-bc74-8b20e066c5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14566175-3a96-4a26-8efb-61ed431b3240",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38081ce7-2453-4c21-9c24-308dcb40b377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43f200c3-f66b-4fc1-8074-30b2e969fbd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647e4ab7-cf82-437a-818e-ac8b854ef949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de2f1e67-6f8a-4079-af2b-1ccf94081c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6e6d03-9418-48c2-b610-55c2fa499950",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab837a7d-4d5c-4f7e-b309-af280389b4ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18a7460c-8bc0-44c5-b850-c5a80eada820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d3d89e-c774-4ae2-a9f4-88231f8365f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401eefdc-6f77-4730-a55c-dab640d85782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62771bc5-8c0b-482e-ab2e-35d274e38761",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47d6fb38-4cad-42ae-98e1-d888adffea9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ce2ce1-1c47-4151-8f16-b40c79edd931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bccdd9e-5d77-4236-834e-a0dcd393079c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a24bab6-7fd7-4d26-83c9-434cd506f4e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d0739b0-006a-490f-86d2-325630df2206",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0038936-8e68-43a9-94fe-a9afbaf085ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b186f231-b0c4-420d-b05e-53e960a9d508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0109b20-d6eb-40e5-8a5d-cb1310f6f708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83c10647-dd79-416b-a542-96f3f14d9fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e3cefc-b70c-4067-9de0-a886f3ddd8ce",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552ceeac-4a2d-4bfc-bed0-08188032dd19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a63e0d9-05c2-418a-8bd7-fb70f713c69b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0fba64-1d16-4ac2-b486-1ecd7f1f6b8e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61cbe91c-925d-416f-a624-8cbc7512742d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b6791f-f4ee-424c-ba4a-6596872dea51",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e326e51c-9dea-4c0e-9215-d9cf1c425a4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fd404e2-45b6-4d77-8f62-827b31b6d46a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15866504-ffc5-4edb-9f5e-9093bb02bd28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50529bcf-cda5-49ee-b314-b4968be69727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5e2119-90c9-4ee1-9783-7ff33d5d7be0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8689a660-fa79-4add-8a5c-aea03d2cc9b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58710578-bfea-44db-b042-0c3bd2c7d448"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17821562-aef1-4856-b052-8a85e06899ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6118c15b-6287-4460-8662-ae63f6ca84ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777a9fc8-1749-4425-a256-0fae3a9ac299",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68552696-0c43-4bdf-a89f-fe4e4e79b009",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f53097e-86f8-4f80-9cbb-1fc225b37bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9b1838-21ba-49cc-8e99-ae841709ee8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb658072-d008-4548-844b-d825542f5f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1504950f-0f06-4aef-97b6-b72ac5a384db",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5849250c-465f-4016-ad15-9f216da56ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c97ae7f3-f8fb-4fb6-af6b-2bcab286ee5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3865e82-e973-448d-94d9-1538aff9fd06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b26a031-8171-4f35-92c6-3e426ff737de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56e3456-2a88-488d-a3c7-7e50d39bd9c1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a33da1-e90a-4b8f-bb89-7a35e7bd77c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e8ee9f-a795-47f7-97fe-d9f2c62a2518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2aa503-380b-422d-bded-e066ccff4e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7f93d9-2ea5-435b-a9ae-6171c7cc40fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55bbffe7-2228-4b06-a579-2acaae199009",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b4172a-9ba8-42a9-802c-a608c202afbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b17c619-a624-44ab-a00e-f752b4144f72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c7f189-7221-4102-8288-b456d3e34a61",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f6b242-6810-48d7-b18f-1c7e862b965a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4600e5e2-6ee4-4f04-b688-c9ab692ad278",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9952e766-6f86-4d20-af9b-5917f00e0e78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85ebc765-658c-456c-9ac3-36be70cb25a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e274b4f-58c7-4f0e-8929-e243d19a4f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45313088-125f-4b71-bb7c-1971f57b1474"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9702d1d-f5c1-49c0-8798-1f13c7b03a74",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b280402-3502-4ef8-9c09-f1b26c8bc0d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c25ac9ca-0336-4ad8-a90e-9af223a427f8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87508bdf-2471-47be-b188-6547324ac31f"
                    }
                  }
                ]
              },
              {
                "id": "df96d2b1-c3b8-4ff6-8e00-b94ba99a8266",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6bf32c47-ac9b-4107-b744-20a81916765d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d24eab-d453-4b63-8894-661b2eb885e5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "63a84bff-2e12-4d0a-a88b-7dc15523eba4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41da8876-0abd-4ad6-8e8d-dd518cdd9520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2aa910d-31df-43a0-9118-93db2c3c450c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1ed4f7a-86b0-403e-be17-5af2ca3ea03c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d283bee-f67a-41e5-9d59-6591b56f5810"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07f12342-e9bb-402e-9fce-e58b510c95bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "823a28a9-a9e2-4e69-8ba7-f4238201d886"
                    }
                  }
                ]
              },
              {
                "id": "17782f6a-2f0f-4a33-8369-443cf2c624bf",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e4f930d1-3ce8-4d24-ab66-f616503482a4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7024c391-9862-490d-9289-d062b63b293f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6a2ce41c-1657-40b9-a39e-813203837f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f463c3b7-6d2d-4f61-b3a2-69e6d848ec21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bcb2140-6304-46e1-be5d-198536372aae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2afa817b-3abf-40d6-bb21-6caee1878bc9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "08b5e829-318d-4ba5-8c33-5c465853ec9d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ec93f3e-576f-4da1-85e1-d08b227988b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d1a0113b-3c98-4a21-8aff-ea40ffac788f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ef98b36-6967-42ca-b97f-899a5f9af82c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dff1bd1f-aa10-40f7-9ae0-a37242a4cce7"
                    }
                  }
                ]
              },
              {
                "id": "80cc75cf-9a92-4557-aa67-eb52518a9e00",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4e5e5b4-4a3f-464a-b3ce-afdad41938e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "094b3144-f095-49ec-be92-557547313107"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45acec18-f718-4ff6-ba23-e97a88b1b6ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "166fae88-b479-47f2-9df3-7adaca9bc51b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2d4fa49-5222-4ec1-95a4-31e3d7c6ed60",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "392cb9c7-e257-4c22-a9df-bddef0595b39"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89dd6216-cdf1-4c5e-bb49-dfd2906e1fae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0667b430-b291-4b75-933c-7a19444da6a4"
            }
          }
        ]
      },
      {
        "id": "d298dd7a-a389-4fc1-81cf-5be83394c191",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "c5208bda-a818-4cb6-8c89-e5e6349f9078",
            "name": "Negative Testing",
            "item": [
              {
                "id": "538a59e5-98eb-4ca6-b448-6b7ed701c4ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94db980d-64a6-4160-8f9c-36f9691a2093",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75809e9-38d2-4bcf-8f15-1e88fc667d6d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "64c1f095-23a3-4c7c-9ea1-e38e84ba3e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c19fd8-e911-47e3-afba-4a15b5f2ce6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d9399904-8207-4d85-9b33-02298362375f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fde11fec-91de-4165-bb3f-1b3fa515959e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "56d29c4d-1f8c-4b82-ad6b-8e6a3d792637"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "86ff08d3-76c8-4f76-a218-c3dcc25a7dfa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb643cd8-0a50-4c8d-93dd-f739f3e41f44"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "949209f6-0343-47c9-85e1-aecad54a4743",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c93d63ff-7471-4107-a18e-334a59222e2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "382cb36f-2f3a-42d8-bbeb-072a0d5ab486",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ee2abdef-d958-4834-a8af-78fd6f9b8d1b"
            }
          }
        ]
      },
      {
        "id": "1c70bcbb-3303-456b-96c3-a45714310d33",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "63af0eea-058f-4840-a576-4cefeab93ff4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e841805d-fe39-4dbb-bf20-b06ff4292ccb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "685b93bc-85fb-4a60-9ae7-80c392c2a2f2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68076807-016f-4a1d-92a8-76d1752ee435",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12dac65b-0c98-47fe-b6a1-79118fd840bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "137b4a5f-c991-44a8-a64d-659c839ffec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "09e1c475-21c8-4b6e-93dc-9c47e988e030"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "890612af-be7f-4001-9dda-70ee72f33801",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e5e6285-e687-4a57-a978-bed33ca6c5a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33d255eb-2954-4286-9983-79e120a3c404",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1dfd67a-fb93-47f3-9709-1f42ffe75974"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34490836-7395-4ca4-8e53-2bc8e3cfcaed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8ce99cc8-df9c-4189-8de5-302b0f407685"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "762ebef9-9d10-4edd-a78a-3aa15a8a6810",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6985bb9c-1513-4922-bc7c-f8b5931acabf"
            }
          }
        ]
      },
      {
        "id": "3492af89-90a6-4c8b-ae34-a45baac7fe97",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "9c1403b8-3f7a-4879-9a77-2c529324ed46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c21a2c51-1257-4593-b0c2-dfcd74e87368",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11ae5fec-a8de-4047-9293-a000cd244995",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c63662e-06bd-4728-955e-48aa794765fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f18dd54-c915-4c1d-b132-a2091a0d686e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0228aaf-3db3-42f6-b7e2-f368944838bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5486d3a7-97db-452d-9071-44670b6a1872"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62fd8f44-3edd-4fa0-a97c-283924ce6b97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1acae674-66e4-4690-913f-ddcd7ce86b92"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10cbe792-1024-4422-90b7-e6804db6ee38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef4aee97-1071-416c-b655-d50423cd371d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c78764d5-8e3c-432f-b7e1-956baf72c8e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28a69e50-6ce4-4eb2-8fc7-682ef665a059"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b49c9fa-42f7-4864-a57a-f72c5dc357e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b01fb5c3-f79c-4254-9d1d-489036988ccf"
            }
          }
        ]
      },
      {
        "id": "6aa6ff86-84d0-430e-90b1-bd7cd74559d5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea2e20f7-6643-422e-8818-f43a8512e7a5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6d1e768-1017-47b4-8b51-6dc1c6a43ddc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3df478c0-c820-44b2-98d0-98e8ded4bee4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19240bd6-06b6-4751-b966-129f1e978a52",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b817eadf-1140-4d0e-971e-dc2fc54f08df",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.4491228070175435,
      "responseMin": 2,
      "responseMax": 438,
      "responseSd": 29.60052822434692,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706229265127,
      "completed": 1706229276226
    },
    "executions": [
      {
        "id": "946fb24a-6e69-4312-91ef-2b5a359722d7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "8f49eb56-3dc1-40fb-a71f-f30330d0aa33",
          "httpRequestId": "4e877e7f-a170-4a60-8c06-60f095250f46"
        },
        "item": {
          "id": "946fb24a-6e69-4312-91ef-2b5a359722d7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e3220a0c-9394-4a4a-ae24-84ed16f950d2",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "e22b23d8-5f88-4987-8a0b-778652a79e81",
        "cursor": {
          "ref": "87f80104-5870-4ab4-ab46-ec449fd3c514",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "41210344-ccc7-40b0-a7c2-bfd5efb52b42"
        },
        "item": {
          "id": "e22b23d8-5f88-4987-8a0b-778652a79e81",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "65f64f37-6d99-4720-8398-dba5ea307680",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "32718047-4a9e-4d47-971d-0adfb22b2ffa",
        "cursor": {
          "ref": "a4a7cf1a-6586-4577-8a61-148b3b462eb4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ac5b5673-7688-47ac-8e61-47287a9791df"
        },
        "item": {
          "id": "32718047-4a9e-4d47-971d-0adfb22b2ffa",
          "name": "did_json"
        },
        "response": {
          "id": "0bfbeb18-2099-4743-97f1-017022b56f99",
          "status": "OK",
          "code": 200,
          "responseTime": 144,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defb7673-fc21-4ee3-9a80-3a4fdbb7a6e9",
        "cursor": {
          "ref": "ce59650b-69e4-403d-bf83-63bccd4b0995",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "98a95360-4cf9-4652-b074-15c7ce4bbd4c"
        },
        "item": {
          "id": "defb7673-fc21-4ee3-9a80-3a4fdbb7a6e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "99851df8-eb9d-482e-a260-ebd6c62ce8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defb7673-fc21-4ee3-9a80-3a4fdbb7a6e9",
        "cursor": {
          "ref": "ce59650b-69e4-403d-bf83-63bccd4b0995",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "98a95360-4cf9-4652-b074-15c7ce4bbd4c"
        },
        "item": {
          "id": "defb7673-fc21-4ee3-9a80-3a4fdbb7a6e9",
          "name": "did:invalid"
        },
        "response": {
          "id": "99851df8-eb9d-482e-a260-ebd6c62ce8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca83e0e6-0a93-4e21-a677-55916f92fae1",
        "cursor": {
          "ref": "19f6b642-2ee5-46e6-84c9-29b12c807417",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2912b1f2-3266-4d67-be98-ba4991715d64"
        },
        "item": {
          "id": "ca83e0e6-0a93-4e21-a677-55916f92fae1",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bc601ba4-d008-4434-a28a-1b8a7d0156c0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fe893f-c1f2-421f-9251-9f551a1d6fd3",
        "cursor": {
          "ref": "6378f309-8e4b-4fb7-b892-b6f2be94c97c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "468e043d-974a-439f-9a79-2eb09aef3eb7"
        },
        "item": {
          "id": "62fe893f-c1f2-421f-9251-9f551a1d6fd3",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c726d018-3329-4b26-979e-47b3c74ac280",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f5ec657-7caf-4432-a64e-1084bda409f9",
        "cursor": {
          "ref": "57fe5d70-0110-4902-ac89-15057f65f711",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b2bd0e6d-50d2-40e2-b8b8-f583818413e1"
        },
        "item": {
          "id": "4f5ec657-7caf-4432-a64e-1084bda409f9",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2cc1e4d0-d06e-409d-9713-2b8463f7723d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23242d36-595c-4d67-ab63-2c74b3d8e9e9",
        "cursor": {
          "ref": "dd877672-f9bc-400a-b4a5-c2ffe038da9d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "231d6d4b-bf78-4461-b676-8b270c206149"
        },
        "item": {
          "id": "23242d36-595c-4d67-ab63-2c74b3d8e9e9",
          "name": "identifiers"
        },
        "response": {
          "id": "1c6eb919-dd24-42a5-a05d-f9c5aae9fcb5",
          "status": "OK",
          "code": 200,
          "responseTime": 60,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e90f22b-32bc-4f64-b47f-d08295662592",
        "cursor": {
          "ref": "96cbdaaa-306a-4928-b6e9-914eb5084327",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b524788f-3b32-432b-8e76-360db2d8059a"
        },
        "item": {
          "id": "4e90f22b-32bc-4f64-b47f-d08295662592",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1a2f67ec-254f-4613-a35e-82b0e90d0572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e8134f-0393-4e87-ab29-ccc771f6262c",
        "cursor": {
          "ref": "b35c26a6-da99-413d-bad8-9daf59dbb81c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1019c496-8e2a-4777-a303-3e2488f4c3fa"
        },
        "item": {
          "id": "e6e8134f-0393-4e87-ab29-ccc771f6262c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "28fb4727-3814-4b62-b4bb-ede954d75868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b05277f0-9d04-44c7-8029-2d1ac7b792a9",
        "cursor": {
          "ref": "8ff1bb1a-55bc-43e8-a6a9-bf3140b03f0e",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "72e16f88-aefa-436b-ae87-33c0d0409fa0"
        },
        "item": {
          "id": "b05277f0-9d04-44c7-8029-2d1ac7b792a9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4409e77f-3be0-4c33-a71d-a79246f4b4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae4183f8-4152-4707-8dbb-53b49cc5e2e9",
        "cursor": {
          "ref": "af3fcf1e-54fd-419d-9a11-4ea47abd4b6c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "fce15ff0-cfb8-4ec0-92d4-908fdff0bf9c"
        },
        "item": {
          "id": "ae4183f8-4152-4707-8dbb-53b49cc5e2e9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c939b092-3cbd-46d1-ad2d-d6414221b9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f06a66-5404-45de-a1a1-01fb33f3dd9f",
        "cursor": {
          "ref": "d48e083a-2332-4f02-bc21-17f6d909fedd",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "78380c56-0d71-4f70-89c5-32b45c8df183"
        },
        "item": {
          "id": "a1f06a66-5404-45de-a1a1-01fb33f3dd9f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "bec456d1-c309-4390-b91b-802b2b538bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f2b77a-c58f-404a-bc9d-b6387ddc97e1",
        "cursor": {
          "ref": "06572a10-d0f4-4072-842d-3b546a241b41",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2427bfbe-11bb-4872-a766-2bc22b1e6a1e"
        },
        "item": {
          "id": "54f2b77a-c58f-404a-bc9d-b6387ddc97e1",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bf604387-f1b5-4bde-a383-621312ee46db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a66691-c790-42db-bb3b-8639c72c133d",
        "cursor": {
          "ref": "47ef045b-0dbb-453b-8124-bdbd20e941cd",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "996e0a6b-089a-4b2f-8ba6-14d17420cc5d"
        },
        "item": {
          "id": "69a66691-c790-42db-bb3b-8639c72c133d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "21bc604a-56e7-490d-90a3-8ebed362da72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2af391-27a8-465c-9129-1ceb388f7700",
        "cursor": {
          "ref": "31db4cd0-67fb-48be-be05-6ce386ba4c66",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "029d512c-65b2-44a6-91ad-27cc5e1965c0"
        },
        "item": {
          "id": "8d2af391-27a8-465c-9129-1ceb388f7700",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "26a0d7ef-2a3d-405d-90e0-5944476afc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07ff10a-985d-4ada-9789-f0956348187d",
        "cursor": {
          "ref": "49130abe-f80d-482c-a475-95d5e2aa2b05",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8f0bf0ec-206d-42d1-8367-d8a129eee69b"
        },
        "item": {
          "id": "e07ff10a-985d-4ada-9789-f0956348187d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9f06b0ec-e631-4566-a693-b7eeeda56921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e267332-9b98-4eb0-8a51-5d7647d36dbd",
        "cursor": {
          "ref": "ac9c8f1f-532a-42a0-afff-48b45b1c4a87",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "782ffdcb-1294-4941-ba86-4a14d2035355"
        },
        "item": {
          "id": "3e267332-9b98-4eb0-8a51-5d7647d36dbd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a89fa0e8-39e0-4ca1-8f27-04bc8503e894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b5ad7a-4ba8-4dee-9f3e-1440b9ba53b2",
        "cursor": {
          "ref": "81c8481f-a3da-4b3f-ad01-189c1536da5c",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "be761650-f418-4fbe-8316-3c9396b43d03"
        },
        "item": {
          "id": "21b5ad7a-4ba8-4dee-9f3e-1440b9ba53b2",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "190324dc-a1fe-47b7-abf1-0f9d5d0e2fea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66632852-d0f4-4d29-97d2-49bbbc29f767",
        "cursor": {
          "ref": "ffa1defa-8e2d-4952-a6f8-81758cfdf5fa",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f5df9950-4a10-4922-b96e-1e08131118b7"
        },
        "item": {
          "id": "66632852-d0f4-4d29-97d2-49bbbc29f767",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9dc9af5c-ffa2-45d4-ba25-841e881ebf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7732fa-eba2-4ad6-86f0-e7778800ecb0",
        "cursor": {
          "ref": "243d11f2-349f-4b88-90e0-f7993b3cbc95",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "0af78a81-b50d-4eb1-8672-d69097793895"
        },
        "item": {
          "id": "db7732fa-eba2-4ad6-86f0-e7778800ecb0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "53d39eef-07a7-493a-bbe5-9b906e01b202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba360c7d-fb87-415f-a177-a253227655a8",
        "cursor": {
          "ref": "31b2642c-b94d-41ae-ab10-4ce800d7a51a",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ebd46a23-e3ec-4c61-a1bc-526de13db03c"
        },
        "item": {
          "id": "ba360c7d-fb87-415f-a177-a253227655a8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1c02d241-71db-44bf-b155-942778f58327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32226986-a9dc-495d-98e4-92f9610bbbf8",
        "cursor": {
          "ref": "076da0b2-2487-4fec-a752-2e56de4852ff",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b5158757-4dd3-4354-885f-e85a1262d367"
        },
        "item": {
          "id": "32226986-a9dc-495d-98e4-92f9610bbbf8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a916d0c2-c8e1-45de-b660-a77193ac34ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae17fd23-f080-48cc-8b8b-e6ff3f8e9cbb",
        "cursor": {
          "ref": "6d185562-1f5c-4dfe-aef4-441da9dbc9eb",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2a04b5e5-da6e-49a4-ae66-3ad54b158bec"
        },
        "item": {
          "id": "ae17fd23-f080-48cc-8b8b-e6ff3f8e9cbb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "8290288a-d75e-424c-91ef-01b2c389998b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf6ca0d-bbeb-47b8-b45e-201a36cb44e8",
        "cursor": {
          "ref": "fe36c765-597e-4616-95f8-f575abc24cff",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4d1da448-26e4-4375-a4e3-e257260399a6"
        },
        "item": {
          "id": "faf6ca0d-bbeb-47b8-b45e-201a36cb44e8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "88c3c902-9891-4b3e-b0e9-789778f5c5f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bc674b-3348-41fd-81b0-7c4fda6ff849",
        "cursor": {
          "ref": "840ec77c-f9b8-4758-bb75-9662a21d9e69",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d3b1a957-e981-4ee6-910d-7b1ee7f1b56d"
        },
        "item": {
          "id": "e0bc674b-3348-41fd-81b0-7c4fda6ff849",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0368ef00-6b2f-40f2-9ac2-56c0b002a859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b61635-b704-4e86-acc9-03f15c6bddd0",
        "cursor": {
          "ref": "819d5a6e-50b8-4b39-8c36-281749512305",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "95c81599-d433-4dee-8f53-f503e3c995f3"
        },
        "item": {
          "id": "b0b61635-b704-4e86-acc9-03f15c6bddd0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f6b55ea2-76fa-4689-92eb-3d3d4b65d55d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b20f7a-7e80-4c72-a41a-64cfa0d1a136",
        "cursor": {
          "ref": "f2b0f7eb-b472-4fec-bee3-5ed8e628d548",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8ef7be3a-89cc-4661-8c25-fe9195d8b084"
        },
        "item": {
          "id": "e8b20f7a-7e80-4c72-a41a-64cfa0d1a136",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ceb63c60-c5d0-4200-8479-05a466ddfb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eff8873-cba2-4280-a048-ffbfb90de3ac",
        "cursor": {
          "ref": "8cbc2ab2-0673-45d8-b341-5467d3eff3f2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9d265833-6c8e-4b7f-8fc5-c9c88630389b"
        },
        "item": {
          "id": "0eff8873-cba2-4280-a048-ffbfb90de3ac",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7b99fee5-7e5c-45ea-8167-6035a114a403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e457b216-9373-4bd1-8712-a6f68ddeaf8f",
        "cursor": {
          "ref": "4638af98-93bf-448a-947c-7488231d3299",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "00423271-4982-4dcd-874d-25b031214df7"
        },
        "item": {
          "id": "e457b216-9373-4bd1-8712-a6f68ddeaf8f",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a9424dc3-a4e4-40ea-bbd8-15b9a6306fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecdcd1e-d45c-4315-846a-ae542e149584",
        "cursor": {
          "ref": "1cb47978-1ff8-4e3b-8fb5-80f0c27d9354",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "557b34cc-93d7-47c9-85c2-cc8521aae87e"
        },
        "item": {
          "id": "fecdcd1e-d45c-4315-846a-ae542e149584",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "3a569091-16ff-434f-8c8a-55e5f51593e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ecbab4-71c1-4867-8951-0e0295668195",
        "cursor": {
          "ref": "a3eee052-9790-44f4-bcd3-9e1fe62beac0",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "7c676928-db39-475a-bf20-7ca368a82eb8"
        },
        "item": {
          "id": "00ecbab4-71c1-4867-8951-0e0295668195",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c0041a65-e62e-4683-9867-ab19b56fad6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184fa1d8-4502-478b-8323-a533bddfcc00",
        "cursor": {
          "ref": "cc380d9a-ad45-4b40-a242-037e80a220c3",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7754c6f6-94ac-4d3f-95db-15d5bd4d5a2d"
        },
        "item": {
          "id": "184fa1d8-4502-478b-8323-a533bddfcc00",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "96c5f4cd-85b7-4ddd-a317-c165e9f62ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2fa667-13ec-4776-86cd-947624ea349a",
        "cursor": {
          "ref": "73084dfc-6691-4505-87a5-56d133a7b412",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ef926293-c366-458d-9cbc-00e93ca00a09"
        },
        "item": {
          "id": "ba2fa667-13ec-4776-86cd-947624ea349a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "afa25ef1-9716-4ddb-b72e-0b2cb1424965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d691f7-da69-4704-8da1-9d5823f1308e",
        "cursor": {
          "ref": "d30278f1-b085-4283-a95c-f81f96c2bbba",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "6b40a7bc-8380-4a5f-ac96-67654bd3e41e"
        },
        "item": {
          "id": "81d691f7-da69-4704-8da1-9d5823f1308e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c540c6f0-fb3f-4486-9e9c-b3b9f692d153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc8a94d-84ea-4f23-aa28-612977d57de9",
        "cursor": {
          "ref": "5ddedd17-3016-477c-abcf-0a1f5cf15950",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3491fe99-c473-426d-9ed2-49b81f086de3"
        },
        "item": {
          "id": "9bc8a94d-84ea-4f23-aa28-612977d57de9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "13ec2076-fd28-4160-9de5-cbec0da81af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1259f2a2-fa2b-41ea-a727-79c7c3a3d7cd",
        "cursor": {
          "ref": "05b14d52-4f44-4bc4-96c2-253b307975a4",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a83a57b1-81ec-4d2d-8d2d-a0bd15be64a1"
        },
        "item": {
          "id": "1259f2a2-fa2b-41ea-a727-79c7c3a3d7cd",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "81b1e12e-d80a-4e68-90d6-a35b90535cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd606e9-8c4e-4f53-8010-7df81c5647ff",
        "cursor": {
          "ref": "42fcf098-bac1-4312-9ee0-20d91ca5d3a6",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "59da3bfb-999f-4466-a04e-006061ec1d43"
        },
        "item": {
          "id": "1fd606e9-8c4e-4f53-8010-7df81c5647ff",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b2a5668c-1f37-4d30-a758-0d1181c07e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b072897a-720f-406f-8c84-b10c7059d0a6",
        "cursor": {
          "ref": "7fb22833-5379-4036-b9b5-20e9e56f652f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8a885633-ed2e-45da-942c-ca9715111900"
        },
        "item": {
          "id": "b072897a-720f-406f-8c84-b10c7059d0a6",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "65d233f2-7651-4d0d-af39-70ff29911639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51ef1af-a8ed-4d4d-9385-e317e07f2efe",
        "cursor": {
          "ref": "bc4cbfc5-3edd-4792-bbdc-1181dbfa87a2",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8e2194d5-a881-4668-bc90-ecab2736f4ac"
        },
        "item": {
          "id": "c51ef1af-a8ed-4d4d-9385-e317e07f2efe",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d01bb21c-5cb9-4ae7-b33f-63470098232f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481bea66-7ef0-4e47-adce-638deb2f7bf0",
        "cursor": {
          "ref": "ccaee663-2fed-4b2e-b3e3-b3698941311a",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d070db64-88c8-44a6-a045-360b65a22c4f"
        },
        "item": {
          "id": "481bea66-7ef0-4e47-adce-638deb2f7bf0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "23e5451b-f69c-425b-a361-03f7ecc1c209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3954ed2-9227-4e18-8451-21e99f1cb26d",
        "cursor": {
          "ref": "a33d1067-a25f-4cec-af7e-52f362194fe8",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "57bd9746-0b01-4b45-943a-cc1a689cd517"
        },
        "item": {
          "id": "d3954ed2-9227-4e18-8451-21e99f1cb26d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ea89401d-899d-4b70-80ab-3adb4eb3953d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b7d4f0-b472-454d-bb64-a6278240f80c",
        "cursor": {
          "ref": "76824de5-10ad-4395-b763-0dcec64accb0",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "90521996-1458-4152-82c9-6487529df21b"
        },
        "item": {
          "id": "69b7d4f0-b472-454d-bb64-a6278240f80c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "01ccb624-7877-48b0-93d9-83e466e68cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b4c18a-3015-496e-a4f9-7ef93c6accea",
        "cursor": {
          "ref": "984cf06e-183b-43a5-a154-8f00352c84dd",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9a75af48-570f-4244-bc90-e1f2e1275c3a"
        },
        "item": {
          "id": "90b4c18a-3015-496e-a4f9-7ef93c6accea",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1877b11b-e3e8-416f-8e4e-07419866d22e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6551ee-a698-49cd-8467-f2de143f745a",
        "cursor": {
          "ref": "2ff20b12-732f-481d-a30c-3045b4e255a6",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "91335988-1ff5-4e7d-8710-5f3968ba56c8"
        },
        "item": {
          "id": "0b6551ee-a698-49cd-8467-f2de143f745a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a83ea1e8-12aa-4897-af80-4dd5d15c729e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1386fd95-2d2d-44eb-9f64-3a55f7d3c78e",
        "cursor": {
          "ref": "f35cdbc8-6553-43be-9f1e-571e5d404dda",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c170ef87-b43a-48d9-b200-ae1c07d79989"
        },
        "item": {
          "id": "1386fd95-2d2d-44eb-9f64-3a55f7d3c78e",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bd0758a2-78d2-4d86-a4cb-161c31e718e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b88933-2742-4cdf-90fc-19676efef988",
        "cursor": {
          "ref": "f890f9b0-ff12-4c18-ada5-4204041dc079",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2259dd56-55b5-4791-8439-150951ea0d26"
        },
        "item": {
          "id": "97b88933-2742-4cdf-90fc-19676efef988",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d8c0b1b3-0e1d-45b2-99a7-7d9fe6ea9a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8976fa11-682c-4146-b459-77e1ea782e12",
        "cursor": {
          "ref": "5d02e7aa-0673-4e09-b39e-3b22ffb9706e",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4d9c19f4-3f71-44b9-92a6-bbfde31edb00"
        },
        "item": {
          "id": "8976fa11-682c-4146-b459-77e1ea782e12",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f4ea7a10-30e4-4b16-8518-b93eb6dfca68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8132b90-53fe-4d63-8807-8c2f33384383",
        "cursor": {
          "ref": "8526530b-36b7-4627-9123-3335c73410a2",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b3f1f1b3-6f78-45a4-994a-4960b6da2412"
        },
        "item": {
          "id": "f8132b90-53fe-4d63-8807-8c2f33384383",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "7ac88539-7abc-4f37-8d36-d2d9f1b7c0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a647a776-d82a-4546-a208-94ef6eac4c16",
        "cursor": {
          "ref": "933aa724-303a-418f-8387-377409759253",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "031a74fc-763f-4018-9690-241581d853d4"
        },
        "item": {
          "id": "a647a776-d82a-4546-a208-94ef6eac4c16",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cfad7978-93e2-4a0b-9a77-4334f246f6ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a4691a-d997-4c08-875c-6d79e6a192d6",
        "cursor": {
          "ref": "e6a3686e-3c92-4465-8904-086988cc326c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "56d10b3c-fd90-4727-8335-88e082822b3a"
        },
        "item": {
          "id": "41a4691a-d997-4c08-875c-6d79e6a192d6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8bac8048-4492-4c76-b1ae-9703feca9b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c8e2e8-f624-41ad-a20e-1746bff7c94f",
        "cursor": {
          "ref": "d5f229d7-3cfb-4fdb-9a50-b7851be7df4b",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "614d41b6-9e0b-4515-bceb-7a9f2c310659"
        },
        "item": {
          "id": "85c8e2e8-f624-41ad-a20e-1746bff7c94f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "19148b11-cb3b-4ace-bb0d-de6c72f97369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de449b56-eaed-484a-83d2-87556b4624da",
        "cursor": {
          "ref": "edb7021c-839e-4d03-8764-389ab315d9c8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "7af251fb-392d-4e6f-a4a8-dbe660be9a5e"
        },
        "item": {
          "id": "de449b56-eaed-484a-83d2-87556b4624da",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "e5b62b8f-4679-4802-86f9-b9707f6a6999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419a3afb-818b-47b7-a0a1-b47c2d6ecada",
        "cursor": {
          "ref": "ae78aff5-c89c-402a-8064-05709e3b8db9",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a3314273-9d37-4b11-a837-8dca1bfa54d5"
        },
        "item": {
          "id": "419a3afb-818b-47b7-a0a1-b47c2d6ecada",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4933e12d-caa1-40fd-ba39-a09f7d8081cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b602d460-0fad-40ae-b495-7ff019a1622b",
        "cursor": {
          "ref": "688d8ffc-88de-4a7c-8576-6b68b119a99b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "660d9900-a58c-4b98-a5f4-1dd37cae0509"
        },
        "item": {
          "id": "b602d460-0fad-40ae-b495-7ff019a1622b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "06193a97-83a7-4a5c-a130-d6f3bb9a2c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e8837e-de1e-4383-82b8-8a600ddb6adb",
        "cursor": {
          "ref": "3b7a1350-75af-44c8-bc02-9b9533ae0edc",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "929e5383-ea20-45a4-9d18-ebd4671e3c36"
        },
        "item": {
          "id": "e7e8837e-de1e-4383-82b8-8a600ddb6adb",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f0bbedad-9d1f-4501-903c-0b330a14c527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f77ac63-a737-40f3-b9ea-bcddf38ab1b2",
        "cursor": {
          "ref": "1f7db3d3-e092-428f-9e3f-37ce0088fc55",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6f641dbc-b840-4b0e-a3df-5356247effb4"
        },
        "item": {
          "id": "2f77ac63-a737-40f3-b9ea-bcddf38ab1b2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8821c343-bd6f-4a59-babd-ef7bbb9bf87e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5792e0d-d5ae-46a8-9b4f-86835319ab71",
        "cursor": {
          "ref": "aa62da00-f2b0-401f-beef-e77d93065eae",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0d10c35a-a530-4ee5-be03-1948d9e497a7"
        },
        "item": {
          "id": "e5792e0d-d5ae-46a8-9b4f-86835319ab71",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7c22cd29-0613-4e46-9c37-57e567daab44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61591fd4-3bcc-48c3-8326-0e0885563d7d",
        "cursor": {
          "ref": "d90ce7e0-cfd0-4efc-9c61-4ceb054874a4",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "66ff4012-99c7-4267-b783-faad0845a54e"
        },
        "item": {
          "id": "61591fd4-3bcc-48c3-8326-0e0885563d7d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f6c62ebd-cc4b-473a-82ed-34219c4f81ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617b42e4-32b0-49eb-a616-a2e6da9359d9",
        "cursor": {
          "ref": "83637614-d2f3-4963-b229-dc69c1ad4b12",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6d37a92c-5413-462f-98a6-5d0afab84574"
        },
        "item": {
          "id": "617b42e4-32b0-49eb-a616-a2e6da9359d9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "4f4f58d7-2b25-4e86-a534-614fed88ea44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409f0743-1bb8-4b19-af84-8ff97fe9a941",
        "cursor": {
          "ref": "6835b5ad-ce44-48dd-bd9e-4ffe1b461796",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "24a3a44d-f438-4630-8b73-7aa49ab45539"
        },
        "item": {
          "id": "409f0743-1bb8-4b19-af84-8ff97fe9a941",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "301a40d6-905a-4c00-8b2e-ec0eb45de90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a452afbe-957d-4a2a-acc0-5ec4369ef8ae",
        "cursor": {
          "ref": "9eca5646-2455-4844-be69-8c7d97a2f8dd",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c0482c2b-aec6-4456-a153-5f11db6e666a"
        },
        "item": {
          "id": "a452afbe-957d-4a2a-acc0-5ec4369ef8ae",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7b55b59e-0ac9-4feb-8925-6bb125202922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a468ce50-13c0-4bd1-ad8b-b637d973f26d",
        "cursor": {
          "ref": "040a0cab-fa17-444e-99ec-f1a54da56048",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bc9bba44-3970-415d-8a12-572c99ae0919"
        },
        "item": {
          "id": "a468ce50-13c0-4bd1-ad8b-b637d973f26d",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d91d6eaf-af95-487d-9b7f-19ee1ddcac12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9f8706-f942-4436-b63a-72bb41ab1221",
        "cursor": {
          "ref": "8dfff786-57db-46c2-8b3f-e6e8b747129b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0412a7b3-6540-4780-aef7-bf1b89b19342"
        },
        "item": {
          "id": "be9f8706-f942-4436-b63a-72bb41ab1221",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "78717669-139a-4128-b940-e53f17379a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a07e816d-dde9-44a1-85e9-ac66602da407",
        "cursor": {
          "ref": "270a0e28-1f50-4aa2-81cc-7a65e80c1da0",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0d25e890-3448-4ca9-96b9-cd9891bee102"
        },
        "item": {
          "id": "a07e816d-dde9-44a1-85e9-ac66602da407",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "dcf8bb75-11d6-4958-90d1-89d6f04f31da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a1dc58-8a52-403b-823a-c3dafef4155d",
        "cursor": {
          "ref": "3339ca3d-9c00-44d7-a2a6-60ae29ba4042",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "fdf5ed47-c4da-4141-8668-42f0869754b6"
        },
        "item": {
          "id": "80a1dc58-8a52-403b-823a-c3dafef4155d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "d1884ed2-ec70-42ed-abf6-4ac9869612a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cb45f6-9380-43fd-8f64-5e75918db952",
        "cursor": {
          "ref": "4a4623db-2cbd-4d19-88ce-856c431292f0",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f60e8df4-f56d-4c9a-aed6-fcbb7955ab31"
        },
        "item": {
          "id": "88cb45f6-9380-43fd-8f64-5e75918db952",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "cd05b75a-918d-44d9-97c5-05d4b30fbef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af5b3e7-227b-4aae-bd8d-c30ca8656328",
        "cursor": {
          "ref": "255c844f-3472-48a0-a2da-65f1afd7e5d9",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ba71cd30-78ce-4924-a72d-d0eaff9c88e3"
        },
        "item": {
          "id": "6af5b3e7-227b-4aae-bd8d-c30ca8656328",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "06486f16-a5b5-4f6c-9ed5-b4db35837f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af79711-f9a0-4b2f-a478-c0ac1b876400",
        "cursor": {
          "ref": "c7b86c73-b5ce-496f-8392-c9517c089a30",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c2611135-4c3d-42f0-85e4-11bfab0d6a4e"
        },
        "item": {
          "id": "7af79711-f9a0-4b2f-a478-c0ac1b876400",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a3ee7b21-f344-4038-92be-badac8e6fb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165a8232-e906-447e-a684-97fd637dd135",
        "cursor": {
          "ref": "53c6d2e3-08e1-4785-b4e3-79df56d46bf7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4592d28e-7fdc-4fe0-a84f-531009fbef82"
        },
        "item": {
          "id": "165a8232-e906-447e-a684-97fd637dd135",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "301fdc50-b5e6-4787-9f57-4498dedaab1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65d657f6-b4cf-4eff-a667-a072ba3ef649",
        "cursor": {
          "ref": "96a32600-ef50-46f8-a3b1-9d0e7aafe1f5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e4a89c52-e7f8-4a0e-ae1f-3f5d7b802383"
        },
        "item": {
          "id": "65d657f6-b4cf-4eff-a667-a072ba3ef649",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "55dee98f-a48c-43fc-9368-6282918737a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac22a032-80ba-4efb-9c5c-04a365d09945",
        "cursor": {
          "ref": "aaef44ff-7fac-4957-8db8-b1a1761bb73f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9c5e4a48-6f4d-4ca8-ae3b-112b7d3343df"
        },
        "item": {
          "id": "ac22a032-80ba-4efb-9c5c-04a365d09945",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "acc2cf8b-d276-4b5f-8fe4-f716009d6c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a022655f-d898-4b50-901c-e7d99ab46b9a",
        "cursor": {
          "ref": "e289843b-fa20-4fda-89c5-14c8c86cfcd4",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "71209c95-28c8-46b9-a1c8-56b73e7e984b"
        },
        "item": {
          "id": "a022655f-d898-4b50-901c-e7d99ab46b9a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5112653a-398b-4c99-bf84-80a51e2163ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f271ee-4529-46fe-ae7e-50094b51b97e",
        "cursor": {
          "ref": "7a4f7c7d-9a6c-4fc7-a8b1-27fe5f9e3e92",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7d02d357-d53a-4b28-afcf-3372891d31b9"
        },
        "item": {
          "id": "35f271ee-4529-46fe-ae7e-50094b51b97e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "63b214ec-af46-48d2-8deb-adbca70742b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de9ee2d-e16d-4628-bb11-489e670c807d",
        "cursor": {
          "ref": "ff618a16-889d-4832-acf7-337debd4f970",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "35c5ce5e-27ea-4843-aaa9-37ed208d4d8a"
        },
        "item": {
          "id": "8de9ee2d-e16d-4628-bb11-489e670c807d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "139576dc-789d-4eaa-b156-2b6408514f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519151b5-b247-420c-85c5-b16ccd79d86f",
        "cursor": {
          "ref": "ab9c66e5-c852-487f-b43c-ef5b0134ef47",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a90dc6a5-4500-4e51-a0aa-6304958e1699"
        },
        "item": {
          "id": "519151b5-b247-420c-85c5-b16ccd79d86f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "8791e7a4-0f6f-48df-9693-42859d6e43ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf985ea7-97ab-4d3d-81f6-abd2498b857e",
        "cursor": {
          "ref": "3ce26f11-c779-4966-a043-2f0940494aa3",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d373b852-3cf2-49b1-a6a0-caf2db268839"
        },
        "item": {
          "id": "cf985ea7-97ab-4d3d-81f6-abd2498b857e",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7d08a0ef-3353-4360-a45c-665d74ec9760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e7044a-7dc6-45cb-b9eb-281bf1d52a6e",
        "cursor": {
          "ref": "ec3c184f-4567-4b47-9c1d-30865f0e2a34",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5961debb-73df-44e0-88d6-793f97d8f576"
        },
        "item": {
          "id": "90e7044a-7dc6-45cb-b9eb-281bf1d52a6e",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "560b7c90-0602-4b40-a770-03aeb3fe7873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ba2354-f65e-4642-8855-339b77978ee2",
        "cursor": {
          "ref": "ccc2702c-8192-4b4e-a282-06218bc42834",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5fc9658a-d383-46f0-a684-6ad5e8b76ec8"
        },
        "item": {
          "id": "19ba2354-f65e-4642-8855-339b77978ee2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a85c7369-3b34-489c-9757-73e97bf1ef58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9367356f-2526-4290-903e-6cf8771003bd",
        "cursor": {
          "ref": "ad26560d-9be5-4a00-bd7c-d930468426f5",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "752a74a3-67fc-4940-98d5-ef42a325bd25"
        },
        "item": {
          "id": "9367356f-2526-4290-903e-6cf8771003bd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "88797fb0-9ede-4618-933b-13d8f7a8d24d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f433efd4-680f-4662-802c-798fcd862e25",
        "cursor": {
          "ref": "10b0ed83-649a-4601-94a5-a46b2a0bda2c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "07387b30-4d0f-43f8-8fc1-a4e973e65a8f"
        },
        "item": {
          "id": "f433efd4-680f-4662-802c-798fcd862e25",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "6d1f3a85-7774-44fd-8cd5-90717a3e7469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3530a109-216b-4ac4-ab4e-85694a7c8333",
        "cursor": {
          "ref": "5d605345-f5d8-4b5a-9334-02f8ccda5b9b",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a091cfbf-2796-4789-8f8c-02a093d88725"
        },
        "item": {
          "id": "3530a109-216b-4ac4-ab4e-85694a7c8333",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fd522931-03bb-4852-9f4b-f7dd972f6ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e03101-aa25-49b0-9d75-5e460c1a9ee9",
        "cursor": {
          "ref": "1fbfa253-35ce-4af8-84b8-81ca61ac2ccb",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0e9a7408-e04f-4e4d-9eb2-a30eb41c1ee7"
        },
        "item": {
          "id": "95e03101-aa25-49b0-9d75-5e460c1a9ee9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "54e4e129-8cf4-465a-921c-d95bda51699a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb871bd1-95ee-44bd-92d0-159a37eb1089",
        "cursor": {
          "ref": "c3da9dcf-f7cf-438b-921a-97039bc48058",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "aed3ad7b-afd8-4378-ab69-2103e45d7ad5"
        },
        "item": {
          "id": "fb871bd1-95ee-44bd-92d0-159a37eb1089",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "96caf830-9a3f-44ac-8032-53157e9d8f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19a7ff9-6dc5-4808-b972-2f0cb80dbd85",
        "cursor": {
          "ref": "0602e00b-7cd4-477e-b33d-a83f87208595",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dc70275c-1933-43ac-a66a-2e800b349e60"
        },
        "item": {
          "id": "a19a7ff9-6dc5-4808-b972-2f0cb80dbd85",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "42f3ab8f-62e9-4440-8372-ef3f0201276c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830bf5ec-8137-452e-8023-a4d6deeab1e7",
        "cursor": {
          "ref": "0d634a25-1d1e-427d-bbfa-176bde5a3ff0",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8cf46992-01af-48db-994f-b6467d79d767"
        },
        "item": {
          "id": "830bf5ec-8137-452e-8023-a4d6deeab1e7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "17e8e86a-7807-4ac5-a688-48d4a4cd0601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea08e64f-58f7-4a72-83f7-db592b99934c",
        "cursor": {
          "ref": "b862e8ef-c07a-4a8f-9b04-128884be421d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e7632840-25af-450d-b1e0-56feb0f25794"
        },
        "item": {
          "id": "ea08e64f-58f7-4a72-83f7-db592b99934c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7c01e863-bdd2-4e50-9787-c11f17303d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56e4a480-8180-4dbb-a383-fb83fbada320",
        "cursor": {
          "ref": "d5b17bc7-ef00-4a2e-9e7d-146dfb0c0b28",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3de776c5-5ef8-459f-ba29-9c466571482d"
        },
        "item": {
          "id": "56e4a480-8180-4dbb-a383-fb83fbada320",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "9fd504ef-2fbd-4b22-9278-f4c2ee1fb2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a316d7ac-47cd-49a0-90c1-20b7a6fd3ff4",
        "cursor": {
          "ref": "bf936c24-ba4a-4a5c-b7ac-422ef9476c46",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d9ee4df4-0726-4d6b-aaf5-e30710bcae63"
        },
        "item": {
          "id": "a316d7ac-47cd-49a0-90c1-20b7a6fd3ff4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "589d87b4-2db6-4787-b574-3fbae8e65fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6862ba86-8adf-4392-8731-78e6848e04c5",
        "cursor": {
          "ref": "31eb0da4-1d90-4f24-99d0-8b8bf1c55f54",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "0430e78b-1a23-4f3d-a86a-b078e027a9dc"
        },
        "item": {
          "id": "6862ba86-8adf-4392-8731-78e6848e04c5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7591191c-3f2a-4c7f-960b-c912d0b4465c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e57cfd-1ae7-4de9-9214-59debfdffa00",
        "cursor": {
          "ref": "338ece88-f1e3-4fe9-b68c-24e3521a67a1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cb355c2d-9631-4312-bae1-4dc343a8fe0c"
        },
        "item": {
          "id": "c3e57cfd-1ae7-4de9-9214-59debfdffa00",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "50efe93b-57bc-4c3f-954b-3e7eaa7ea6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d0ce03-9314-451d-ae1e-6df6d3e2bfab",
        "cursor": {
          "ref": "3963a7ce-e0af-4eb2-ba6c-8561f95203be",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ceff8cd1-00f1-48aa-a1ca-b44479bfa342"
        },
        "item": {
          "id": "53d0ce03-9314-451d-ae1e-6df6d3e2bfab",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9176a5dc-6acf-4062-963c-170ace9c3dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0a255d-5081-4e07-acf1-e9305a20a160",
        "cursor": {
          "ref": "ba170abd-6655-43b2-bd12-fd6b68351d5e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3e686905-baa6-4e79-8d2e-897bfe76ea66"
        },
        "item": {
          "id": "4e0a255d-5081-4e07-acf1-e9305a20a160",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "1ed86fdc-149d-46fa-ae52-7623e8f2fa54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29fa284-2ebb-4dd0-aeb6-fd99127af837",
        "cursor": {
          "ref": "c7971a9d-2064-405b-bc6b-0103f0e79d35",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f687b1c4-f297-4645-abcd-3336dc99a6e5"
        },
        "item": {
          "id": "f29fa284-2ebb-4dd0-aeb6-fd99127af837",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "3e045e05-a4ee-452c-a875-62d93eb384b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a5f93a-c5fb-4b77-815e-8c01591d5dfb",
        "cursor": {
          "ref": "7a04bb09-521e-4e85-ac65-840f63495a29",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "244981cc-dab4-4e41-8e4e-bc94428a8a3c"
        },
        "item": {
          "id": "04a5f93a-c5fb-4b77-815e-8c01591d5dfb",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c2467cd2-8455-4b0c-9337-dbfb94e240be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22da9766-6208-450b-b3bc-3e0bf1ad3e7f",
        "cursor": {
          "ref": "4e53b687-45d9-4b8d-9ad0-2776fa30e743",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "58a89a42-07a6-4705-8718-64f1400d5ded"
        },
        "item": {
          "id": "22da9766-6208-450b-b3bc-3e0bf1ad3e7f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f5c57986-8102-43f4-9aa8-6ffd16b0e8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "644386ab-3551-4c8f-8aa1-447cf31bcf67",
        "cursor": {
          "ref": "6bc95813-b027-434c-829b-f5494b0a3258",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b3e9e2e2-da27-4821-a1c6-60ba20abb3d6"
        },
        "item": {
          "id": "644386ab-3551-4c8f-8aa1-447cf31bcf67",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7c36a374-1cec-45e4-ba50-0b8d7846237f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cae0501-bb37-47ae-8669-e6f3c42482ff",
        "cursor": {
          "ref": "49160d3f-7be8-4ec5-a682-89cd5e734480",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "8969e444-fe4a-4a78-9dc0-f69e91cc4548"
        },
        "item": {
          "id": "7cae0501-bb37-47ae-8669-e6f3c42482ff",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "466adc06-1282-4f55-b5ee-ea07cc113abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6981a5bf-2066-46be-a05b-a633f63d2223",
        "cursor": {
          "ref": "4a462a2a-f2a8-4a4b-953b-299805abd3f7",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "eb41a203-367b-4ea1-9f2e-cc7be15f5006"
        },
        "item": {
          "id": "6981a5bf-2066-46be-a05b-a633f63d2223",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "09a2bd6c-6ea0-476d-afcd-08ddfee70770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761d2a2f-c157-47cf-baea-0b2e021b00f7",
        "cursor": {
          "ref": "e8844961-42f8-4117-bd2c-559b630d0a6b",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ab99e191-3842-4550-b0f9-231c8ffdb3ea"
        },
        "item": {
          "id": "761d2a2f-c157-47cf-baea-0b2e021b00f7",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e61ea424-c02a-4a59-8110-ecef2e88be17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162a383e-cbe3-4d4c-8c5d-42681f3f7bae",
        "cursor": {
          "ref": "f2e07a3e-1221-402e-a638-bea03bfadf1e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cf48a6ed-aba4-4c40-90cd-a881b4ec014d"
        },
        "item": {
          "id": "162a383e-cbe3-4d4c-8c5d-42681f3f7bae",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4354d0f4-889f-4927-b820-5ad67f138359",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64ee106-0928-4b3a-a198-20cebfb69ed8",
        "cursor": {
          "ref": "d4bf3956-e185-4062-9d27-1c44a79d8b21",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f2d77d6d-ffe4-4590-9b2e-7ea72e4ced81"
        },
        "item": {
          "id": "c64ee106-0928-4b3a-a198-20cebfb69ed8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d25f5b3e-ab5f-4206-a271-d083a75ede43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b708a66a-7788-4ddb-89e1-f1c167be92de",
        "cursor": {
          "ref": "c3215e9a-03fb-42eb-b599-8e909b6994cd",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6d328b19-68a1-4fde-bb3d-e0ce93e53614"
        },
        "item": {
          "id": "b708a66a-7788-4ddb-89e1-f1c167be92de",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cd3e9332-4c2b-47b1-880f-84ac935aa9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "d997eb2a-ac26-4ddf-ace7-92947b2b2377",
        "cursor": {
          "ref": "cd7f8070-82e6-4ab2-b391-02d988ccaf14",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e37a71b6-6015-47f3-b591-36d2c2e379fd"
        },
        "item": {
          "id": "d997eb2a-ac26-4ddf-ace7-92947b2b2377",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "efac46c1-0f6d-4b15-9038-f6fe2bd5fc14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1aaec903-a415-4577-93af-dcdebceab54c",
        "cursor": {
          "ref": "2c7a0ba5-ecb0-441c-a73f-631a3ea8d850",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "36470927-e33e-4732-88ec-dcd750cf95f5"
        },
        "item": {
          "id": "1aaec903-a415-4577-93af-dcdebceab54c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a00fdde4-60c2-4e32-8326-012dfca72ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "1dae5e1a-7b2c-415f-be17-33eb5991336a",
        "cursor": {
          "ref": "5976279e-0e8e-4ead-a7b3-aaf2ce3f8004",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "579f6133-f8ef-434d-9945-3d32acbfe273"
        },
        "item": {
          "id": "1dae5e1a-7b2c-415f-be17-33eb5991336a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bf27c844-1d4a-4fcb-a081-db7c7705b573",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "d5071b32-4259-4cd4-badc-166cf88ba1ec",
        "cursor": {
          "ref": "af5ffe3e-b431-4d54-a96c-f084e23369cf",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "55462080-4e6f-4d65-a042-ed7e961dc37b"
        },
        "item": {
          "id": "d5071b32-4259-4cd4-badc-166cf88ba1ec",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "088dd7fa-6b09-4c6e-a0dd-0eb20040f0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "96653b7b-bfe9-4dcc-aed7-3e85f487d0d8",
        "cursor": {
          "ref": "378365c4-e313-446c-8e03-a8d034c69cf6",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a2bf8018-22bc-4d1c-9a84-a088f7e6dcb5"
        },
        "item": {
          "id": "96653b7b-bfe9-4dcc-aed7-3e85f487d0d8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8f2a28b0-fd3a-4a1e-b2b4-88d4296bf870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "baa7c1d4-87a8-4220-9c3e-decdb9e556ed",
        "cursor": {
          "ref": "24e5499d-671e-4bed-b4e8-0e7afa41e35d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8cbc1225-5ad3-45cc-8718-100b09165b04"
        },
        "item": {
          "id": "baa7c1d4-87a8-4220-9c3e-decdb9e556ed",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9aa40c42-efcb-4db1-babe-1e35bed50e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3240396b-34fc-49fa-9ee9-8d8bc08e9433",
        "cursor": {
          "ref": "a63c4bae-513f-464c-a400-ad467c59ed07",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a5652ef1-21e7-4ca8-8bba-a5aea5559a8b"
        },
        "item": {
          "id": "3240396b-34fc-49fa-9ee9-8d8bc08e9433",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bc577f00-5fe0-4056-9790-2fb11f5b625f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c67a06-03e3-4951-8f0f-bdb8a2fc335b",
        "cursor": {
          "ref": "70d2f625-d4d0-4086-84a4-138815826dc1",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6ee17020-060c-4ead-ab13-d2cbd818b2dc"
        },
        "item": {
          "id": "c7c67a06-03e3-4951-8f0f-bdb8a2fc335b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "846bcb82-caa6-46d7-bbc5-b11f2bf189d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeea8507-6ff7-416f-8cae-ee46536ce905",
        "cursor": {
          "ref": "f29bfea4-7155-4875-bcce-21cf272d1798",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "493fe3ad-f340-4d3a-819b-914d31ca019f"
        },
        "item": {
          "id": "eeea8507-6ff7-416f-8cae-ee46536ce905",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "42d50c98-0d37-4d16-a34d-4024d6efa976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74e9497e-d2d2-4fa3-96bc-c82a3f1744ef",
        "cursor": {
          "ref": "dbb93c92-b4d3-4b1a-9818-29afd5d30029",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ab5ea8e2-f2e4-44cf-8287-4c2b4ae4d5ec"
        },
        "item": {
          "id": "74e9497e-d2d2-4fa3-96bc-c82a3f1744ef",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "bc6a1afd-d31a-476e-9faa-e77d3ac6031b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421a72b2-6c84-4df4-8f87-c5aad3db7c6f",
        "cursor": {
          "ref": "b965764e-a780-4ea3-ab4b-ffa1581f9a4d",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d9b79cfb-d0b2-43ad-9b36-e902af17a67f"
        },
        "item": {
          "id": "421a72b2-6c84-4df4-8f87-c5aad3db7c6f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "05dd9395-4b19-4162-9e00-cfc5ebb625d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14ca254-3dc8-432c-93ca-6884bf4f18ca",
        "cursor": {
          "ref": "c289a52c-b724-4ff7-816a-294fbb543f6e",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c3d73dae-b632-4817-9ad7-6a4b44c15e11"
        },
        "item": {
          "id": "d14ca254-3dc8-432c-93ca-6884bf4f18ca",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c87cb19c-603a-4fe7-ae69-4c9fbaa46639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddfa01ac-1051-4fcf-9c6b-6e0fcc21704b",
        "cursor": {
          "ref": "303f3906-7087-412d-8413-00bc9c61abe1",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ca00ab05-6a3c-421d-9a10-fac324307343"
        },
        "item": {
          "id": "ddfa01ac-1051-4fcf-9c6b-6e0fcc21704b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "47a3a55d-1924-41ea-b606-2133bf916d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520565c6-4bef-4535-b536-41beb2a1b25e",
        "cursor": {
          "ref": "2e416d6e-9500-46e7-ac36-235dd8999dd9",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f970939c-67b9-4747-9487-f5a845602b22"
        },
        "item": {
          "id": "520565c6-4bef-4535-b536-41beb2a1b25e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "90ff44f5-99f7-44d1-85d7-edf630756152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da54e96-1f6c-4203-95a2-816cfad87604",
        "cursor": {
          "ref": "f399b93a-eb67-47bd-a0ae-abe58bd9eda1",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d1c2924b-8db5-410a-80d2-efcba45a7e87"
        },
        "item": {
          "id": "0da54e96-1f6c-4203-95a2-816cfad87604",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9d6edc9b-c7d7-42dc-9050-278569ecf840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd0332d-72db-4668-8c53-26fd424cc8a9",
        "cursor": {
          "ref": "e0c27a78-c727-473f-b566-313aea467af0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4ebd0d1e-89ab-4645-8100-3cb78974d237"
        },
        "item": {
          "id": "0bd0332d-72db-4668-8c53-26fd424cc8a9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a1c9d6d9-8871-447a-be4f-ca7026480bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c462779c-1e5e-4be3-8a5f-3c0813b0e18c",
        "cursor": {
          "ref": "4e5d73c4-4b8f-4d45-9c6a-43ed8fe36ed8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "031fb10f-e1c5-4a0f-9b64-1fc31835d3b0"
        },
        "item": {
          "id": "c462779c-1e5e-4be3-8a5f-3c0813b0e18c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "348eb834-c4a9-433a-b212-74889a8296ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85792920-bb7a-4b01-b86c-96e99a4df373",
        "cursor": {
          "ref": "316654f6-a509-46c4-9dfa-ef95e565ee61",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0f997b16-c74a-46cb-9d1b-b10bfe694ce4"
        },
        "item": {
          "id": "85792920-bb7a-4b01-b86c-96e99a4df373",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "063dae17-1de7-4710-9e79-ffd58b87b917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d541a8db-0ec4-490e-9558-344d7e1814ac",
        "cursor": {
          "ref": "e68d46c5-dd24-4106-b58f-929f39531f99",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0f65620d-06f4-4a09-87f7-730fa9041545"
        },
        "item": {
          "id": "d541a8db-0ec4-490e-9558-344d7e1814ac",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "6863a4cc-a3c7-4d3c-b5fc-2eb87f542397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb736042-014f-481f-9b75-8c313bf2ef84",
        "cursor": {
          "ref": "c0005740-712e-487b-9211-ac14ee62f16c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f9f4b25c-008f-43c1-a819-5012dfd8d120"
        },
        "item": {
          "id": "bb736042-014f-481f-9b75-8c313bf2ef84",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dcb9908b-730e-4bb4-9324-2f7495ed47aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2594b13b-da43-4a17-a1e6-9c0f2b3c58d8",
        "cursor": {
          "ref": "f5755171-eca0-4352-b51b-2a4e482c5027",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e8b8d14e-c1cc-4aa0-b146-0754afabf317"
        },
        "item": {
          "id": "2594b13b-da43-4a17-a1e6-9c0f2b3c58d8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1e549cf9-ef06-41cc-bfd2-cc3e4f63ff73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3566b103-da1c-466d-bdfc-a466aa21f78a",
        "cursor": {
          "ref": "d4e4900f-af33-4850-8401-2102358d2741",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "597338d9-1bf6-4790-b35d-5c2c0ce29ee3"
        },
        "item": {
          "id": "3566b103-da1c-466d-bdfc-a466aa21f78a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4926aebe-35ba-4bb6-aad2-1b0603ddde9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a43845-4c93-4373-a86a-36b6f150afd1",
        "cursor": {
          "ref": "da1a7a04-0398-453a-8c1a-2f4fb511ba9a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a63eb83e-bb20-4ed9-b383-51b9b70e0c35"
        },
        "item": {
          "id": "a3a43845-4c93-4373-a86a-36b6f150afd1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "12ee29c6-62bb-4ea3-9f3a-64372690b74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dad4c89-32fe-4070-9f04-10fb60a9e9a2",
        "cursor": {
          "ref": "b1d4d121-d81a-4f78-ac56-61c3af982b70",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "34fb43c3-70c6-46a2-a5c9-c9e82575db12"
        },
        "item": {
          "id": "3dad4c89-32fe-4070-9f04-10fb60a9e9a2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc1980fd-b42b-4890-86af-6d51df824654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2be31d7-6995-4e69-91ab-f66fe5d47375",
        "cursor": {
          "ref": "3d24eaa5-b0dd-48e9-977c-55a79e84b8c1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6ef53ac4-c996-422b-970c-09b4b33dd4b8"
        },
        "item": {
          "id": "f2be31d7-6995-4e69-91ab-f66fe5d47375",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0c8785b8-7569-4258-97fa-c04f5df24b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6552038-c1df-43f6-92a8-df5d5ed442ed",
        "cursor": {
          "ref": "c3d39717-969e-4321-9a75-cadad9b5d61e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5373b1b1-39e7-41e3-9022-8aa942ab26d9"
        },
        "item": {
          "id": "e6552038-c1df-43f6-92a8-df5d5ed442ed",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9b219328-f657-427a-82d5-0e1daede6aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162ccccf-66b3-4d5b-9da1-03c6c5c07816",
        "cursor": {
          "ref": "8c2aa77c-a2f3-476a-a0c8-149a6b12d76a",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "48cd7f12-779b-4805-b784-bb7ee25b1975"
        },
        "item": {
          "id": "162ccccf-66b3-4d5b-9da1-03c6c5c07816",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9ea45f13-feae-484f-b0d1-69d5da00c8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe18c87-9738-4fbb-93ed-dece50ec1a31",
        "cursor": {
          "ref": "1474cea6-7541-47df-a70e-71521a906ccf",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5feb1331-7282-4943-a10b-a27e17d62b0d"
        },
        "item": {
          "id": "1fe18c87-9738-4fbb-93ed-dece50ec1a31",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "b0bb7f02-15c9-4692-bd97-799a2c21b5d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ae5003-fe00-475b-9612-93cf00db59a8",
        "cursor": {
          "ref": "781b4af0-81ef-4e79-b10e-55892330c4d9",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "283d6cba-f528-4b96-ac69-f4f33f96c9d4"
        },
        "item": {
          "id": "e5ae5003-fe00-475b-9612-93cf00db59a8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "0f9ab7fa-d64c-424f-b96f-754abd8987ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61c6a2d-72fd-400a-9ee1-345a57570ea6",
        "cursor": {
          "ref": "4d588323-146a-4b82-b56e-b95b6801ba98",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "f6653504-a10e-4e66-bd58-fabd47e34ee6"
        },
        "item": {
          "id": "f61c6a2d-72fd-400a-9ee1-345a57570ea6",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "08a1c617-5450-4172-b921-b6e3133b54bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ba9f0d-22cb-4947-a9d0-6e47a78e3b29",
        "cursor": {
          "ref": "94ce679c-4057-4398-a2f2-6256021654d4",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "21a755fe-f822-49c2-b8c8-4b8b9dc6fb34"
        },
        "item": {
          "id": "18ba9f0d-22cb-4947-a9d0-6e47a78e3b29",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0d44fa8a-2a72-4bae-acfc-ff54dde625a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4a8310-4bab-419a-8bf5-1ff247375908",
        "cursor": {
          "ref": "1361acb5-fb22-4736-9d4f-2eff069ebfaf",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "75b97957-565e-4c60-ac29-d40f8dbdb570"
        },
        "item": {
          "id": "6c4a8310-4bab-419a-8bf5-1ff247375908",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3b8ecb75-a65b-4c6e-8755-54f91b7ed6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a7b37b-3761-4c28-a40c-bb9ef18b2ad9",
        "cursor": {
          "ref": "d267c9d7-24db-42ec-9efc-430bddc9bed4",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b5fbeb45-3e02-432f-bc96-354afb626d11"
        },
        "item": {
          "id": "52a7b37b-3761-4c28-a40c-bb9ef18b2ad9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "669f27e0-0997-4d3a-9564-753d90516eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff091f3b-459d-4060-a1c4-9bf650f4a3e7",
        "cursor": {
          "ref": "49a61b78-3331-4602-99e3-61acab96b83c",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "91366165-a9b8-4fb0-b749-fe5ca760e3dd"
        },
        "item": {
          "id": "ff091f3b-459d-4060-a1c4-9bf650f4a3e7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "52da29e0-af1c-481d-98d6-28064437175f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00446e8-5326-40bf-8aeb-9ae81df1ba7d",
        "cursor": {
          "ref": "39e220c5-c194-4e67-b5bc-fdaa163d16ac",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4ab34cb7-d8b5-431b-88bc-8e46d02f41ed"
        },
        "item": {
          "id": "b00446e8-5326-40bf-8aeb-9ae81df1ba7d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "722ff839-331e-42c9-afa1-e3880f665327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e04ea4-c569-435f-9c4e-842a619dda74",
        "cursor": {
          "ref": "84e150a0-05da-426a-9e28-785d5375fadd",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2421fe8b-ad80-4472-9ddb-3f47408ad146"
        },
        "item": {
          "id": "b8e04ea4-c569-435f-9c4e-842a619dda74",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ba137840-dfa2-4a4f-9bc9-4303968cb341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d29e1f1-31cf-4250-a126-020c38fe70e7",
        "cursor": {
          "ref": "1640ebcd-05d3-41b0-a396-fdd27bfd2e91",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ae5fe9d7-46e4-4c03-9f97-8f2d82a04b60"
        },
        "item": {
          "id": "4d29e1f1-31cf-4250-a126-020c38fe70e7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0d635b99-d7d4-43d5-a265-384f421831d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849ab9ee-6c7c-4da2-a86b-8dd618196c35",
        "cursor": {
          "ref": "a33bbeb0-22b2-4a19-aee4-13cf874a6d4b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e82e139e-b1d3-4e75-b1e5-84ad4a9bc6eb"
        },
        "item": {
          "id": "849ab9ee-6c7c-4da2-a86b-8dd618196c35",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f2f4d319-b700-4648-89df-daf664a664cf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0cc9a8-dc5b-47f8-aded-b2a7d149394f",
        "cursor": {
          "ref": "09303e9e-0361-4d6e-b6fc-0875502a9965",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fad3b238-dca9-441b-ae0c-f6ea04b54d51"
        },
        "item": {
          "id": "be0cc9a8-dc5b-47f8-aded-b2a7d149394f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "373a6e44-8a91-4598-9232-a3e0dc4ada3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9f1c67-8080-4d2e-8dd1-e0dd35512195",
        "cursor": {
          "ref": "cddd6fc0-0e5d-40ad-94b7-13c8f98b3504",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "24342008-9632-4da5-a9cf-aabceab66f1a"
        },
        "item": {
          "id": "ab9f1c67-8080-4d2e-8dd1-e0dd35512195",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f7af48eb-684c-40e9-bec4-02cd4a8bd202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74de7a8f-3145-467f-8765-480f991c3df2",
        "cursor": {
          "ref": "8e24ca96-cf7e-42c8-ba84-c1ca04e1cd68",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8916d8ae-42b1-4edf-b45b-36bf2f66e429"
        },
        "item": {
          "id": "74de7a8f-3145-467f-8765-480f991c3df2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "119ccd2f-7e4e-4be8-aa64-53615ba30e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4484cea-f646-418b-9bdd-49f82cc0892c",
        "cursor": {
          "ref": "b6da5a41-03bc-4c98-a38d-10707e5a745c",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "dc14cf6e-3a5c-4436-8a56-b6e879a673cd"
        },
        "item": {
          "id": "b4484cea-f646-418b-9bdd-49f82cc0892c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6170215a-3572-43aa-9aad-03824b2739fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647394ee-0d9c-419f-a154-d4fa45f8e17e",
        "cursor": {
          "ref": "b4f8afeb-377c-4f36-b682-5cb9bce5e39e",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "122f6574-a6b7-4282-99c9-7478bb2bda8f"
        },
        "item": {
          "id": "647394ee-0d9c-419f-a154-d4fa45f8e17e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6300812d-50cf-4db0-aa5c-5fe61ab0bad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d53313-526d-4865-b5fe-fde4f5341387",
        "cursor": {
          "ref": "71a8fa8d-e19c-42fa-8dfa-e353634b41e1",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7a1818b0-56db-4473-80f0-b1879b155067"
        },
        "item": {
          "id": "25d53313-526d-4865-b5fe-fde4f5341387",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e0147116-92c3-40d4-acb6-b387f29e1eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcaa807-3ebd-46a7-82f4-4edd5594f3b1",
        "cursor": {
          "ref": "e42a51aa-8dc8-4cf7-9ad8-20506b511d85",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b884c5ba-e9e2-4ca9-a7e2-a0c52da5874c"
        },
        "item": {
          "id": "1fcaa807-3ebd-46a7-82f4-4edd5594f3b1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0e40f879-2c80-468c-8064-0c28e6688fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf73edf-c558-4df0-9bc5-596ca2543304",
        "cursor": {
          "ref": "1727f065-5792-4a67-9b7e-f46e3dd7e117",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "10ed65c9-76f3-4d89-bf45-c9410fbc8ac9"
        },
        "item": {
          "id": "4bf73edf-c558-4df0-9bc5-596ca2543304",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "04ec69c6-ca93-4f89-b10f-23788ad31efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acd3568-a8e6-4774-8b6b-6e7b4f985100",
        "cursor": {
          "ref": "6d1244d0-062c-4673-afe6-a918947214e3",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "952cf6a2-8cfc-4fe4-b975-dbd5758b2ffe"
        },
        "item": {
          "id": "5acd3568-a8e6-4774-8b6b-6e7b4f985100",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3546efff-ba37-4724-ad12-28065c294a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8aadbb-c45a-4407-8c9b-f16029b7cd45",
        "cursor": {
          "ref": "08c7ca0f-7d3f-4dfb-8388-4b79a0ee1f3d",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f2853ccb-ec0d-43ce-a89c-5bba50a0cbd9"
        },
        "item": {
          "id": "4f8aadbb-c45a-4407-8c9b-f16029b7cd45",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "56c0c741-3f5b-487f-b112-ff35d39cf48e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6267b095-7723-4e7c-8527-acd7eda79994",
        "cursor": {
          "ref": "57e10301-92a8-416e-bb42-968e13fad134",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4dbfff8c-dded-415b-a687-5239542f7945"
        },
        "item": {
          "id": "6267b095-7723-4e7c-8527-acd7eda79994",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "20442a96-d44e-4c02-a390-4c4c6f0ba2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a565bec-ab0d-4b58-96f5-2fac22c9afba",
        "cursor": {
          "ref": "4d054e13-eb94-4aa6-9c2f-1a77f586f13c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1795c2dd-40fb-4f8d-98dd-bc16339e959b"
        },
        "item": {
          "id": "7a565bec-ab0d-4b58-96f5-2fac22c9afba",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7fbea93a-bd0a-4c87-9644-90ab9a9f8c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f47f5f-e43f-4ebb-ba55-d27ff3f696dc",
        "cursor": {
          "ref": "a1e52fef-187e-455f-96c3-c8b779d02636",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c0d56c2a-2a0b-4a9d-ba41-cdf7e6fe16cb"
        },
        "item": {
          "id": "d0f47f5f-e43f-4ebb-ba55-d27ff3f696dc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "07f3e4e1-37f9-474f-a4d7-dbbe394a734b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2c3791-da06-4e3e-a704-d2da8559fae1",
        "cursor": {
          "ref": "00881968-fb34-4ebf-8df8-f1aa2f60bfec",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "73951e5f-a6a8-418c-9b6e-87d3715ed104"
        },
        "item": {
          "id": "7c2c3791-da06-4e3e-a704-d2da8559fae1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3b3b79fd-77cd-4a16-9310-bfaae362351e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1ef922-9c6a-4d24-9aae-0962ba2ef760",
        "cursor": {
          "ref": "8f8edc76-e59d-4640-8f63-96e6cad68a49",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9cbd70e7-95a0-4f63-95e4-82cf7865c37b"
        },
        "item": {
          "id": "be1ef922-9c6a-4d24-9aae-0962ba2ef760",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a7409d87-ca18-4535-87fe-357cd75c534f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1213ff6-ee60-4a24-a999-97ccea6e94d9",
        "cursor": {
          "ref": "0a389351-bea2-42fb-87f4-e654b9c198f6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "06f0de2e-af46-4549-bc68-067b6461c9be"
        },
        "item": {
          "id": "e1213ff6-ee60-4a24-a999-97ccea6e94d9",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ca279060-d71e-42c4-9aac-e5a9b2564467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "125fcc35-adb2-431f-a5df-de81810fdb23",
        "cursor": {
          "ref": "d5813474-b7aa-4b88-b60c-117c85c99ecf",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "902c3f0f-a948-4513-9f89-56cf2d40640e"
        },
        "item": {
          "id": "125fcc35-adb2-431f-a5df-de81810fdb23",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d0e7070b-2312-41af-ba09-00dd41a68b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8fd5c4-6aaa-4108-8463-3b038b48d915",
        "cursor": {
          "ref": "8526c370-640a-4900-9c13-2e5ceacd764a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4a0fd742-ccd7-4c96-9854-7ad7047823b7"
        },
        "item": {
          "id": "1b8fd5c4-6aaa-4108-8463-3b038b48d915",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "4fb8ba7a-ab12-4d5b-955d-b32be819fd05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b3510ba-b2ff-44cd-bc14-a35b4e8728d2",
        "cursor": {
          "ref": "2882ebf4-46b9-4a4e-bf96-869e5b1104b1",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0d0f1076-822c-4b40-944b-040a3b06d795"
        },
        "item": {
          "id": "8b3510ba-b2ff-44cd-bc14-a35b4e8728d2",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce5b0a82-54a5-437a-bf99-4ae6eb389fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7638e132-f49e-4359-9fd8-757b5cf6575e",
        "cursor": {
          "ref": "85b8ee75-543d-4f7c-8359-ade9510228bf",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d072ed6f-2735-4ce5-a415-302253746e6c"
        },
        "item": {
          "id": "7638e132-f49e-4359-9fd8-757b5cf6575e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "097434ae-36a2-41c9-9769-b6c5e80a2f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ea4428-e995-4b4a-a394-24ac4cf00ad7",
        "cursor": {
          "ref": "560bbfa0-9c2b-4798-8684-f3aa3bf76afa",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "85625e6d-c7e5-4ac9-b53e-853cd149ebb4"
        },
        "item": {
          "id": "54ea4428-e995-4b4a-a394-24ac4cf00ad7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "75fce924-94e0-4c4f-8df1-719881e24359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5672e83f-fd26-4108-a077-2b841b6d6f4b",
        "cursor": {
          "ref": "98ff1b73-55a8-4290-b004-fc0140195b06",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "920c685c-49db-4d1b-af7b-5eefcecbd6f5"
        },
        "item": {
          "id": "5672e83f-fd26-4108-a077-2b841b6d6f4b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a933e805-d98f-41a3-8c8f-4501cb7854dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4652faf5-92ac-4afd-81ac-9b28ccd08b1e",
        "cursor": {
          "ref": "6f9ec9f6-3141-488d-af85-aa2d408aea54",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "2bce71d4-6529-4418-a1c7-381f9295cdb9"
        },
        "item": {
          "id": "4652faf5-92ac-4afd-81ac-9b28ccd08b1e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "653b9bd0-fdbe-4aa0-95db-862bc206d7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e7986c-6603-4af9-bac5-c9440ebef317",
        "cursor": {
          "ref": "335170e2-7d63-4c04-bd64-cdc2701e2fab",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d13bb92c-e942-406c-a65b-c4184b2351ea"
        },
        "item": {
          "id": "75e7986c-6603-4af9-bac5-c9440ebef317",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "de99601f-9b8a-4377-9ce6-d742c0a1e32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c7072e-0db4-43df-b61c-44fc453e1ed2",
        "cursor": {
          "ref": "a1f34baf-d447-4620-8490-7777d728f939",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6ae56908-146e-413d-9c76-7eb0afb09c67"
        },
        "item": {
          "id": "44c7072e-0db4-43df-b61c-44fc453e1ed2",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "260269c0-7233-4cc8-9701-ec89b96ae920",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30bd44c-c3a5-46d5-9683-a54e1fa5faba",
        "cursor": {
          "ref": "b4aff7f8-07f0-4f7f-8feb-f4fd83dfb9ab",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "b20e724f-0f7b-4620-88ea-70d43514c929"
        },
        "item": {
          "id": "b30bd44c-c3a5-46d5-9683-a54e1fa5faba",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ebe7b198-657e-4e5e-8386-56dbe076afab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836bbb24-a56f-485c-a1c6-4dea4785304f",
        "cursor": {
          "ref": "557ccd17-54c8-4770-8792-215074a43fca",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "30f35e05-f128-4d79-96ff-7bfdea251b2b"
        },
        "item": {
          "id": "836bbb24-a56f-485c-a1c6-4dea4785304f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f4e1e3d4-b6de-42af-93ac-5848b1a90f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2823ca-f476-4cd8-8687-1b9d01681b24",
        "cursor": {
          "ref": "2e268e9c-1625-4716-832c-9270028487a8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5c35e909-a91d-407b-b29b-287673d23564"
        },
        "item": {
          "id": "ac2823ca-f476-4cd8-8687-1b9d01681b24",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "707aad73-d171-4a73-8808-2020ec1f9a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4670985-9e8d-4f58-bb0a-9cbda1104003",
        "cursor": {
          "ref": "e5f4c969-be26-4952-b257-226454f2f6dd",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4ca2cf91-af40-4850-892f-f07f408d7fe0"
        },
        "item": {
          "id": "f4670985-9e8d-4f58-bb0a-9cbda1104003",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "32cd2a41-dcb5-4c48-b3f6-60948c954e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e885984-52f4-4b4b-988a-4af8939fe708",
        "cursor": {
          "ref": "a2c89aad-0979-4962-9dce-0ecb301c2b5c",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a446101e-c73e-4abc-877a-d27c8f32e2dc"
        },
        "item": {
          "id": "8e885984-52f4-4b4b-988a-4af8939fe708",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7c1ca063-2628-40ce-a285-1c470800ba17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6688bff2-41bf-48d5-b78d-36c65f760135",
        "cursor": {
          "ref": "273e3013-a7ba-47af-9349-01cbc092afe2",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "53998f0a-3641-4ea2-839e-da26d1bbec02"
        },
        "item": {
          "id": "6688bff2-41bf-48d5-b78d-36c65f760135",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7d31dc9f-3cbd-47fc-b44a-d827188ba613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2767da-c3c5-4803-aea3-9b66e66e6fa9",
        "cursor": {
          "ref": "c80eee60-d50e-48e4-b098-814602809e89",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7004aa98-5c04-4c05-b289-f916d10999bc"
        },
        "item": {
          "id": "3f2767da-c3c5-4803-aea3-9b66e66e6fa9",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f00bccb1-d10d-4a43-bee1-633832eeff74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e178033-2b88-4dff-8867-5da3131b4fdd",
        "cursor": {
          "ref": "90a9c031-a98a-4f97-9e76-24c0d072dea4",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "720efb25-211d-4b30-b02c-acc20a2f51d2"
        },
        "item": {
          "id": "8e178033-2b88-4dff-8867-5da3131b4fdd",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "38a99d7b-ecc6-41f4-ae76-28fa9732a60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5593ac-0d68-463f-a710-cf0ede13abe3",
        "cursor": {
          "ref": "6a6444bc-6abf-4698-8996-a1c8f866c5a1",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "cef1ac36-e589-4622-9468-fb4401f5dbed"
        },
        "item": {
          "id": "6d5593ac-0d68-463f-a710-cf0ede13abe3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b1d5cefc-b3ff-4475-9d62-20b730694593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8141eff0-425a-4465-8194-7005458aa2a2",
        "cursor": {
          "ref": "e986fc0e-6d28-4103-9f92-1108bf683d69",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c6fd956e-460b-4bdd-9b6b-ee7411e18a3c"
        },
        "item": {
          "id": "8141eff0-425a-4465-8194-7005458aa2a2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "2a162605-0e67-4dd2-b3ba-dc726054ace0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e0163b4-3caf-472d-82c4-7c259090c615",
        "cursor": {
          "ref": "ba1fab49-e1c8-443a-b4d5-c075c4a1b210",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d40bd7ae-3d40-4d45-b2b8-e0df751f3a72"
        },
        "item": {
          "id": "1e0163b4-3caf-472d-82c4-7c259090c615",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d25eb530-0194-4aa0-864f-16d2a96b0b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5144d6d5-eea0-4fe9-9f5a-8b53129df051",
        "cursor": {
          "ref": "0a9eff81-97f2-41cc-99b6-3dcd62e546d7",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e97d8ccf-9461-42ac-a008-144c983a0b0a"
        },
        "item": {
          "id": "5144d6d5-eea0-4fe9-9f5a-8b53129df051",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f9638ddc-d0fe-4378-ba33-db4241169a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e20a0cb2-71fe-4f36-9d5c-df8adeb7300b",
        "cursor": {
          "ref": "2e72236b-210d-4dfc-9555-9e67ee550de4",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "df5b1736-7b53-4e51-86ee-ed4c77bf568b"
        },
        "item": {
          "id": "e20a0cb2-71fe-4f36-9d5c-df8adeb7300b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "05d35d98-6e69-4c62-80a6-046a319def6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42d8891-dab1-431a-b39a-696126656b00",
        "cursor": {
          "ref": "44badbc9-1749-4538-bff8-f0af6d95f7f0",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "2ee9b0f4-9d62-436a-8e9a-370e0a2276fb"
        },
        "item": {
          "id": "b42d8891-dab1-431a-b39a-696126656b00",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e0c1fca8-969d-4124-86bd-5f6e1598ce4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f568fd1-7190-4e24-b94f-d3614c87ed1c",
        "cursor": {
          "ref": "591b2a04-0fd8-4f11-b33d-03892134da64",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ce9a9dcf-0bcf-4496-afc2-f28b135df36e"
        },
        "item": {
          "id": "7f568fd1-7190-4e24-b94f-d3614c87ed1c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3e311f53-f240-46db-812d-add0bf892cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daf5d6a-8d73-4fbd-88ee-ec3fcf8b4caa",
        "cursor": {
          "ref": "b7e01c26-49c0-463b-b74d-ff69af8d4538",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "55247711-a49b-416f-a64a-ab9fee715099"
        },
        "item": {
          "id": "2daf5d6a-8d73-4fbd-88ee-ec3fcf8b4caa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "6adfb8fb-a370-4c42-a552-f7cbab60fec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840fb1e5-5525-458a-8c9b-3f37d17e82b0",
        "cursor": {
          "ref": "945d9b6b-6b94-4bb3-8c04-623cd775b62a",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f541d66c-485f-49f3-b38c-c19d881ff81d"
        },
        "item": {
          "id": "840fb1e5-5525-458a-8c9b-3f37d17e82b0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b8ee1be6-c7e5-412f-b67f-1d59136179a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ff7f21-7329-4876-8d59-4193880ce245",
        "cursor": {
          "ref": "f396cc42-ad40-4d85-9079-53a53e0c89c9",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9e97b5bf-9a30-4b94-a01e-dea6c6b25743"
        },
        "item": {
          "id": "66ff7f21-7329-4876-8d59-4193880ce245",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4efc74f4-e4eb-4a13-9d35-54fa46aab122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1be778-ca22-42d6-8fe0-6db6b3d4300e",
        "cursor": {
          "ref": "cfcb0527-6bcf-4f52-ab2f-4900f4ab5d04",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e72e96b3-76be-48de-af3b-8488c68b1181"
        },
        "item": {
          "id": "5c1be778-ca22-42d6-8fe0-6db6b3d4300e",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "5c4332f9-8a4d-4a77-947a-b8542775a4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db564ed-4819-4ef7-b6bd-26829940beb2",
        "cursor": {
          "ref": "07011062-1acc-4873-8eb6-e85a6c59bf03",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5906207e-eb91-4d61-8b3c-7739ebcc5c35"
        },
        "item": {
          "id": "3db564ed-4819-4ef7-b6bd-26829940beb2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "61667cd3-0a73-4cf9-ac87-af91a456dd38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e8fc9be-f077-4aaf-a95c-73789c03ed61",
        "cursor": {
          "ref": "b33122aa-3db6-43cd-b680-db5f25cbf7dd",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "5587f006-12b2-407c-9b0b-023a0a30b05d"
        },
        "item": {
          "id": "6e8fc9be-f077-4aaf-a95c-73789c03ed61",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "35d627be-71ac-44d5-a64b-841c9a282c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c260a951-0694-4af9-b18a-a3d14652391f",
        "cursor": {
          "ref": "8cc363c7-d6d7-4245-9bf9-bc2e14fc9402",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c897029f-38df-4785-a9f3-ae5587caeac7"
        },
        "item": {
          "id": "c260a951-0694-4af9-b18a-a3d14652391f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e1c54fc3-8711-4b2d-9dc5-8e26f3238c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1df6f67-3e42-414e-b3b5-766cbcc535de",
        "cursor": {
          "ref": "c6e6cb9b-17c7-4c83-a27c-1955e0e1d54d",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6dceeca2-0087-4b36-84a2-95fd9ea81400"
        },
        "item": {
          "id": "c1df6f67-3e42-414e-b3b5-766cbcc535de",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "08161902-6c5c-4424-9504-5cc3ba4d4f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f681fe5e-e48d-4484-87b2-ba59b9dad34e",
        "cursor": {
          "ref": "a716d671-e0bc-4a1b-8ec1-e1855878051e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "fa5494da-3007-40dd-92f6-23852d918732"
        },
        "item": {
          "id": "f681fe5e-e48d-4484-87b2-ba59b9dad34e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c7eef338-c4e7-4a59-a4a9-e1929c84c7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff982909-09ac-44d1-881e-3ea8ad7f0d09",
        "cursor": {
          "ref": "d4807e41-4341-445d-9778-0bae60313e1f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "3ecee23c-995b-4023-9bd3-f8bc65e2527f"
        },
        "item": {
          "id": "ff982909-09ac-44d1-881e-3ea8ad7f0d09",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "af461121-c765-4f00-84c3-8a840057456c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2552db13-2bdb-49ee-b844-79c00cc17e21",
        "cursor": {
          "ref": "0672f6f3-69bb-4669-b049-17b2f8c6055b",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "51d5b6e6-b0de-4c1d-8c8f-e5c86c4fa8aa"
        },
        "item": {
          "id": "2552db13-2bdb-49ee-b844-79c00cc17e21",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e25cbfae-22f5-465f-ba86-3eb93745ef08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4a4e24-ad77-470b-a0f5-1c44bbf33623",
        "cursor": {
          "ref": "0d71f807-d815-4523-b71d-30d2e7f20cdc",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b7f77473-ce4f-41e8-b6d0-1bf31a59a428"
        },
        "item": {
          "id": "7f4a4e24-ad77-470b-a0f5-1c44bbf33623",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5b747382-ad4e-4ef8-8853-ac1ff8b23d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cac3ce-cd7b-450a-b9c2-59cdae0cb1d5",
        "cursor": {
          "ref": "df182c0c-4ec3-40b0-a254-8fc18e3ed2d5",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "03c30c1b-a3fa-4142-94d8-25b609fe0843"
        },
        "item": {
          "id": "c4cac3ce-cd7b-450a-b9c2-59cdae0cb1d5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a6570f3b-1f4b-4d9e-b373-7e98eb686ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe30ca9d-eb94-46fc-995b-79fe70889009",
        "cursor": {
          "ref": "78818e06-aaee-47f4-aace-7caa972f5cbb",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9f8ef06d-813d-4fd8-9a22-9de029bdf812"
        },
        "item": {
          "id": "fe30ca9d-eb94-46fc-995b-79fe70889009",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "04a196a8-7b62-40ec-be52-f4ad77ccbec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc04f40-305b-40c7-a695-5cb4a8e69ca5",
        "cursor": {
          "ref": "ad4f2468-691f-4b98-bdfb-4fab141fdcb3",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "29fa37ac-8611-4a90-9fa5-4c7a08ca5800"
        },
        "item": {
          "id": "abc04f40-305b-40c7-a695-5cb4a8e69ca5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "834eafa4-14a5-4ef7-85ef-860849f678e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87873807-4318-4b9f-9bd4-29de02520903",
        "cursor": {
          "ref": "6ab69fee-2302-4ce9-a720-7b85a63649d9",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f693abbb-30dc-4b30-b042-2419b2b8d276"
        },
        "item": {
          "id": "87873807-4318-4b9f-9bd4-29de02520903",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "72e9b1e8-dec9-46f2-906a-204f0b026102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62c419e-36a4-4849-8948-78884b349b04",
        "cursor": {
          "ref": "59a541a2-8791-46ab-8fc0-294fe4dcbb96",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0e5bef84-4def-4c05-8379-abcb50040aa4"
        },
        "item": {
          "id": "c62c419e-36a4-4849-8948-78884b349b04",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ebabca02-9f04-4758-b0ca-804c19ce5659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece9da13-9298-4ffc-b06a-5017ff23acd7",
        "cursor": {
          "ref": "af173b01-a2bc-40ff-a65d-d3734e416fa9",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "201c8f09-104a-4e25-ba83-803c90017604"
        },
        "item": {
          "id": "ece9da13-9298-4ffc-b06a-5017ff23acd7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "77929703-b664-47d6-a911-b6d42a65f126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a41cc4d-f1e2-4660-93dd-176d0aa15384",
        "cursor": {
          "ref": "b61f4e5f-6466-432b-abd3-b45cd64ae1c8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "cff7af1c-580f-4cbb-961c-e099c6004a0a"
        },
        "item": {
          "id": "4a41cc4d-f1e2-4660-93dd-176d0aa15384",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3522d1cf-4393-4afa-ae81-06e0c65bde51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6ee3ce-9fc6-4a79-ab42-6ac827130061",
        "cursor": {
          "ref": "d0eeffc7-ae0f-4386-a65f-8dd581cd81a5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "473533dc-3ce2-4729-bf3c-65fba9ed2216"
        },
        "item": {
          "id": "4f6ee3ce-9fc6-4a79-ab42-6ac827130061",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cd6af62f-a664-480d-883c-465339e8f678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfee003b-b137-42b8-a326-29c4ab851ab1",
        "cursor": {
          "ref": "adba3fed-dcc8-4e9f-b94d-f5ec22f90b35",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8d0c7557-70c0-48e3-8ebb-21d96119bdae"
        },
        "item": {
          "id": "dfee003b-b137-42b8-a326-29c4ab851ab1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "9589114c-0037-4a16-b9d5-be1ffe6787de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b231e3a-d3da-4186-82fd-74c1b44c1635",
        "cursor": {
          "ref": "78bedaf7-dade-4e11-b236-7911002c7fa7",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "61dea7b5-6c8d-47cc-93e1-76040fe950a4"
        },
        "item": {
          "id": "0b231e3a-d3da-4186-82fd-74c1b44c1635",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "831769f3-79ae-4055-b824-14691356a18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989dd96e-1ed4-4bc5-b720-7a9b1f47b271",
        "cursor": {
          "ref": "e0114704-b32f-4c65-9325-b2bcfbd7a6ca",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "4a7a8fd6-9944-4da3-bcf1-5397ea1954f9"
        },
        "item": {
          "id": "989dd96e-1ed4-4bc5-b720-7a9b1f47b271",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c86ee430-3259-4198-a468-d4595b04fa9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34142d5-d495-4387-8b78-da6e76c95abd",
        "cursor": {
          "ref": "b8832726-90e7-4fca-869f-83c2432a582d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0a13981c-e9e9-4589-ab32-03a4dfbf08cc"
        },
        "item": {
          "id": "a34142d5-d495-4387-8b78-da6e76c95abd",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "49c5a00f-3fd6-4546-b1e0-00f69a520e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e767bd2a-9be1-4df9-880d-55431f191ab3",
        "cursor": {
          "ref": "4cb1b283-37d3-486a-9bba-c335c8d22a30",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6b83e279-c346-457b-9f2b-83e193d91486"
        },
        "item": {
          "id": "e767bd2a-9be1-4df9-880d-55431f191ab3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d4af1e86-5b63-4320-a5ed-3fbb719bcd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d15d0ba-9fbe-4eaa-bbe4-ec991a98a76e",
        "cursor": {
          "ref": "33b52f32-739f-4648-9083-088b35e3e6a4",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7c84dc27-c388-4d27-ac4d-d05e0c6f3f5e"
        },
        "item": {
          "id": "5d15d0ba-9fbe-4eaa-bbe4-ec991a98a76e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "897a963a-5f2b-4076-9d57-4b365df64782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480de6c6-052d-48f1-936f-a1f8632d604d",
        "cursor": {
          "ref": "f9ee8823-c106-4961-a32c-2234125122ff",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "dbdb1b38-b767-43b0-8add-d41875d65fd4"
        },
        "item": {
          "id": "480de6c6-052d-48f1-936f-a1f8632d604d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "4436265d-421d-4a35-913e-3292d71b98df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8df97f8-48dc-4bc2-bdbf-46f97e83b2e1",
        "cursor": {
          "ref": "4f8c1729-f423-42bc-b568-9a1b7ba741b2",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "80fe4bc9-689f-4e49-b0ef-5f320a5fa14c"
        },
        "item": {
          "id": "e8df97f8-48dc-4bc2-bdbf-46f97e83b2e1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f6f12646-c2c6-40f5-aec9-17837ea0fcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21533eb6-30d6-4202-bfcf-b6fd811bb0a4",
        "cursor": {
          "ref": "5d9cfbe9-5e8e-4c42-86ce-40037d24222a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a424b41c-4b7f-4922-a1e5-5b2cbde44d07"
        },
        "item": {
          "id": "21533eb6-30d6-4202-bfcf-b6fd811bb0a4",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7e1fa95b-3c3c-487c-95fe-4741ae904b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b49a27-af63-45a4-b4ee-20d6ea57ede4",
        "cursor": {
          "ref": "01fd34a6-2d38-4ba7-90c3-38646ba7c541",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d0c2624e-e6bc-4531-9b1e-37d3c715b8ec"
        },
        "item": {
          "id": "01b49a27-af63-45a4-b4ee-20d6ea57ede4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ffe27ef2-df12-4397-84a2-275643095c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85fcec10-6abe-4f4b-bd4b-84a7df275cad",
        "cursor": {
          "ref": "69e08de0-781f-4ead-be75-87aed1837efc",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "572d69e1-f8eb-4cea-8b21-5ad1c7b41ce8"
        },
        "item": {
          "id": "85fcec10-6abe-4f4b-bd4b-84a7df275cad",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "23e57d16-3515-4b2d-8332-2bcfd62e4d1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783195bd-bb19-43b3-b86c-c54ff78bad10",
        "cursor": {
          "ref": "d40c2769-aa75-4576-a238-57dcf40f477e",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b7a8d3ec-b6af-4e20-ae9f-a21975ca047a"
        },
        "item": {
          "id": "783195bd-bb19-43b3-b86c-c54ff78bad10",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "cea11b1c-0ef2-4077-b87e-4a39385a930d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a5b662-7dc4-4258-9c2f-7068bbd712d8",
        "cursor": {
          "ref": "2fa34157-9ff9-47cb-ba6d-0e3a8fdea00f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "268c65fc-3dea-4885-8d8e-47fda53f8e2d"
        },
        "item": {
          "id": "d1a5b662-7dc4-4258-9c2f-7068bbd712d8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "feda12ca-de58-411c-8061-511cf08a09e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1476f7-b0e4-46d8-8648-e0b2ff51be58",
        "cursor": {
          "ref": "1e1a6c38-5c9f-4e43-9072-6a15be214144",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d93f49c7-5eb8-402d-bc35-c747c3fab5a9"
        },
        "item": {
          "id": "be1476f7-b0e4-46d8-8648-e0b2ff51be58",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "824e820c-a961-48ca-8ba5-00bb721c9303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6904619-1b4d-49b0-a6f7-65cd4504b6ac",
        "cursor": {
          "ref": "9ca15c01-b5d3-4192-b299-6a612edf84ae",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0ac77ddd-4f26-4edf-a52a-0be8dbe2f1fe"
        },
        "item": {
          "id": "e6904619-1b4d-49b0-a6f7-65cd4504b6ac",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f622cfca-574e-4887-9a0c-e64eabc134d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2b8186-dd02-49cd-9ded-7af3f780ba92",
        "cursor": {
          "ref": "2119d399-b393-46f3-9b8e-ee90ec41d23f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e70cb528-8187-43be-a0e5-01f59e5b7592"
        },
        "item": {
          "id": "0e2b8186-dd02-49cd-9ded-7af3f780ba92",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "389bb0ad-f02e-4d56-a3e3-d6330719f77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f904d74-7053-4a53-9dd3-f01b5a2eff6d",
        "cursor": {
          "ref": "3af25042-5d24-4a8f-8128-0cef3f1d0027",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "dd65a784-ef51-45dd-94e3-a4e76e1ca71b"
        },
        "item": {
          "id": "1f904d74-7053-4a53-9dd3-f01b5a2eff6d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "df18711d-3f88-4f34-90f5-ca2add4c21ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77005134-2779-4117-8d2c-15c28b689aee",
        "cursor": {
          "ref": "fbdf274a-da6f-4476-92d0-10e40ba3ab23",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "794a4631-31d2-4ba6-9499-d58500d9ae71"
        },
        "item": {
          "id": "77005134-2779-4117-8d2c-15c28b689aee",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7a15805e-1e99-4235-b560-6b8aa547ad42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43980bc8-8bb5-4c23-a6b0-1285ffbceaff",
        "cursor": {
          "ref": "97feb2cc-937e-46c0-8c60-44ff75865fa4",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f1bce4e5-ca46-4c71-afd1-b6d61afd2579"
        },
        "item": {
          "id": "43980bc8-8bb5-4c23-a6b0-1285ffbceaff",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1827c52e-b77b-458a-a2cc-8342dd7278cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f9bcd1-c62b-4069-b1ba-84afd5ec2553",
        "cursor": {
          "ref": "bda0f524-6919-4682-b233-95a4114ad336",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "58b299dd-9cf5-4c54-813f-e667cc169062"
        },
        "item": {
          "id": "46f9bcd1-c62b-4069-b1ba-84afd5ec2553",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7947912a-63e6-4200-9d5f-f4f0282d2a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581ece54-d83c-4d41-afbd-8b2a3b0608f2",
        "cursor": {
          "ref": "ea19d04f-1991-489e-bb30-6ce155cc6a8f",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "de375599-0233-456c-835c-5c20550d9381"
        },
        "item": {
          "id": "581ece54-d83c-4d41-afbd-8b2a3b0608f2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e1d616bc-f583-4018-860c-c63970896e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693f8ed6-9ba3-44c8-83ff-cc2410e4dbd3",
        "cursor": {
          "ref": "012a462b-c389-4e08-8aae-d19cfc6f0ef8",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "af97bbd5-021b-4259-af16-94374c858680"
        },
        "item": {
          "id": "693f8ed6-9ba3-44c8-83ff-cc2410e4dbd3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e680691f-7831-4650-99e7-33ad31694209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac5fcda-ebb4-41d1-a511-e31177aeb95d",
        "cursor": {
          "ref": "e9a00d9b-7122-4b34-94bf-59e3c95aebdf",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "bfc8e923-b0e7-4b64-94dd-1e3fc738735b"
        },
        "item": {
          "id": "aac5fcda-ebb4-41d1-a511-e31177aeb95d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "72474f5c-d2b2-4178-9a10-87d9b4489377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4a289b-a861-4302-94f7-5abe4883037c",
        "cursor": {
          "ref": "5f166a3b-4365-42c2-bee3-1041572b495d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4e557ded-a741-435f-b3c8-92ff9c69ef4d"
        },
        "item": {
          "id": "2b4a289b-a861-4302-94f7-5abe4883037c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "10bc343e-826d-434e-8d8f-df9a782d3d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393fb5d3-360f-4f70-89fb-4883072f5af4",
        "cursor": {
          "ref": "8294fa0b-ee1b-4671-aede-56131a8de6b2",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5edb0c9c-f457-4b87-8d76-8f15a9ee7cae"
        },
        "item": {
          "id": "393fb5d3-360f-4f70-89fb-4883072f5af4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "281e138b-2a32-45ff-815b-612b121f0b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65de8f0-ed93-4bc1-8087-b58d03207f4f",
        "cursor": {
          "ref": "589a7d54-c9fd-4f25-a5c9-6257013d9483",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a97f598a-2065-44a6-85fc-22ab8f4894f4"
        },
        "item": {
          "id": "a65de8f0-ed93-4bc1-8087-b58d03207f4f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c898dba4-8fa2-4578-8894-7f88f35a0140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5034ed-8eee-4d79-a7ee-eac986e7bc6c",
        "cursor": {
          "ref": "ca960e1a-5eaa-4592-9d1a-418a958ea8ee",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "48ec580c-20aa-45be-a1d8-fb7f914fb0d3"
        },
        "item": {
          "id": "db5034ed-8eee-4d79-a7ee-eac986e7bc6c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c832ce15-5159-44c3-8508-86b507a1d942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca37808-4dc4-4f40-8389-eee1dda5411f",
        "cursor": {
          "ref": "b1924905-0fc5-473a-9e37-9d801baf63ec",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2dd68717-8ac3-4503-b3d0-0c5bc2199f04"
        },
        "item": {
          "id": "0ca37808-4dc4-4f40-8389-eee1dda5411f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "51e46b53-a943-4fbc-9323-248ce962f815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d365024-71a8-474d-8b8d-e85c7305db86",
        "cursor": {
          "ref": "5c60dea5-f943-40a6-95ab-8f77a31aaf8e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d5ff826b-d069-4261-9d27-feaae3d5ddd9"
        },
        "item": {
          "id": "6d365024-71a8-474d-8b8d-e85c7305db86",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1e7852a7-a850-41d5-809b-759c98a8069e",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "95fad3a6-97f6-46eb-ace6-bc6ea089dae6",
        "cursor": {
          "ref": "f545ff23-a9ea-46fd-b2c8-5c3d32687e8e",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8eae392b-ece2-4e42-bbee-4df3240f64e8"
        },
        "item": {
          "id": "95fad3a6-97f6-46eb-ace6-bc6ea089dae6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9d864e84-b18a-40be-a4f4-dbcb272a5001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26efabdc-6bb7-4c6d-b0ef-e3208fc4452a",
        "cursor": {
          "ref": "09a21d6b-e60d-437f-aba3-5993150f4909",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ae80a6be-57a4-4d91-a07f-d5ea9ce0311b"
        },
        "item": {
          "id": "26efabdc-6bb7-4c6d-b0ef-e3208fc4452a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "372c5f65-9dee-4292-8377-9446c420ee46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b4e02b-0824-4140-a99e-15e9f30cba04",
        "cursor": {
          "ref": "6e8827a9-5dac-4718-810c-0c4eb291f64f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "aeb63ccb-3bf3-4b26-881f-2dd21f238d91"
        },
        "item": {
          "id": "47b4e02b-0824-4140-a99e-15e9f30cba04",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d0439de5-04a5-45d5-ad4c-b21922db4e52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b34238c-d65d-4e47-9172-99e72575e2e7",
        "cursor": {
          "ref": "f8ca0e9f-e9f5-490b-b98b-f9629df82257",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "274c59ec-85d4-416a-8d99-15cb82a9b971"
        },
        "item": {
          "id": "9b34238c-d65d-4e47-9172-99e72575e2e7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0f9ae687-c089-441c-8d01-1677897ce8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2e3cf8-a5a8-4bf6-b35f-f662afa6a90e",
        "cursor": {
          "ref": "298f6352-b244-426f-8935-7ea0f2b454e6",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "0daffab1-3709-43e1-8ad0-1af893b5981b"
        },
        "item": {
          "id": "7d2e3cf8-a5a8-4bf6-b35f-f662afa6a90e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "09d31d8e-5597-4911-9761-09c83c709bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0436b9fc-68fa-46e6-af4b-e2121041607f",
        "cursor": {
          "ref": "37bf111d-e5bd-4c25-a825-9ad308aa4f0c",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "78a7664d-835a-4258-89d0-26b32e658ff9"
        },
        "item": {
          "id": "0436b9fc-68fa-46e6-af4b-e2121041607f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ca872b55-4058-47f9-a464-fa30899a295e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bb0e57-ddef-453e-b25c-7838779d5d80",
        "cursor": {
          "ref": "cecafca2-a416-4f69-9e70-24dbf6f7e7db",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "77abf0a4-7dae-4ded-acbd-29ec6a692edc"
        },
        "item": {
          "id": "a2bb0e57-ddef-453e-b25c-7838779d5d80",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1ea3f914-6c93-434f-9404-500e2e348b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "963d050c-8763-418e-a323-c93f2be373fd",
        "cursor": {
          "ref": "5297c2c4-5f8d-4f55-be13-afb49326aa5f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "efeb29ec-0684-4e31-9a73-6f7d7e4ecbc7"
        },
        "item": {
          "id": "963d050c-8763-418e-a323-c93f2be373fd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "8d2467fe-ae47-402f-ab2a-229c235f7bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07710296-73c7-4771-b421-e9e6a5390d90",
        "cursor": {
          "ref": "ae1011da-f302-479a-953a-316b785f9cd5",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "225fc330-54a1-407b-ade4-80ae81b45692"
        },
        "item": {
          "id": "07710296-73c7-4771-b421-e9e6a5390d90",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c1539156-4cca-454b-87eb-ec4d7ec22439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6e88d6c-80c3-4b8e-90c2-7326d3de8627",
        "cursor": {
          "ref": "b67f30ea-3e0a-46d4-bf31-1a0d93cd4b81",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "89148b43-bff2-4b37-8f20-36c8f8f28c29"
        },
        "item": {
          "id": "c6e88d6c-80c3-4b8e-90c2-7326d3de8627",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3d937f8c-6896-4f36-95cd-bff28907bf1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12d6a12a-8922-4838-90be-b02f675af90d",
        "cursor": {
          "ref": "4d9bfcdc-bd92-4a02-82bc-8ae1097f556f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "53f69bc0-2196-4818-aeb3-d32384efbe82"
        },
        "item": {
          "id": "12d6a12a-8922-4838-90be-b02f675af90d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "28c50db0-7ab5-4498-87e0-467c236a7237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080fda98-8194-4354-8256-80206a24f96e",
        "cursor": {
          "ref": "dfb176ff-e4ee-4d9d-b971-13429da7449a",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4f6544a6-8e21-4a7f-97ed-eeb00d5cb0f4"
        },
        "item": {
          "id": "080fda98-8194-4354-8256-80206a24f96e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9c6339f3-6553-434a-8bb6-53c3f34a42d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "342be9a2-e1b2-48a0-88f5-0e47580e2b27",
        "cursor": {
          "ref": "f5801ce7-0e60-47bb-8739-df8fd39651e0",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a50f166e-70b1-4b8c-a851-01fe673409bd"
        },
        "item": {
          "id": "342be9a2-e1b2-48a0-88f5-0e47580e2b27",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e915b362-3222-41b7-a38a-4bfea53c1fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfc55eb-f994-46a8-8fed-b8eb9e823125",
        "cursor": {
          "ref": "fc9b6fc0-a86d-410f-9c4e-defd84ccb2bc",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fce01b68-84af-4b0b-be74-03c7b302b1ac"
        },
        "item": {
          "id": "0dfc55eb-f994-46a8-8fed-b8eb9e823125",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f466d9b5-09a4-454a-be99-0777a84842c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d397048-fef3-4265-9b84-fed4a0d4a8a6",
        "cursor": {
          "ref": "e4b3c8f5-30e1-422e-b93b-e4eed22e36d9",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8b290598-888d-4895-866d-fe8b6aa341c3"
        },
        "item": {
          "id": "8d397048-fef3-4265-9b84-fed4a0d4a8a6",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7f24b14b-83ca-4dd8-823c-efd23f871565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a15fc9d-caf5-4c60-a38d-77fb9eadd0ff",
        "cursor": {
          "ref": "1bd94488-ad00-491e-bc75-7426adc61ba0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9ba836e0-03df-404b-a4c0-3b5924043a66"
        },
        "item": {
          "id": "1a15fc9d-caf5-4c60-a38d-77fb9eadd0ff",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c545b937-c9e7-4c37-b8bc-49e8dacf6a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da93ac0-e865-4ec4-8778-393ea65ee563",
        "cursor": {
          "ref": "9bac4d90-c1c9-4407-9a5f-e0a7734d3c73",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e0245878-9ae5-4043-a771-9de3b45bfb1e"
        },
        "item": {
          "id": "7da93ac0-e865-4ec4-8778-393ea65ee563",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b226f607-3d2b-4f21-bed6-ce6a20858b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cf6271-0c39-47ef-a81c-d9682058a177",
        "cursor": {
          "ref": "7baa3ee1-4bfb-4019-97d2-01535b8bd238",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "97825fe2-7828-436e-8901-cc4243e7a162"
        },
        "item": {
          "id": "23cf6271-0c39-47ef-a81c-d9682058a177",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "dbe66a55-0de0-464a-b857-6b82d5b20dfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186725a6-4302-4367-8024-db136e20df36",
        "cursor": {
          "ref": "ee5969da-e9ce-46fb-9539-c4be8ba471c1",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "606df621-1764-4565-bd7d-a75f08b99fbf"
        },
        "item": {
          "id": "186725a6-4302-4367-8024-db136e20df36",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "377d6479-9b6b-45ab-9e1b-7676c1bb7a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b751bd1d-9a63-4dad-880e-89a0bc7ba213",
        "cursor": {
          "ref": "af608895-d114-4625-9099-3be9e7d90d9f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "7c773df5-6bc8-4e09-b378-9497648292b4"
        },
        "item": {
          "id": "b751bd1d-9a63-4dad-880e-89a0bc7ba213",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5e9c3094-66d1-4d78-a947-defdbb308036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e55dbb9-0e3e-43be-91f4-2495bc7e3b7b",
        "cursor": {
          "ref": "a1f94cd8-87ae-4206-959d-11c50dee18c2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fc72db49-5e65-49cf-a4df-1a2f80eefbbe"
        },
        "item": {
          "id": "6e55dbb9-0e3e-43be-91f4-2495bc7e3b7b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c03cb049-9652-4df4-98fc-abd24eb69052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a120f4a9-c01c-409b-94e1-9815eceaaa4d",
        "cursor": {
          "ref": "05c4aeee-5e46-4929-962a-2d7ffee04ff3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "d4b1b3b7-1efe-4287-8c8d-7818672c0f73"
        },
        "item": {
          "id": "a120f4a9-c01c-409b-94e1-9815eceaaa4d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f84e12c1-310d-4345-b7bb-aa606dc6dbe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19fa28c-c70d-43cd-b14f-c1bedd3fa415",
        "cursor": {
          "ref": "0e6f06f4-85e8-4e42-9779-7d1a0fcb44e3",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "67fb473c-d6ce-4c90-b267-14a451fbc38c"
        },
        "item": {
          "id": "a19fa28c-c70d-43cd-b14f-c1bedd3fa415",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "6b23b2ad-8b8e-431b-a909-d33251bab7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f16ed28-5980-47fa-81fa-6a05ccf8c486",
        "cursor": {
          "ref": "9a392e64-a7c5-458d-9c5b-b1a0ecda3840",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "82cb4322-5547-41e0-b89c-2abbbd2b49b7"
        },
        "item": {
          "id": "2f16ed28-5980-47fa-81fa-6a05ccf8c486",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b99e9661-90fb-4dbf-a750-73392d9d1b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ca76c3-ee36-4bc1-8576-b4a7c489fa9e",
        "cursor": {
          "ref": "41b2a795-fcef-4e6a-bbf7-fc20a8f5da64",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "e5dc9fd9-12e7-4665-8da7-405bffa2e66a"
        },
        "item": {
          "id": "d7ca76c3-ee36-4bc1-8576-b4a7c489fa9e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f6ed251a-0f22-43f6-999e-48c1e63546b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c78dc09-1251-4220-8f6c-9ca3b755bf90",
        "cursor": {
          "ref": "80acca07-5be4-4039-9df3-51fd0ecbf5bf",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "89a2180a-168f-4a6c-8514-5dfeec41a8cc"
        },
        "item": {
          "id": "5c78dc09-1251-4220-8f6c-9ca3b755bf90",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "99e8b2d5-5447-4488-ac29-c8c6516fcd1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9fe3be-008e-421e-bab3-6be9f59cbf2c",
        "cursor": {
          "ref": "0e0386e7-2fb3-44ac-a153-cdc8aa6d5a3d",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "2cdf1aa4-ef46-4cc6-a3ff-e2136a574a0c"
        },
        "item": {
          "id": "ee9fe3be-008e-421e-bab3-6be9f59cbf2c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a7fa492e-72cc-4208-8736-b008592dedb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5927b581-2dbd-4d6b-8d98-39034dbab02b",
        "cursor": {
          "ref": "7710632e-65ea-48b2-8f5f-14ec4260fca8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "eff2528b-7da4-4c68-abe6-8f89c93e09de"
        },
        "item": {
          "id": "5927b581-2dbd-4d6b-8d98-39034dbab02b",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1f9d5dd3-a155-48f4-93c3-85d036ff394e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f18a8d9-95bb-4735-b7a9-375f6acb5ce8",
        "cursor": {
          "ref": "abd0328b-8b86-455d-b9f6-e94b9c0e7a66",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a677abee-c23e-4e01-a0cc-d1b702968268"
        },
        "item": {
          "id": "8f18a8d9-95bb-4735-b7a9-375f6acb5ce8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "891e0580-b43e-4e1a-ba76-1440bc13419d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187102e0-5119-4d14-9cc8-06caa2f8024c",
        "cursor": {
          "ref": "1fe917c4-63cc-4b56-92d0-0596fa4823f7",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "83b0254b-4bb6-4259-a5f8-a94e7f776e96"
        },
        "item": {
          "id": "187102e0-5119-4d14-9cc8-06caa2f8024c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d0b21f41-ef62-4eba-9912-44f406699df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f242db05-ee35-4ede-bc35-796461ea924d",
        "cursor": {
          "ref": "ad9f5f8c-adb9-400f-b526-e2323cdd7e7c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3f0ddc11-f918-4f58-ae2f-54099eb87511"
        },
        "item": {
          "id": "f242db05-ee35-4ede-bc35-796461ea924d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9a9c84f7-29e9-4460-898c-6f6df32388ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f97423-b297-4d09-8c42-6c6caa34a617",
        "cursor": {
          "ref": "c61ab0d0-38cb-4a9f-a1b4-8144c06aa8d1",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "34062b78-9f51-4935-9647-382ad158025d"
        },
        "item": {
          "id": "c8f97423-b297-4d09-8c42-6c6caa34a617",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cd7aac1f-50b3-4ac7-9ac2-f91cc01b1f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3a6a17-d93c-4b13-8335-d36adcd445b1",
        "cursor": {
          "ref": "4b043f36-888a-41f8-a7e0-a3c07e2579cb",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "546bb839-63f4-47c4-862c-8ed1f1717844"
        },
        "item": {
          "id": "9c3a6a17-d93c-4b13-8335-d36adcd445b1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ffe9de1b-be4f-47bc-b737-9d34f96d3f93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b264aa7d-776a-47ab-8cb1-9404d45b3527",
        "cursor": {
          "ref": "51795529-5f1d-4cd8-8007-d27e4db5c4e1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "321fe2cf-caac-4fa2-837f-40b5cf089c8f"
        },
        "item": {
          "id": "b264aa7d-776a-47ab-8cb1-9404d45b3527",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "88949f6c-1c0a-4115-9f7b-7b43c9730ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14566175-3a96-4a26-8efb-61ed431b3240",
        "cursor": {
          "ref": "0bf560d3-b15d-46d2-bf0b-4a70a5ea16d3",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "f0acc953-8ee6-4b41-bfc1-9776c3ad1335"
        },
        "item": {
          "id": "14566175-3a96-4a26-8efb-61ed431b3240",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "654d09fb-ad6e-4498-a7d8-b8d9304a0cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6e6d03-9418-48c2-b610-55c2fa499950",
        "cursor": {
          "ref": "bb0f119c-8844-49de-a3ae-91640032be9d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a96aae69-b64b-4997-a343-8e60bfdc8e54"
        },
        "item": {
          "id": "8a6e6d03-9418-48c2-b610-55c2fa499950",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f5cbd748-bde4-4d35-b399-138d1d985085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62771bc5-8c0b-482e-ab2e-35d274e38761",
        "cursor": {
          "ref": "7da8509c-d114-4337-8cfc-a2f78750deb6",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "047273b4-d829-475e-8a02-ec8d2f0e33f4"
        },
        "item": {
          "id": "62771bc5-8c0b-482e-ab2e-35d274e38761",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "50bf2952-3926-4df9-9c02-bc04f6d569ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0739b0-006a-490f-86d2-325630df2206",
        "cursor": {
          "ref": "ecf61b22-37f4-4888-ad46-6648096fcf50",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "5102b911-8845-40b8-b100-ac18c2f5e370"
        },
        "item": {
          "id": "8d0739b0-006a-490f-86d2-325630df2206",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5c6ef5fb-748c-4ce6-8f14-70ded2b143ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e3cefc-b70c-4067-9de0-a886f3ddd8ce",
        "cursor": {
          "ref": "33ebd363-5cd0-495e-a479-6a425ed618a6",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "9031fd7f-4664-40a9-a1f4-6f7d4c250a32"
        },
        "item": {
          "id": "d9e3cefc-b70c-4067-9de0-a886f3ddd8ce",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "431b72c0-9678-4a75-90ae-82755ccc302f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b6791f-f4ee-424c-ba4a-6596872dea51",
        "cursor": {
          "ref": "d16b1a0b-68c4-4349-9fe3-7fba3124dbd8",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "817c0777-9cbe-46bc-976b-7df7b05ddd66"
        },
        "item": {
          "id": "c5b6791f-f4ee-424c-ba4a-6596872dea51",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "39f7b135-6359-4246-9f01-dd9d4f42176d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f5e2119-90c9-4ee1-9783-7ff33d5d7be0",
        "cursor": {
          "ref": "478f60f5-667b-4c2f-a740-75ab271e57d4",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "48b0eb85-19eb-4076-893e-ea9b90dc77ed"
        },
        "item": {
          "id": "2f5e2119-90c9-4ee1-9783-7ff33d5d7be0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5d077087-429f-49da-97a6-82f7e09c92af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777a9fc8-1749-4425-a256-0fae3a9ac299",
        "cursor": {
          "ref": "74e0bbec-ed3a-4bea-b2d9-c8a2a11c5e07",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "a4631850-4144-41e1-949d-882900bd254d"
        },
        "item": {
          "id": "777a9fc8-1749-4425-a256-0fae3a9ac299",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "dff87519-152e-4831-8c8f-7ed659afb6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1504950f-0f06-4aef-97b6-b72ac5a384db",
        "cursor": {
          "ref": "5355f0eb-3ef8-4324-be6b-3edb3ee570d3",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8dfbd309-44df-4952-9293-e04902d18aa8"
        },
        "item": {
          "id": "1504950f-0f06-4aef-97b6-b72ac5a384db",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "14992f69-aca8-402f-99fa-ce19208455e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56e3456-2a88-488d-a3c7-7e50d39bd9c1",
        "cursor": {
          "ref": "ace1c469-09f0-4958-b907-291c826714d9",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "82d41fda-c08a-4abb-98e8-b64d18664396"
        },
        "item": {
          "id": "b56e3456-2a88-488d-a3c7-7e50d39bd9c1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a50a62fb-68e0-4eae-8dd3-b0895e6aaebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55bbffe7-2228-4b06-a579-2acaae199009",
        "cursor": {
          "ref": "5c90f1f9-f3ea-48fa-8a23-a4735ce4c380",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ad8ea626-cadb-4db4-bf55-d8a3f79d913c"
        },
        "item": {
          "id": "55bbffe7-2228-4b06-a579-2acaae199009",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bb5cf1b6-6e96-4db6-b6ce-2a7eb319566a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4600e5e2-6ee4-4f04-b688-c9ab692ad278",
        "cursor": {
          "ref": "c6845498-44e1-4f3a-8ffa-38d461682bc9",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "93a53429-b5af-429d-8c3c-3440a1e711ea"
        },
        "item": {
          "id": "4600e5e2-6ee4-4f04-b688-c9ab692ad278",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f11f2672-4ccc-4c52-92e6-bb1a1f6f1450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bf32c47-ac9b-4107-b744-20a81916765d",
        "cursor": {
          "ref": "2dc02691-823d-45a1-9b83-26b67b292145",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "242c35b9-0368-4352-a0d9-33547959ed53"
        },
        "item": {
          "id": "6bf32c47-ac9b-4107-b744-20a81916765d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5b7d40a2-e9ac-4bb4-b5b4-7ee3bc935f4d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f930d1-3ce8-4d24-ab66-f616503482a4",
        "cursor": {
          "ref": "f6ca2176-6e83-4bda-8e90-9aee875a80a3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "4fb58f42-2c21-4343-aa0f-782b40c8db37"
        },
        "item": {
          "id": "e4f930d1-3ce8-4d24-ab66-f616503482a4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "403e2d32-1f9e-4dc7-b570-d91f134bf621",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "08b5e829-318d-4ba5-8c33-5c465853ec9d",
        "cursor": {
          "ref": "984e7d77-3a6b-4fdf-839d-af43e5646385",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a69446b5-4eb3-43f3-8629-177e43b86a20"
        },
        "item": {
          "id": "08b5e829-318d-4ba5-8c33-5c465853ec9d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5b1bf7e1-a531-4441-a0be-c60a5aa7358f",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cc75cf-9a92-4557-aa67-eb52518a9e00",
        "cursor": {
          "ref": "c1aa2bda-6ea9-4fc3-a1c8-b4113b1e5363",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6095ac3b-f015-4246-a0a7-9944c1f99f90"
        },
        "item": {
          "id": "80cc75cf-9a92-4557-aa67-eb52518a9e00",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "008a0315-f703-4116-ae38-948d3313bf76",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "94db980d-64a6-4160-8f9c-36f9691a2093",
        "cursor": {
          "ref": "a97021b9-eb99-413a-99d5-3ff01febba3d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b12cf4c9-5d03-4bf8-aded-4f1116a05c6e"
        },
        "item": {
          "id": "94db980d-64a6-4160-8f9c-36f9691a2093",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "78a6329a-96d2-4491-b5f3-8ec8dfcb6617",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94db980d-64a6-4160-8f9c-36f9691a2093",
        "cursor": {
          "ref": "a97021b9-eb99-413a-99d5-3ff01febba3d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b12cf4c9-5d03-4bf8-aded-4f1116a05c6e"
        },
        "item": {
          "id": "94db980d-64a6-4160-8f9c-36f9691a2093",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "78a6329a-96d2-4491-b5f3-8ec8dfcb6617",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685b93bc-85fb-4a60-9ae7-80c392c2a2f2",
        "cursor": {
          "ref": "75a92efe-4abd-4521-a69d-55152045db23",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d0cf600c-8a5b-47fc-80f1-be3041056aae"
        },
        "item": {
          "id": "685b93bc-85fb-4a60-9ae7-80c392c2a2f2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "010831bf-22c9-466b-baaa-d8a891480372",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11ae5fec-a8de-4047-9293-a000cd244995",
        "cursor": {
          "ref": "6ce8413e-d007-4b18-8eab-96a64dbfc69f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b34c963c-e560-4f9b-915a-95a9b21d5b45"
        },
        "item": {
          "id": "11ae5fec-a8de-4047-9293-a000cd244995",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fe904c6e-bb53-41cd-b56b-2e738d5fbe3f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}