{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a18091e8-5af5-46b4-bdfc-021d0a8eb9ee",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9a4282e3-32a7-4860-9e96-4f01be890094",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac966beb-b457-4f86-be07-97593441216d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "739882b7-efae-424e-bb6c-b428e367af8d"
                }
              }
            ]
          },
          {
            "id": "448d00a1-1019-4d3b-aa6c-ce70fde53244",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d576291-2446-4f7f-b8b0-f9b13c2ab164",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "499b0f85-d234-4d96-b958-df79c6c7fd7e"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ad8b34c0-2306-40e3-8bd9-73c83a46c8ee",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "22c857bf-9682-4271-aea1-a820b884d451",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99513d4d-e236-4759-aba7-920b3689aaec",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82efcb98-39d9-49e9-b2e0-fb4e354d616d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdd21711-e2ae-435d-82c1-258e8e2b9c44"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2aefb7ee-7136-405c-a824-ed918d3d3681",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3971a035-ee9c-4206-a94a-ed602a4136b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4a84ac50-459a-49fc-8c98-c2973389baf3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "28421fe7-d0e3-4825-bcd5-073db50ccc33"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d9afbb21-77d6-45c3-ab19-014aa50e0f9e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c0653ae1-a617-4f8c-b83a-b8e7f0443f0d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5a81666a-8ba6-4c15-8c76-8655f7a7cd3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "641097e6-1331-4979-8b46-c1436b6eb3dc"
            }
          }
        ]
      },
      {
        "id": "3b7fce00-1fae-466e-83e3-ae8252a9706c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "0acecb60-7777-4ce1-a44e-6e4da3b98288",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4ebeb6ff-1eb5-446b-aeb0-e4e3ed89f679",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "abc4a641-da10-4f80-8b62-723ab2dfbb01",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aec0541-a135-4442-8553-b660b9a61caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e15ab93a-b76c-46e0-a6b4-3a7e89e28f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d319f0a8-8d56-4083-8ca0-7a0be2daaaa9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1f7462-3c2d-4f06-9d63-05f7ada6cc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a3e9c39-1e78-445b-ad59-9e0905e820d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ce9141b-78ec-4d81-8484-84e40e4f8575",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167671e1-5a3f-43ff-93b7-e8e6b1d012a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "329df752-9dd7-4f5c-b18a-04c17a261e75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "677d6c21-abe6-47a4-933e-ea682c6a36cd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd63ad3a-26b0-4687-b16c-516579e1cdf1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ee51c9-e0d3-4580-bd7d-45f6cbf411df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c917d9ca-9631-4b8d-ac1f-a3cef029b7fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7f8b2b-05b2-453b-b531-b4df6a53833f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ce893d-d1c9-4b89-8345-7edcbd6738dc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "926e47cc-d758-4968-ab8b-dc62d9a07dfd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "24cb53b9-f1d4-4d1a-8394-c720b879ca65",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a9d6574-55d1-48c9-bbfb-2104f4ea6d2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "45436a7d-36df-4eac-9bc7-dd3894ca7155"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0291447-cf36-459e-9df3-5796b65aef68",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3cb010d0-af3a-40a8-a6a6-c2ea7ecc606f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d59d23c7-0f95-4788-a480-473424e252ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d3e9df5a-3a63-465d-94e5-8f2f16c40437"
            }
          }
        ]
      },
      {
        "id": "b6ed01ea-ded5-40e9-b65b-4c18a18b8d96",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "85aacf22-b266-4834-896c-de3bca31d7ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "331840ee-856b-4a90-9090-608254422483",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "476ec801-c7cf-42aa-ad3f-761cdc22f2ba",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d40630c-5c60-4833-a975-a7d44844df82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ebac67-2fff-4600-a397-67038ba18f9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a946d62-3ca5-4ea5-92a8-a34d6f84cb58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dccf1674-7cfd-4d72-91e3-104eac6b5ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1032fde-ac4f-4715-9b41-0e1c7fa5ac07",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a226a858-de59-4537-87f0-dc861ffed025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b4e239-6438-40c5-ac7b-86c3623d1540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4068270-1b0d-4288-ad61-b7fd9ecfe97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f2c2005-d6fb-43d8-b80e-bdad3731fc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa028cf-531b-4e0d-837f-dee5a97d6b15",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a0dbfa-f09a-476c-b95f-179275259888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d942af2-c87b-4716-afe7-80fc82c91c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bde6e46-7935-4199-820c-097dfab91ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d459d9cb-fc07-455d-ad21-6bf287740f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "504e44e4-967c-42e6-9f61-cfc7205cbfd7",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c940ebf7-b57e-489b-8b4a-e331ad6f1214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd11c91-4a30-45c0-be32-f8033a09f706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d80de0-6216-479c-8b72-8f4a125aa85e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "afd191ab-8eff-4a0a-a567-1e7c22b0157d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51d2960b-ddc4-4fdc-a1e3-4db5a5456f8b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8ad064c-3404-40a8-bce7-9c83c7d6c5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ffa403c-c39c-4c2e-ba2d-aac2d05d98b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7a3169-ed0c-4ffd-8b4a-43f9fbe2e1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "affb1501-6336-4e8c-aeb1-0b78a84840cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc5a8d1-d922-466f-9997-16a3d3668cff",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d63e2c2-b390-4bcb-ad0f-34c0e154c7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78ad0679-8712-48ca-884e-039390242bbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7797fb9-992b-4934-9054-0514357da72a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f2c7c46-01e8-4cab-818d-489f5b230a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb004e54-8599-466f-a620-90b99ee29d86",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5615da4-99d5-4a8f-8568-9984018c2ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43f2752-9572-47b9-bc55-5606d00ff850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f717bb-fa7a-4c0a-8fec-e72b74e2e54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be089726-df2d-4a07-86ab-cc897f16f593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df1a8c0-cef3-4441-9c99-bc800f4aa59d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e72d6ba-b0e9-46d1-a24f-dda7aa01a2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f5425a6-bbea-47dd-a2d3-862817e643eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb5e76c-f1be-4e3e-b5b6-bccf77f08939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d4fa710-7f0e-4e7d-987a-9d74ab810af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e91865-a7e5-4cac-9f94-d3de82f2927d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b53c15-7752-4298-ad72-06ab93a25f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e4d58b0-d3ec-4849-a615-8e90d3a36a3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a154b056-5f7d-4da9-9cb4-06a251a30158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "152ae767-9862-4733-8ce1-eb460696707a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f10fa7-9f63-4299-9e93-29b48703af95",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e5b95f-e58f-45ff-9d6e-482198c07332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4320db04-671d-4607-8fe5-dc61d1e678dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6730be71-c6de-465b-98f6-4ad0ebd64406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "774e7944-02d6-486a-abb6-cfd9e9ce1522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "529a6f5d-b445-4f22-9c72-b5131c8cf7bd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8989ed-4fd1-4960-9912-a40bfd63123b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6bc04f-d322-4258-b413-a76ec20be38f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d0971a9-f7c4-46e3-8335-7a523e5ac50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fae19b56-7f8c-4126-a6dc-c5146f82cda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e9e0e7-3ed4-4a4e-b77c-fffdff3801af",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ab5396-aa16-4a1b-86a2-6db7c53b43ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afb683a-7b89-45c8-9b12-cecc8f692985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5de044-7039-4689-8081-0f8e9e92f20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0a8fd33-5d5e-4f6a-8dcf-db0cc873741f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5e639c-39fd-41a1-b87f-804b3a16ef5b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae0901d-a47c-4039-8b3c-8df7214878a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "686712fd-c4a3-47e9-bc4a-e4314c3b5caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0f2886-0a5b-4f37-9b4f-efb4c6db5987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64c48eee-a52e-4f62-a025-5fac0aaf04b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0f3d32-c0fc-4064-b117-3df1a109668e",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36405f5-4cd7-4a44-9038-b4432a074f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce614a2-f09a-4707-8acd-33f62505390e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3a8e28-0de8-4e2c-b336-e5739f8ac8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db599e27-2c40-4232-84ba-e056ef1abd49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458ce690-2b1e-48ac-8c76-31c36aa30a31",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc80e66-0f43-4561-8e08-944e83ffb2f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a56ce24-6557-47c9-88e2-c5079da496ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a05cd0f-5e7e-4d42-af77-8cbee208de68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a30e18cd-26d4-4466-9982-5f3bd73ea116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccd4b2c-1531-4724-91e7-dcc327f883d9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc40cc8c-a120-4872-b046-136782ddcdb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a142531-21c6-412a-a6c2-c7b088d56a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9cf74e-7507-4ca8-ae6c-6da64417cfc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "303f29ee-daa4-43f0-8682-362060e3730e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e8bb33-63ae-4ff9-a56c-52ead2e20fd4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aced796-4e69-4f9e-af35-7cd1a84d1f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd1552a-97a8-40fc-91fb-73940d990701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bba53a8e-12b8-45ff-b037-ea2aa4cc95aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd334d27-393e-4eea-bbc7-64d20bb59506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb0a6c2-9511-4cff-8835-0f31a1393b97",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d35355-67dd-4147-a7d3-948331ae0650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aba832f5-e367-4301-83d7-5dd7b475b187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc87dc9-1543-449a-adfc-9645b94a5b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "87b4a7cb-e775-4b88-ad24-c869b6d0384c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2110ecd0-6752-4309-a86c-2b0d5bd80021",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57cc86b-e11e-40e6-bb75-03f2be5ca6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052d768e-8c14-4d98-889b-e69499b7f195"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d2fdcc-2e1f-4f4d-a15a-98508b8c7dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "820e537b-67c9-41be-9760-f85f9e0af3a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c53771-fe5a-4756-9ba0-bc36058f4966",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94d1c8f-84af-4270-9db9-3dc6e1207d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97ed516-781a-42a3-b840-896fbd34cda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a811c55b-05d0-42fb-b9d0-c83244084394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "82c598c1-fa30-44a3-8c65-1e80d9e3a3f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eace9d2a-3f01-4baa-9305-9d2033802ef7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "258310be-0074-48c4-9c87-a3eadaa7b93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a145bb7d-669e-4811-914e-aedde2e7f5a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccef2f9c-43b4-44e4-8a57-49591b0b1d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cc6a6c5-a29d-43dc-93a2-7e184c018b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fadb9f43-2865-4218-8c65-1415a36f2288",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "603df379-e7c5-406b-bb4b-7e9fc16eea87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea77754-2ef7-4480-9d8b-c6ab9c97cbf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e9c6d2-40f8-4a25-953c-872f68262a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "77b45278-3a79-4600-a583-8eea71a6d8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34a0687-da1e-4418-b858-716f2b0c3d3a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a399b85-e6da-4901-9033-c7ce9c1bea7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9edb3b-cdfb-4fde-b8bf-9bc0f8668bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee82665-b190-49af-b160-c061a0e4f377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "43ef3792-0ef9-48fe-8f90-47c705fd629a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f61b8b-60ca-4b65-9f5e-c04b05fc3458",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf3f411-4243-48aa-98dd-70f41f15f360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa53017-2490-40ae-a5d6-7439757a491c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbda6fa-1748-4e84-a11b-28c1abbb153c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0a6c49-1d2a-417c-b86c-9b9abc16c7d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676f95c0-aa61-4cc1-90e2-2368d6c66e34",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6343d5f1-e5f7-4496-831f-78ec4d5b82ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6806d128-a021-4185-a949-8a4efbf0574a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8285ab15-21bf-4e7e-a60a-602e3c873696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "75ab52d8-7266-4a20-8f78-6631364cf6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd43d1b-7890-4c35-9098-60fc289fde72",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44230f81-3eef-4480-8b23-404c85b71d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a10716-f64f-422b-8953-c4f13a89cb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846c501c-0a27-4ed2-b72f-ba2c8a01f25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dad680e-440f-4c21-8f17-1c9daa33dc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c64f9d-14ec-4a29-9828-f8a93f811cd0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38836d8-a2fd-42a5-a256-2136eb08ce18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8344c7e4-450e-4372-8f28-bf2384818d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7433d004-7288-4b84-82f3-7606851dc434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eef1b57d-0352-41ff-8a19-02fd0be40501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ce949a-5c06-41de-84b1-aa5e0a9abb1b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f67910c-1fb5-4cf6-87aa-a581c5c48ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96f58038-cdc5-4697-a994-206d9a9a8f95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5cd62da-7432-487d-8ae5-e138ff47199b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f46f3da-1136-4157-94fa-07fa1c87bf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bbd8ad-a70f-4b1b-a64f-72f5a0303b8d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e32e11-66e8-41c0-8773-eb1b930d54fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f32dfd29-2328-48aa-a367-f2956036d917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4716f11b-e947-4c01-bbb5-4c9fb6b138d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab29ec94-c9df-4294-b97b-098ccfb8d7ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5275f412-d3c3-4cbe-bc81-19a7f0aa858c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d7f08a8-128c-4584-bfbf-10fc8ddff2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fd75e69-640b-4730-aff2-b316dea4200d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4de23fd-a5a7-48cf-a7b4-d41a4dd11a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0df069ba-ef08-4336-8c01-21cb49fbad38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe18edcd-b811-4492-b1ca-b5c2b8a47c82",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd8c4c9-5187-4309-84ab-c855907ca09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf16b4a-721b-4e8e-bfb9-e90e105c67cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e45c06-cdad-4fdd-b9d6-d7a440036ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3542e7d7-94cd-43a3-8712-5d0b5a6800bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b426173-f37a-4b4b-8486-dbb54f008d41",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51448974-6fc8-4813-bfdb-03f4d8e0adcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7b22744-86d3-4eb7-b496-dbc4b9537f4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3a08b5-4dd5-4b17-97b1-92abf9b57b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "283c5234-f29b-4d76-8ad9-31638809293f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9a3d4d-8b80-49de-add8-04515081e913",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c5e6b2-f148-450d-9e9f-ddaca89bbe12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c611308-1403-434c-ac87-7ff6e6cbe969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d099282a-0e66-478f-b924-27d3c8eb105f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76779127-a2fd-4bf1-9801-453a9577ce88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50eeeb8c-83dd-4e1c-b8e3-20e1d46f0f42",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4e5bf8-0e11-459a-a1ad-bab35d6ac79b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e50bb98-6632-4851-bb33-0c460280acb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd8dd73-6371-45ec-8913-cfc3de23c450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4523f2d4-d004-4d09-9e28-ab76b08e27fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4804188-126e-4c6e-a5cc-72b7d5ac131d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16961cf0-8034-4ceb-abbb-29eb06691819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b89cb3-87db-45a4-ac93-86b0892e340c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cbdbb6-3b94-4c16-8688-a65357a294cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "906f6468-5f36-49d8-913a-bbfa747f9b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9886e606-48a4-44b5-a58b-23c1dd224bab",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8951483-e7d4-4fd2-96a1-c55e6d6fee0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df348872-a136-419c-ad90-6c375e9cf1e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138e07dc-a542-4fa5-80ef-702715f09f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9ba6f9-a7d5-412d-b1c4-c28f147f9896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2643397f-7573-49cb-aea5-7955dc389148",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff9e32b-e922-4878-a54a-73a5b57c316f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58b0e37b-92c0-4f5a-b27e-e9cbfc87a60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e46f88c2-cafd-498d-b352-5f3be719c419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9305b7dc-b10c-4d5c-860f-9ff10a540522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3d63882-a03e-4f3a-b103-8b72530e1e37",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9643feb-12a7-4a44-91bf-32dd557105be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a7cb2d0-6cab-4d7e-bb6e-98e8aa94ca53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad680da1-f908-43e3-bf28-c08d220c8933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "23c1b941-c924-450a-aa2b-ca6652f37ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82731cf4-d87e-4922-aa01-02f07c1392ac",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f094b70b-1325-4a21-84f9-678c7c0f2f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d177307-8d03-499e-a9a4-7a57ea3497df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cf2283-76f7-4de7-8fd1-26af48c71363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e63de30-77db-419d-b2cc-d857c4b24817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4936c90-a37a-4e74-a0a7-78d394ec6b72",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a05c2801-d5ae-4b1b-9404-be4baffa9f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890d4f58-edf6-4f7d-a0e8-efc219aa20df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ddf5ca-787c-43f5-a40b-99a0de85acd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f152bfc-3b63-4c46-a248-756e447d0ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd853a8-64bc-4e8d-a972-d09504ff76b6",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65bb7834-b62e-40a0-8c89-68bf4bd3a06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd51b7ea-6125-41ad-baee-2802ee96135e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60b65d1-2c13-45dd-b869-31245d23e971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae913228-260b-4123-bbf1-9b76b93b4f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e8009d0-46c4-46cf-9c9b-48712e44614e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dce7a1e1-02a3-4ca6-a301-d96ffa83eb5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd159d0-0fd2-4bc8-a25f-68fd17809702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abb4aa8-4874-4617-80cf-8179ea43317b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4e695e5d-3a5f-4542-8bc8-ddbb1de808e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7ce884-f0f2-4ab2-9520-eb2338b322c4",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4822a60d-41a1-4571-bced-058b44eddf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53edee50-b4ae-4757-8c6a-002f6fda6f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be4274d-59a3-40df-a002-0e4914501243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "64b85ece-96b7-4c2e-b269-c62a45277479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8bd598d-a4bf-4094-b8d7-66f8f93c28cb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d4b535-0450-4e0d-9042-4a46ebdb3529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a8e780-daa2-485a-92ae-e94c4c1699fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e72849-739f-4887-82f5-536e0cafc3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bc6462-ac6c-4ed8-a938-697f3c9028c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da49390-dcd4-47af-adcf-be68cfe0ee77",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b64012-c86c-413e-8d96-45c3bdc0ceb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b600ec38-280c-482a-aed9-5d24c667e2f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e243b8-0d57-4612-a0d0-cb21bae627a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b922931c-68c6-4c6c-9678-99e78aed4d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6215709d-3126-4115-b58b-1104947fdc24",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18870a2-3777-4f4b-911b-4c349e4eabf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321d660d-3c1b-4190-af48-a70654ce38e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ea2d49-1ca5-48cf-ad38-8cd95beffa5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "025ec19d-248e-47f4-8834-75aede67c415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc5bda2-25d3-47ce-bb99-8aa8670bc534",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946c32f8-7c52-4dd1-a0bc-f3a4f0d30a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2258b54f-0d3d-4624-a4e4-3c2564ddd8a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad6f98b-cd38-4941-9cb3-921653d3ecef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "182ef852-6773-4989-8e90-6c7d4469159d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ce1771e-8e2d-491c-b698-8b205b532e1c",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d2440e-bb71-4941-be67-c821c4a3bcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2b1e8de-dd46-4400-9828-a5e4bd304027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd27e1c-d274-467c-a958-a9b4013370e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29e5a2ae-8013-4821-96ad-25e1cd512214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69d7ae8c-32f9-4e19-b731-1b2b71aafaaf",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57867be5-295a-41e2-8698-79b471b877ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d586da6-2864-4b6c-a7a9-38a236483baf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0185fc70-6b01-4dd5-86a2-a8dc86a35c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c48d60-31eb-4c31-84a6-4ec023fc10be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318cba9e-5830-4659-a5b6-1bff1481ea40",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51918cf9-b4af-4f1b-8cc2-c5077c0ce7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cf030ce-c729-4f83-8883-d28574400b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea04e30c-bbce-463a-ae98-124120d09ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "81885c32-1529-408b-834e-89016feb866b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b82ce53-eabe-4e89-b3ec-7a4663f0ddaa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ca03e5-98e6-4811-a30f-9a9a29ea2546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7605bed5-c529-41f7-8db1-222a906ed454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a8b5c9-1a91-42b1-afd9-5a85bb788de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7611c217-c22e-48dc-b101-9fd757dd4c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d171109-4b51-4f85-9334-48e93f3b5f4a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877a1845-f6d0-4c4d-acae-e1dd4be12873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbccf186-0966-4d4e-bd87-6a962d7b671c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e843dfb5-c8d5-4d39-8833-bc266775cf84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d96995e-acf5-4f08-a8c2-0d1d164feb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abff83f-ab15-4ea8-9219-65baa99d155c",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5680310f-f395-4b9d-9d1b-29772cd1ee73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc50b5d-fd16-4be4-815a-b8c9f59f694f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddea573-a56a-41bf-8c83-098ea51d6d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81fc00a6-f64c-4bae-85ae-ce36d3f95b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca03372-cecc-48bf-a4dc-1789ddfe0e06",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bf6f7f-933e-48b2-ae63-55c8d8773806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828916ab-a75b-462d-a3d4-ed944cdd7ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544b1284-844a-443c-ab77-425a57f7def9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57f02dac-57dc-4cfb-a393-f83cf8eb5e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97d61d36-f618-4431-a7a9-859ea6f297d9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf74dbcd-96e2-4e28-bfd6-5cbc0f4e5b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ed19c2-2700-46b6-b412-8a2b304b13ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f74fde4-b4fa-4a82-ae7c-8f94684b76a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb3c89de-7881-47ce-b652-52781c1ccc14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fec284-75fa-4789-b37e-fbea797ccdda",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c880d5b-bc05-4aee-a7b7-dd4490b59e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb3f058-c8f6-4c6a-a5f4-e5bf507b7073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094d4a0c-90cb-4a20-8790-721e0f34d1a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4977a73a-5e83-4800-9af9-18cab72f7365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa41771-055d-4731-be52-400762e3d8bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c428f0a-f38b-48b7-bfd6-ca292137df53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70e420ad-8296-4ae9-9e16-4982526eb9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ec28d0-0993-47d9-911f-f25a1d81e412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf7f048-923c-4989-ae1a-38f81196773f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9659ac72-b91a-400d-b8e7-5fca6548516e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d365e721-19f3-4253-a6f4-d03e8e8c32e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f539ea4-3c65-427a-a2ed-522f7a5c6af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e585a7-e233-4adc-b90d-0f5fc01194ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "08b8cdf2-a362-4551-8ba1-5e587fde567c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54eebb36-aa5e-4488-a42e-46fd5786b025",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f2190a-af99-4405-a612-d222455fc481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2066a0-ac69-440d-ad1a-1b77961508d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f57f52e-f274-45c2-b4cc-3cec97636f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d962295-8d32-4bad-ad86-4abbe2598589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97c4509-3608-4033-aefe-8a021a0b9ea6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbdc58f-ce85-49d1-8031-ccd3856dedf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf8c1ce-ca07-4ff3-bda9-ead68b8af050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc872c3-b092-4d76-a57e-44c2a9246548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "80e5bc8d-8322-42a3-bd7d-e437b4da1e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c177e70c-8c63-4ee3-8684-a03095e3831a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddaf1825-8c96-44ce-9efe-92ef5819608e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56056160-6769-43af-a9b9-ca4b37b3f490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10de910c-d20c-4c91-aad1-f067eaf0341b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3dd93c-6b10-4825-a654-8f8b6d6f3688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c21103-0329-4575-a1f5-a4a56d209629",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583c6dd3-53f1-46e8-af08-3e4201ecfe29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd8edec0-d32f-459e-b542-8f1a7078ee19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd602008-7144-469b-80f4-d2e2ef383993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0481184c-c36d-46c4-9089-1b24ef668ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97732b5-1bb2-43d5-9d0f-245f363ba4b0",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9886f01-9bee-4ba0-9dcb-391aabb47840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f9b396a-e413-4cb7-944d-37cdb022018d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a86d53b-5e4a-4d94-a213-5cca01cd2ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d830134c-f158-46ec-bdf2-ec495ce6ec17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fd8853-4394-44b2-abff-168977a480b3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e567048-0b31-4a36-b6df-805bf4c2570b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95a740f-6ea5-42f9-8c34-ae61d63eb3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceab036c-3507-4552-a169-d5e6be989c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d9a1fc-6155-4d1e-ad3e-3215989267ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524bf8c4-3935-4c0b-bab6-cf46b6829498",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ac2e04-7178-434f-9076-b3d02e2c532f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7092aedb-4e26-4e45-97f3-6fd6ba9b8062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24126ea-813c-45e7-ad84-7fafe789b435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a590b3c3-9edf-4c31-a670-e04cc3fa5b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81798048-e524-45b9-a02d-1807aa513de7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75e3529-221c-4047-ae24-474511162e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190fc7b2-37dc-43d7-8007-879e3ad6417e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313e695b-837a-449d-aeb1-ecef018a6fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "375e63ed-fedc-45f7-92d0-f7bd2e31943c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e4ef5e-37f7-4bc8-a73f-2cdb1f5dde75",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55040fa8-50c5-49c9-b504-7b82a777f3e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e0070f2-ad1f-46d9-b85c-90adad52ff7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99804c2f-9e89-4291-a498-cb1a1c5dadb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54723def-a9a3-4b59-85c6-8d6692cadf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1806708-3e2a-4dee-9f97-cd352796d2aa",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6532926-07d5-409c-9201-fa063b8c1c6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a598f08e-778b-4268-8d4a-0e0fd5bd9236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac2db6b-dbae-4fc1-acc3-3d74d449ae7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e987d01b-6135-4e4e-aa71-49d6ceeb2c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2a5fb3-bfef-48f9-9e90-4b0ed34a9451",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efc178b6-cc65-442d-9e89-1fd61a788fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71388bc-8132-4ed3-a8de-119876e33e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed6e198-d961-4491-b9c1-a9eb9d1601cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7dc5574-9cf7-4659-951b-a8cbc1bd036c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626ac32d-f717-4753-9695-8908605de8c9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fedf76-c8f9-4ead-af26-e36f041a1048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b2c6a4-e5b2-4d0f-8bea-11e9eb8f96dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acbcf11-8b9e-480c-b874-3fdfc6bb956e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81923443-25b6-4074-96d4-d8dcbb86ed2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e4e8cd-2ac1-410c-8e89-001a0dec73f5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eda3b6e-63a1-4a7a-a4e8-e54af1792acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90b22c2f-f4e4-414c-8ac9-723b4728bac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96fa354-412b-4bd1-b306-c6e2cfbfb66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3679c904-f17d-43da-8636-87586676fbd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619d939d-29f3-443c-9d46-abd3b0aaa26d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f6d7c2a-0202-4f39-aabe-f49e06b031c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab60a5e-cc8f-42f6-bbfd-8a5c706d253d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e2a1d6-cb5e-4c10-a3d5-4697a9e9e2f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ece88fc5-0e37-4295-b589-3be1631e0abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab250ff5-0412-46dd-b291-acfbdabdd5aa",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b0f781-7a6d-425f-a2d3-2a911da1339f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9671d349-a0ca-47cd-811c-2b7c7cde3aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c778226-14c6-4f54-881f-fb11bea9be8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66750337-00bd-4c04-86a3-484bf404c4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8a4b90-b83e-4f4f-8446-7f97019b57a0",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34086d25-86cd-4d82-b2a3-23955b462230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b18e4e65-f865-4373-9fae-850af1f38ecc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9153dbcc-932c-41ff-9278-f6fc56c4e105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "83d8c285-a90f-4d85-82fa-ee6e5a51c401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07db8dbc-9417-4445-bb1a-b0b87965bcb9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f19771-f731-4388-815c-f583c727c1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616ae0fa-679b-4343-aa95-cf50997fd6c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d483c2-4ee3-454f-8603-3225a91a6abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "811c4d13-097b-4edf-b896-8d6f4dc9ab6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539991eb-7b0b-48e1-a3f3-0d05fbed1d65",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fe8883-ef81-41d0-9532-ac73e7b9d32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bfbc10-04d8-487c-8569-c089323d0bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a270ab6-2989-4935-bcfb-f2eeffdd25be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeea7faf-5eda-4d55-809d-7216dccd7d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a884ed-9061-40e8-8b7c-35ed9e8527fe",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf13e148-d528-4391-a1b8-674710bdc932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9630f2f4-8734-4c12-aa79-9efeb4a3298d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20850869-ba6a-47ad-8b8b-99374d611fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a681d90a-3ee9-46ee-8ad6-de5a5b71de70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfb13d6-cff4-4873-9542-6d11d3ed1291",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99458a6d-92ed-4243-983f-5b23654d2f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b205456a-04ab-43bb-bed5-55c86d39bd8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e6ffb6-01e4-4b2f-83a6-d2598ca4a465",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82ff14b3-f676-4088-a55b-8f6fee769424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6210a54-aa02-43d1-808d-8e64d5296e28",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5dbbcc-8d36-4e9e-ad57-7790b2722bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1801beb7-2365-4662-91f1-7f8891e76b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044281a1-9a5f-4e6d-a38c-1c04b5d47520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b774d30d-8320-454f-bd50-1bd47de65b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6bdd61-0aee-46b4-a3c0-18981efc9fb6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01849cd2-a781-439a-96d3-18fb5e8651e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02e41fa-a7c9-468e-a723-09f8bedd59ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc26318b-063c-4795-8619-4ac97825ed0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb92e17-75af-4892-885f-88292609cd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cafdf46-3004-40a1-9eb8-dda4a9d0cfd1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12ce1d52-8eb8-4ada-8c76-a85858d36926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7fcafb-12b8-4624-bf33-815029b5db5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfbc0b7-c87b-42b2-8110-a395aa0bb4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b44e598d-a1d9-4eef-93ba-71845f1f43e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc97ef9-34fa-4088-b54b-c6e1b2a16e7b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984fc3f7-5a9b-41d3-8512-e77ef0483456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34269efb-4715-4300-ad87-de90d21fb458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4049fa1-082a-4837-ba89-72bec1647c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "810493e3-75ca-4b66-ba4c-53a681aab2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8146cc3b-cf3c-4241-a27d-49ffe598f8b3",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643763a6-8208-4ebc-9bd9-e8b0fe9f1b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc012b0e-35c1-4e17-9fb0-6bb137c5cd6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7e254c-67cd-4e08-9eb4-3eb38649ffde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf55289-bdcd-43fb-8b95-a9aebe025aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caefdd61-14dd-4142-96f4-2ecd26806fa5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17984e51-17a2-40f3-8915-38796f556eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e59e53-66ea-4ed6-97d6-584070cee46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdd9b27-81d2-4a46-8c10-582a318e836b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da8b9de5-bf67-41a8-b9c7-dbb07586980d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f39a243a-4009-4a06-b978-eb128b08b974",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a47cd2-f697-41c6-88b2-22e2b40141ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccf9ec4c-dbaa-4e8c-937b-42ae93afbacb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484193b4-7538-4bd0-8de8-21075072ee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2777a6-7023-44dc-8d27-ba2848245c43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb61c36-6488-4b72-afa1-54c3e4c82ac2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6abb68-4b5a-4492-851e-d4cd43488166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc1bb76-1579-45ff-b7e0-b3afaaca695a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf35e7e-975e-4b88-b3b3-1c6f332213df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "99c0df2b-680e-4534-b82d-2af4341aaedd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a3e34d-6831-45b8-b88b-d4cebc512a82",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aacc1fba-cf9d-4fc0-bfaa-88bfcd20270b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f1211e-7d31-4133-92a7-a7c0ded05362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88d7c68-3f99-4b45-86e0-939893805929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cee29b-d35c-4e0b-8045-f147720a7995"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76a00342-d112-4280-8cbe-0b1c9e36bf2a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ad1a3f-f475-4cff-b1cc-ca658b7c8b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e471a86-c8bb-428e-9df0-2cb38c086059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d4dc81-9920-4c07-bbad-e4a2537568f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fadac4e-d8a7-45a7-89c9-ec7cb4e73892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6934f1-3c2c-4a6d-a925-18074c09b5a2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3893f29-fbe7-4e41-ab68-325c526f7400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ec227e-b590-421e-baef-5ca06f5ae5ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a121ff5-f061-43e9-8d9d-fc3118313df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "90b62564-a92f-491b-8d64-d1288401b4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7265fb8-a99b-463d-bde6-f5622f25030e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d34089-d011-47db-ba7a-b7f8873dd22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a82e7b-4204-4bb8-8752-1b413f1b8cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14e677e-9a2d-442d-b0ff-9f3be0d8db72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a52dc38c-0f63-459d-9bbc-8edd4c95315d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7d4560-15d4-4d70-8095-f490ffc18c64",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4f40a9-d577-4e81-a54e-e06ee7ce46cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc92c6a6-eeca-44de-8aa4-b6e00e1f4c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09044bf-176d-4745-8f2a-5f80ed880f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5e1315a-e570-4c37-a5e3-ce76f3968050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55349f3f-29b8-4fa1-8eb2-f7a7b6dbb6d4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a504f235-a800-44cb-ad83-07c31329821d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "85500ad7-cadd-4293-a4ba-157346ed1462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "550d61fa-2c9d-40a1-b5a9-db0e279ab9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5446271b-4314-4f35-ac2a-86a788a886b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3dea3133-0140-4c82-bf51-14292853fbc8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8302a0c9-99c2-4720-9d04-0096aa07881a",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ca44630-c36e-46e0-9d7f-ea7c44a7b57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c529c28a-ba18-457b-8994-635da7025d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025f904d-5449-4c06-96d2-08de956441ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51ad0ef0-277c-427b-8013-a32e5a7b1c1d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "286bff71-5329-4de2-b146-91a4503ac0e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22a9c454-83ba-44a4-b086-37e2ad3026ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b7adf54-8896-424d-bbb6-9c3e4cf20e0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de5a754d-844d-4a25-a2f6-62a4dbf21937"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6f2fc7b0-983a-4760-a4b8-71d57a0af23c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "61afd19c-262a-4e5e-a5e4-56cade291416"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9d7da4ec-329b-4b11-bb8f-3be07f11bac6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a0be387-2588-468e-af21-dc1dc1f4ccd8"
                }
              }
            ]
          },
          {
            "id": "84478dbe-eee1-4b2b-ba3c-5294fc72fdcf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5ef7e9c0-f901-4381-a389-40a747706075",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "33f9677e-eb50-47e8-80ea-4ca94022d3d7",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2b9579-b26f-4476-b3f2-885d4973145c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8c1eaf62-9894-44c2-9a1e-e3b289e36323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a8d1e2-e07c-4699-ac9f-b265a30c3e3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14309544-638a-4994-9dee-f90ee731ad63"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d3e11e32-b9b5-414a-afae-5fc80ffa4e6b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a99c7ff4-8d01-453c-8fcc-0f166a59d5e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "805b4132-ea2f-49b1-ade3-33c375dc37f1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "386a1b2a-c9d7-401b-8258-d41ae902f2a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "690110c6-b4cf-461c-a98e-793681dacd66"
                    }
                  }
                ]
              },
              {
                "id": "233c792d-d5c3-4655-9925-d71fafef35dd",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a67e0272-cf16-4c47-9d48-cded4fadcbec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da0e7772-4de1-4712-9e87-4335f43e100f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8d402831-d88e-47c6-9cf3-21419659bc15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0d46e7d7-01fe-4b1d-be83-3d5f803ff0a4"
                    }
                  }
                ]
              },
              {
                "id": "1b637945-d112-4533-b83c-51464efb202a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed3ef91a-1bff-4b38-8ad4-b05df3271519",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7147ce2d-742e-4393-9a1d-790c73d6a82b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "807a6435-93de-405a-b014-b14de9b5a319",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "97c388a4-8f45-4d13-ba77-d3f8226c8ba7"
                    }
                  }
                ]
              },
              {
                "id": "08571c88-dea1-4931-ae0c-3b6753a9a7f4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa871d14-e27b-4e49-bbf8-fd6dee9d87d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "979e623f-7e2c-431a-ba80-e790e6913fcb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c982e07-1270-4c1b-afdc-c9889e464135",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0c70d542-d4d7-41de-9d78-def8a2e0d38e"
                    }
                  }
                ]
              },
              {
                "id": "9e308234-f584-47ca-bf59-4dc2047fb662",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6997657d-0504-4271-8ecb-aef22275a4ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db1c2cfe-0832-4d7f-a253-42d4480a3648"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "67c34b1c-c281-42c7-b30f-011dd54f0994",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4ead378f-674b-4177-b87c-4b279e5ef46c"
                    }
                  }
                ]
              },
              {
                "id": "6890eaf6-880b-4d09-bd23-1e493e0024bc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff2d5120-f321-40a9-83a3-04cbfd6af525",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f54ab8b5-9d5b-41e6-adca-7e45e115ea41"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "284ed1a5-4f87-4163-bf67-59af7d43843c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9d71a886-e061-43cc-91e9-37d587850675"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "36777b1a-f05a-4ff2-9a19-cdcd97ef4b4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5bda8fc1-d61c-454c-a322-8f40db02c99c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "809110b1-1181-4991-836d-d4b6528bc82e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5cc02974-56e0-46be-8240-b6141ebc51d0"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "848f6f91-972f-424f-b261-f29cc217fe33",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "86eee99b-42f1-41b1-8a54-711f2920049f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d9276ce-51e9-4f50-b347-39604fd8c5a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "530659b3-58b2-44ba-9577-326142500fe0"
            }
          }
        ]
      },
      {
        "id": "a85af13c-d10d-428f-88b9-cda514175777",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4a6a062a-588d-4581-bb84-78db6b2263cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "77937e0f-484b-482a-829b-2bb4b1ea6923",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "413ee9f8-f8a7-4acd-8231-6a8bd558598b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f773bea9-8171-4819-9c7e-8f6c5ab5fc12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111a8a5a-3fe1-4f41-a4e8-f0099c161ea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847ca406-5e86-439f-bda5-7102450e85a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "53e5ca55-4da1-4f5a-b4ec-7fd8aa57e08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c336b568-4415-4b60-ab5d-16eec46add8d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2160a486-d774-416c-bccf-5661707e780a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1348d5c-f8e2-43aa-994a-d9c108e6077b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcb54b6-8f30-4aa4-b819-9980e4ebed30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3b5f9a-e3e2-44f5-9459-c5db121cf880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbdf6ff-13a0-47e1-860b-5aa1a703e650",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53301150-93de-4775-ae5e-6d38d0ec20ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6a58789-9a26-4cd7-a5b6-f0def1896987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee86f13-97ee-4498-85b5-01540bf13b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69032785-0ba9-44d1-a6e5-8a45722a8f78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8b4ba4-4bdc-4a11-a0aa-981badbfbe86",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d72a7c-5091-4e39-b217-bc58d632ac56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3663e72b-b38a-44a1-a603-45f44195d536"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c644a6-4f04-42b0-b5e3-1ec55a7ca032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca340fe8-5c31-4ae9-ad1b-b03d2445b2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc4303a-4ad0-4737-9b67-71a657ad8cb4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23aca3f8-bc6f-4944-b966-f440f7cb8682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359c2607-466e-44a7-ae28-d1019a9afaf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e079e423-98b8-44b1-9d68-e5d1f652a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "609dacb5-00a7-42fb-905c-dd14171b853f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724d10ea-585d-4708-a8d0-adfa84e1191a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fea4bc-9317-4bcc-b390-61b7235faa73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6232b4-8175-4be0-bde3-06d8911ba451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25cac93-7b03-4b8c-bf02-469ded007159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7866f3e-85f8-4e7a-824f-58576ab0c9a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a613b1e5-c685-4fc5-ae14-2c0f77d50567",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e40113ae-1882-411f-9b1b-17acd3a4e487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fc2be6d-1515-4fb8-b00c-f8f29748c0db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55141c86-5aa1-41e9-9a34-e2db469d0492",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "95b7553f-7111-4b0e-8be0-ce8182932790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86221b48-8757-4658-be9d-011d5aaef353",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3ebed6-18ce-4974-a66e-40a1bf20646b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1338c8db-f714-4c07-9305-319d2600d8ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3144b88c-ef7c-4ae3-9c26-860926f89cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c1d04d-4421-4a08-801e-79f7646bea9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc1bd9e-0384-4eff-b64a-5307e36a09b4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2366b495-d0cf-4df0-9052-9dcbe2a0a9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "025a4a15-6851-44f6-b429-e40f4922f597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c84ed40-56e4-4364-a672-f6a2108665f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "878d91aa-bf39-4d65-ad82-a5c92c73b7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de0a1a7-9556-497c-93e3-4c2b1f38dc18",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3003b2-6f04-4440-a98b-17e7680087cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9570a2b8-3ead-49c8-a9f8-7f1ab94026ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ec1e0e-a6a7-4cca-8e40-d3e52a11eb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "399b35f5-fe6d-49a2-8204-629ebb829357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ea1c6f-3ae2-47a7-a73a-f36112544200",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea36f5db-1d0e-445e-8723-90bfc76563f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62157b83-5d82-469c-a22e-5b7805939d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e62476-7606-464c-9c1a-409055d11911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f68741a8-29f6-4c1e-9ce1-33636ee20ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7304f8ac-919a-4104-9987-10bec778f802",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d34d07-8a99-458b-b60a-a89abd35c9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f387e65-4aac-45b9-8b70-ff363920e2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7a8fdf-2bde-4b92-b95e-2266bec4217a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "73b41801-d6b2-4ad5-8de2-d98b84f8b797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5277c8-05be-44f1-b9b6-d4386e9a936e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e3dfb27-0dc4-45cc-9712-edd4b5ab667a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f083aa-d16b-4324-b9c0-5021d53ed6cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eee1674-0e94-4b98-8a66-ea7e4d1c9bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3863541-64c6-443c-ac7f-f8b6aff7e5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f1d7a5-341d-475c-8310-7db9be73a704",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e791ba52-71a0-4904-b5dc-9a8d3833d866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43248a9-0e2d-4733-ab9d-0a5606fd0637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cc4b9c-ce8f-44d9-96a1-4c513b79fa5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7780e6a0-4c52-4e90-9315-324b81225e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c17a183-6a4e-44fd-9dbf-e0c7aa2cead8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa923899-111d-470d-a4f7-0943d1c2c71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ad264c-2488-4cee-acbf-524dc49d49a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb1f12e-92f5-4dbb-93fe-c37ba385857e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e9d3c8a-59e4-495b-8efd-8e526b4644e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "441c71cf-e26c-4e9f-b697-5d58946a6d24",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc435776-e721-43f5-8fde-e4e7f0c37a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "323f16cd-ba07-4360-b6bd-b907c14657bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a8d55f-bdfb-4186-bdb0-7164c25f3add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4ebdcb-8031-48d4-b734-aac4991ea721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca0f9cb-5193-4992-970e-0054148c0974",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "723f5d8a-c4f4-4699-907d-818a6bcbe961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69845502-09b0-45b5-9b6c-c497d3bba0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e75d112-6969-4e50-98e3-997adf467696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e00f0e35-1df5-4228-9185-7ab2da3e63f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "075168ee-6515-423e-9b50-87d38c76e75a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13ae079-8601-4e46-b282-ca0a50fe9d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9ea11ee-a476-412d-94b0-884ec4d9dc74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a94af8-8e2d-4f76-977a-30b6fb08409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc033177-8b92-4663-8198-955b8ef7e9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd75c41-f982-4794-ad30-73f43c3043af",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4388963e-875e-4c0b-abc8-db08426ae647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c191b82-d9d5-4cfc-858a-b053534f80b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a26e2a8-a2aa-416e-bb71-65a36efb41cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65980ea7-24e3-4604-839b-8d4d8b7228d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a69643d-7f14-4c68-8312-45b5f3cfece6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255a54b1-ecac-4a89-b79f-69a6a6072d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc277e1-5280-402e-8388-c3421bb7c5db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c781937-2afd-4847-bc8b-64d1403901fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4289494b-7995-42f3-9ab0-8d9dff92d205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d8bc735-accd-4d65-9db2-ee7fa67d2ed4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896b392b-b9f9-4dfe-99a0-76efa092c838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c346e45a-1c74-4a83-b3bc-b85002472d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a26bf00-8628-4da5-b034-a1842812dde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "552115d9-eb65-4211-9a17-fc23594d532a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491c2575-baf1-4c5c-a56e-bc9329c489ed",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82d43d0-338d-4801-a56a-6508b22f372c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59d9a67a-a97f-4c9e-9ecc-ef579e98079e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ba1cc0-d9a3-483b-adbd-9381ed4a8a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb9697a-3e10-4d7a-bece-17f3412d9787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3150de79-4ade-4348-9efb-e2679bf455f3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917458b8-d00a-4c39-b2d8-4025c5f99e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efed0a9c-c181-46eb-8321-307809d599ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58cc47e-a819-482f-9e9e-cc21abba66a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aee581b9-ffb1-4d3f-8f60-77e2e12509bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0b6ca1-b6cc-43af-bfc8-789e98657b20",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8ea759-92ff-44b8-aad2-056767129003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b97fe124-187c-45f7-bdaf-c786194699c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7954153f-5755-47a5-8b12-246345b9f907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d00c4a-9d0e-44fd-a08d-32b78d42b675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f50af328-fc10-47d9-aa67-2b784b3f8cc9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9081c1b9-6bcf-4f1d-83dc-787abe3a99ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d268d6-2148-4cf1-a330-9acc030de61f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938b5ad5-d594-4c47-ba83-b4e5f66c6e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3735fb8a-197d-44e3-9bc9-5c488ac1140f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb95eea7-785c-4f1a-81aa-b3c01f982560",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b7e7db-9ac9-4fd3-9b7c-152d6bc45400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1990e6f2-325a-4b81-b519-f18e8477bff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e2394d9-3f2c-4319-bb35-9cb9853ae35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ca1947d-3f17-443a-937e-0f9dc3cab58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8dc1e39-3087-401b-87aa-d0714ba210ae",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8754ce-1283-4d18-a783-ba2717fb7a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f363ada9-56ad-4d3d-b09f-27b31407ceda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e6ee4f-dced-4478-93fe-20818ea16fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21d21f5c-4a55-4b3a-ad0e-ab477db241a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb153d6-1be8-4a9b-9b77-163afab1d66e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be3205a-207d-4aa1-bc57-72eba0dd2bd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309141d1-f442-468e-a69a-513d9114eacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17fd6f5-09d7-435d-b2dd-4ffe0f0f9152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9dd2c5e-b4e5-42d0-9fd2-8dd1ce03392a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52547fd-e7fc-4b78-b337-0ff376b21ec7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7deeaa7-8750-4307-83d8-ef8314c9de68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d67d09-0d5a-4f1e-9b52-951e1c7ea52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0bfb15-aa14-4286-a2e0-d6853055af6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2a9fe9-7330-42d1-8032-787bf55303ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef22945-4e80-451d-9f91-70ab0789e096",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b05381-8c94-4bcb-95af-041ad600df76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bc5a49-0d82-4080-960b-81eb105e2279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419b0ad6-72f3-4624-ad3f-e2f7ede77487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81ddfafe-96a5-4ed2-8f04-3c7dff231df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca47e93-9e86-4b3a-81bb-8d1550057164",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dea4339-8b66-4a58-a47e-4d3716b8bdf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "901d379c-ee6d-421f-a377-802e08f6d2d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d937df-d932-4378-a1a2-729127067100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf755784-ed7a-4307-a473-39c12a88eeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9aab51d-2882-4ab1-a023-2648b0f62ae2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcb9b68-dd64-4cf4-96a2-bca80970c34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf72d77-9e02-4f24-adee-3cbd903ed8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245d839c-5fed-4749-bc15-76389e71aa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f85905cf-8bf7-41de-91b3-4a917b4968aa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2b3e3f51-08e8-42b4-805c-515bfe463129",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29484326-a088-4fee-8873-0de7bfcffa5b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb87c1a1-96dc-44e5-bcc4-232f7f8bb29e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "83721797-f42a-45e2-9e68-cf9fec15f75a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c924ea-0405-4768-b5ae-2ad1dd112bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98e1302d-6cc8-4bf7-b2bd-9058c55a79fa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4048925a-124a-4979-9207-eaa7e861a0e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "977a4f34-6f5f-4340-93a0-c5c497beea7d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a94d073-38eb-4358-b9e4-dc6c14d6114f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5100c208-b393-481b-a703-fd0f1ec106ec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "475105fb-2403-4e31-99d3-f6423a1c6ed3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c454ed35-1618-4dd6-ae9a-1a729dc8397b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b79e2030-25c8-4f7f-baf0-a694ee5d8cfa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "567a9646-eac3-4a65-a2fb-2e46f8767e61"
            }
          }
        ]
      },
      {
        "id": "e379c7c8-6cf9-44cd-a1ef-baa623e6fed8",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "22dc40d5-6366-45b7-b9b1-c9a42683eb3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "793f22c6-8d4b-49f2-8893-d0da97675865",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bab9edfa-68b2-4db6-8400-0406397bb2bc",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef86440-7a7f-4af1-8875-f4f0e7cb7e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0353227e-8463-44ce-92f3-ea62cb8f1ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31e37a3-b388-4d6e-8f55-f6e475455c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1404f5-48b1-4e37-bf02-935d1f44d1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78861411-1a8c-4fd5-a9a3-6cabfedd3041",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0205890-6f36-4324-b598-ed5512ccd1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42418c96-0c29-45c5-b54d-d780314a48f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026c3a3d-2419-4d67-80e8-9f88e154d4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ba7037c-d1b8-4211-9641-229cfad7e07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748d01df-d1da-4eee-a46b-f82879781b18",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc918140-bd7e-4202-962b-5771f881e013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589cec02-b9e2-4c4e-a8c9-c85cb0460517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f75e9a-1f13-4135-9a20-9ad15458bce7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "149701be-a3b4-4032-bcea-600c8412464b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87aa0a78-226b-42d6-89b1-17086e1ac849",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d535c81-4a0a-4fc9-9d4c-fa7e0a0a2c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abfaec85-0e9e-4a27-8d5e-a8928e2301c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5633da-7314-43fa-a222-68760ba33359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fef6a78-c581-4a7e-9b64-9d76eb1ebe26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b414f66-7303-4569-b243-b25c71382843",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3964ca-145b-430e-89e6-cfdc8a0cdfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9607c3-4cfb-4dc5-af15-e54d6f22fb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa9ad74-42d8-4612-bdb0-4d641f27a5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53dfebc4-61a2-4f29-b6a4-7da605363fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b8f674-dcf4-4971-adfc-4a826bf75714",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badeb827-a46f-41a4-8695-1f9c47fe6fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34ad3ca5-51f5-4429-91ff-6aaa1f9770b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df914ae-2705-4b3a-b09d-a9978dc84c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "92d5e6dd-e626-424a-9e97-da094f55f1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c490c8dc-bba7-4e15-b323-9ef4811cdcf2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8fc4af-0d4d-42e7-8201-6c326416af80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0c4181d-13e7-4ea9-af13-c64d1ad20852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0c42a9-d859-472d-b552-cb355ce8e26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d10a2a94-ec19-403d-8aa3-c119332ba1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fafe6a-c03b-4d9d-9dd2-5687dcb89fe8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4e532f-93e3-4d62-b1c6-778b213206f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b1a978-8fa7-4b78-978a-9db711a2c7ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf665af-18e7-43a0-8e71-49b818f7d608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a67e55a-a5f9-438f-984b-4c43ba05b695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a0d5ad2-7760-4a52-9cf8-dca04335d2a7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d95f874c-fae3-4eda-9da8-47e26b45a149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc08dd46-7546-4020-a185-55abe0a45b75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40f0299e-f3d1-4365-b38c-1a2a50a290c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6be72ce8-2ed7-4f2d-bc38-e65a6f112973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bc3bc5-5285-499b-9475-e04e05b2f07f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8761b6a-2238-49b0-8091-bdb6c9a009d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fee300e-f7fd-4ac6-821b-6936ac175172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e400d2f-07e2-4714-b57f-a2b08292bee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b57bcb2-bfbc-4720-849e-ea4369b8defa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d30aff-e156-43fc-8175-a98a67d95695",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d63277-7b7d-4f18-a7ec-38a7971d4b31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521a074a-54c0-4d38-bbe0-fdd6de6bdbfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41d31f2-f4f6-4fc9-99ad-0d4606d5278c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "512fa70b-02bb-4ba2-ad49-21f1720df424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25e25805-518e-477c-833f-71149f649b7b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bb8f17-a4ea-47eb-8516-7c3fa8237c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c73c13-27d5-4bda-8afc-c4353cfc9bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c0cf402-8c8c-4a2d-8bde-54c30e15f069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5fe9b5-124e-4d3b-801b-c24c3f5751fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2500d47-cb33-447a-a6ca-0c1976cc2e85",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8137227-9039-4cba-a004-8efd79379fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c3a4a2b-f4c7-4d99-b1de-7dafce5e57ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab005d01-4084-435a-8afe-028097a5dd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9238d4f8-647c-432b-8cee-f353e46aa5f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcfd488-6d96-479e-8e06-91c534c67b65",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f33d49-6a9a-43bf-854f-90ef47bf279d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a94a26-070f-49b0-9160-1c89257fdaa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7259fea0-e74c-41de-aaed-3b4e7710265b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8aa0fa3-293f-4a71-bf46-43495b679894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19022d4-8367-4aa0-8189-803020e879e8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2631b83b-f5bf-42a3-a050-2118029e425c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8caa6ae8-90c8-4bb5-b1a8-c9f8a764924c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07cbf1c7-3337-4026-a90a-f736d71115cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "973fbc77-f31c-4a47-be96-286c707485f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a86f1f7f-d5df-4521-a737-adb381c8fb1a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12797001-9e3c-4afd-8925-8b68f7b33e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a3edbb-b80f-4570-958b-fa191915bd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc9b6985-c163-4134-a5ba-240a2e9d5dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "956fc6fb-7f7f-4c56-8a8b-e73d0ab0152f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76258487-c234-4894-b687-26c3e7e17708",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ed9c8c-5f4c-42f3-8e91-84b032ca3094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59eba3ee-8774-4b8a-b6b2-16b6824278e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f93368-1651-430e-b02d-64e1c9efdc79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e391f8-54e5-4b84-bdd9-a8e0ca1e2cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef01756-b435-4ba0-a2b9-00f46b79f93f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8ce6d2-10aa-42e5-a332-7b6311c51ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a37217-72c7-41fa-80ce-cd302f6ad365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5464acaf-be26-42a9-a0ed-24990f67608e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eba3063-52de-4ac2-b78d-0400012f4a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c504e4d-7a5b-415b-bd70-4725907e1822",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12338f0b-eae9-466c-bfde-621ec59f6ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ddbb0b-b899-4a36-997a-cb9de8ad8108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c108c5b0-ab69-4d60-bb88-4797485a512e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbd205f-a72f-4102-bd9f-47a25ed9a5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018ff532-3037-487a-8ac7-b28fcde158f9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b0130f-b29e-43cd-a84c-3ec97b169ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588de61d-53e0-4a4c-98a4-cc6092611ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48e58807-9cda-43a1-a2fc-9b6860e91e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "105973ce-795e-4e8e-8625-35945720709f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf4b687-d992-49c3-9ee4-7f4415761dba",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358b4c7e-eb6d-4380-b2ba-59b8dde7168d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ceeea1-c546-470f-a29d-8ef9f46f12c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95868db-a704-4b88-9bfd-5d940d785fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbd24b7-97af-421c-bec6-654bbbad99bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72dbeda5-07c4-4042-907f-9875e1686e59",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9e595e-564f-47db-bd52-a26ffee9ca66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a78e1da-a279-4d4c-94a3-675f0bfc07c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dafaf6f-531b-4e85-8c66-9994b9a3e40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8332e5-643b-45ab-a5ef-ee279cacddca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a32467-bbec-4f45-9cb2-22e230e9bc3f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3472980-d8e6-45d5-b0c3-9c37d2860e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b97b0df-24e0-4131-8394-a46398c32827"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0346ca4d-bef9-45b6-8bcd-9fc13a4f513b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28451d5e-4f6b-48e6-9136-048fe6f45e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2306f71f-51c9-4514-9705-3e9ee51c02f0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3629e79f-6979-4b90-851a-9f9bd128017f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19bc6b0-d351-4fe6-b257-9832a886b594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3767af6f-2f67-495c-9557-69540ea3614d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59c7ebf0-6012-4e2c-b227-6d78eac25471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4860acc0-128e-45d6-a88c-6d71c4bfd28b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37e90e0-ba65-47b3-a1f2-2ccb5ad69f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e800ab9c-8fe5-4ad4-930b-661f6cfa3e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2f182e-d849-406e-af0d-bb14bd5169be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "482d0eb0-174a-47c0-8b43-ae6dfe19f1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f8e93d-016c-4b93-984e-d9886be409ee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ca99ec-0f0b-4b3e-933a-4a9c916f4c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6206ca6-276c-4939-abd3-ad09400f57a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6957ace7-4fd8-4299-9e59-3308dbb7c1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c004f2-65e2-4e1d-8ff1-306c93d58f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145811f2-b9bc-4786-9b07-cb3cfc4a6174",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5085b6c3-714c-450f-9a1b-5ba33607ebf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a562ad17-279e-41f5-a010-fc8171c7345d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79133d12-a648-4540-8221-b8ec967a6ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1acf2f8e-6d72-4837-8497-4ec31bd47789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580ad43d-eb98-41e9-9f7c-1017a29cf7f7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4830662b-858d-4786-bc58-2da91c9cb8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef92af9a-4ed8-41a5-8bcf-1b91dc02ea03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5301f5f-38f1-46f9-be3f-d55dd089ee29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14a716e-264e-45cd-bd7e-127a839dd44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3feff5d7-0392-41f1-9489-ddcf70c2cab6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b727c605-0f99-4c5e-840e-9b3ec8b844dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "128784d8-0b96-41cf-aca4-5b67100e69a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd70be67-825c-4983-9dc1-8301e51495d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18f0f799-bc06-4313-bded-3b4a666c1dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6daedda4-3385-4aa4-85fb-2c5acdae7ecf",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0e2104-d98f-4027-832d-f94524505731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfde7536-5ab6-4d0e-9cce-e595a0d7a33b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7dca10-bf21-410b-8cce-5716ef3d61f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d65e464-bc11-4f7a-8575-1fbf2354af74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13351571-9a76-47a0-83f5-2a6e09ef24a8",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7419d69-4f0e-460f-a2be-fccb696fcfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9642ee27-3b8b-496f-b392-867640eed6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596909dc-4a8a-4b3e-84e1-cd5869245332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89907820-1382-4341-a26c-7ec4da8b3be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53bfc0c8-4c46-4530-922f-0070c2a00d42",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75991e19-73e9-4f48-8f0f-8960fdc01fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2def34a-0e99-444f-b9d5-f3dddd5bac60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c221d42-2396-459e-8e87-764c1aabace0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8bb3add-952a-4eb9-a1b5-bd5d32ac4701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a74b78-ffd2-4552-aa94-c97c6d62d614",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b5f957-60c0-482d-a0aa-2436093e62bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9999cb54-ebad-4a62-8deb-35b3272af312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69162511-1cf0-43eb-87be-a72018f95cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab9d5fa-7192-4ee3-a92f-a4d9b01f6b00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffeff2e8-661e-49da-88aa-8f1f15a8fbd8",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d521bd52-6431-4f1c-a6f3-1b73d7c4eb17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2150041-29d6-4fe4-ab92-22866b803f03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fc4d30-a355-43c7-a3ab-863a7b6747d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66f78c6a-e226-4229-a3a9-4688c8fa2b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bb59c2-d89e-4bd8-b7cb-8e728289bb1c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322ad4b1-0e3e-48f0-b29b-2bcfb9b4d566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eef5e66-288e-49a6-8875-f63fb240e593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d54f43ea-1702-4677-b60b-40cbc40ba113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c94b81-5b73-4c4f-82a5-faa3fc162253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889ed32d-de94-48cd-b891-4b37d2fcb973",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fccd937-1551-4e03-ba93-2fdeff426d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7d27546-90b4-427e-9763-6876ec97d9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b71ac71-8606-4703-9d31-6099d7dd8679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dc8269c-7c4c-48be-84ea-c0e9bd921b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66688c6a-b8f5-4b19-9ffb-af5beca1487b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d3b574-3f31-484a-970b-ea953b529624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fa22000-44ea-4d68-81b4-aa3f5855ec0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c156d4e1-10d3-4af2-82cc-06e1f7c6fb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce883027-7260-4b65-8c11-1896865f230b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd80eb0d-7342-4868-a0bc-646982fca3d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2efb60ca-5570-40f8-b720-b0bab667b01b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbf636c-97f3-465d-934f-0b6673c09713",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1ffc570e-841a-470d-8cf6-738483fb9413"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce60b6f-3aaa-464a-b2b0-812a3fde739e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cedd509f-c006-4cc0-b034-b996ed6967ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24142c8b-2b3c-48c7-8a5f-8321831e2459",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "524ddebf-9376-477b-9061-b77f1814e770"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ef95314-024d-41c0-abc1-f1f2b5d0c5e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e22a1b2-2489-4fa6-a58f-950dac1b6e1c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61e875af-406f-4c7b-9f48-42bef6e54185",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "42d3fa93-0f78-4c99-aba7-0772e8942cd8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a8c96c5-2a4f-44fb-850a-76472f114ca2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1760a612-3a4e-4e58-897c-b6130a2c1ce6"
            }
          }
        ]
      },
      {
        "id": "9edc5bac-ac26-4148-a9fd-9eac7495f9e9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4c6bbd68-0265-424b-9741-f64c53fc8fc2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "500aec9b-c0ee-4007-86fa-7f7182c35f94",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ec9ba062-c451-4775-be46-962b65f60db4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd586484-ab9d-432e-abd2-2ec8fa7241b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14872ec0-185c-4593-b205-7c91d87dfd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea222901-2ac6-4842-803e-6d2eb379ab2a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeecae0f-e0b8-4b6c-bc23-3f02b114f391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc6ae2a-4c77-4cda-a1fb-05da55aeb48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df60ef90-5e50-4f39-a57c-3a2b33dde9a2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2981bc4-9780-4b28-ada3-c4704378a9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac068c86-db59-4b1d-a765-f237fb6cb621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8a97f4-ad5f-452f-8131-124e7c6eee38",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f544d3cc-9567-443e-8d6a-343ced0c64e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d65ae1a-1651-4830-8408-31c769308482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077c4fea-13ce-4c09-aaa0-489e15441820",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22da12d3-3ba9-45fa-bdab-6209f3a399b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3809aa-d0c0-48ed-bbf2-4306641557dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad47f79-8ed5-4d9a-9717-cfc9f989db13",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c338e0fb-3cde-4979-b998-2e054e2ffe8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba58e7f8-6c71-433f-96f7-1718a90e8401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7175fab-1ef0-4d64-af75-75c49d9fbd2a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59b117f-4c22-467c-9016-27d6f1790b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcf2723-5bd6-4d7e-bec8-5617c5d985e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcb1a78-d27c-4323-8733-32dd07e47e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f811f1-bafc-4dcc-ac6e-dc557722eae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a58394-50c7-437c-b21e-65c84e838060",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c752822a-fef6-4005-bfde-b371227b16a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2f90959-13b4-48f9-8a11-ddb03a80c452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29fdb8a-3da2-40dc-8948-e398afb5d601",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ff3f93-84d9-4414-b863-2a08c9e99a38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af8ba1e-f172-4a91-81fe-7ce45617d2ba",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "653e30bd-e598-4561-abf7-f8f10ec1a9c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e50eb54c-2799-4581-98c3-f66a4702c494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef5edb1-a1e4-4992-bf84-b002b7678ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e020ef-7268-4992-9cfa-f0b478dd132b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bd0d8b-e48d-402f-ad5c-5726b0d97c28",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cbe7ed-517d-4b9e-ba5c-cb0e78c79eb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae9ff822-c05a-4b33-9a20-a894966638ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c992ad4-142d-4d30-b1a8-23c5ce5708e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b9cbbd-cb43-435f-b638-cc827ebc7802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c02e3a-c2d1-453c-82fb-76501d067101",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12aae5c2-f1fe-4723-949b-715bacae84dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb25628a-992f-4fe4-b487-9065e89ab132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab55b00-7ec4-4940-a826-f925ce5dbf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fe1f5b-0253-4ae8-864f-ed41e21f5fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da394820-c7e5-4847-816b-738e4d8aa948",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fe4217-7d57-485d-a67d-bd5a0a4704eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6342d4-6c91-4558-b1e8-d31b405b9629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ec1419-e5ca-4989-8fe9-46147dc3b89d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30be16f-8055-4ccc-92ee-932945154f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18889450-122e-43d6-bce6-60ab98b6b0a8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab8bee1-706a-4633-b09e-ebd4362cd389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f60ab6b9-5fa9-4ab1-9995-0c43848f2fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad956de0-1b82-49a9-aec9-ab1cee99682e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f09f5f5-e804-44a7-a58f-fae7cb5bb8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931c0fe8-ae3c-405e-b967-08027cd10dc9",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c710a72a-ff18-4be5-ad7d-36c5a3ff1100",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5776aaa2-2bfc-4ed8-be28-798a6c9f1aec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ba766b-0182-41d6-98c5-84ae8f05a9fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53c4769-03a1-4df0-8eee-715e46b6d853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5306d941-9748-497e-8e66-f3d97673349c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e031d6-61ae-4b25-a2c5-eeef8620db8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef1f4f7e-acb1-4613-aaec-4a8546feae4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b5f158a-90fb-44b6-acc6-111d09a3b172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde5ef80-0336-44fc-be0f-554f50f72e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0f0e42-c450-4725-940a-70b5d79fd51a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9cf248-bfd9-439d-869a-da546b262a45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7be7e081-b9d2-4c87-bbe8-357b7c2cc32d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c3fab3-e5d9-474e-91bd-be0ad270dfaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e93ea77-eb41-4e5d-9b29-03f3367e39a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3424bfbc-59ac-41ee-9759-1a12531f0ecd",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacdb78a-5472-433e-bc57-30cdbe4283da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4498df8e-5082-4f28-9ddc-9438bd858509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23216bf-da4a-4a5b-803f-a81fba9db3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6b7fca3-96da-475b-873c-f62106f60c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fc3bd0-1e22-4fcc-98ba-fb1feae24f3f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604bbed8-cb2c-4c8d-b32f-59c909c3fa9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5496420b-d17b-411f-b9ce-99e2a83499b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e1d7f3-a97c-4573-a984-2218a5a54ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bcb7262-0bcf-4a92-aace-344c62ccb92d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d18b335-feea-44dd-8cc3-86291687a524",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34322823-28e9-4abc-91ed-08d9d206774b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b97e9e-2a87-411d-80c8-2e3c9fc06f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4023563-e93e-44f7-a3e0-3dbf92d24bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12f79af-203d-49c0-b1d7-0a5b3e820219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61905cf-012e-4bca-a6e9-872bfc6f43c7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048e773b-07d7-4b2d-badf-2709e400b877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889d302a-1bfb-42d2-81d4-1cce920a201e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e91d549-e6a5-46dd-b21a-360aba06a209",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b9ba09-2ec9-42aa-8e2c-4460f380827d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6acc34-d235-4f30-a5a0-86c3f8a0558e",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e083d2a8-91c6-4637-ab2a-288481c7c0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e740c3ec-f1d6-4385-9eda-f6adb5cc26db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb94a64-f662-45cc-98a8-8a51076685a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5900a334-4659-4105-b08b-054f0132b290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e59fe84-c05a-4e28-959e-c24336b0c98c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8e3e20-d793-40af-95c4-1ae3e2dd90e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8699a32-1419-402c-813f-48fae8cf96f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125ef312-34a9-4259-8e18-cb4a03030ed0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f61ee5-b86d-41fe-aaf2-c565674873d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c1fd91-b362-48f9-bb85-427d63d3956f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e4b9f15-1601-4a55-b3f7-c57b33ebc31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "991d42b0-900f-4d5b-9666-ac675ab1e2df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5222203-a1a0-436d-b91f-bf40ac060072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95e816c-9cba-4ef6-9622-05e2eac9d140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9c71a9-b6ea-4f30-ad95-096d4c6e58dc",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dd628c-0626-4630-90f5-fa3df871d3df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b1d0013-0a4d-4af1-ab91-75cdddce4abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "655e45aa-e5ae-4ddf-9fff-df465b4c3214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7368b532-a62b-475f-8167-4b6ccbdf0652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e9823c-038a-4f4b-a45a-54f7f1e3ccc7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d11b363-2a4c-4c0b-9411-fe67bee58a65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5fe7dbf-d4c8-4c4c-86ff-8475efd2852e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbef385-389c-40ff-8683-dddb52f27c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f3f204-0f4d-43f3-bf5d-2604d90dd187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85fa94e-beca-4a84-9c17-d956c2bb9c47",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e5b535-cfee-4309-b1c3-4324ecf8cdef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "438e2bf7-a6fe-461d-8072-fcbdf68f82a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5feca8-91e2-4d73-b093-8c14fe8487ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff01f8a-f961-40e3-8099-922012d9895d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b51cb77-343e-4542-9d10-dc51ba99e26d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05db231-30f7-4789-8497-11d8bbe7cb02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c827051-a305-4db9-b9d2-508e1e226968"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d103e4d3-fbc5-4011-b883-690d12a0147d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6865c9b5-b353-45dc-9946-f9369456470a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28123049-8849-4dfe-9fb3-b72c8d1ed483",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307f4f72-de7e-47d9-8c2b-7e574c682e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7152cf97-92ee-48e9-be9c-9e4ed12f2de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c18e39f-8ea4-4b4f-b2e5-ad24794e0531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2971352-09ce-48f9-a167-c190a34c9d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ddaa9c-3e4c-4e49-98cc-954c3785242d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59c937f-85e8-4853-91e2-87ecadaa6957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "810a4f06-c20b-433d-a8e9-eeffab2e55c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b194f8d8-97de-402b-8254-c3fe0117cd0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cec1b4a-15a4-4f8a-afa0-62ce598c60c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35008ac6-1f96-4651-b940-592e38c21c66",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb151549-d8dd-49ea-8ebf-2ee054ac1cf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0d62ea9-2923-4763-8bc8-d851f2b84cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49dc4ea9-fe81-407c-bc64-ed894bdfade5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78d4533-ea38-4f25-bd68-f6534b653e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50400986-127d-49ab-a6ae-c7092ef07863",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f275b200-e65a-422e-a269-22f02c8bc129",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04bc3016-d32a-44e1-b990-a65cae15f38b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f750026-f55f-4430-b7f3-34b66ed76b69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14cb58c1-43ed-4dc1-8b86-ad7e1be6ffe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f22e96-6c36-4ba8-b028-0043131f8f6f",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3213e1ed-f400-4c5a-a05f-5d06879631d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae553724-2ec7-4e0d-97b7-692a03220779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "873c55e6-e75b-4931-93f4-7e19c73827a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303ed82d-2444-4164-9865-89322186a94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00316bb3-3015-4c1f-8475-a965faf9a43a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a57a02da-d61c-4fc4-b9dc-416a146a40ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81629224-d361-4be5-8479-53c4648485fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb67dc6-1ee9-4b0f-a3da-01c74845726c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5818910d-3a32-4172-82fe-9b0bb7e5fc86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c82878e-8187-4cae-a599-745bb1b7104e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7626afad-edff-4398-a9b9-93abbe95eac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e87bd62-0d0c-4023-8df6-9e70bfa1b99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "635fbfb5-193b-422e-ab0f-7b20eed3e04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4ae0d5-ba9a-454a-adc0-930c54541310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318114c0-cfce-40ec-8f89-33acd2b54edc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c881960-f10a-4278-8c16-c3861491080b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "180d38d0-94ba-4410-889e-10872601ecce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6305ac6a-fc40-46a9-a0df-f78289192ebe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "800e787a-9899-44b1-91b6-6876798f36f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fdfe54-9b3d-45d8-90e9-8b7a68e5f12a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ca3262-baf9-4a35-a4da-091964a85556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d0bac00-a8f2-4f18-8537-94a8ff0cbd87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0890f3a0-0034-463a-9f40-869c39798c8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6af5f6d-9678-4e36-aaca-24ef5d7bebbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c26e24ee-ccaa-4347-a70c-2d5ee5476cf7",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da37334e-52ef-4c4b-a59e-37d261323531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02ddb579-ea73-4fa6-b4ec-503d87fe24bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef15cf27-4450-424b-97ce-01a9c85c461b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286d9946-0bad-4eeb-9aa6-18f3458cdf27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20201439-b847-4d32-a82d-eed08ce9342d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1cc4001-3264-451d-bfae-9f77a2af47a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7eb9ebe-3d5b-4fee-a7e3-2c194d155b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc644c40-c4de-422d-959b-fe5079dbc745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382782aa-1969-44e5-8ac9-3f2465a51600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e81482-43ef-4459-b88d-80d19fd6ae4e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec44b60-9fec-4acc-9a4e-e2d00286b519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b317cd1b-d345-42b2-8a36-fcb101f7d085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "601a9ee5-2516-45e9-9716-e015efac4878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6620ee-87ec-4d8e-ae90-82da23f23acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2fdb53-750b-4eef-beae-e3c50fc137ef",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a07539ed-f3f0-48a8-b1f3-173b9bf536c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99931b47-de35-42c0-b67c-ccbb0a4627b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26253e26-d37d-44f6-97bb-edd8722e006a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d492ef9-0c11-404d-8141-13cb8ccf14c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f99846-284b-4a70-b4af-22d7db5bc88a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9fe877-d9be-40c2-b5a3-709c2ef8f85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f143752-c5fb-4bc9-8c12-11c4461043af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c020674e-f837-45e2-82a1-8ba5ea40af9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac28b4cb-ea95-4f51-870b-9d7720292253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0046a089-6d3b-4e18-bf04-06868de5e4f4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a347802f-6ec1-4928-86f1-67b580e151e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7aafb0b-fc95-4080-8367-d7d5878a22d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4ad5fd-0056-40da-af29-cee6569c594a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "087075b2-cf44-46e4-a87b-a79497d0e0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8998e16-c844-4041-b06d-90deead90064",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8269ccb-f54f-4101-91bd-3eb56334f508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc27d68-aa26-4d45-8e7b-e58834b5dea4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e3e556-963b-438e-9c6b-072298449777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb6dc4e-72ec-469a-80ec-60cd6f118d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41023f3-cb4a-40d9-9079-7734919cafc3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e711f80-fe45-4d6d-8a20-a3aaee90c2a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dfb7de8-5306-42da-939f-2a23b85378c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3b5d47-0779-4b8b-86cb-6ef514c49c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d669be1-5578-4119-8676-185dab3e77be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ffbad5-a40a-48f3-8f9c-ee8e038574d5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07384fbe-a96f-4aa7-8f13-92bb75dd7cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc51ce1-1812-420b-ad35-a8b6641c04cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "190f5fb1-8c9f-40ea-af21-36deb194ed20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57598ce-7567-4ef3-b429-1170f814a3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31607a0e-7c01-49d6-a0b1-e5451120e7cb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0071403-1de0-4741-b952-90c0faaa969f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4d009f1-f278-46d5-97d3-47c31d5bf9d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6c4bb0-22f2-4b7c-b4b7-d69d13a3f3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdca2614-9800-4fa9-8ffc-0af33f82d343"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618b0c55-8609-4268-98e0-bf9bfda58d1a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc6fe259-3e9d-429d-bf8c-ca64d70eac29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7409120e-5d9b-4084-93b1-8b90bcd3cc12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b245b6e-17c1-49e4-955f-96bad8defe99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fdb5b30-4e8c-46e0-a5f4-cec6f76d0fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01ca5558-6946-46f6-99cd-28291bd23003",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d4e0778-3029-4a5a-b853-6355564cf2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c26a018-c159-4098-bb3d-2373e9955094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a01a3f-5ad5-4947-a245-caa399f7f530",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0361858-e4b9-4fc4-99f7-18a721e1d5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1276787-419d-470b-9351-49a47bea64cb",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b6dca81-fdbb-48f3-81e5-51c5e36483c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5db75b50-674d-41e8-bb69-a8aec24776b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ae9384-919f-4306-81bc-70227f31210c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606a66d7-63f1-4a33-ab19-de189b78757c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60d5520-ed36-4de6-8b6a-caa2d0cc2ec5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8794a80-9693-4910-a057-358dafd7e2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e417e3c8-7fe8-4310-a3f8-40ba17913a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a40614-7c60-4c63-8f1c-344383b717b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d39c404-5954-4450-8a3d-9bf35d8b409b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6a561a-7fa6-40da-b959-fc22fb894395",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020642fb-af54-4688-b853-a74b1705b0c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a74909-867b-4296-8c10-b26d45ad5b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ae74cf-d02e-4b63-8228-1c11d6570e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539812f4-c6ec-4cb7-9f06-2320b8a73c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c996a670-33f6-4cc2-bbba-96a059b7054a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28926811-4736-4e82-80c2-31e62788ba24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7e1f1e-412f-4e0b-b11a-5be66008d540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9edc07-85f8-4cd8-bccf-b0a25fa8af0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70d43f9b-31d5-460a-a3ee-74510409f71b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6e4c7a-f4f4-4076-bab9-d1f5943d4cc7",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd1ecf6-0649-4654-bdf5-cc0614a6102c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8adfb5-1b44-42da-8759-f493cbf6c529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39f809f-9c45-4415-aa9a-314cc4a1d3ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470e21fb-e9cf-4ded-94eb-6b321498e3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d4e0df-3133-49b9-b22a-98d43607efb3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131e4559-aaa5-4a29-91c8-494b2e99af69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8556b0e-e16e-4d52-9ec4-1c9eac092617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ae5679-8073-4a60-93b8-f0141d28f046",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b144e4-1544-434f-b74c-0fdbb0e495e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58571d7-a6bd-44b2-8b51-c34bf9badd43",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d7b55d-2c05-4d18-9775-d62fe0edecb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "366ac426-ebb1-4a93-b361-937ef58633d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c408359f-156b-49d1-8fa8-847ca093d520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e08a3c8-fdf0-4907-bd9f-7b337b9ab254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea57cc9-6c8f-4194-b083-d256a84d719e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69e7e25-9fa3-4e53-8114-0e431f147175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709f473b-8b29-4341-a777-19c5acffda0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8a3811-cd97-4d07-9eb0-fc7111e68f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0b9823-743b-4550-89c8-89bc34e6e349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df08d4b1-c06c-4f1f-8034-6f276bc51477",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e020efc-9fb1-4f53-a9b3-d38020e66aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef50ec3e-e57f-4ff3-9dc7-6417aa8f0a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d61729-d774-4ad1-b094-22dc98538195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99510fd2-9eb0-4a14-8bc9-d417d4a81be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6667a7fa-30d2-421a-a92a-a716ba3f5d28",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5484db16-e009-4131-a079-f9d94f46e1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02fbfa7b-5d17-4101-9ee6-39212a5ff9f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e31cb0-aff9-43ea-b06c-dd7d9fbd8bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1f4b67-e1ba-4935-baa1-b6ad0f37adee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a36e6f-6b6d-4ad0-bb80-17ba486b563d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff01396-03e8-48cf-8d34-91621abb5a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "560e09f7-76bf-4f20-90ba-bba452ac5a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9f6dda-612a-49e8-9bf3-d3361650625a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "881b0c5c-1bfb-449a-b9fe-827f378c0d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15349f6-915c-4a63-b051-4ec09376db62",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ea44c1-6d97-4736-8342-780e60a84f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935ac056-72a3-4113-93da-24f77024fdac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1b1655-6cd2-4b69-a9cd-06577fe5631b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2726b4-baae-40ac-b429-4b589d37ce22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e525ebe-f73e-4fb2-b73b-d50d8894ca76",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8ea9a7-a625-4ebc-84d7-e1cfd362f2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43dc1306-f771-461f-bb8b-bdc633370241"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "857f5b46-a344-4222-8d81-f58196cbc232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b687bad9-6e9e-43c7-80ae-fae7f51a2ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d8790a-249d-426a-b265-77e7f565d13a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa72b207-5d4f-4f3f-b104-65edab2cc42e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55cb668c-5419-4cef-8614-64b7c49c5774"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd86765-fad9-4e67-859f-0656dbc120a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f943e27-1135-4310-8592-bf02e0ede689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865dc58e-f632-4c6d-aa54-e6f0129b0d01",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2cb5b6e-4153-45bb-9cbe-288cae5d3940",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9919b9e-f182-4992-8eaf-30af306740ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40cbc845-dee5-4305-8d78-6e0afded024b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1e41ac-7e12-4b3e-a6e4-9909128a4b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb7c20b-cf7e-4030-aabf-4e84ad7338db",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f36036d0-f9bc-4420-b094-98f796065f95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a94fcd0-0ca9-4ad7-8758-67ed8ec96a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3352eb8c-2718-4cf4-8e52-d169fba5b59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3aa1cb9-2f61-470b-b49a-6bf57c2044a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48466f37-8bc6-4a97-be89-e868e8c754fb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c921ab4b-57da-4ba5-b77d-c0321af75db7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b839a548-f593-4178-bac6-4478b37a80fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3008e151-9958-43ba-9cbf-c48e13f460a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90635ffb-767e-4a0e-9243-0be67a415797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94e27f8-a092-4f4f-8e99-4c080899ced9",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96882dcd-3018-43bd-ad7f-9157806eceab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a92d9a-f63e-4e7b-b588-46350c0aa9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1625f151-3908-4b01-b8e7-4b81d0f16687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73e2130a-40bf-4e79-8349-384e169c1ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f64ba16-0087-47d0-8e1f-06e1ae8a1bab",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d59a69d-0138-437e-96c8-fdf8c843d738",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56b5d94f-a97b-4118-9f15-40fc1eae1063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dfbae1-24a5-4675-bae9-11e7f304accd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0e5fec-add3-45df-b0b0-ec95058812e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad06cb3f-e0d2-4a13-8fe5-294f4595e897",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "732928f7-357f-4823-8012-cda86538003f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ee92c5-b8c6-4324-ba87-adbeab577daf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1324d6a9-d654-4bb7-bab9-61d369de6aa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e54f2af-c560-4efb-8962-932c598992a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e2d94c-f5c3-4196-8e0b-1b7ba48954d9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0963151-eded-4ccb-b05a-cf5e653318ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d0868c-d9b2-4f28-a257-3616c5d3f54b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d41f8ab-612c-4b04-9b25-42b22aab60e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4e4bcf-4fd5-4514-97dd-2a3ac9df2403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d468bed-d60b-49bb-9b8a-d268e8fe8fdf",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d983bfc2-d1d1-4f42-bf83-12c04dea77e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c01171b3-01da-4f44-ae02-81d24f0b8922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f4c24c-aef2-4566-b778-34def1e52ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4805e4-80fb-4ae9-900a-ecd06a4143f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c64d765-f72f-4e5e-af45-4f26f51c388f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ffc5a6e-9ae9-49c7-9c41-29e99c82fbd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591af1dc-8f58-4223-858d-0a76c0fb62c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f938edf1-ec81-4ce3-b310-9d5d530dc0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b74229c-eec4-4bcc-afb7-9a0fefd4d4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83583751-87fe-4bb9-9c38-cff0e1f5c971",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b711ab86-a6cd-4ed2-b874-9fbcf470a1ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d803b78-7de3-479d-a85a-e717ff50d497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a4dc8a-0243-42fe-aff1-1af11ea55c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0467b332-f5de-45d4-a07e-eb874be38687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc72c0a-72d8-41e9-a084-fcaa67895080",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44790859-1896-4acb-a575-11391f3354f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa02abc-0824-4c30-a437-753cc1601e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29246fb-a30c-4a80-ac31-ee3592abeb5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18997438-d8d1-4bdd-a4ca-f1ce099ede24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1858bb3-1f12-416f-ba20-b6405e27ecdd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f89ace1-c5fa-4cb8-aec3-9ab9dcf3c070",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05e88996-6938-42a7-ac42-ab8e9bd113ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e36afe7-9cc6-401e-bf5f-6777233856a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5405579b-5679-4f1d-a307-42988e0c9307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54bb0ca3-df9f-4ad8-bdc7-b08651d3c1d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030b352f-8aa2-4560-8312-c3428239de7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f13365b-c440-457f-9cfd-170dc70fa700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cae8246-4497-4962-99e2-a0aaf228e5f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58089140-18af-4754-bb89-73b300959209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8432ffbc-e874-4765-879d-e88cfd5a2390",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df59a93-4680-44d0-9e93-9e8076f7313f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7c56ea1-31c3-4a3e-8748-3f68fca1772d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d76b119-82d5-4c42-9a65-13299bd3343f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "929d37e4-0cc5-4686-b6f4-3d59593e42a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1db38c4-3097-4513-8b13-d513f677fd8c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a64d07-04b3-476e-ad6e-45dd8c10b118",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f009025d-0a14-4777-972a-546c47180fe6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83df3549-9176-4184-8a4a-b7ffc321d261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001b51f5-7000-4c2d-98ff-318055bcf429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d28f89-6c60-4b0e-b74c-ef0ff1fcba21",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc3971a-47db-4cfe-9e6e-f1e82db20ca8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a831d7ce-d4d2-44e3-b9d5-b6afb2d5ff34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9e2e4a-5555-4dbe-8ca3-cf5ce673935e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b4d0a67-e93c-4334-8969-9abf137004a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c70961e-7ecf-42d0-a2b3-bac826406d47",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba11e4c7-6429-453f-b4db-7b0efd88e7e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86cb3b2c-30d6-4557-87e2-69a8197f9a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0583782d-2aa1-4abe-87f5-d7b1edc72d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f0d2cd-848b-4940-ae42-d0b49c942ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3f4011-b682-4e90-8ecd-020ec4a79bfc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e283d071-00ef-405d-84d9-f8208bd9e82c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28842301-bf06-46fa-9d43-29548b41ee51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96e9610-8493-4d9a-9667-e8739224b188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80551102-df65-4b6e-acb6-4b5ffe8f7771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f072131-60fb-44c5-a1a7-da7c7360df42",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18c4405-2a3c-4ab8-8c24-0033efcd36b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0a185a8-9057-4c83-b594-1521b8cbcf26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ddd73c3-8200-4f46-9c05-855365957fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46af3290-3de6-4db2-8d66-8c9d09583dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dad3f8-74b1-4abd-835c-b3b4b57f96e2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a4e573-74ee-4165-82d4-79bcd2aa476a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad9864c-3a8d-41b5-8723-ed127bf2a06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8696a66-9f48-4bbf-a04d-23fc3634ddf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc5fcb07-8720-4cba-af23-afcb05879cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aff05f9-d3c5-44ce-a5c4-e9e3dcca3bbe",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3d111e-7301-4b42-9e1e-211b268e73b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5e25e25-47e3-48c7-bcc9-6cfeace23cd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba9dbbd-4c8d-4019-af28-5cca5d033cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc722afb-8493-44af-a64f-ddc4be4c7123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61eafae-a053-46ea-8423-8ba744af98f0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9133e4-7a58-4da3-92de-bd22b42ed5a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e990303-8672-4079-a768-941d32e8878f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf808c7-3356-4a8f-826b-9f07424ebcf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f22b7d0-8551-4361-95fc-3fefcfa72730"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fdfdee9-ac54-499a-94af-12ffedce6698",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6199c6-d357-467e-8238-6e1d4e566e51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "377e50dc-17b4-4f07-b8ba-8891b5c0d0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2d98f0-a278-4e2f-817b-d6828e794ca0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65855747-88e6-4a3c-9407-4b87e0d57f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eccf818-d73f-494a-b946-98cf672efa41",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f8ed51-621f-48d0-ade6-c247f57481a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d1f89ea-2991-46f7-b88c-ea9cf057eed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c31bfa-553c-4cac-acbb-2a9dd0bbc69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4251949-e4d3-403e-ade5-2711f17550e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e642ef-e902-4527-97a6-256506e25103",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17aabab-f9ec-477c-ab0a-55878453c5b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0d90d35-c56a-4ecb-9dde-df078d5baa3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48a4dbe5-9403-45ba-991d-3148334be812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4558cb0-bffd-48bf-a227-c6874b187cb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300f7da4-2370-4dfc-9c66-0fbb1eff21b2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de16e579-112e-417f-b5ca-eb907f45e0e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2117c3c5-b7a6-4840-b227-e5e8c4796ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448bd083-9d54-42b5-b6f4-3656d33353bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e6fdfa-f20a-4d92-8547-067fee82611c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024446c4-ac1b-48f6-b2e6-24dd1b98de10",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d3894a-53c0-4fff-b95a-d8a801d1e7eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd367cb-a863-418a-a3c6-ef48acf82a94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af64f5ef-b4d5-4eaf-89a4-ea42a824ac1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c33c7e-aafc-4cef-817a-74e58dbc3ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5374b03-3fdd-446f-951c-7dcf9ecd740b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3e379d-f1f8-474a-bdc1-01eea8c0807a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5c35891-d4d0-4d31-8f22-c3f8b23b2462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a93519d-fcfa-4aa3-9ddb-c090d69750f5",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61f7fb8-705c-49e6-889e-29a7e3e854e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c9c56f-f446-47af-8e2f-551fb9eb82db",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85be2d8c-8b6a-49d3-9b7c-dc55b2b99f3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da034129-0700-4e80-8144-e1d1b40be971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8101113-4851-42c3-bf49-5b9727350ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a990282-6adb-4597-9a28-7dff8ace8e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526f9014-e2b0-4d0f-8a0c-9b25777c0e45",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701f7303-6f90-40f3-95e4-d5a525ac691c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496cecbb-d268-4e96-b90b-271112e73aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01019208-8eb3-4484-b40d-946fd4550a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab5eb11d-8617-4309-a797-1592b9cad72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00d4ceb-8b87-4b09-8fa5-c2c8c67923e8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5b5309-7e6c-4959-b822-e54200f775da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e53fc8b1-d36c-4414-b745-abf990d3aa83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb9780fb-3c48-404a-948a-62ea794ee86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6304ae-71a0-4e36-b0a4-d30a76b38af9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "032c87cd-1153-40c9-a44a-8ef58690fcb2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1408f5-5ced-46d1-b5ff-5585325a438b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91762987-fcc2-4c0d-b084-b01553eb8df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "286a4f3a-b1b5-4e18-bed8-600c5eefdf39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68486310-cbb3-4499-a68d-8fc215b1c1a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64817a7a-f9b7-427a-932c-1e50cde5f4a3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb115f4d-a504-47c5-98ca-06c11744987e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ead59e-3923-4a56-aca0-2a93979740d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5713cd67-b271-4ddc-8734-289391a6b5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af6891f7-714e-4691-bcd3-765c2003fcf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c760e47e-39bb-429c-95e4-834f7a99977f",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4216b518-f272-4d55-88ca-9b94f64fd58d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8977e03d-d9a7-4f2c-8977-91d0470ceb84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f603ba-f414-4187-be6b-6782ac6d1490",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e496dbc-2271-4f97-954e-ddb54be3c52f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f115ec15-be15-458a-a0be-9c7dc30cb3fe",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19438e97-9a82-47a3-b234-a88149bd0b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82eed7f3-aed9-42ac-9322-0d3eaa9a3389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eff354f-e753-479a-8728-d780fbc66d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5765767-a8e0-42ec-a248-b8527fc798f7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b79cb16-11b7-4e3d-b529-ca6e68c516bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45100625-0497-4ec8-826d-910fc4d240ee"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57c1c1c8-a36a-45d5-a1dd-7c4e3d0594ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4c9436fc-71bd-4fbd-a4b2-916fa80a9130"
                    }
                  }
                ]
              },
              {
                "id": "f8711fb3-1b52-465f-9733-577509f8ace8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47091b90-ab25-46c8-9adc-300d9bc9cdd7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15425c55-850f-46cf-9655-b1f4ed064e1a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3688c82e-f426-4eb6-b3c7-3cb5f815c9f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5eb947-3361-4054-b117-52c1b4abd844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6606d753-15b4-4c3d-8c08-b755d3058a70"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "705c1f85-37c6-4f5a-9586-4986ef412fe7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "375df7be-ed00-42b5-bb56-a0546897998d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9172f4b-77de-49d5-ad80-d536802239ea",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bed0b70-5aae-42c0-86f2-24f1c2b09b3b"
                    }
                  }
                ]
              },
              {
                "id": "3d7f4a27-5667-44e3-8278-3660c7028309",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e04d04b9-f9cc-44c7-8f09-1000d51b664f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a50a7c-ac67-4a44-b363-cd6cdef03db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f435147f-0b8b-45d6-8349-5d9018226e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8173215f-fad6-4974-849c-9da4421e3c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b926bb0-7da0-4447-b87e-ec5b6228c7fd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4bcc1a46-5dfc-4d96-8090-52a71bfbce0e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8efb554-7169-40a8-a092-42e9ba848dc5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "af0084a8-0813-4ab4-9f99-13ba3625adc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d95af0b3-83f8-4d1a-80bf-2a561ef066aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bfba58c4-7d20-445a-8eee-743d8293a62d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6412d2f1-2c87-4dc1-8881-51121df97949"
                    }
                  }
                ]
              },
              {
                "id": "310c0791-c8f4-4d4f-b4fd-4b3dc83adf83",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db8e81b2-c1dd-4a03-a5e4-73558856c2c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "92a535b3-d197-448c-a1d9-b1984cdb162d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "778db50c-bf1f-4cff-b13d-dfc3e032fd05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "872bb192-24fe-49bc-b062-9e0bb667ae2e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4e00111-3f72-482b-9438-ed3ed0abcadd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aa303610-c77b-4f72-a276-baa1db0c68e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7fbbc0ed-318f-4dfb-a72e-587f2a95ecb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ac947ad-2374-4fd1-880c-f797285cb070"
            }
          }
        ]
      },
      {
        "id": "1cfaa1cb-04b8-42ff-8e3c-020dbed8832c",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "136ad958-c35e-4950-91b6-85f2f6ed5e39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7dbc0b50-d732-4213-9123-55239c92f473",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db1cb473-f8b6-40c8-89f7-abec5890bc19",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd23d19-1e70-43b7-bb47-7410584ed8f1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b1957950-a0e0-4ea8-8e5a-3a3acfcfd316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b2561b-c85b-44a0-97b0-516badbdbabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a305bb63-41d4-442b-8687-319c9b634a46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dca15420-d641-443a-9ceb-a95cc0487585",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c17fa55-4923-4db7-84ff-255d156e58f0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1818587c-3a80-4af6-a524-d21cff5b8931",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a823a91a-0cce-4830-b2fa-00da6bb94501"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fe90752-71fc-4100-bceb-0aabbda6d77b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "144c2e87-5491-494f-af9d-27faa5d371e3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1647f50-4fde-4656-9d28-39be9a76fdb8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1db2fca8-a3eb-4b81-82f8-b4af69643218"
            }
          }
        ]
      },
      {
        "id": "552aa1fe-5ad3-48e5-b2a9-be2fbcb2a227",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f2d5008a-a15b-427a-a210-7e752bbade5b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55251b20-f881-4205-8981-dd301a8df282",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "13df9e38-2e98-4262-bf2e-5407d2794dc0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72872b12-5895-4ec6-8a38-90cf93f10d12",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "13fe77ed-6370-4eb9-9481-2cac529bf09c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f2e14d-30b4-4a47-9ebf-6e79faf5a2dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9ea8f8d-86c1-4144-9655-44c5ae507e46"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a2b5083-f836-437e-9887-f96d22d0b012",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d213170-7cda-4d8d-83e1-49cfef1a50b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8707dac2-2af2-4557-bfa7-c0b5a83bab9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b00e09f6-5485-44dc-bde1-5709151b28cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a52e3b75-a5ce-4525-aaa2-322a65f2c0ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ce6f611f-a221-40dc-9986-321cf425e3fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf0a6d1b-cb16-4e34-a453-ed30bfdf0357",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "57e1f01c-c64d-4f6b-960c-8cdff2d2eb87"
            }
          }
        ]
      },
      {
        "id": "387184e2-84b7-4cf1-8294-59bcfd183131",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "dfdae935-e1d9-4aa3-b7ce-1c063cb1a03a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f5746357-4056-4184-8ed6-46ff10d45cae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbc28497-55ab-4df1-9f2e-9786547f4b47",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7519636d-4146-4dc9-b156-e2048c772b0d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d3442a69-cc36-4e98-aff5-005982fa90cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd6680a-fb5f-4973-89db-3e930acddaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e54816e7-96b6-4c80-bbd0-f5e058dcb7b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "54b81e67-efbb-48f9-ad0a-c95e12f11ae3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47ad0df1-ff55-4d2b-b7f3-6e2764f6a877"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d52a6cd5-182f-4f70-8dd6-97beafeff19a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08af450a-41c8-4977-b0c9-e3ca2cc8ebc1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ae03fed-8de4-425a-8e95-cf88b7f4793c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "acc6a12d-95eb-4e8d-bffa-70f9b47f8704"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b02afadc-6509-4825-8b74-0c3c39d6b0c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "98024170-309a-4cd6-8723-140fb7a43b90"
            }
          }
        ]
      },
      {
        "id": "4c00fb74-c892-49d1-a206-075f250c765b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1aab390c-124d-4099-b38a-6ed79b05b472",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "355935be-de98-4c80-9a71-0bc182251b59",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c8860cf5-d8f8-4b84-89f5-4ee4cfa299b5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccec95a1-5b37-441a-a32c-c8ee9c1ad238",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e238436-a3b6-4e61-a544-50ec5ad219f8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 124.03859649122808,
      "responseMin": 9,
      "responseMax": 4865,
      "responseSd": 456.58724335116153,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697934983616,
      "completed": 1697935033676
    },
    "executions": [
      {
        "id": "9a4282e3-32a7-4860-9e96-4f01be890094",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "99384826-f5d0-4ff8-add4-005288dcba09",
          "httpRequestId": "a1d7fd30-fb6b-4052-afd0-13d03cbbf058"
        },
        "item": {
          "id": "9a4282e3-32a7-4860-9e96-4f01be890094",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bd71f54f-495c-46bf-ad41-2a94fc6c7e43",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 0
        }
      },
      {
        "id": "448d00a1-1019-4d3b-aa6c-ce70fde53244",
        "cursor": {
          "ref": "0b99636c-7f3a-4c28-9b3b-4d1983691410",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "11f92619-9604-487d-82cb-7623eeffaf53"
        },
        "item": {
          "id": "448d00a1-1019-4d3b-aa6c-ce70fde53244",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "27e6ecf2-d7a7-40bf-8fa1-fd7a0c9d69f0",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "99513d4d-e236-4759-aba7-920b3689aaec",
        "cursor": {
          "ref": "f6d25359-689d-4e36-8cf9-ea92a6970816",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c9c3c92c-2d08-4210-82f3-8931f4388608"
        },
        "item": {
          "id": "99513d4d-e236-4759-aba7-920b3689aaec",
          "name": "did_json"
        },
        "response": {
          "id": "78bd5aab-eb29-4065-a02c-3a773080c3ae",
          "status": "OK",
          "code": 200,
          "responseTime": 259,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc4a641-da10-4f80-8b62-723ab2dfbb01",
        "cursor": {
          "ref": "78159591-a604-4956-bbce-b6c83545d3db",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0557c474-efe8-4707-a049-ddab368af71a"
        },
        "item": {
          "id": "abc4a641-da10-4f80-8b62-723ab2dfbb01",
          "name": "did:invalid"
        },
        "response": {
          "id": "0ec43388-3953-4855-9ef0-d4a805f482a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 707,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc4a641-da10-4f80-8b62-723ab2dfbb01",
        "cursor": {
          "ref": "78159591-a604-4956-bbce-b6c83545d3db",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0557c474-efe8-4707-a049-ddab368af71a"
        },
        "item": {
          "id": "abc4a641-da10-4f80-8b62-723ab2dfbb01",
          "name": "did:invalid"
        },
        "response": {
          "id": "0ec43388-3953-4855-9ef0-d4a805f482a9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 707,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d319f0a8-8d56-4083-8ca0-7a0be2daaaa9",
        "cursor": {
          "ref": "bddd3041-40bb-4771-9140-58566b68698b",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a0a7abb3-c6f9-4dc0-a5a9-580a21329da1"
        },
        "item": {
          "id": "d319f0a8-8d56-4083-8ca0-7a0be2daaaa9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "59a000a1-d7e8-4ec0-95a2-6ee5ed4dd66e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ce9141b-78ec-4d81-8484-84e40e4f8575",
        "cursor": {
          "ref": "8462f516-f5b3-4250-acb6-2dc5468ae24d",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4d4480f2-9994-4ee5-b4e5-a6fd44773b94"
        },
        "item": {
          "id": "1ce9141b-78ec-4d81-8484-84e40e4f8575",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "20e728b0-e4bb-4952-a359-361a1ce23ee8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd63ad3a-26b0-4687-b16c-516579e1cdf1",
        "cursor": {
          "ref": "51248f83-23f0-47d6-a565-30cc70df9fa5",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0850e6d8-fa28-43d8-b7ba-ba95dce10dfb"
        },
        "item": {
          "id": "fd63ad3a-26b0-4687-b16c-516579e1cdf1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "989fe964-8ca1-487f-b4e7-714c1c178e89",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 92,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cb53b9-f1d4-4d1a-8394-c720b879ca65",
        "cursor": {
          "ref": "934a490d-0fe9-4380-9f48-37988ffa229a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f878cc65-a279-4cd1-b5ac-07472b801bb4"
        },
        "item": {
          "id": "24cb53b9-f1d4-4d1a-8394-c720b879ca65",
          "name": "identifiers"
        },
        "response": {
          "id": "b40ce0fb-732f-4ad5-a975-c32e7bc5dddb",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476ec801-c7cf-42aa-ad3f-761cdc22f2ba",
        "cursor": {
          "ref": "51c9544b-f4c0-4e66-bf99-60314760c367",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "371f9f98-e1a6-468e-b74e-e190bd35679d"
        },
        "item": {
          "id": "476ec801-c7cf-42aa-ad3f-761cdc22f2ba",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "504cb277-d601-420e-92e8-c72ccdd50a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1032fde-ac4f-4715-9b41-0e1c7fa5ac07",
        "cursor": {
          "ref": "99321a3e-126d-4586-af3b-45ab93c00ce8",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "16e17361-1c9a-4e49-a4d2-ed517267a66a"
        },
        "item": {
          "id": "a1032fde-ac4f-4715-9b41-0e1c7fa5ac07",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ca63cdbc-6c7e-43b9-900b-2166fc21fbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa028cf-531b-4e0d-837f-dee5a97d6b15",
        "cursor": {
          "ref": "8b8ed20b-51e8-42cc-b923-a875a108e4fe",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7c63054c-6fa8-45ba-a2fa-780e01cb688d"
        },
        "item": {
          "id": "9fa028cf-531b-4e0d-837f-dee5a97d6b15",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f05d81ec-287d-465f-8dc1-a6cda320aeeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "504e44e4-967c-42e6-9f61-cfc7205cbfd7",
        "cursor": {
          "ref": "a1e9f661-18b0-477d-bc82-2785bd1c4684",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "8b1dc1cd-d8a2-41e2-984e-735d181d4c39"
        },
        "item": {
          "id": "504e44e4-967c-42e6-9f61-cfc7205cbfd7",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c64586af-edf5-425f-a5d7-fc256712e940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51d2960b-ddc4-4fdc-a1e3-4db5a5456f8b",
        "cursor": {
          "ref": "87e23d89-4d19-4f05-8563-fbfb5a221bcc",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "db31b534-7466-4ef6-83d7-524e0ddf3495"
        },
        "item": {
          "id": "51d2960b-ddc4-4fdc-a1e3-4db5a5456f8b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "71b81a08-3dce-4239-8454-bced9be6456a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc5a8d1-d922-466f-9997-16a3d3668cff",
        "cursor": {
          "ref": "05e48a4d-4968-41ea-a961-928193006724",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "630b2321-9447-437e-baf4-2e3041de2bf6"
        },
        "item": {
          "id": "bdc5a8d1-d922-466f-9997-16a3d3668cff",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f2758304-b252-4839-bbac-68b69cdb5181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb004e54-8599-466f-a620-90b99ee29d86",
        "cursor": {
          "ref": "2196186a-12c0-4d36-bd38-d3c6cc9f28b5",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3c8b2482-9977-4dc1-80c3-50984afcd9ff"
        },
        "item": {
          "id": "fb004e54-8599-466f-a620-90b99ee29d86",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "969f1e90-a71a-43ec-b13a-cac1e9baeaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df1a8c0-cef3-4441-9c99-bc800f4aa59d",
        "cursor": {
          "ref": "41e7946c-9803-430d-aab9-fae50a6c5f5e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "97213b07-95f8-44ae-8d08-de3e145cabba"
        },
        "item": {
          "id": "7df1a8c0-cef3-4441-9c99-bc800f4aa59d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "aebbb42b-acab-4633-8ace-6d134ed251aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e91865-a7e5-4cac-9f94-d3de82f2927d",
        "cursor": {
          "ref": "6e8a385d-508a-4c9e-81ea-feba0a0a9196",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f067398b-59d7-4c84-862e-bb54afc5b0d1"
        },
        "item": {
          "id": "81e91865-a7e5-4cac-9f94-d3de82f2927d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9fab9089-139c-4b76-8a62-eed2af28991f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f10fa7-9f63-4299-9e93-29b48703af95",
        "cursor": {
          "ref": "ad3d7958-9bfc-489f-8d35-851c8d731428",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "155f51bb-afb0-4695-a2fa-fe726769094c"
        },
        "item": {
          "id": "b7f10fa7-9f63-4299-9e93-29b48703af95",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b34b9b03-82aa-45d3-b225-71cb43489eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "529a6f5d-b445-4f22-9c72-b5131c8cf7bd",
        "cursor": {
          "ref": "dc05f14b-5c2d-4094-94f8-3aed8cfa2271",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "779d996e-6f3b-4d54-a45c-211cf39c64da"
        },
        "item": {
          "id": "529a6f5d-b445-4f22-9c72-b5131c8cf7bd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cdafe391-3ab4-45df-b7eb-e8bc1ec399b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e9e0e7-3ed4-4a4e-b77c-fffdff3801af",
        "cursor": {
          "ref": "8b7094d2-1631-4da4-8c51-4c75fb870203",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3fb736ce-af43-4c28-b4a0-23f0783fc03e"
        },
        "item": {
          "id": "d9e9e0e7-3ed4-4a4e-b77c-fffdff3801af",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "44ae43e3-8091-43ca-933c-b9c1a1efab4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5e639c-39fd-41a1-b87f-804b3a16ef5b",
        "cursor": {
          "ref": "0551e0f3-40b5-4b17-8ea7-e5600b16be4e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d2019f38-3a96-4a30-b3f7-ee4aad3eb2d2"
        },
        "item": {
          "id": "8d5e639c-39fd-41a1-b87f-804b3a16ef5b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "93e4b5b7-dc74-40a2-b8d9-5fcb0452206e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0f3d32-c0fc-4064-b117-3df1a109668e",
        "cursor": {
          "ref": "c49f16ef-f1ce-4ffe-9cac-4b5186326c88",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5d731f50-cf1a-479b-8996-edfcde974ab2"
        },
        "item": {
          "id": "5b0f3d32-c0fc-4064-b117-3df1a109668e",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cb68df65-ad8c-4a5c-b78a-2ec3f9aab018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458ce690-2b1e-48ac-8c76-31c36aa30a31",
        "cursor": {
          "ref": "6e76e5d2-5e80-45e4-bea4-3191e8795cdf",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "55244e7d-93c2-44c3-be5a-32b40ba5f912"
        },
        "item": {
          "id": "458ce690-2b1e-48ac-8c76-31c36aa30a31",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "88747fd9-2c99-4cdd-adc7-393bb2769c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccd4b2c-1531-4724-91e7-dcc327f883d9",
        "cursor": {
          "ref": "718e573a-5aa7-469d-972d-07ce622daed4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f2dba974-e322-421b-b4af-4e98e7f93e01"
        },
        "item": {
          "id": "cccd4b2c-1531-4724-91e7-dcc327f883d9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "17fa5895-84d0-44aa-98d7-dbb74294bb32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e8bb33-63ae-4ff9-a56c-52ead2e20fd4",
        "cursor": {
          "ref": "384e95ad-144b-4042-8438-e0c4a9dbe837",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cbb7df86-fa23-4b66-a421-abb5bb4dc309"
        },
        "item": {
          "id": "e4e8bb33-63ae-4ff9-a56c-52ead2e20fd4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "cd93cb25-0ca1-42fb-bf10-07038cd4acb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb0a6c2-9511-4cff-8835-0f31a1393b97",
        "cursor": {
          "ref": "2a1d7392-62b5-441e-be7c-c3fcd04ee236",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7e793b3b-25cb-4490-9c4f-66f030287861"
        },
        "item": {
          "id": "9bb0a6c2-9511-4cff-8835-0f31a1393b97",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "c3b2c229-33c8-486c-b4c8-8229b61cb72f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 117,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2110ecd0-6752-4309-a86c-2b0d5bd80021",
        "cursor": {
          "ref": "7bf9eaf2-06b7-43e7-bcef-92302c2ec4f9",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9dc39f56-97e9-42a0-b9d8-007a8e0ccada"
        },
        "item": {
          "id": "2110ecd0-6752-4309-a86c-2b0d5bd80021",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d68e0b82-33a9-492f-a388-7b5d7b2db430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c53771-fe5a-4756-9ba0-bc36058f4966",
        "cursor": {
          "ref": "0bf831f4-4982-488d-bb91-bb2304e7229b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "44272eeb-55b0-4ca3-ada9-059de6beb53c"
        },
        "item": {
          "id": "12c53771-fe5a-4756-9ba0-bc36058f4966",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cf7dd13b-6add-4eb4-8f67-b9f8dee7ca44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eace9d2a-3f01-4baa-9305-9d2033802ef7",
        "cursor": {
          "ref": "a011283c-80a4-4857-bbe6-841f167a5227",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "302dd2c8-c82e-4f65-8e32-b81bbb625e84"
        },
        "item": {
          "id": "eace9d2a-3f01-4baa-9305-9d2033802ef7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "28b5c884-9cf3-4277-aec4-cd481a27a8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fadb9f43-2865-4218-8c65-1415a36f2288",
        "cursor": {
          "ref": "60294aea-f60a-415c-81fc-11042226a094",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5726a365-3704-42de-a660-5b0e585569fa"
        },
        "item": {
          "id": "fadb9f43-2865-4218-8c65-1415a36f2288",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c257daf1-bf0a-4fe6-af48-29b2545b1b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34a0687-da1e-4418-b858-716f2b0c3d3a",
        "cursor": {
          "ref": "25b889ed-3231-4a3a-bf12-bd0c0167a0fb",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "542de20e-8e6a-4897-877f-9e2a2868e527"
        },
        "item": {
          "id": "a34a0687-da1e-4418-b858-716f2b0c3d3a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "102a73bc-400b-4c2a-a4d5-ba7d588d86ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f61b8b-60ca-4b65-9f5e-c04b05fc3458",
        "cursor": {
          "ref": "8546ea96-649e-46cf-9483-011daf47ba29",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5d5d4bea-ae6b-4d2a-a22a-de375eb645e3"
        },
        "item": {
          "id": "b7f61b8b-60ca-4b65-9f5e-c04b05fc3458",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "96234d04-87bf-465e-9e97-7c86cde8f622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676f95c0-aa61-4cc1-90e2-2368d6c66e34",
        "cursor": {
          "ref": "f5e730a7-088d-4858-8d85-644d4f75ea9f",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0322695e-d04d-432c-b83c-47fec681761a"
        },
        "item": {
          "id": "676f95c0-aa61-4cc1-90e2-2368d6c66e34",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "21685b52-185e-4992-8b61-6ae989260718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd43d1b-7890-4c35-9098-60fc289fde72",
        "cursor": {
          "ref": "07eabcc6-20d7-416a-abc2-445c21b5464e",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "855b28b7-be6a-4e14-9d58-8453208bd75d"
        },
        "item": {
          "id": "bbd43d1b-7890-4c35-9098-60fc289fde72",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "dcecfa89-fb28-4526-9fa9-fcee1678ad4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c64f9d-14ec-4a29-9828-f8a93f811cd0",
        "cursor": {
          "ref": "1b1e2dca-ff93-49d3-8b43-38cebe7548f1",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c7295805-bee0-46e8-b63c-ecbd0d5010a4"
        },
        "item": {
          "id": "c1c64f9d-14ec-4a29-9828-f8a93f811cd0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "71bedf96-9c10-4a66-be48-1656081affa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ce949a-5c06-41de-84b1-aa5e0a9abb1b",
        "cursor": {
          "ref": "5dfa2c2a-cb30-4351-94a1-d30c55b63bce",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "939ac29c-3195-496f-97ae-b1573d2aeb4f"
        },
        "item": {
          "id": "91ce949a-5c06-41de-84b1-aa5e0a9abb1b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a6a5c499-42d9-4e4a-aed3-f35ba19bccdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bbd8ad-a70f-4b1b-a64f-72f5a0303b8d",
        "cursor": {
          "ref": "64b99774-7d57-4ee6-bbde-618b002d80f1",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4b943f3a-3f50-44e4-a2ec-8777bb63dc31"
        },
        "item": {
          "id": "92bbd8ad-a70f-4b1b-a64f-72f5a0303b8d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8ffd6fc9-2c11-4845-be66-d294dacf0002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5275f412-d3c3-4cbe-bc81-19a7f0aa858c",
        "cursor": {
          "ref": "3f60e7bd-52c3-4624-88be-d81444429901",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8735ab37-5e3a-46d2-ad23-712fc319e7ac"
        },
        "item": {
          "id": "5275f412-d3c3-4cbe-bc81-19a7f0aa858c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "16660202-b52f-4b93-9f1b-7af8a5393d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe18edcd-b811-4492-b1ca-b5c2b8a47c82",
        "cursor": {
          "ref": "489f809c-fcc2-4458-846c-ea43f08f1004",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "69906896-45bd-465b-ab0b-9707c4389646"
        },
        "item": {
          "id": "fe18edcd-b811-4492-b1ca-b5c2b8a47c82",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "14620d1e-9f16-4c26-bc2a-4a9804b43fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b426173-f37a-4b4b-8486-dbb54f008d41",
        "cursor": {
          "ref": "177110a3-3cec-4434-b067-ea3fcbc04ec1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "80f7774f-39d4-4aae-9f0e-d726edcf6e41"
        },
        "item": {
          "id": "3b426173-f37a-4b4b-8486-dbb54f008d41",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "82466930-edf7-4136-902a-c39b1e37f6e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9a3d4d-8b80-49de-add8-04515081e913",
        "cursor": {
          "ref": "831998c8-0a19-4e58-8ab1-1fed6eaeda25",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f455e580-a2ae-4924-a1fd-272b8efecbc0"
        },
        "item": {
          "id": "4d9a3d4d-8b80-49de-add8-04515081e913",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a78d8771-2c4f-49c0-97e7-1fb035799b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50eeeb8c-83dd-4e1c-b8e3-20e1d46f0f42",
        "cursor": {
          "ref": "2868b8e4-0db1-495e-aa13-c840b477dacb",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d5830a17-2ca9-4c38-8a08-5df7a66ab4bb"
        },
        "item": {
          "id": "50eeeb8c-83dd-4e1c-b8e3-20e1d46f0f42",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e03a5085-e63f-4f27-a1c8-6e33a519d38a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4804188-126e-4c6e-a5cc-72b7d5ac131d",
        "cursor": {
          "ref": "fedf4a1d-ad08-45e8-9b02-71d27dcfa544",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fdd5ac8f-81c5-4c4a-ba58-4c4d83ece7ae"
        },
        "item": {
          "id": "e4804188-126e-4c6e-a5cc-72b7d5ac131d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f969a244-dcc0-4806-ab82-c7274c49cb7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9886e606-48a4-44b5-a58b-23c1dd224bab",
        "cursor": {
          "ref": "92960aee-6b70-4cfe-9130-d1cbf978174a",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8c0ec1c1-1efa-45a1-a959-278d8e63123d"
        },
        "item": {
          "id": "9886e606-48a4-44b5-a58b-23c1dd224bab",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9514686d-cc4a-4dad-9e66-dad63cc39816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2643397f-7573-49cb-aea5-7955dc389148",
        "cursor": {
          "ref": "ba0add3d-72a1-46fd-ac3b-eeffcba2812a",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "50b86fbe-9220-4ced-a341-ae27bff24399"
        },
        "item": {
          "id": "2643397f-7573-49cb-aea5-7955dc389148",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9dccbe71-73e2-4245-ad80-8ce0b1c11763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3d63882-a03e-4f3a-b103-8b72530e1e37",
        "cursor": {
          "ref": "565b0af0-e2e7-4d54-a8fa-86d524f8bf0f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a4128147-fa5e-46c2-b2ae-2791f6ff6446"
        },
        "item": {
          "id": "e3d63882-a03e-4f3a-b103-8b72530e1e37",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "950fd368-fef4-4d32-b619-cbc6826fa9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82731cf4-d87e-4922-aa01-02f07c1392ac",
        "cursor": {
          "ref": "56ae9fff-3fb8-458f-94dd-78d966151598",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2e613046-ddfe-4a49-b697-2a351d199387"
        },
        "item": {
          "id": "82731cf4-d87e-4922-aa01-02f07c1392ac",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "992e62d4-97d4-4fc6-80a1-1b1239d3d4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4936c90-a37a-4e74-a0a7-78d394ec6b72",
        "cursor": {
          "ref": "1f8c27c8-a88c-4f43-acf5-6f1991237f6a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7e4453c3-3333-47ba-9f23-ce6735f9ec5b"
        },
        "item": {
          "id": "b4936c90-a37a-4e74-a0a7-78d394ec6b72",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fda126f5-e713-4222-ae6f-cb3f318ff066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd853a8-64bc-4e8d-a972-d09504ff76b6",
        "cursor": {
          "ref": "71260aac-da1b-4b9d-97cd-9d49e0c131d9",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f568f2fe-19cd-4727-b705-8bf831cc6e9d"
        },
        "item": {
          "id": "cdd853a8-64bc-4e8d-a972-d09504ff76b6",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "65bf35c9-8f86-4b8c-867f-1357fe3d2c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e8009d0-46c4-46cf-9c9b-48712e44614e",
        "cursor": {
          "ref": "1261a961-d4d4-4377-a8ed-b41cb12bac0e",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6bed0487-c543-4c2b-8545-39dac74566dd"
        },
        "item": {
          "id": "5e8009d0-46c4-46cf-9c9b-48712e44614e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4609ea14-7d88-4364-9365-706bf1cf51ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7ce884-f0f2-4ab2-9520-eb2338b322c4",
        "cursor": {
          "ref": "38fde44f-9743-4eab-9fa9-8d14d4974aaf",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "20480f7c-30c0-4a73-a69c-7a299724d84b"
        },
        "item": {
          "id": "9b7ce884-f0f2-4ab2-9520-eb2338b322c4",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "cbebf3a8-4a3c-4112-af30-b6bf6ef03eb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8bd598d-a4bf-4094-b8d7-66f8f93c28cb",
        "cursor": {
          "ref": "0c612162-2082-4e8a-a211-6eacbcdda555",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "99251632-c971-45bd-8e64-cf376412db43"
        },
        "item": {
          "id": "b8bd598d-a4bf-4094-b8d7-66f8f93c28cb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "68250d43-9545-4086-88ca-a0d09d118ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da49390-dcd4-47af-adcf-be68cfe0ee77",
        "cursor": {
          "ref": "dea2866b-e02e-41c0-bc80-d8ba684983c0",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2b5aa2b6-60dc-406d-96ee-f90a63cd9013"
        },
        "item": {
          "id": "7da49390-dcd4-47af-adcf-be68cfe0ee77",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "33f8e38c-aa6d-4bf4-83ce-d05b56267196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6215709d-3126-4115-b58b-1104947fdc24",
        "cursor": {
          "ref": "f453897c-01db-41e6-97b3-8d797ef42bc1",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b912121f-1fd6-4541-a0af-60f3c4f1d3b4"
        },
        "item": {
          "id": "6215709d-3126-4115-b58b-1104947fdc24",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d5d5860e-5c69-44dc-b046-33e02f44307d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc5bda2-25d3-47ce-bb99-8aa8670bc534",
        "cursor": {
          "ref": "9b6b9a0e-9f9f-4966-a31b-a43f17a55ef6",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6f28b708-371f-4bf2-afad-e68903e84bc8"
        },
        "item": {
          "id": "8fc5bda2-25d3-47ce-bb99-8aa8670bc534",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "72738a98-07c9-4b2d-b64c-f526909de9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce1771e-8e2d-491c-b698-8b205b532e1c",
        "cursor": {
          "ref": "de79fa4d-b3a3-4db2-bbfb-d98fb2f3e07e",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5e20ef1d-998d-4695-b9fa-6810a51517d4"
        },
        "item": {
          "id": "4ce1771e-8e2d-491c-b698-8b205b532e1c",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f8a34d12-70e8-44ce-8c0f-b7777911116c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69d7ae8c-32f9-4e19-b731-1b2b71aafaaf",
        "cursor": {
          "ref": "b5eba5e4-790f-485a-9c4e-ae43749544a5",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9240b09d-39b6-4474-8d14-aec07d13f847"
        },
        "item": {
          "id": "69d7ae8c-32f9-4e19-b731-1b2b71aafaaf",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "46e3e54f-2275-4c08-94a1-5ffc46619bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318cba9e-5830-4659-a5b6-1bff1481ea40",
        "cursor": {
          "ref": "9bd54ea8-f301-4309-9a51-d412b3205f78",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5ea4421f-2235-4c58-9b05-95e4fdc3119f"
        },
        "item": {
          "id": "318cba9e-5830-4659-a5b6-1bff1481ea40",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f9d7e1ab-2f52-46c7-b0db-e05074803b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b82ce53-eabe-4e89-b3ec-7a4663f0ddaa",
        "cursor": {
          "ref": "aace5bbc-495c-4250-b997-1d3ed9ffa286",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "28424f81-0494-43d4-9c4e-d0b66517ad33"
        },
        "item": {
          "id": "1b82ce53-eabe-4e89-b3ec-7a4663f0ddaa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "4c330b59-4dae-4e17-91af-5627314696b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d171109-4b51-4f85-9334-48e93f3b5f4a",
        "cursor": {
          "ref": "7593f5dd-a0fd-476a-9ea8-da3dd0d8339a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a6b4c6de-3066-49e0-9688-9e88aaceed0a"
        },
        "item": {
          "id": "2d171109-4b51-4f85-9334-48e93f3b5f4a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "643c337a-5584-4582-997f-35672bcba4e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abff83f-ab15-4ea8-9219-65baa99d155c",
        "cursor": {
          "ref": "8a983edd-fdb2-4bb8-845c-6a828864c381",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9fabd78b-0333-4d1e-976e-2fab5b8606f5"
        },
        "item": {
          "id": "1abff83f-ab15-4ea8-9219-65baa99d155c",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ef4a9a6a-4d5c-4048-b7f8-29225ab23e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca03372-cecc-48bf-a4dc-1789ddfe0e06",
        "cursor": {
          "ref": "8cec9996-25cb-48ae-a68d-3142a94a9ced",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "150f9b93-4db8-4c30-857c-e9e3f0f779b6"
        },
        "item": {
          "id": "3ca03372-cecc-48bf-a4dc-1789ddfe0e06",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "dbda4ffd-505a-47b9-a8c9-18ce68c7b9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97d61d36-f618-4431-a7a9-859ea6f297d9",
        "cursor": {
          "ref": "01688d7c-75ce-43a0-8ac4-b290fc080370",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "aeac5c47-60b3-4417-baf5-e56dab94acf8"
        },
        "item": {
          "id": "97d61d36-f618-4431-a7a9-859ea6f297d9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "12382469-86c7-4563-9cd5-bb3fa0ceb699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fec284-75fa-4789-b37e-fbea797ccdda",
        "cursor": {
          "ref": "fca395c2-7581-4c07-92ad-8193b67e9ff3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "da8bdcfb-4c33-4ff9-a091-9fc17eedb0b7"
        },
        "item": {
          "id": "51fec284-75fa-4789-b37e-fbea797ccdda",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9d8880cd-a479-4004-be7c-0dc82d68f9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa41771-055d-4731-be52-400762e3d8bb",
        "cursor": {
          "ref": "8083de19-9fca-4fc8-8afc-913aaa779e38",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a04b15d6-f6a1-4a4b-970a-816246d2d13f"
        },
        "item": {
          "id": "baa41771-055d-4731-be52-400762e3d8bb",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "eb1f4abf-fcd0-4765-b8dc-337d77941fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9659ac72-b91a-400d-b8e7-5fca6548516e",
        "cursor": {
          "ref": "3b441ecf-7409-4b4e-a1bd-f90ddd13e4e5",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "a6d73a6e-56d8-45c4-b430-0629c2efeb1f"
        },
        "item": {
          "id": "9659ac72-b91a-400d-b8e7-5fca6548516e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "da73bd91-8556-48a8-bfa0-0ecab1ca8a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eebb36-aa5e-4488-a42e-46fd5786b025",
        "cursor": {
          "ref": "21c7eaab-9f70-427e-95b1-181e24e201ea",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "89b60ece-ee97-4eb7-b958-edd9a57718a1"
        },
        "item": {
          "id": "54eebb36-aa5e-4488-a42e-46fd5786b025",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "85657add-12c2-4afb-8134-e99cc7f92552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97c4509-3608-4033-aefe-8a021a0b9ea6",
        "cursor": {
          "ref": "de106ccf-2f9b-4964-95b7-1e42f63707ed",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "19cf7120-e413-482d-b831-5c25946f5648"
        },
        "item": {
          "id": "b97c4509-3608-4033-aefe-8a021a0b9ea6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9afd4401-a508-4d28-b300-223e197ae6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c177e70c-8c63-4ee3-8684-a03095e3831a",
        "cursor": {
          "ref": "d9cf5fe5-26ab-4dd6-8c8e-be595dad5820",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "deaa0162-c2b7-4608-8b33-e2e0335cb3b0"
        },
        "item": {
          "id": "c177e70c-8c63-4ee3-8684-a03095e3831a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6dd25815-fde4-43be-9ed3-75db02ce35a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c21103-0329-4575-a1f5-a4a56d209629",
        "cursor": {
          "ref": "631ef8e6-bfda-43fb-9717-4c14ccc4df99",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c8858711-5a59-45f1-b889-f4bfeeaff377"
        },
        "item": {
          "id": "30c21103-0329-4575-a1f5-a4a56d209629",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ba5ea810-61f7-4487-a6a7-b9b3a4d544e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97732b5-1bb2-43d5-9d0f-245f363ba4b0",
        "cursor": {
          "ref": "069aec31-2b63-4be2-b957-0e885da1e5c5",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "254c6fc5-6b14-4d21-850b-acb1d6b1b435"
        },
        "item": {
          "id": "e97732b5-1bb2-43d5-9d0f-245f363ba4b0",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c405bbcc-2035-495e-9bd4-3ab0facf8bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fd8853-4394-44b2-abff-168977a480b3",
        "cursor": {
          "ref": "eec4e151-25b4-4b69-a710-4a993e759cd6",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "663886e5-cf86-43de-a58a-4dee6171a2a9"
        },
        "item": {
          "id": "f3fd8853-4394-44b2-abff-168977a480b3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4a7274d2-ca9a-4493-8fda-b93cc241d1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524bf8c4-3935-4c0b-bab6-cf46b6829498",
        "cursor": {
          "ref": "93439814-88d3-4844-90da-07d1fcf16d1b",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9ac0c7a1-f463-46be-85f0-66f45e7e9535"
        },
        "item": {
          "id": "524bf8c4-3935-4c0b-bab6-cf46b6829498",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d5163ddd-36c0-48ed-8655-3fea294d3aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81798048-e524-45b9-a02d-1807aa513de7",
        "cursor": {
          "ref": "e02e3e2c-41cc-419f-8c9f-ddd544f038e4",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "aff3dbdc-b312-4de7-8804-9036b3e0a8e1"
        },
        "item": {
          "id": "81798048-e524-45b9-a02d-1807aa513de7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "ed4421e1-5711-4222-907e-e15aa20a1860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e4ef5e-37f7-4bc8-a73f-2cdb1f5dde75",
        "cursor": {
          "ref": "b68d7307-978c-4031-9c36-f5d4460a0c71",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "972678cf-2ad5-4218-ae64-d29389f95da7"
        },
        "item": {
          "id": "c2e4ef5e-37f7-4bc8-a73f-2cdb1f5dde75",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "a0d8252b-e02d-45ac-9d29-9e9ba862ea82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1806708-3e2a-4dee-9f97-cd352796d2aa",
        "cursor": {
          "ref": "4b424241-f190-43aa-98ee-1154cb25b0ba",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8556efc3-89c6-40f6-844e-ee84230fbb13"
        },
        "item": {
          "id": "e1806708-3e2a-4dee-9f97-cd352796d2aa",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "98877d65-46b7-4665-965b-61c5831bbb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2a5fb3-bfef-48f9-9e90-4b0ed34a9451",
        "cursor": {
          "ref": "aadc605a-d124-42c0-949e-7451ebec2b9e",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7256d62b-e300-4756-8172-7fe723c3057d"
        },
        "item": {
          "id": "2c2a5fb3-bfef-48f9-9e90-4b0ed34a9451",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e4b78878-4e1c-40a6-aee7-4cabbe7202f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626ac32d-f717-4753-9695-8908605de8c9",
        "cursor": {
          "ref": "529968f6-fb50-4367-ad0f-6b2ef828838e",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bcbaf9a1-3b58-42b5-82b6-3fd6cb374cfb"
        },
        "item": {
          "id": "626ac32d-f717-4753-9695-8908605de8c9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8c3a4c86-01c3-4b20-a58c-7592cbbe2d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e4e8cd-2ac1-410c-8e89-001a0dec73f5",
        "cursor": {
          "ref": "e969705b-16bc-4772-9bcf-b5060362d6e8",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f82aa638-dcc8-4083-8c40-3d4f4c659bbe"
        },
        "item": {
          "id": "a3e4e8cd-2ac1-410c-8e89-001a0dec73f5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "602b1697-ccd0-4627-b5ff-ff7d033c8d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619d939d-29f3-443c-9d46-abd3b0aaa26d",
        "cursor": {
          "ref": "2cf26bd8-bb48-47f4-8dfc-57b5d2c95377",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "91b15d78-4a81-46c5-9481-792b48484173"
        },
        "item": {
          "id": "619d939d-29f3-443c-9d46-abd3b0aaa26d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "eec2988f-bc25-4461-819d-a35869aa8f6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab250ff5-0412-46dd-b291-acfbdabdd5aa",
        "cursor": {
          "ref": "2fe2efa8-c745-464e-a6a7-26075f65d939",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "98b31bb0-6746-4d4e-b1b6-b51d9047e5cd"
        },
        "item": {
          "id": "ab250ff5-0412-46dd-b291-acfbdabdd5aa",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c473f0ef-e281-4dc7-8cff-fb44285d83b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8a4b90-b83e-4f4f-8446-7f97019b57a0",
        "cursor": {
          "ref": "5ac64707-0b50-4128-a551-1d08d0278ecc",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7519c6f9-a708-41b4-afef-5c7436566bb5"
        },
        "item": {
          "id": "3b8a4b90-b83e-4f4f-8446-7f97019b57a0",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0b06160e-130f-4735-8568-ac59c3bdc846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07db8dbc-9417-4445-bb1a-b0b87965bcb9",
        "cursor": {
          "ref": "a0a0af12-c25f-47d9-acc5-f82e608d9d19",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "50175a53-858c-4c08-8436-2d064f1ab689"
        },
        "item": {
          "id": "07db8dbc-9417-4445-bb1a-b0b87965bcb9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "d0972402-f219-4676-8ece-8ffcddee60bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539991eb-7b0b-48e1-a3f3-0d05fbed1d65",
        "cursor": {
          "ref": "006d3267-c852-40d5-8c11-1b2b706be4e0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "db178111-0111-4952-9591-1f8031c99ffc"
        },
        "item": {
          "id": "539991eb-7b0b-48e1-a3f3-0d05fbed1d65",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fd44ce3e-523b-40ff-97f2-18f2f2e7c85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a884ed-9061-40e8-8b7c-35ed9e8527fe",
        "cursor": {
          "ref": "44c0678e-651e-4663-b900-3c3a4e57bb9a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3dcef4d2-a407-4576-87a7-bc52fed8f020"
        },
        "item": {
          "id": "d4a884ed-9061-40e8-8b7c-35ed9e8527fe",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "111cb342-cfc9-4fca-95c6-0792ae96967c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfb13d6-cff4-4873-9542-6d11d3ed1291",
        "cursor": {
          "ref": "7887f3ab-0ab4-4002-a2a5-5619d486577d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bb9e6d4f-63e3-4207-a895-20f7a6dc57b5"
        },
        "item": {
          "id": "7cfb13d6-cff4-4873-9542-6d11d3ed1291",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "cf359097-5761-47da-a152-d22c5b075243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6210a54-aa02-43d1-808d-8e64d5296e28",
        "cursor": {
          "ref": "44fe7984-0a68-4214-82d3-910999ff4ff9",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "de444eda-07b6-470c-9471-231ebbb5afb6"
        },
        "item": {
          "id": "b6210a54-aa02-43d1-808d-8e64d5296e28",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ea71883c-0a6b-4ca8-99af-51c448d69c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6bdd61-0aee-46b4-a3c0-18981efc9fb6",
        "cursor": {
          "ref": "abd88d71-342e-4fc4-8d2b-d347b506e57a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "863b051d-a7da-410f-bc77-22f9158916a6"
        },
        "item": {
          "id": "fc6bdd61-0aee-46b4-a3c0-18981efc9fb6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5f1ff334-29be-442d-8848-51de9285a0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cafdf46-3004-40a1-9eb8-dda4a9d0cfd1",
        "cursor": {
          "ref": "e6ae25a4-188b-46ff-8577-0c8fff4585e5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "26d1d3a3-12c7-4120-9b92-b77c94eb336f"
        },
        "item": {
          "id": "8cafdf46-3004-40a1-9eb8-dda4a9d0cfd1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f4e6f6f3-5251-43e5-993a-b9e3ea1ebaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc97ef9-34fa-4088-b54b-c6e1b2a16e7b",
        "cursor": {
          "ref": "be3b6a33-3144-460b-b60d-03af8778b987",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e235c8a7-9486-4e47-a894-6bc79c80db01"
        },
        "item": {
          "id": "dfc97ef9-34fa-4088-b54b-c6e1b2a16e7b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bb209440-adf8-4430-b01b-48908f43104c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8146cc3b-cf3c-4241-a27d-49ffe598f8b3",
        "cursor": {
          "ref": "852b0a87-bd91-4979-9ff9-b560ca47a976",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "48d4720b-ae98-4d77-b37d-5abcc5b23610"
        },
        "item": {
          "id": "8146cc3b-cf3c-4241-a27d-49ffe598f8b3",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "4165a2c2-ae17-4f73-ae5d-fe589e6581f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caefdd61-14dd-4142-96f4-2ecd26806fa5",
        "cursor": {
          "ref": "0f6e923f-9b27-4438-9760-fd70055b4200",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "eebb6ca9-dac1-4ce7-9076-526c5433aa8f"
        },
        "item": {
          "id": "caefdd61-14dd-4142-96f4-2ecd26806fa5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "276232da-96bf-4ca3-ac17-dd91b4261f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f39a243a-4009-4a06-b978-eb128b08b974",
        "cursor": {
          "ref": "9db2dc23-3d6b-4e90-9019-e8c4205bdaa1",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d8c5a77e-09a5-41bd-8bc9-480e7320fcf0"
        },
        "item": {
          "id": "f39a243a-4009-4a06-b978-eb128b08b974",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "69609d13-c2c7-478c-8b11-2f8f0e6bab9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb61c36-6488-4b72-afa1-54c3e4c82ac2",
        "cursor": {
          "ref": "ed8590d4-8dbd-4836-b7d3-63cc93ba385a",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "127bb539-fe27-47cf-9371-53f95136afb7"
        },
        "item": {
          "id": "9cb61c36-6488-4b72-afa1-54c3e4c82ac2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "632587cd-ee4d-4f78-be69-c24fedcc01c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a3e34d-6831-45b8-b88b-d4cebc512a82",
        "cursor": {
          "ref": "4f799068-d52c-4adc-bbc6-8f3967973d71",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "bb5701bd-8d52-44db-a79c-64441e340796"
        },
        "item": {
          "id": "d9a3e34d-6831-45b8-b88b-d4cebc512a82",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d27de760-8dfd-436e-a427-155699e68be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76a00342-d112-4280-8cbe-0b1c9e36bf2a",
        "cursor": {
          "ref": "c0495c4b-fd65-44ac-9aa5-a4163aa46b13",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "beaca85e-ca25-45c4-b56c-8b0cbe725703"
        },
        "item": {
          "id": "76a00342-d112-4280-8cbe-0b1c9e36bf2a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c7769ffa-5882-4e2c-9be9-fc8cc31989bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6934f1-3c2c-4a6d-a925-18074c09b5a2",
        "cursor": {
          "ref": "0ca96fc7-1ec9-45af-83e7-2d7537f81919",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "58b60059-710f-4bcd-babd-63f82fa75e94"
        },
        "item": {
          "id": "fb6934f1-3c2c-4a6d-a925-18074c09b5a2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "16989d54-4931-4f88-a931-3004343af8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7265fb8-a99b-463d-bde6-f5622f25030e",
        "cursor": {
          "ref": "44cb6b36-7ae7-469c-abc7-5a7ec7eb7d1d",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "40f3b24c-5fcd-430e-90a3-c5fbdae92114"
        },
        "item": {
          "id": "d7265fb8-a99b-463d-bde6-f5622f25030e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ff75e900-5d4d-420f-a423-968bdd9c696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7d4560-15d4-4d70-8095-f490ffc18c64",
        "cursor": {
          "ref": "27c98a4e-e9b3-4420-90cc-82008d25eb00",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c3692559-3da0-424a-a04c-92c8c8066c6d"
        },
        "item": {
          "id": "ba7d4560-15d4-4d70-8095-f490ffc18c64",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "766ef6e6-f274-421c-9477-adcd790c7a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55349f3f-29b8-4fa1-8eb2-f7a7b6dbb6d4",
        "cursor": {
          "ref": "dbd696e2-8a06-4b22-b94d-c3e6b76bc427",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8c9788e0-e359-4be9-9050-75f7efeccc6f"
        },
        "item": {
          "id": "55349f3f-29b8-4fa1-8eb2-f7a7b6dbb6d4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1e25e84b-1562-4ffd-82ec-8179aeff5d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8302a0c9-99c2-4720-9d04-0096aa07881a",
        "cursor": {
          "ref": "b6f895d8-e12d-440c-a69a-bad014b879d2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "9f2a3108-29d3-493f-a095-9b341e9e49a5"
        },
        "item": {
          "id": "8302a0c9-99c2-4720-9d04-0096aa07881a",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "596ef653-d5c6-4479-8941-09f1a5043fad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f9677e-eb50-47e8-80ea-4ca94022d3d7",
        "cursor": {
          "ref": "8c322225-f79a-45ad-ae54-8f7f329038b7",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c9ec6184-e897-4d36-988c-345e1ec5bddf"
        },
        "item": {
          "id": "33f9677e-eb50-47e8-80ea-4ca94022d3d7",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6a174dcf-8b89-425b-bf7a-5aca21746a10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d3e11e32-b9b5-414a-afae-5fc80ffa4e6b",
        "cursor": {
          "ref": "3e3290a3-7a7b-4af8-9b1d-1430396233f6",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "04e275af-2ae4-4268-bbed-9b19cd56e510"
        },
        "item": {
          "id": "d3e11e32-b9b5-414a-afae-5fc80ffa4e6b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "26169789-93b9-46a8-8e9c-5d68423ac71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "233c792d-d5c3-4655-9925-d71fafef35dd",
        "cursor": {
          "ref": "fe277db4-f304-41d7-ac2b-33346999e2ca",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3d41afb0-c8de-4d68-b573-f0c905753cb3"
        },
        "item": {
          "id": "233c792d-d5c3-4655-9925-d71fafef35dd",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "fa47fe52-a2cd-42a6-8c80-d5f198184570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "1b637945-d112-4533-b83c-51464efb202a",
        "cursor": {
          "ref": "71bcf351-feba-4a7b-9864-28214766fd14",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9e6c0d01-59c2-436e-8bfe-114f7e293cc8"
        },
        "item": {
          "id": "1b637945-d112-4533-b83c-51464efb202a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "98fecbce-1bfb-4592-91c8-c5006c92a9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "08571c88-dea1-4931-ae0c-3b6753a9a7f4",
        "cursor": {
          "ref": "452ad558-c69a-479a-b5be-a6fc4c4ace02",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b1d0ea31-d99c-4ad3-9f8e-15fe1825909d"
        },
        "item": {
          "id": "08571c88-dea1-4931-ae0c-3b6753a9a7f4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "291a73ce-f3bf-49f5-aad4-ac2630ea8003",
          "status": "Created",
          "code": 201,
          "responseTime": 4865,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e308234-f584-47ca-bf59-4dc2047fb662",
        "cursor": {
          "ref": "a1bb0e7c-7960-4ec0-9d10-d6cde237c07f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "43874264-421b-42c1-998f-b6f6c3aa3345"
        },
        "item": {
          "id": "9e308234-f584-47ca-bf59-4dc2047fb662",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3a1c9030-1468-4e5a-94aa-3f2f1d922052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6890eaf6-880b-4d09-bd23-1e493e0024bc",
        "cursor": {
          "ref": "8dec3a6a-fbc9-4f6d-a96c-b786d6d5700d",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "44a34d50-34ba-4a0c-9c3f-e7d3bbdf4e18"
        },
        "item": {
          "id": "6890eaf6-880b-4d09-bd23-1e493e0024bc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b80baf5a-dfd0-4dc5-9b28-fb7288caf021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "413ee9f8-f8a7-4acd-8231-6a8bd558598b",
        "cursor": {
          "ref": "4ec37662-a184-42c9-b2f1-4b956b866e27",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "602e48c1-1607-4d7a-9d30-67f92329fd2e"
        },
        "item": {
          "id": "413ee9f8-f8a7-4acd-8231-6a8bd558598b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dff3a80c-b245-422f-a22e-6bdeffc9ecf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c336b568-4415-4b60-ab5d-16eec46add8d",
        "cursor": {
          "ref": "c601d4bc-546f-484a-b38c-549301c1c82c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ebb33a67-9e9a-4cd7-aab5-66f75249aee6"
        },
        "item": {
          "id": "c336b568-4415-4b60-ab5d-16eec46add8d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "01c6febd-f368-426a-80a1-2ccd138eb5a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbdf6ff-13a0-47e1-860b-5aa1a703e650",
        "cursor": {
          "ref": "a0cc91e1-11ca-4631-ab8e-ea73f2fda2d9",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8337e1aa-4bb5-493e-be02-d89cf587649b"
        },
        "item": {
          "id": "7bbdf6ff-13a0-47e1-860b-5aa1a703e650",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "883976b9-5df3-4a4b-9a9a-10ebf6f0d180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8b4ba4-4bdc-4a11-a0aa-981badbfbe86",
        "cursor": {
          "ref": "18e30a0b-60d3-467c-8b20-f55ab8089332",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "11baf816-d584-448b-9e10-9e9b2b990644"
        },
        "item": {
          "id": "7c8b4ba4-4bdc-4a11-a0aa-981badbfbe86",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f5c7bfd7-805e-4b1a-8352-0a059539a7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc4303a-4ad0-4737-9b67-71a657ad8cb4",
        "cursor": {
          "ref": "17026244-f51c-446b-a329-eaac73c65036",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b366f28c-b5f1-4c41-979a-1fd36d0d4f85"
        },
        "item": {
          "id": "ecc4303a-4ad0-4737-9b67-71a657ad8cb4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2d20e460-e9d8-47b3-b25a-25539642dd10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724d10ea-585d-4708-a8d0-adfa84e1191a",
        "cursor": {
          "ref": "e7546dd6-bc5c-4f18-9dac-701ef513766e",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3601e17c-2ac2-4a60-afe6-f7eae5093f92"
        },
        "item": {
          "id": "724d10ea-585d-4708-a8d0-adfa84e1191a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2157a585-8b26-4232-b02b-dd3e6c9397ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a613b1e5-c685-4fc5-ae14-2c0f77d50567",
        "cursor": {
          "ref": "15633138-8ff0-4083-8998-7224bc5082f7",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7a5939d2-b517-4225-9cfb-b699a3ff6e8f"
        },
        "item": {
          "id": "a613b1e5-c685-4fc5-ae14-2c0f77d50567",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6c983eb6-7748-4524-84c2-5b7400fde826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86221b48-8757-4658-be9d-011d5aaef353",
        "cursor": {
          "ref": "0e50197e-1356-4269-ab3c-598169e8c01f",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "68a67d70-5b2d-45f3-9c12-1ffe509de42a"
        },
        "item": {
          "id": "86221b48-8757-4658-be9d-011d5aaef353",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c34d77d1-d8d4-4489-9795-2dc0d0e73541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc1bd9e-0384-4eff-b64a-5307e36a09b4",
        "cursor": {
          "ref": "71fefa21-3f48-46c2-857a-70ad8c7b754a",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e59e7733-6f7b-4378-85e6-49ad102ca659"
        },
        "item": {
          "id": "3cc1bd9e-0384-4eff-b64a-5307e36a09b4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e0561df3-2ae7-4dd5-b4fa-883235c5e67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de0a1a7-9556-497c-93e3-4c2b1f38dc18",
        "cursor": {
          "ref": "2f3be5cf-1772-4430-a995-2e9fa488c98d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f31d82cd-1392-4385-910a-5b93f73e8411"
        },
        "item": {
          "id": "5de0a1a7-9556-497c-93e3-4c2b1f38dc18",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "042d0d1a-bbb8-46a1-bc2e-34474c9b6d53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ea1c6f-3ae2-47a7-a73a-f36112544200",
        "cursor": {
          "ref": "b6ced737-c625-435b-b812-cde64d1bbad0",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f9680ead-5fde-417c-b646-324fac2e0be7"
        },
        "item": {
          "id": "a0ea1c6f-3ae2-47a7-a73a-f36112544200",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ba9434fd-b6cd-47d8-8cc7-dd90c8ea946d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7304f8ac-919a-4104-9987-10bec778f802",
        "cursor": {
          "ref": "563d6308-be70-4542-9916-97ecb7144a24",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "470ac0a6-f12d-4ba3-b089-a04a1c6edbc3"
        },
        "item": {
          "id": "7304f8ac-919a-4104-9987-10bec778f802",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cf6d8596-4854-4049-9b46-8e59cef79173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5277c8-05be-44f1-b9b6-d4386e9a936e",
        "cursor": {
          "ref": "163a98dc-e821-48cd-a6e8-32e09a93e704",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c2f96a18-a762-4c70-9131-4e9d32f611fd"
        },
        "item": {
          "id": "ac5277c8-05be-44f1-b9b6-d4386e9a936e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2d42f3e2-c162-452e-afd2-d97b69885840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f1d7a5-341d-475c-8310-7db9be73a704",
        "cursor": {
          "ref": "61bb8166-82ad-4f7a-befc-9d543f7fdd62",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e0a4329f-f2bb-40d2-a2a7-3c07dd6caf79"
        },
        "item": {
          "id": "46f1d7a5-341d-475c-8310-7db9be73a704",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a7f094d9-b55f-4088-bced-efec153c6e75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c17a183-6a4e-44fd-9dbf-e0c7aa2cead8",
        "cursor": {
          "ref": "2c516c54-16eb-48ed-8c3b-b7eda2ce23d5",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "7e224f4e-8663-4901-98a0-be6cfbb8d452"
        },
        "item": {
          "id": "6c17a183-6a4e-44fd-9dbf-e0c7aa2cead8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "00838234-47fc-4162-9308-4a916d1c5205",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "441c71cf-e26c-4e9f-b697-5d58946a6d24",
        "cursor": {
          "ref": "daa05b24-a5d2-4a81-a0ea-256747a156af",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "eeae68d3-a1fa-4e4c-a37d-dd450bef2819"
        },
        "item": {
          "id": "441c71cf-e26c-4e9f-b697-5d58946a6d24",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "21a96d8a-60cb-4371-81a1-1c84279d9a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca0f9cb-5193-4992-970e-0054148c0974",
        "cursor": {
          "ref": "241d6c51-bc33-4ebf-87cf-85c7578483bd",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "9870e41a-9f09-42d0-aed9-d992eb4d101d"
        },
        "item": {
          "id": "cca0f9cb-5193-4992-970e-0054148c0974",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c1b2d566-c90f-4394-82af-01f4eedd1012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "075168ee-6515-423e-9b50-87d38c76e75a",
        "cursor": {
          "ref": "20143404-a080-4b90-bfb5-40dcab769fdc",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0d176d90-1771-45b7-b41d-305285e18e61"
        },
        "item": {
          "id": "075168ee-6515-423e-9b50-87d38c76e75a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0ddb2f31-213b-415c-83bb-ae0126491ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd75c41-f982-4794-ad30-73f43c3043af",
        "cursor": {
          "ref": "e70f1587-c540-4d39-a37e-ed3d037fe766",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "4477b460-64a3-424e-a2dc-9860179c5fdc"
        },
        "item": {
          "id": "ccd75c41-f982-4794-ad30-73f43c3043af",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "75e4fac3-f626-422c-b9bb-87ce4b957105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a69643d-7f14-4c68-8312-45b5f3cfece6",
        "cursor": {
          "ref": "cbefced2-135e-4dd1-8964-ec4984ae899b",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f43194ad-8d9f-4050-bfab-d637c73d4833"
        },
        "item": {
          "id": "3a69643d-7f14-4c68-8312-45b5f3cfece6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dd6f5aad-deaa-457b-b2da-15200f1b05a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d8bc735-accd-4d65-9db2-ee7fa67d2ed4",
        "cursor": {
          "ref": "49eb9ee6-dd92-4227-9695-7d3efa0447c4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "34d00ee8-7ee7-40bd-8970-2466e3d18625"
        },
        "item": {
          "id": "5d8bc735-accd-4d65-9db2-ee7fa67d2ed4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "629cc235-4bc1-42e7-b64e-767ec52e172e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491c2575-baf1-4c5c-a56e-bc9329c489ed",
        "cursor": {
          "ref": "bde390b8-bac3-4399-999c-6f6744e05758",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "1e3e389a-1b92-45a0-a2f1-1a5f0464104d"
        },
        "item": {
          "id": "491c2575-baf1-4c5c-a56e-bc9329c489ed",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b829e61f-8726-439b-91f4-7cee27fc30d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3150de79-4ade-4348-9efb-e2679bf455f3",
        "cursor": {
          "ref": "a7466ae9-87ce-4256-a9b8-1f391a5d708f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "36a0e14f-9cca-43a0-bd7f-0767b3ee7b38"
        },
        "item": {
          "id": "3150de79-4ade-4348-9efb-e2679bf455f3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fd047b2f-42ac-4285-bf9a-ae1ebb8dba45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0b6ca1-b6cc-43af-bfc8-789e98657b20",
        "cursor": {
          "ref": "79823cc5-9942-4ea0-b5e6-deb4a265722d",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4035540e-c611-4eec-8ded-452762610a80"
        },
        "item": {
          "id": "9d0b6ca1-b6cc-43af-bfc8-789e98657b20",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "75a762ab-f67e-4325-8c2c-ac4ce7abfee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f50af328-fc10-47d9-aa67-2b784b3f8cc9",
        "cursor": {
          "ref": "8a61397d-39f6-4925-bede-32b23e8a4111",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "84259904-c937-4373-afd0-e7eff5b0ec5d"
        },
        "item": {
          "id": "f50af328-fc10-47d9-aa67-2b784b3f8cc9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "531d825a-680c-413a-b627-39ade057627e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb95eea7-785c-4f1a-81aa-b3c01f982560",
        "cursor": {
          "ref": "8cbc4a6a-d99d-4b0f-93a5-85bbbbef0767",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "6bc9397d-1cc8-4cef-8a21-2935072c787b"
        },
        "item": {
          "id": "cb95eea7-785c-4f1a-81aa-b3c01f982560",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "708ce440-55ae-465f-95c5-a03eb25757ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8dc1e39-3087-401b-87aa-d0714ba210ae",
        "cursor": {
          "ref": "8e57cdee-e73c-4012-bf50-9c94fc2ac47c",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5bc2da51-dd56-49ee-9242-e963b207ccc3"
        },
        "item": {
          "id": "c8dc1e39-3087-401b-87aa-d0714ba210ae",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1de72485-8f55-4219-bde7-14c280d38747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb153d6-1be8-4a9b-9b77-163afab1d66e",
        "cursor": {
          "ref": "bd502663-6249-43f6-b59d-dc3535b6e009",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3eca7841-cc87-4691-a20f-377dcaae3689"
        },
        "item": {
          "id": "fbb153d6-1be8-4a9b-9b77-163afab1d66e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "974b86ab-fe90-4bb6-a2d9-ac78f0c6e2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52547fd-e7fc-4b78-b337-0ff376b21ec7",
        "cursor": {
          "ref": "0abe3da4-e537-4d07-882e-9dc8af1103f5",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e3afd17f-5979-4802-bde9-2c10c659aaca"
        },
        "item": {
          "id": "a52547fd-e7fc-4b78-b337-0ff376b21ec7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cda33198-234a-44f7-8270-a82b2d1bf8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef22945-4e80-451d-9f91-70ab0789e096",
        "cursor": {
          "ref": "a17f3ed9-cbac-4d67-adfd-80e1eaa2fd91",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "21fad4ba-3703-4fe7-b8ce-9eb523ef9fa5"
        },
        "item": {
          "id": "5ef22945-4e80-451d-9f91-70ab0789e096",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4462b69b-0c0c-4bff-9563-a59c66475904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca47e93-9e86-4b3a-81bb-8d1550057164",
        "cursor": {
          "ref": "5f894fa8-0150-457b-8c72-09bd3642a3ce",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "17de7a22-b704-466e-b274-467d1d059e0b"
        },
        "item": {
          "id": "aca47e93-9e86-4b3a-81bb-8d1550057164",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "af38678e-567d-4490-892f-21494e7cbb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9aab51d-2882-4ab1-a023-2648b0f62ae2",
        "cursor": {
          "ref": "9bca4c0f-2cf3-48e3-bbc1-b93f9d337b67",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "31f9827b-4ac0-4bfb-818d-d1a46d3b6d6b"
        },
        "item": {
          "id": "d9aab51d-2882-4ab1-a023-2648b0f62ae2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6016009a-7e9d-4232-8ab4-d218851c248e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29484326-a088-4fee-8873-0de7bfcffa5b",
        "cursor": {
          "ref": "718d8ddd-ed04-4e3e-b8d8-fec19c9c82d0",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ce56050c-dd76-4df5-b18a-ac22e19d78d7"
        },
        "item": {
          "id": "29484326-a088-4fee-8873-0de7bfcffa5b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b8678dd6-44bf-426d-8369-74d1a2b3b6a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bab9edfa-68b2-4db6-8400-0406397bb2bc",
        "cursor": {
          "ref": "2cc34033-9110-41a1-951f-4da816277101",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9750746f-da8b-4718-b88f-28be92a67664"
        },
        "item": {
          "id": "bab9edfa-68b2-4db6-8400-0406397bb2bc",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "398ce695-3f1b-464c-a0ab-1d1a9f4f5fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78861411-1a8c-4fd5-a9a3-6cabfedd3041",
        "cursor": {
          "ref": "556efce6-1fb5-4029-a346-b435cf77eeb8",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a52c72ba-2937-408f-8d2e-f02e306f0816"
        },
        "item": {
          "id": "78861411-1a8c-4fd5-a9a3-6cabfedd3041",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0cbe07c6-f094-4c12-8c35-105172a2be17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748d01df-d1da-4eee-a46b-f82879781b18",
        "cursor": {
          "ref": "552dc9f5-c436-4932-bec4-e1edb0702d75",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1346c921-0b97-45e2-905e-f4ba722acfe1"
        },
        "item": {
          "id": "748d01df-d1da-4eee-a46b-f82879781b18",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c0ca372f-4ff6-4634-8ae5-c35a49dab2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87aa0a78-226b-42d6-89b1-17086e1ac849",
        "cursor": {
          "ref": "be28411b-2a85-446c-a354-8396ccab4d73",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6660291d-33d8-4680-a584-e645040d7466"
        },
        "item": {
          "id": "87aa0a78-226b-42d6-89b1-17086e1ac849",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a44fcf71-53bc-4e3b-bb8d-8ec6be015095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b414f66-7303-4569-b243-b25c71382843",
        "cursor": {
          "ref": "1801dc23-a5da-46a3-a0c6-c112a59b1103",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d0f58442-3de6-46e0-aacd-c7879b27f957"
        },
        "item": {
          "id": "6b414f66-7303-4569-b243-b25c71382843",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "debcc337-fe89-4a2f-a188-f562c4c44c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b8f674-dcf4-4971-adfc-4a826bf75714",
        "cursor": {
          "ref": "2099ba4c-4516-419a-b8b4-ab206ccc4895",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0e7c9c62-bcd2-436f-9b77-3626ec396d3c"
        },
        "item": {
          "id": "35b8f674-dcf4-4971-adfc-4a826bf75714",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "67b0b608-f0ab-432f-8945-56869557f74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c490c8dc-bba7-4e15-b323-9ef4811cdcf2",
        "cursor": {
          "ref": "e07eb1f9-fe39-4756-aca5-5df455bd2020",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "50cede3b-dc0a-4c61-9a64-4eaa3f049c3f"
        },
        "item": {
          "id": "c490c8dc-bba7-4e15-b323-9ef4811cdcf2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2358372e-7789-4820-8ed3-c7895d0575df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fafe6a-c03b-4d9d-9dd2-5687dcb89fe8",
        "cursor": {
          "ref": "c6ebeff3-01a3-43b2-ab3d-960ad9eaa999",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9c3b3a5c-5a4e-41eb-be2c-bd641c3ef7ee"
        },
        "item": {
          "id": "22fafe6a-c03b-4d9d-9dd2-5687dcb89fe8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5fb4a5c5-026f-4035-b2d3-3ab5803ba74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0d5ad2-7760-4a52-9cf8-dca04335d2a7",
        "cursor": {
          "ref": "77a44e49-4e32-467f-b994-1d67630b740e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a3194a70-b342-496e-b14d-fa6ea182f070"
        },
        "item": {
          "id": "6a0d5ad2-7760-4a52-9cf8-dca04335d2a7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "46ff1121-0c43-415e-af93-aad001f0aa33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bc3bc5-5285-499b-9475-e04e05b2f07f",
        "cursor": {
          "ref": "1fb9d644-88c8-49ee-b2fb-499eec9e417f",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "199705f0-0583-42c5-9e3d-cb4d6fc58321"
        },
        "item": {
          "id": "52bc3bc5-5285-499b-9475-e04e05b2f07f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1f58dd76-54b2-4887-b15b-ed1b8168eff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d30aff-e156-43fc-8175-a98a67d95695",
        "cursor": {
          "ref": "ca66e8b9-1fc6-46d3-9a50-e2b2e72026da",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "94d85fe6-ad5a-4b5c-93ca-392ab4625ef7"
        },
        "item": {
          "id": "81d30aff-e156-43fc-8175-a98a67d95695",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "58381f42-e787-4fff-826b-65984f6e94cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25e25805-518e-477c-833f-71149f649b7b",
        "cursor": {
          "ref": "b7e9e72a-10fe-438e-a6d6-cddefece7879",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "e04c66dc-0ad5-433e-82b4-59b36a2ac6c0"
        },
        "item": {
          "id": "25e25805-518e-477c-833f-71149f649b7b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2aeb53f7-81fe-4d4e-a960-2bbd9471d81d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2500d47-cb33-447a-a6ca-0c1976cc2e85",
        "cursor": {
          "ref": "c1da2356-f7b0-42b5-b250-511b8c15f7a5",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a5d9d902-1405-4890-b6a9-1d2c9c34e432"
        },
        "item": {
          "id": "d2500d47-cb33-447a-a6ca-0c1976cc2e85",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8a63c6e6-ed4e-406c-83e8-5bf4471bcbfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcfd488-6d96-479e-8e06-91c534c67b65",
        "cursor": {
          "ref": "91db571f-b673-49a1-86e8-e0946dab951d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "be015dde-10cd-4316-8e48-059c749f5c72"
        },
        "item": {
          "id": "7fcfd488-6d96-479e-8e06-91c534c67b65",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "960fd308-4316-4ea6-9abb-0058ec3f38db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19022d4-8367-4aa0-8189-803020e879e8",
        "cursor": {
          "ref": "6cfa803f-82ba-463c-bb63-2c8df35480e0",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8eb82251-3f2d-443d-a417-8a5d6e5de0b1"
        },
        "item": {
          "id": "a19022d4-8367-4aa0-8189-803020e879e8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "80452d3e-46f2-46c5-aa47-0cf4a4a2fea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a86f1f7f-d5df-4521-a737-adb381c8fb1a",
        "cursor": {
          "ref": "2e4129c4-0dcb-4528-9119-315121bf36b1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6250f9b7-6c40-4acd-be93-17c6fe15498d"
        },
        "item": {
          "id": "a86f1f7f-d5df-4521-a737-adb381c8fb1a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6475da55-da22-400b-872e-ad38afe41662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76258487-c234-4894-b687-26c3e7e17708",
        "cursor": {
          "ref": "d8b391e7-91d6-4307-b334-d05af4d55a1e",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b117e0f4-2419-43e1-b724-5ced91847686"
        },
        "item": {
          "id": "76258487-c234-4894-b687-26c3e7e17708",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a250ee93-63ff-4836-897c-64218e6eeefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef01756-b435-4ba0-a2b9-00f46b79f93f",
        "cursor": {
          "ref": "082700d6-125d-43bb-b48f-a819cf842238",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d976e28c-e853-4033-bc14-a30faa1d5a72"
        },
        "item": {
          "id": "0ef01756-b435-4ba0-a2b9-00f46b79f93f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "99665ca4-3062-406f-89b5-aa3a989965f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c504e4d-7a5b-415b-bd70-4725907e1822",
        "cursor": {
          "ref": "002d3b52-02da-45f5-8410-28d1c10bbb1e",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "45288d7b-7813-46d4-b8d3-41678877a6a1"
        },
        "item": {
          "id": "6c504e4d-7a5b-415b-bd70-4725907e1822",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d10ae796-f6a0-4a5b-869a-4383c92f5670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018ff532-3037-487a-8ac7-b28fcde158f9",
        "cursor": {
          "ref": "e982bce4-90e0-459d-a6fb-d2c04d7f5877",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b731b942-715f-4588-bd27-d0d07f014749"
        },
        "item": {
          "id": "018ff532-3037-487a-8ac7-b28fcde158f9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e7198e85-588b-4899-945e-ff23f49bab31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf4b687-d992-49c3-9ee4-7f4415761dba",
        "cursor": {
          "ref": "680035ed-a5ea-4939-ab8c-03fab10a6aff",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "90cfe3b2-99aa-4c0a-996f-ebc6709de65b"
        },
        "item": {
          "id": "fbf4b687-d992-49c3-9ee4-7f4415761dba",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "dc8659b2-5c87-4110-a8ad-a3c81b33e14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72dbeda5-07c4-4042-907f-9875e1686e59",
        "cursor": {
          "ref": "eb96d425-2e1a-4dce-a7df-b0029a5c5df4",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e4e1aecd-f787-4859-ad55-b472730dd758"
        },
        "item": {
          "id": "72dbeda5-07c4-4042-907f-9875e1686e59",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "647749f5-d3dd-4842-a573-14b0b357318b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a32467-bbec-4f45-9cb2-22e230e9bc3f",
        "cursor": {
          "ref": "e7b98298-458b-4819-8df8-a5ad9cf250a2",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7af23962-6c15-4ff5-b05e-db238427c0b2"
        },
        "item": {
          "id": "e2a32467-bbec-4f45-9cb2-22e230e9bc3f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6cba238b-de0c-450b-ace6-aa12cb20b9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2306f71f-51c9-4514-9705-3e9ee51c02f0",
        "cursor": {
          "ref": "0c04fc4d-3337-4781-8d88-a9e462585314",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "6426cd38-c5e2-46d7-9e18-0bcfbf786825"
        },
        "item": {
          "id": "2306f71f-51c9-4514-9705-3e9ee51c02f0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c3ea9f3d-52b4-4f61-bbcd-32943b04bb45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4860acc0-128e-45d6-a88c-6d71c4bfd28b",
        "cursor": {
          "ref": "333de34e-b1a8-47f7-97f2-dcc689c086d6",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5d938526-0bb9-46b7-b052-044f3f4da879"
        },
        "item": {
          "id": "4860acc0-128e-45d6-a88c-6d71c4bfd28b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b3303f71-0cb0-4313-8b7e-dfe72de04ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f8e93d-016c-4b93-984e-d9886be409ee",
        "cursor": {
          "ref": "52de8a82-eb04-4c4e-b9fa-4825fad8c301",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "175d27b5-aeda-447a-8b9c-7fbe144ef9de"
        },
        "item": {
          "id": "b0f8e93d-016c-4b93-984e-d9886be409ee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "accdcbf2-439e-41d8-b7cf-8efc031f64ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145811f2-b9bc-4786-9b07-cb3cfc4a6174",
        "cursor": {
          "ref": "27d00060-6ef5-46b6-9f95-06cd091edde0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "410d61ea-abce-47f0-80c3-e436d00a48b1"
        },
        "item": {
          "id": "145811f2-b9bc-4786-9b07-cb3cfc4a6174",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e02af283-368c-446c-b376-7b6d11d21b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580ad43d-eb98-41e9-9f7c-1017a29cf7f7",
        "cursor": {
          "ref": "fb4bf715-a271-4985-b079-9cdcbda86786",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "68c14fa6-966f-4ad2-b557-b50e2d5d4d5a"
        },
        "item": {
          "id": "580ad43d-eb98-41e9-9f7c-1017a29cf7f7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bd027d78-38e9-4869-9fe1-c5dfd35b4793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feff5d7-0392-41f1-9489-ddcf70c2cab6",
        "cursor": {
          "ref": "69801f40-5c2c-4650-9ebf-d1161618429e",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "078b3bff-84e2-47d1-acb5-3decf2502240"
        },
        "item": {
          "id": "3feff5d7-0392-41f1-9489-ddcf70c2cab6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ff6b61a9-13c9-4381-b748-bd81756ebf1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6daedda4-3385-4aa4-85fb-2c5acdae7ecf",
        "cursor": {
          "ref": "2f413a82-6559-491e-b93e-bfff5ebe5db8",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f7e6c90c-f3ad-414b-a82c-82fc8be16031"
        },
        "item": {
          "id": "6daedda4-3385-4aa4-85fb-2c5acdae7ecf",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ad8b022c-65a3-497c-8f90-c53cce2a902b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13351571-9a76-47a0-83f5-2a6e09ef24a8",
        "cursor": {
          "ref": "4250f720-4315-440f-81cf-436f8397ed7b",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "7e3291ca-81f0-433a-8d46-c6b6819709da"
        },
        "item": {
          "id": "13351571-9a76-47a0-83f5-2a6e09ef24a8",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "10314a99-db48-4558-ac81-a1d7b3f2f32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53bfc0c8-4c46-4530-922f-0070c2a00d42",
        "cursor": {
          "ref": "1be2d3a6-3056-4ec0-9040-d7a1294a659b",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6295ddfd-83fd-4c5b-bba4-c243fa6445ff"
        },
        "item": {
          "id": "53bfc0c8-4c46-4530-922f-0070c2a00d42",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ec827450-da72-4b07-9b25-36a0ee83db21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a74b78-ffd2-4552-aa94-c97c6d62d614",
        "cursor": {
          "ref": "a1c535fe-f739-45d8-9e89-6c5c2752d3d1",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "63b92153-fa96-4d00-9cff-e5aa0e918c13"
        },
        "item": {
          "id": "67a74b78-ffd2-4552-aa94-c97c6d62d614",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "bf434edc-6b3d-4a5b-a06f-24d778af93fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffeff2e8-661e-49da-88aa-8f1f15a8fbd8",
        "cursor": {
          "ref": "741758bc-3c96-4cac-988c-e6eeacc1dd51",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "52d00576-c6cb-4e42-b82b-5043aa1185bf"
        },
        "item": {
          "id": "ffeff2e8-661e-49da-88aa-8f1f15a8fbd8",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b36bb0c3-c172-42fc-a7a9-63517693f106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bb59c2-d89e-4bd8-b7cb-8e728289bb1c",
        "cursor": {
          "ref": "5038ded7-54b0-4459-8ac4-6fa864453f99",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "9edd9c9b-2330-408e-8d59-5b6cd3c926b3"
        },
        "item": {
          "id": "d4bb59c2-d89e-4bd8-b7cb-8e728289bb1c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "acf2da0b-e333-4dcf-afd5-24181f6ed4f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889ed32d-de94-48cd-b891-4b37d2fcb973",
        "cursor": {
          "ref": "1bcce1cd-6439-41ba-abea-e99596d85d6c",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "70c2ead1-4efe-4479-b551-592296eb7b6c"
        },
        "item": {
          "id": "889ed32d-de94-48cd-b891-4b37d2fcb973",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9627631a-289e-42af-af28-e068569e0c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66688c6a-b8f5-4b19-9ffb-af5beca1487b",
        "cursor": {
          "ref": "d28d2089-a3b6-42d6-bb0b-267f483e05a2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "642b6b09-1e53-451c-a0b2-4716566aefda"
        },
        "item": {
          "id": "66688c6a-b8f5-4b19-9ffb-af5beca1487b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ff7e86d7-1317-4735-9a6a-358ed2cb1745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efb60ca-5570-40f8-b720-b0bab667b01b",
        "cursor": {
          "ref": "8eeca5e2-5d75-4494-ac62-4e90bd757f74",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "76b1d58f-dde7-472f-8ab9-ec0c84737c69"
        },
        "item": {
          "id": "2efb60ca-5570-40f8-b720-b0bab667b01b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cc1c9353-bcbd-4fb2-bff1-cfd55f41be0e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9ba062-c451-4775-be46-962b65f60db4",
        "cursor": {
          "ref": "2b2ca9ab-f115-43e6-b3b3-9775c70245e4",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d901e000-5138-4f4d-9d7c-c7d7ed0689f6"
        },
        "item": {
          "id": "ec9ba062-c451-4775-be46-962b65f60db4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3a448972-85c2-4533-8afb-8cc9fd15234f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea222901-2ac6-4842-803e-6d2eb379ab2a",
        "cursor": {
          "ref": "c15c9ab4-bc20-417f-b725-5b215de126f6",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fa347d5e-8acc-4547-8135-fae193cfa98b"
        },
        "item": {
          "id": "ea222901-2ac6-4842-803e-6d2eb379ab2a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5f591f91-8be9-45ca-992d-2a180dbdb42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df60ef90-5e50-4f39-a57c-3a2b33dde9a2",
        "cursor": {
          "ref": "dfc1933e-c5f6-4001-bdaf-6896b18c1509",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "175e1274-6838-4130-a520-48f270f90b1a"
        },
        "item": {
          "id": "df60ef90-5e50-4f39-a57c-3a2b33dde9a2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8e046314-1315-4cfa-90fe-0cb797655b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8a97f4-ad5f-452f-8131-124e7c6eee38",
        "cursor": {
          "ref": "a87304df-6453-42bb-9a16-3c137fcce7d2",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5775f76d-fa9a-438f-a9ff-a5c6b667bbf0"
        },
        "item": {
          "id": "aa8a97f4-ad5f-452f-8131-124e7c6eee38",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7491bfa9-1cf2-4230-b020-d49e20ceca0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077c4fea-13ce-4c09-aaa0-489e15441820",
        "cursor": {
          "ref": "aa51b765-6442-448b-b5c0-1c101fb01783",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "90c6692d-f2c6-43cb-a66b-2489066203e6"
        },
        "item": {
          "id": "077c4fea-13ce-4c09-aaa0-489e15441820",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1dcf472d-2518-46bd-8faa-7cd3fa5a7859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad47f79-8ed5-4d9a-9717-cfc9f989db13",
        "cursor": {
          "ref": "61c51cee-5f20-4d0e-9612-defb1739bf2a",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "de7e76bc-3991-44be-870d-b924ffac972f"
        },
        "item": {
          "id": "3ad47f79-8ed5-4d9a-9717-cfc9f989db13",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "9250e53b-8a13-4448-b6df-286e52830bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7175fab-1ef0-4d64-af75-75c49d9fbd2a",
        "cursor": {
          "ref": "d769b313-595c-43f1-840d-dd64de8d4370",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "22313d2e-428c-4261-bf60-155722b6882d"
        },
        "item": {
          "id": "b7175fab-1ef0-4d64-af75-75c49d9fbd2a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b8abdbb0-8cb9-48e1-af4d-2fcd81ecc609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a58394-50c7-437c-b21e-65c84e838060",
        "cursor": {
          "ref": "cfdbcc3e-c535-497e-8f69-044bdb20036f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c8e6ee3e-7464-4d13-866e-b1886d68bb6e"
        },
        "item": {
          "id": "21a58394-50c7-437c-b21e-65c84e838060",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "77bb9dfc-8264-4d8c-a8df-9689ada30f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af8ba1e-f172-4a91-81fe-7ce45617d2ba",
        "cursor": {
          "ref": "c443b7a2-5c15-4879-8c5d-fc174683155c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "95ecd062-1d30-4e6c-ab7e-0beeb85f4082"
        },
        "item": {
          "id": "5af8ba1e-f172-4a91-81fe-7ce45617d2ba",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "39147639-f9e5-430f-96e5-5a8f61ca3041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bd0d8b-e48d-402f-ad5c-5726b0d97c28",
        "cursor": {
          "ref": "080e87b5-3e22-4322-a933-56bbe34d83e3",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6f5c3050-2713-438c-88a5-b07e84998bd4"
        },
        "item": {
          "id": "c6bd0d8b-e48d-402f-ad5c-5726b0d97c28",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "dd39392a-5cfd-421d-8969-2acc59c273ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c02e3a-c2d1-453c-82fb-76501d067101",
        "cursor": {
          "ref": "e2e91a14-df06-4714-b0cb-28959f0da806",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c6d3507a-f13b-41ec-95b4-9038212cce86"
        },
        "item": {
          "id": "46c02e3a-c2d1-453c-82fb-76501d067101",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "71017448-6dea-4dc4-96ff-853ad5c84e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da394820-c7e5-4847-816b-738e4d8aa948",
        "cursor": {
          "ref": "9a98be1c-1a11-4653-864f-3cbdf5225fe2",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e26b665d-e168-416a-88ac-013fb85b6ddd"
        },
        "item": {
          "id": "da394820-c7e5-4847-816b-738e4d8aa948",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fc7efa7e-68e3-4a99-8ad8-232102fe3f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18889450-122e-43d6-bce6-60ab98b6b0a8",
        "cursor": {
          "ref": "bf153e2a-f0a4-4bbd-9baa-0fefd551b399",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "caa4bb3d-306c-4e37-bffb-3ee64f066bc8"
        },
        "item": {
          "id": "18889450-122e-43d6-bce6-60ab98b6b0a8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "11f977a7-b29e-4773-a853-aa482a7f1200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931c0fe8-ae3c-405e-b967-08027cd10dc9",
        "cursor": {
          "ref": "d0452e08-bd2b-4b12-a2ed-f7cde3897cb6",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4f10a302-e7e8-4f01-a542-16bd1fa18982"
        },
        "item": {
          "id": "931c0fe8-ae3c-405e-b967-08027cd10dc9",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "cd1f5d96-d88a-4c7a-ba28-072c28280405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5306d941-9748-497e-8e66-f3d97673349c",
        "cursor": {
          "ref": "5596d8b6-a9b8-4843-a5a8-f42d79bbeb6f",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "9ee1e15b-6925-48b9-ae6c-3edcae425e2c"
        },
        "item": {
          "id": "5306d941-9748-497e-8e66-f3d97673349c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "80a63b27-cc83-433e-be12-8e528c145791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0f0e42-c450-4725-940a-70b5d79fd51a",
        "cursor": {
          "ref": "a1bfb211-a4ab-49b4-94ea-4e407833e62e",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "cf0a76c0-01da-445c-82a7-b65dd6e5080a"
        },
        "item": {
          "id": "4b0f0e42-c450-4725-940a-70b5d79fd51a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a35de6f1-f073-4c13-9af6-db04c96cb289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3424bfbc-59ac-41ee-9759-1a12531f0ecd",
        "cursor": {
          "ref": "42ffb2dd-c2f7-4fb9-8874-d853a9659e8e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "af18d52b-4c23-41a6-ac1d-36e635466ed8"
        },
        "item": {
          "id": "3424bfbc-59ac-41ee-9759-1a12531f0ecd",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "072a8c6e-95ab-4609-b7cc-f4b549d996ba",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "87fc3bd0-1e22-4fcc-98ba-fb1feae24f3f",
        "cursor": {
          "ref": "3e37d710-e0ea-44cc-bff2-a9e20011f94b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "1c4dd108-d097-47aa-a3ec-37bf1ae1da14"
        },
        "item": {
          "id": "87fc3bd0-1e22-4fcc-98ba-fb1feae24f3f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "9b7aa0a0-0b40-424d-af1a-18c050173d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d18b335-feea-44dd-8cc3-86291687a524",
        "cursor": {
          "ref": "878d4de1-02d8-40d2-b1e1-50bf16db4de5",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e3d482ac-1f09-4223-b82d-b4ee6b2a0ec7"
        },
        "item": {
          "id": "2d18b335-feea-44dd-8cc3-86291687a524",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "05f0a5c1-c067-4e94-a0b8-187ef15ff725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61905cf-012e-4bca-a6e9-872bfc6f43c7",
        "cursor": {
          "ref": "7750b066-973b-410b-b2b3-d2ab3971591f",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "afc8c32f-323b-4d2a-997c-a1c44b3288a9"
        },
        "item": {
          "id": "c61905cf-012e-4bca-a6e9-872bfc6f43c7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "68dc6ac6-98c5-41ad-945d-5752c23be497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6acc34-d235-4f30-a5a0-86c3f8a0558e",
        "cursor": {
          "ref": "735f5ca4-ffc0-457d-9f67-8b103c0fed79",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "25d4b08a-bc24-4d08-ad2d-57295ff890bd"
        },
        "item": {
          "id": "bf6acc34-d235-4f30-a5a0-86c3f8a0558e",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "08b0ee67-6020-42d5-9239-5d34eb8d97dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e59fe84-c05a-4e28-959e-c24336b0c98c",
        "cursor": {
          "ref": "8e6dd6f0-b3b1-45b1-aab2-f35867a93972",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f7138b04-c85d-4ddc-b387-91acbe959fe4"
        },
        "item": {
          "id": "3e59fe84-c05a-4e28-959e-c24336b0c98c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fc45c0df-f816-4494-81e2-c0a8a7ab88cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c1fd91-b362-48f9-bb85-427d63d3956f",
        "cursor": {
          "ref": "afe4af7b-a05d-4e29-b256-a9e56a97c31c",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b733a790-fe96-4e54-99c5-e8162aa3f757"
        },
        "item": {
          "id": "78c1fd91-b362-48f9-bb85-427d63d3956f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a455ab8e-fc2b-49e3-9b63-28a79ea4161b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9c71a9-b6ea-4f30-ad95-096d4c6e58dc",
        "cursor": {
          "ref": "a37f4ce8-f5d7-4b83-a491-ee98274eb928",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5e61e8ae-6196-4a37-bf67-92fd90671f82"
        },
        "item": {
          "id": "9b9c71a9-b6ea-4f30-ad95-096d4c6e58dc",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "74e17b43-b328-41ef-bb3c-fc76a9c07446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e9823c-038a-4f4b-a45a-54f7f1e3ccc7",
        "cursor": {
          "ref": "6e94f185-479b-4c48-9589-655672cc2303",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7e6af5f4-a7ab-47d8-8851-5574fc893fa8"
        },
        "item": {
          "id": "71e9823c-038a-4f4b-a45a-54f7f1e3ccc7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e8d28dcb-bd84-415f-b4d1-dbc87832dffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 141,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85fa94e-beca-4a84-9c17-d956c2bb9c47",
        "cursor": {
          "ref": "4ffbf60a-5d42-46e6-94d4-52bfc353f32b",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "deb167ed-a909-4f33-ba38-e0799be75c5a"
        },
        "item": {
          "id": "a85fa94e-beca-4a84-9c17-d956c2bb9c47",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d88d5af3-209c-4e0a-9b99-08a14794f823",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b51cb77-343e-4542-9d10-dc51ba99e26d",
        "cursor": {
          "ref": "c814d6bb-30b5-4f05-a64b-8bde2c30d12c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "109c02e6-0895-434b-8766-3f912f696d86"
        },
        "item": {
          "id": "1b51cb77-343e-4542-9d10-dc51ba99e26d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4e7e0e1a-3d0c-445b-974b-7d06e0bc96d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28123049-8849-4dfe-9fb3-b72c8d1ed483",
        "cursor": {
          "ref": "b8f3c90a-acb1-403f-9933-4b0d06188df0",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "491f5d4a-c7cf-4561-8ec6-17dca54ae96c"
        },
        "item": {
          "id": "28123049-8849-4dfe-9fb3-b72c8d1ed483",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "81933785-6940-4d53-aef2-f8fc08b02017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ddaa9c-3e4c-4e49-98cc-954c3785242d",
        "cursor": {
          "ref": "fe0bb36b-2297-493a-9f7b-6ab5a277673d",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6f2f2545-2ee4-4eb1-bd54-5027ed2350c2"
        },
        "item": {
          "id": "09ddaa9c-3e4c-4e49-98cc-954c3785242d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c44e170e-ce8c-4cbc-b889-4a4e46156291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35008ac6-1f96-4651-b940-592e38c21c66",
        "cursor": {
          "ref": "b76d69e3-a368-45c7-9b4a-bcb4c5bbe5fe",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "7a210a93-910d-4337-b452-9b06a5f89ca6"
        },
        "item": {
          "id": "35008ac6-1f96-4651-b940-592e38c21c66",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ca66e744-4cd3-430f-a326-36532b779f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50400986-127d-49ab-a6ae-c7092ef07863",
        "cursor": {
          "ref": "68a71ad9-d828-4bcd-9ad1-1d3b3684b720",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "955e383a-a637-4fb9-8423-6f7c93041722"
        },
        "item": {
          "id": "50400986-127d-49ab-a6ae-c7092ef07863",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "403449b7-d027-4d87-829c-610a9db1342a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f22e96-6c36-4ba8-b028-0043131f8f6f",
        "cursor": {
          "ref": "eb6d8586-464c-4a23-af6d-bf59ad2de0fa",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cec6948d-ad5b-47f3-9553-1ec63c873b66"
        },
        "item": {
          "id": "70f22e96-6c36-4ba8-b028-0043131f8f6f",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e03bfb21-67a9-4437-81f7-a029a1d969f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00316bb3-3015-4c1f-8475-a965faf9a43a",
        "cursor": {
          "ref": "0090b1fb-2e60-4474-a462-48281e27609f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4f4722ae-4b9c-444f-9826-9d9a2718dc28"
        },
        "item": {
          "id": "00316bb3-3015-4c1f-8475-a965faf9a43a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "018049f9-4a2b-4d20-b5c1-a74841240586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c82878e-8187-4cae-a599-745bb1b7104e",
        "cursor": {
          "ref": "ffb88c41-ec1d-4295-a877-8f302ce2e852",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5b375cca-995b-4002-86be-8477611efdfd"
        },
        "item": {
          "id": "9c82878e-8187-4cae-a599-745bb1b7104e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "69513c6b-1302-4456-9825-ad0c8ac3fca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318114c0-cfce-40ec-8f89-33acd2b54edc",
        "cursor": {
          "ref": "07d6b14e-506c-4b4e-9e2b-0866c1e801ed",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "edec57d0-e44d-4163-8a6b-5140dad2e5e3"
        },
        "item": {
          "id": "318114c0-cfce-40ec-8f89-33acd2b54edc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cebd0deb-897d-4fff-aaa7-ca27331e5ccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fdfe54-9b3d-45d8-90e9-8b7a68e5f12a",
        "cursor": {
          "ref": "5f092abe-95b4-467c-bf1f-f8b02cd7d630",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "db4687a1-7d7e-4bcf-98c3-49eb41694e31"
        },
        "item": {
          "id": "d4fdfe54-9b3d-45d8-90e9-8b7a68e5f12a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a5dfb1a8-9c48-4c6f-870d-0e0aa4508a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c26e24ee-ccaa-4347-a70c-2d5ee5476cf7",
        "cursor": {
          "ref": "0bd4b18a-c7b8-4c7a-9ed5-a056db7b1a4b",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "34474b38-4059-4fab-81a3-338a7560fe2a"
        },
        "item": {
          "id": "c26e24ee-ccaa-4347-a70c-2d5ee5476cf7",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4e5cec8d-4adb-4298-8458-8585e6fbe128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20201439-b847-4d32-a82d-eed08ce9342d",
        "cursor": {
          "ref": "d1e2e629-d711-4140-81cc-359b31bfa5ac",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "35d39439-e364-43e8-9320-4d5221fcd845"
        },
        "item": {
          "id": "20201439-b847-4d32-a82d-eed08ce9342d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "8da592ac-d5b1-4851-9ea5-d75a62dab86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e81482-43ef-4459-b88d-80d19fd6ae4e",
        "cursor": {
          "ref": "40b3dd1f-65fa-4d90-a69d-5f35d3e1eff8",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "02700155-e4c6-40e0-9e81-28e6162c2402"
        },
        "item": {
          "id": "f7e81482-43ef-4459-b88d-80d19fd6ae4e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6b89dfae-a7da-4f92-8271-193c8f604abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2fdb53-750b-4eef-beae-e3c50fc137ef",
        "cursor": {
          "ref": "74565339-0f77-4b46-8932-e65c978aee4c",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "23d924a9-d13e-4046-90e3-0ca50661cabd"
        },
        "item": {
          "id": "3f2fdb53-750b-4eef-beae-e3c50fc137ef",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5ef211ea-e092-4fd6-b0de-157aada4fc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f99846-284b-4a70-b4af-22d7db5bc88a",
        "cursor": {
          "ref": "720c10ab-2a15-44d8-a7dc-ef4cac9041ae",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dd4de9e5-d422-4f73-b001-efbed98b10e0"
        },
        "item": {
          "id": "73f99846-284b-4a70-b4af-22d7db5bc88a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d0b644b0-65bb-47ef-9a12-a51014d5cc68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0046a089-6d3b-4e18-bf04-06868de5e4f4",
        "cursor": {
          "ref": "b66fb630-40ba-47e8-ac82-d96901121c50",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "079f9ebd-2905-4955-aa15-4afa09a80754"
        },
        "item": {
          "id": "0046a089-6d3b-4e18-bf04-06868de5e4f4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6860be18-a4a7-4acd-8bec-6a2e740875cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8998e16-c844-4041-b06d-90deead90064",
        "cursor": {
          "ref": "77b3fb8f-84dc-4ac0-831b-a742b11ce108",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cbd84066-c7bb-4a9a-893b-75f81ba2710e"
        },
        "item": {
          "id": "e8998e16-c844-4041-b06d-90deead90064",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5a946f8a-9c39-4912-8e33-ac974fa302c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41023f3-cb4a-40d9-9079-7734919cafc3",
        "cursor": {
          "ref": "5e0bde5c-9ae8-42cd-8969-61740d381df7",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a96ef72f-4c81-4d72-87ba-e4d882b640e4"
        },
        "item": {
          "id": "c41023f3-cb4a-40d9-9079-7734919cafc3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e3ca2671-5aa2-4734-957a-5a092840599e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ffbad5-a40a-48f3-8f9c-ee8e038574d5",
        "cursor": {
          "ref": "9aefe8cb-25e2-4707-b270-063e1ce7cc8a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "067bfe96-64b7-4ab6-b003-12f840287b79"
        },
        "item": {
          "id": "c4ffbad5-a40a-48f3-8f9c-ee8e038574d5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "53d63bd7-1278-4d43-9f47-2cd0b6314a9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31607a0e-7c01-49d6-a0b1-e5451120e7cb",
        "cursor": {
          "ref": "8331b607-b0aa-40dd-8f3c-919e1680005a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "35b0c03d-4ba5-4628-bd7b-81d81c504642"
        },
        "item": {
          "id": "31607a0e-7c01-49d6-a0b1-e5451120e7cb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "87b4d30c-5b8e-4f59-b087-7a17ad98e8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618b0c55-8609-4268-98e0-bf9bfda58d1a",
        "cursor": {
          "ref": "70854d04-9336-4c47-86d3-bec9338b4056",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "983ee236-6dc4-4fc1-ae00-880476cd8b48"
        },
        "item": {
          "id": "618b0c55-8609-4268-98e0-bf9bfda58d1a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "a9006c86-a753-4a3e-91e9-abd0f3b6b718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01ca5558-6946-46f6-99cd-28291bd23003",
        "cursor": {
          "ref": "39c9d404-103d-492d-8bdd-072738cb86b4",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "da2c7905-b0f0-4f19-8304-1adbd6a5b879"
        },
        "item": {
          "id": "01ca5558-6946-46f6-99cd-28291bd23003",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "c6acdeee-1773-45ac-b3df-0cac349f97d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1276787-419d-470b-9351-49a47bea64cb",
        "cursor": {
          "ref": "9bc78985-35da-4b2c-af5e-a8d4c670ece8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "92c70261-be73-481e-86f3-004e8aed56a5"
        },
        "item": {
          "id": "e1276787-419d-470b-9351-49a47bea64cb",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a357025b-e64e-42fb-9ae1-e4eb7c329a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60d5520-ed36-4de6-8b6a-caa2d0cc2ec5",
        "cursor": {
          "ref": "ceca0aaf-46a2-4413-b2d2-c9ed2c3b652d",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8245534b-5681-470f-8b1a-eaf9053f0c8b"
        },
        "item": {
          "id": "f60d5520-ed36-4de6-8b6a-caa2d0cc2ec5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8aa5e02d-1007-45b5-aeb1-118c0e53598d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6a561a-7fa6-40da-b959-fc22fb894395",
        "cursor": {
          "ref": "14b812a7-c030-42dc-ae31-dce7f1a4b660",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "aa768f2d-99c6-4cc7-a2bc-2671c28fa21b"
        },
        "item": {
          "id": "df6a561a-7fa6-40da-b959-fc22fb894395",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "947cb635-3836-4099-baf6-3560c7b8ab37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c996a670-33f6-4cc2-bbba-96a059b7054a",
        "cursor": {
          "ref": "cc804c51-221c-4750-9e6d-cdd658440b91",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6a4917ef-4495-4356-b59f-ef9b0685a968"
        },
        "item": {
          "id": "c996a670-33f6-4cc2-bbba-96a059b7054a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "afaa1487-ef7c-465b-8925-889228ebee5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6e4c7a-f4f4-4076-bab9-d1f5943d4cc7",
        "cursor": {
          "ref": "e69b9431-2af4-476e-89b6-e3230d0ed540",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2383eca8-b4c1-4a38-a32e-190d241de330"
        },
        "item": {
          "id": "1d6e4c7a-f4f4-4076-bab9-d1f5943d4cc7",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0c3b5290-6b4b-4473-86a7-57dde9f93a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d4e0df-3133-49b9-b22a-98d43607efb3",
        "cursor": {
          "ref": "b9afb4f9-4dda-4b7e-b406-dba9aa601e7d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cc68941e-5e5a-4d27-be41-4db44d1b076b"
        },
        "item": {
          "id": "39d4e0df-3133-49b9-b22a-98d43607efb3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f6bde1b8-21d1-42bc-a936-5c35d5448189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58571d7-a6bd-44b2-8b51-c34bf9badd43",
        "cursor": {
          "ref": "a49a788a-15fd-460f-b0c3-b2025368c856",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2fafbf15-a7fb-4765-b9fd-d0ac56825b43"
        },
        "item": {
          "id": "f58571d7-a6bd-44b2-8b51-c34bf9badd43",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b552773d-86ff-4d4d-939a-36fceff8459b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea57cc9-6c8f-4194-b083-d256a84d719e",
        "cursor": {
          "ref": "1eae41b3-98c5-4364-9d11-fc222d68d233",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f2a168ad-a507-47b9-8a82-07d471569267"
        },
        "item": {
          "id": "aea57cc9-6c8f-4194-b083-d256a84d719e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "52332e00-1c96-4bd6-8056-f0d814ed4b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df08d4b1-c06c-4f1f-8034-6f276bc51477",
        "cursor": {
          "ref": "b7c98cdf-f005-4a48-9295-b3cfddf4dac4",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "36e07e6c-d342-4bf0-9f96-fb92eecae1e1"
        },
        "item": {
          "id": "df08d4b1-c06c-4f1f-8034-6f276bc51477",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "56b6644e-a516-448f-9bb7-12b56cbcf5bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6667a7fa-30d2-421a-a92a-a716ba3f5d28",
        "cursor": {
          "ref": "369df53a-c956-4c2d-94ec-48180f970c47",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "58c91e2c-cc37-4385-b42d-f3060dbccbae"
        },
        "item": {
          "id": "6667a7fa-30d2-421a-a92a-a716ba3f5d28",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b77faf54-27a2-471c-bb0f-74f3f37e55c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a36e6f-6b6d-4ad0-bb80-17ba486b563d",
        "cursor": {
          "ref": "331b1155-e305-44de-b898-b47be81dcce9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d1c05779-a8ea-47d3-b631-b0582530a61e"
        },
        "item": {
          "id": "94a36e6f-6b6d-4ad0-bb80-17ba486b563d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "52cf04d9-7b37-4e7e-9b15-bc16626cf355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15349f6-915c-4a63-b051-4ec09376db62",
        "cursor": {
          "ref": "4da5ed2c-17dc-4ed9-87f7-75d6a88ed4df",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "edf83dfb-dbab-4e86-a956-5b27d4400827"
        },
        "item": {
          "id": "b15349f6-915c-4a63-b051-4ec09376db62",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "205e1a13-cebc-42f9-9217-3e2f51b748e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e525ebe-f73e-4fb2-b73b-d50d8894ca76",
        "cursor": {
          "ref": "7b7545f9-69e2-47e7-9f4a-876aad3eb127",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bf4ff582-4b24-46e2-9e7d-80bb0d3abe54"
        },
        "item": {
          "id": "4e525ebe-f73e-4fb2-b73b-d50d8894ca76",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "493496d5-222c-4ff6-a2f2-35d459497eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d8790a-249d-426a-b265-77e7f565d13a",
        "cursor": {
          "ref": "f6c0ae3b-0939-40a1-9a95-ff72d60dec6b",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f5640fa1-08bc-4e39-91ea-03a4c3e8acb6"
        },
        "item": {
          "id": "17d8790a-249d-426a-b265-77e7f565d13a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "43c2537d-c248-400d-ba3a-0956bb7a7125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865dc58e-f632-4c6d-aa54-e6f0129b0d01",
        "cursor": {
          "ref": "cbd24198-2dbf-49e6-824d-fde7ec9232f9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e57ba140-8695-4366-a2cb-9e99846e0fa3"
        },
        "item": {
          "id": "865dc58e-f632-4c6d-aa54-e6f0129b0d01",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "09fd11f2-c25e-4506-9121-733895c97053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb7c20b-cf7e-4030-aabf-4e84ad7338db",
        "cursor": {
          "ref": "1ce23e03-be9b-4a14-ba0c-af89b177570f",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "e7d7d30f-0054-4ec0-a4bb-cff3ecfcd8a0"
        },
        "item": {
          "id": "bcb7c20b-cf7e-4030-aabf-4e84ad7338db",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "468a9456-5cd5-4ccc-8482-ed0314f7f29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48466f37-8bc6-4a97-be89-e868e8c754fb",
        "cursor": {
          "ref": "a3638d78-588e-4bac-a0d4-16452b8ebb7e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cd2817cb-3081-4aff-b5d7-588f91ad4fca"
        },
        "item": {
          "id": "48466f37-8bc6-4a97-be89-e868e8c754fb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "df03da6c-0853-4680-b36c-24636bb19478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94e27f8-a092-4f4f-8e99-4c080899ced9",
        "cursor": {
          "ref": "5dedd9e0-2632-4269-8707-7ce34db54994",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8dfb9d78-1863-46c8-8059-646e967585f3"
        },
        "item": {
          "id": "a94e27f8-a092-4f4f-8e99-4c080899ced9",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f5448f89-708b-40af-9ef0-1cc296c341bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f64ba16-0087-47d0-8e1f-06e1ae8a1bab",
        "cursor": {
          "ref": "30cd4fd0-9602-4623-aaf8-e3527e09a568",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c9a5acb2-387e-4800-a231-4b600aa10315"
        },
        "item": {
          "id": "4f64ba16-0087-47d0-8e1f-06e1ae8a1bab",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "27be8d73-b499-44e0-b43a-a23d18a544f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad06cb3f-e0d2-4a13-8fe5-294f4595e897",
        "cursor": {
          "ref": "8943d7b0-66ff-4677-88ac-d13f8d50c3cd",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b6c64b89-3cd9-4803-b5e1-bfc637815dfe"
        },
        "item": {
          "id": "ad06cb3f-e0d2-4a13-8fe5-294f4595e897",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "03d51556-11d1-44f3-95bf-9dcd1f89f05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e2d94c-f5c3-4196-8e0b-1b7ba48954d9",
        "cursor": {
          "ref": "be1ff7aa-e8cf-4335-bc42-6c320587757a",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "44c9524e-8351-4a17-968c-dcc40dd34649"
        },
        "item": {
          "id": "17e2d94c-f5c3-4196-8e0b-1b7ba48954d9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "67275a81-cde0-4773-a1ed-8a81c7ed1da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d468bed-d60b-49bb-9b8a-d268e8fe8fdf",
        "cursor": {
          "ref": "249abf84-dc21-4277-abf5-a045044d09f8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1f13f755-e06a-4061-a1ac-b95f7dd6a6b5"
        },
        "item": {
          "id": "9d468bed-d60b-49bb-9b8a-d268e8fe8fdf",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e1a31b37-201e-44fa-b812-0dfab527f7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c64d765-f72f-4e5e-af45-4f26f51c388f",
        "cursor": {
          "ref": "0517197b-dba0-4105-891c-f9a3c77e386f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "63158296-2160-4ba6-b03d-d831b08b6972"
        },
        "item": {
          "id": "2c64d765-f72f-4e5e-af45-4f26f51c388f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "96b2d287-c422-47bc-a0c1-cd944c9e6cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83583751-87fe-4bb9-9c38-cff0e1f5c971",
        "cursor": {
          "ref": "2575bd18-7c45-4316-b43a-fb9b4ce02ff5",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "998cbe7e-d76e-4c3f-bee5-8f4da8e28283"
        },
        "item": {
          "id": "83583751-87fe-4bb9-9c38-cff0e1f5c971",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "de6c1cec-0b49-4a0a-b55e-d933607b235a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc72c0a-72d8-41e9-a084-fcaa67895080",
        "cursor": {
          "ref": "629894d8-c1b9-4620-93fd-f973d3b4d586",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ae04467c-baea-48f6-bdfd-80bdbd9af252"
        },
        "item": {
          "id": "2bc72c0a-72d8-41e9-a084-fcaa67895080",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1f0656ed-62f0-4df0-adef-361c1ca1ae62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1858bb3-1f12-416f-ba20-b6405e27ecdd",
        "cursor": {
          "ref": "9968b3ee-bf90-497d-96ce-ba05f4de186f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "47657fcd-5421-402c-b2f9-861a219c9a1a"
        },
        "item": {
          "id": "d1858bb3-1f12-416f-ba20-b6405e27ecdd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "41f893c8-46f5-45b7-a6b6-43306d8ac958",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54bb0ca3-df9f-4ad8-bdc7-b08651d3c1d9",
        "cursor": {
          "ref": "c62f144a-6d89-4cec-88c5-a32c169f4909",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "d85cf655-9dcb-4d39-ba5a-953964e5aa35"
        },
        "item": {
          "id": "54bb0ca3-df9f-4ad8-bdc7-b08651d3c1d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "6c9a57e6-647c-49af-baf1-d1772b1d8f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8432ffbc-e874-4765-879d-e88cfd5a2390",
        "cursor": {
          "ref": "139b8728-d87b-4042-ae80-372f987f3f99",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f6ec45fe-ed12-4485-ba84-b08792ad9ee6"
        },
        "item": {
          "id": "8432ffbc-e874-4765-879d-e88cfd5a2390",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "87721bde-cf75-4fdf-8dd5-a6c7f63b8392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1db38c4-3097-4513-8b13-d513f677fd8c",
        "cursor": {
          "ref": "3a6e281e-57df-4c02-8972-8a5730a273e6",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e659f7ff-3eef-45fb-8021-14565c9df6cc"
        },
        "item": {
          "id": "b1db38c4-3097-4513-8b13-d513f677fd8c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "938b564c-fd36-49ea-be52-b5042f91a41f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d28f89-6c60-4b0e-b74c-ef0ff1fcba21",
        "cursor": {
          "ref": "2264ac5a-74c7-42b0-8583-118c91b36b0a",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "cc20446b-dd31-4561-98e0-664d1e8ca6aa"
        },
        "item": {
          "id": "02d28f89-6c60-4b0e-b74c-ef0ff1fcba21",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "32b6bb68-bd6e-4c24-8950-6fff432c830d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c70961e-7ecf-42d0-a2b3-bac826406d47",
        "cursor": {
          "ref": "237f1f57-8c0d-4967-a6c3-a18bc9be4c3e",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b70f200f-4b6e-4643-82ca-bd87ea7f4dd5"
        },
        "item": {
          "id": "8c70961e-7ecf-42d0-a2b3-bac826406d47",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "250fcdab-047c-432d-9b24-cc544b6d50bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3f4011-b682-4e90-8ecd-020ec4a79bfc",
        "cursor": {
          "ref": "36397346-30f5-46b3-bd25-e84df8afebd6",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "022578b1-dfaf-4aba-88b4-bed9bc438786"
        },
        "item": {
          "id": "2c3f4011-b682-4e90-8ecd-020ec4a79bfc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2d50f54c-0ca9-4ada-b10b-97641e7e893b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f072131-60fb-44c5-a1a7-da7c7360df42",
        "cursor": {
          "ref": "10076429-ec55-4597-859f-27f07c28e8ba",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "97c42be9-5605-4d1c-b95d-7740077909be"
        },
        "item": {
          "id": "7f072131-60fb-44c5-a1a7-da7c7360df42",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "aadb3bd1-09ab-45c2-b940-032eaa3f80a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dad3f8-74b1-4abd-835c-b3b4b57f96e2",
        "cursor": {
          "ref": "8dd9ec7a-856e-450b-af60-7ff842a5b004",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3bb5d279-265d-43ef-b283-081ab19c6ba7"
        },
        "item": {
          "id": "89dad3f8-74b1-4abd-835c-b3b4b57f96e2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9c3565d1-b380-4905-b29e-fe23a76d6169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aff05f9-d3c5-44ce-a5c4-e9e3dcca3bbe",
        "cursor": {
          "ref": "407a4006-b07b-442d-a5e5-919cf2838f74",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "c27b0017-f69d-4c6d-a05b-b8e057d78abd"
        },
        "item": {
          "id": "5aff05f9-d3c5-44ce-a5c4-e9e3dcca3bbe",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c47d67b0-20ed-4c19-8fb8-1179df0d405b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61eafae-a053-46ea-8423-8ba744af98f0",
        "cursor": {
          "ref": "af45eb1b-a7e4-4f11-aa34-a961df44b5b3",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7c8ed39e-ee22-4569-b61d-71b6c761cbb8"
        },
        "item": {
          "id": "e61eafae-a053-46ea-8423-8ba744af98f0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8c155818-9147-4213-8706-9e4711cccfc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fdfdee9-ac54-499a-94af-12ffedce6698",
        "cursor": {
          "ref": "0304067a-93f8-4d7b-9e46-7ecdee614af9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5fe303fb-6c65-4251-9c53-c4e65d15c803"
        },
        "item": {
          "id": "6fdfdee9-ac54-499a-94af-12ffedce6698",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "7f7439d3-a264-475f-968f-9554d36358c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eccf818-d73f-494a-b946-98cf672efa41",
        "cursor": {
          "ref": "e2341853-75fd-4b58-94a5-375e5c71e965",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9c241ef5-d8e9-4b01-84f1-10288f338e97"
        },
        "item": {
          "id": "9eccf818-d73f-494a-b946-98cf672efa41",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e40152fe-342e-4c6c-bba4-584a3958387d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e642ef-e902-4527-97a6-256506e25103",
        "cursor": {
          "ref": "0540241d-becb-461c-9a67-0dfabf38de24",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "f9c70325-e4ec-4215-b12b-1c3018eb1e2c"
        },
        "item": {
          "id": "62e642ef-e902-4527-97a6-256506e25103",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9020b01e-519f-4b6e-8d07-11434ec97206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300f7da4-2370-4dfc-9c66-0fbb1eff21b2",
        "cursor": {
          "ref": "4aedf7bb-847a-41f1-9a36-03145c2f96da",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d59cc597-0605-41b7-b2ef-e853cddd3c59"
        },
        "item": {
          "id": "300f7da4-2370-4dfc-9c66-0fbb1eff21b2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "fd4d7e19-3c52-4953-a0dd-d998c52b9c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024446c4-ac1b-48f6-b2e6-24dd1b98de10",
        "cursor": {
          "ref": "af08299a-7ee0-4bb5-a3ef-270f717db7d4",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8568a498-7925-4003-b02c-b33904cc8af8"
        },
        "item": {
          "id": "024446c4-ac1b-48f6-b2e6-24dd1b98de10",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f60b18be-4ec4-4cf2-bc4f-7b92a7c1055c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5374b03-3fdd-446f-951c-7dcf9ecd740b",
        "cursor": {
          "ref": "5d7ebf6f-a301-43ed-8af5-f87dbab2d2ba",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4fbb3a10-2ae9-449e-ae8f-dfff9e54ba6d"
        },
        "item": {
          "id": "d5374b03-3fdd-446f-951c-7dcf9ecd740b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "72443736-2b65-4864-8862-d03a5749a8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c9c56f-f446-47af-8e2f-551fb9eb82db",
        "cursor": {
          "ref": "23c885c6-5d0d-4b32-a3ed-8384ff287382",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e807d214-c37c-4857-aeb5-087a480721df"
        },
        "item": {
          "id": "43c9c56f-f446-47af-8e2f-551fb9eb82db",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6a56104e-cacc-4454-a328-670838658669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526f9014-e2b0-4d0f-8a0c-9b25777c0e45",
        "cursor": {
          "ref": "4758e334-5807-4545-bf63-2713e5a82aaa",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a1aa123b-a5db-4179-ba5c-7063fb5fe2be"
        },
        "item": {
          "id": "526f9014-e2b0-4d0f-8a0c-9b25777c0e45",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9357b71d-f9a1-4b28-a973-a6dada8fd56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00d4ceb-8b87-4b09-8fa5-c2c8c67923e8",
        "cursor": {
          "ref": "d70c6759-25c1-4958-b1fd-4cb055497571",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "17acfc21-8c73-4604-bd1c-5cd80575ef40"
        },
        "item": {
          "id": "e00d4ceb-8b87-4b09-8fa5-c2c8c67923e8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "924d23aa-9081-45d9-a5ee-02a94f3b4c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032c87cd-1153-40c9-a44a-8ef58690fcb2",
        "cursor": {
          "ref": "6317fd6e-ede2-4e25-ab86-50651ce3c5ad",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "cbc6ec18-9228-4319-8722-1d129ce0b2ee"
        },
        "item": {
          "id": "032c87cd-1153-40c9-a44a-8ef58690fcb2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "0dfa1648-6dc2-49c0-a18e-f229c086b0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64817a7a-f9b7-427a-932c-1e50cde5f4a3",
        "cursor": {
          "ref": "7136ce23-0ce0-446b-8963-692daa9dbd79",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "f2b68f44-6f39-43ff-a4ab-8f1e84d6c308"
        },
        "item": {
          "id": "64817a7a-f9b7-427a-932c-1e50cde5f4a3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "74c4ed90-bdd2-4d8e-98e5-3b97cecfff89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c760e47e-39bb-429c-95e4-834f7a99977f",
        "cursor": {
          "ref": "257eee44-fc06-4763-b3b8-ac8ae6a78660",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "19dceb23-4b63-4cb1-bbc7-0e072ba6dd42"
        },
        "item": {
          "id": "c760e47e-39bb-429c-95e4-834f7a99977f",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "98082f46-5819-4b35-beb9-0dce58852942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f115ec15-be15-458a-a0be-9c7dc30cb3fe",
        "cursor": {
          "ref": "19cd519a-251f-40ab-9108-b89826974e0e",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d78f49f7-a17b-4d90-8e6a-91707785c71f"
        },
        "item": {
          "id": "f115ec15-be15-458a-a0be-9c7dc30cb3fe",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4d3201be-dce2-4629-84cf-d5df36841f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47091b90-ab25-46c8-9adc-300d9bc9cdd7",
        "cursor": {
          "ref": "c2c645b5-6b3e-439d-9de8-b5b352427718",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "039c3076-4f7c-4d98-ac69-d73c92347350"
        },
        "item": {
          "id": "47091b90-ab25-46c8-9adc-300d9bc9cdd7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f50803ff-4ee4-4cda-9726-f66654ba6f6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04d04b9-f9cc-44c7-8f09-1000d51b664f",
        "cursor": {
          "ref": "3cf7e81c-6099-4fc6-92af-a3a9b080787d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "052056e0-7570-4c42-bb26-0a3a731fc6bc"
        },
        "item": {
          "id": "e04d04b9-f9cc-44c7-8f09-1000d51b664f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "647539ff-98da-4c2d-94c3-f6513f0082c1",
          "status": "OK",
          "code": 200,
          "responseTime": 89,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8efb554-7169-40a8-a092-42e9ba848dc5",
        "cursor": {
          "ref": "8c87e02e-6f27-480b-8608-017a73ef8d85",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5a11394b-4aab-473b-a156-292445956265"
        },
        "item": {
          "id": "d8efb554-7169-40a8-a092-42e9ba848dc5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6348c8bf-1c61-4564-91e1-73a683b44c92",
          "status": "OK",
          "code": 200,
          "responseTime": 4033,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "310c0791-c8f4-4d4f-b4fd-4b3dc83adf83",
        "cursor": {
          "ref": "fefe403b-c44a-427a-a2ec-ed6a10108d89",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cd2aa713-3e11-4c0e-b2da-7c94df72c48a"
        },
        "item": {
          "id": "310c0791-c8f4-4d4f-b4fd-4b3dc83adf83",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1d92f603-a416-47a9-95f5-f89d30d47959",
          "status": "OK",
          "code": 200,
          "responseTime": 4439,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1cb473-f8b6-40c8-89f7-abec5890bc19",
        "cursor": {
          "ref": "c4960c05-ddd0-4437-ad30-59dc544bd61d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "314862b9-bccc-41a3-98e2-467a80ee1084"
        },
        "item": {
          "id": "db1cb473-f8b6-40c8-89f7-abec5890bc19",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3d4a7466-0c15-4e3c-9890-89897f9c2910",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1cb473-f8b6-40c8-89f7-abec5890bc19",
        "cursor": {
          "ref": "c4960c05-ddd0-4437-ad30-59dc544bd61d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "314862b9-bccc-41a3-98e2-467a80ee1084"
        },
        "item": {
          "id": "db1cb473-f8b6-40c8-89f7-abec5890bc19",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3d4a7466-0c15-4e3c-9890-89897f9c2910",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13df9e38-2e98-4262-bf2e-5407d2794dc0",
        "cursor": {
          "ref": "17d11ea9-7f9a-4748-99ef-abed8e879df1",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "b361159f-7049-42a9-bdbe-cd910886fe39"
        },
        "item": {
          "id": "13df9e38-2e98-4262-bf2e-5407d2794dc0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a482d2c9-9276-4c4d-a5d1-c23ffba246ea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc28497-55ab-4df1-9f2e-9786547f4b47",
        "cursor": {
          "ref": "1f1396be-5bf7-4668-83b0-f0f8f708966d",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "20014660-3d92-4abc-a65b-2559c0dd0167"
        },
        "item": {
          "id": "bbc28497-55ab-4df1-9f2e-9786547f4b47",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0a913f81-25d3-4359-a6bd-f00ca52bae18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}