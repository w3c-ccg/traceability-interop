{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "442a432a-1ad9-46da-b214-c9df326445f6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "35a56d46-f2cc-431c-a137-0eca1cfe573b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "162cb4c5-d1ff-4ca5-81bf-43876b1ac7fa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4970c9a6-4265-45e4-bd4f-4e21265f7522"
                }
              }
            ]
          },
          {
            "id": "1283a990-4f5e-4461-afbb-51f628958f76",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "265dbeb6-af2a-4a70-a16f-c6766e746113",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fdecd3a2-ffe7-410f-a6bc-27fbb93057fa"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b5cb14b9-2580-423d-bb43-c6b2287f49cd",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "631a0e22-4477-43c6-b0b2-7fdd91347b87",
            "name": "Positive Testing",
            "item": [
              {
                "id": "540a2f30-f548-43bf-9d9c-fd5675906d51",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "26081511-465c-4f47-b167-f6c96fa3e0b8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e32d27b5-38ff-4bc2-9c97-4a81f5a75817"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "912c3833-e0b2-44e2-83d2-963b3ffb5158",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "10353970-d957-47b2-b7c6-8fa825b295ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f180b9e0-0f7b-45a5-bb05-f7624029f576",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c0034e2-9b6f-435f-94c7-9b16be539e1e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b76db16b-bc5d-4e89-9367-7e8c0f40a32d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e7e08104-6de8-4b8d-abee-b755bb4d886b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e2581642-73c4-4efb-9dc4-5ddeebf3e938",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a396c88-3525-45e4-bf50-981754f75215"
            }
          }
        ]
      },
      {
        "id": "e7f3a81d-cb24-4671-8b6e-74798bd1f36a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "815bd812-306b-4635-889e-0ab621659acf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ad89efa0-38c3-43ae-ab40-8a4a738c5214",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ad156def-eb53-47ae-853c-ccdcdc11889a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03229e19-cfab-402a-ac5f-f80d695aba4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd08cdc4-fcdd-4daf-8d05-23f2d35b735d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2918608-7628-47a7-919e-b0342a7b29de",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e669fd66-b9ae-451a-9c42-e873e74c07cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1a85739-a6ad-4a6c-9564-cdd8853117c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4431fc06-1b73-4037-8d0a-d5b66acd6332",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78027bbd-f558-4aba-b9a9-51d5a69ceddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b472ecb0-afac-4292-952f-c22912e19497"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6fa93ba9-d03f-4eec-bfc8-377502ea0265",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b6a9c40d-1d2e-43f9-b8b3-801c6e1275fa",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5dc19d3-0904-4a3c-84f4-7ede041b5ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1010cf6-df19-4044-b9a7-f7c835cb9d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9323f419-adf2-4bb4-a4ec-300ef01d4871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e8dac6-2f8a-4a87-a714-9a952db4e612"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4f85abf3-cbc2-425f-ab69-9c2ebaee2a2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a80e8c85-9526-467d-83ce-6ae80541475d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "425d4ac7-d942-4bd0-9675-928ce4c6e017",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "7ceb7ad9-7ef2-4b6e-b1ac-a829176d7631"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "002635a0-d498-4f50-955e-6582417e30c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ca16460f-4ffe-45d8-8a21-0df2f3062717"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7583bcf6-ffbb-4af2-b379-d268e4373e69",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5621f13c-cef8-4a2c-bc91-63974f2b0710"
            }
          }
        ]
      },
      {
        "id": "caeeaa3e-9be4-4b01-b5f5-89b4ce872a00",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a8e71d93-f78f-4f36-8125-cb52f64641f6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90784770-7dc8-49df-b8dd-6b1e7bb8c1c3",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "097cb0bc-b110-4cd9-a86e-787c18b2dcac",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6dd639-8113-4432-9fed-3ced7679c279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3530464-e44f-43e2-a94c-a4fac29a5252"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afaf31cb-b3b9-4a6a-80ca-1375dae9bec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "707e2692-7697-4948-b287-e168033cbfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d01b0cc-e1d5-40f9-bd82-3006cce93697",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e787f23-18ff-424d-88e1-921a7f0222f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d750381e-23ae-4af9-8c4b-df42b9f0f273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62ddc6c6-121c-4ae5-960c-f3f7e9f61fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c7b3254-ca24-4ae7-bd08-693a2556792e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345edcc2-29a0-469a-b6d4-85723df106a8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efdcb1dc-4a0a-4b93-a53f-1ee639293bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3883f6-1d1b-422c-8054-e10b2aed4db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe9901a-9d95-45a8-8667-45d0f10e411a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "312b20eb-3e32-46c9-b886-11bd45cc624b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a9a1ac-c6da-4a84-897f-c64a0900dc31",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9847cdc-697c-4284-8122-f57bd9e4c110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f35c00b-65b8-4e89-8ab8-13dd2f682dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eaf6bf-0165-4ebf-bbc6-c19d0364f018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2f231d6-bc1a-4f23-a17a-bfc4d6c142d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7605ecc7-8603-47f4-8d8a-9de2f209d557",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2c017b-d97f-4f61-868e-a0c3b98f70ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16b742b-5188-451d-8615-d2aebd599781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fe5a4c-1836-412f-a0a7-59c13a6d9d5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4bb7c28e-59b9-427c-819a-816b9a8dd817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdcffa6-9ef0-4e4c-af41-44de3cbd7996",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6989e09d-9a2e-4055-8fa2-58be92dfc9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "477b638e-30aa-4383-9bca-c920c8c24304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744917e4-4415-4cde-a652-5ecb32f34e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b2c9266-378c-4255-8b60-df0d5d599d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f4cbbe-a3d1-4683-9a37-697ba1fd8703",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a45049-ac4c-446e-9aa7-074e586bb41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae2a295-7e86-44ef-bb1e-9dab63fc4454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee9b6c5-d43b-4f61-aaf6-d4df0bbffc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1ec799c-6ecf-4f83-a729-657fa2338dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9255bac-ecfa-4610-9f56-795cd4c6af67",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3307cb-48f2-4228-9096-52097c19e8e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18b31d55-0ea3-4fcf-9b38-4cd1399a4e12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c634b7-cf71-4e98-8e85-27896b8e3d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4780ab84-c937-423e-aefe-406d506626c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1698f57c-79b9-4dbb-b05f-5e82b90658fc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a729fd-ef91-454d-b0f0-3cfccee9f676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8816d83-30bb-4e91-b722-3ad9c977f582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb34b561-1aeb-48c5-b946-4e911b2e2502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a740d878-68f0-4c79-a8a0-1738e95654e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cfda84a-b6a5-4b13-b86b-f35a877289fa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88ddab5-4a0d-439a-9d20-c5672ab672ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4171e8b3-1155-4725-a7c3-485dae6d882b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cdd347-bfae-453e-94a7-41521216f9a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8b7d68f-9f76-4f29-88b5-0799311958a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e440c3fc-d4b2-4706-8baa-77f69821a8e7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a93933f-8fb6-4de6-b9df-5642aa387b4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62226631-6ba4-494c-a7b8-d395704cacda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3560d2de-34d8-4d8c-81f6-4147c35547dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e9ef746-6617-4301-bc36-6a24fa6e2e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a664b881-0a22-46ca-a3e9-effb6d1fd2c7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffc1237-3140-4596-b6fc-4f4a4a647398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7ce90d-d442-4c3a-917e-2157bd71b689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199e379b-a3cc-4d8a-a777-00006efbc722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29b30460-a8ff-40d6-bbd3-db6f703398c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b768a27-6c77-4251-8bbe-14081dad6f1f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751a437c-e70c-4e19-baf2-f42b2b281cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00334ce-940b-4bbc-b62b-8fbc31a2771a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70ff604-c102-4fe3-a108-52b97b652949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "337a4909-a197-4864-82c3-b4ad18ab73ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d782b5-3d28-42b5-af58-f33d47730001",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203b8f1f-d8b9-4b69-8822-445095832f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95c8a7c-9d76-45a7-8789-a8a484536fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6b37fd2-d69c-4c74-a87e-2b9ca7c32523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7454824f-2f0a-4abb-b783-bf124bcc3ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a27c294-4e1b-4fc2-9c94-8223c4c80e13",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aea9797-8031-4cce-a0eb-9ea14aff0d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f84741-98e9-4e22-ac94-bf8e52e6fe4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92dc96c-00f7-4f05-92df-1792ea541f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6278f9bf-edd2-4846-bd40-55e9fba03b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcac0413-33cf-4987-93ef-b98038fe586b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b87e34-83cc-4f59-811a-b088b9e97376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "925caeb7-e530-48ca-aaf8-98c7b6461916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c2a5ab7-7dc0-48b0-b730-239027755a35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaf4d208-40d1-44d6-89eb-d066fa8e96ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eef2292-5259-4d2f-a619-96e14ff9160f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1343399-31c3-40c1-b59f-29b5008519f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "375dd9bd-9755-4da0-aa11-9f3c001241c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4daa000b-9ee8-421f-be01-978b5037fadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b05d7a5-dc96-4a69-a262-324e34321661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05abdc95-4c24-468f-9971-8cb68419bb09",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0b7898d-d59f-4ba5-ac08-6ad85a31bd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65dcb445-a7c9-4597-a592-6519b384f477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5a60512-5e6a-4697-b64b-f4fddb3105a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d47dd73-2964-4c6f-a4a8-bb2114562899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f54f16-a4be-45ae-85ed-5211dc4da763",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33581b4e-0ebc-4650-ad4f-3ff14d210471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb0d9dc-3aaf-46aa-9d21-2cf8c9642448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43d35d3-d107-4e0d-aaae-a41829a99636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c76d859e-150f-4444-a3a4-206c59a88107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f784f6-8bba-4707-ba9c-4415cc5f66aa",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2334e27-0601-4616-a237-978c8943bc19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c7ba6c-3deb-4c5a-bca8-aee11c06f0ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4961b549-aa78-4fc5-8eda-14b28bc32dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5367c560-0f38-405d-9a6f-090f54eea35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d8d6061-e628-4ec3-bd13-581dca95eee3",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8aee921-9f05-41dc-85fb-fdc33a3a2a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8895ee-bdbd-491e-84c1-3944f78c5f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da532863-cf74-4eb5-a3b3-e9ab6ba6cdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d68f4b7-458a-4caf-87ef-47005ce5e112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba677cae-e121-441e-b076-0bfa7bd02904",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793dae23-ada6-45e5-822a-995c87cfe2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfbaf034-be41-4822-9c86-e935f7f4073c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f3cae3-83ec-4b3c-ba88-fb1f66759484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5fff7e12-9368-44d7-bf35-0621a583a6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f888a037-ac31-44ee-baa0-f2eb9d1deced",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75167db4-075c-4bdf-add2-565dcf734c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a79737-c462-4a2d-9338-7f9830440c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bed035e-b6c2-4a17-b2ad-d262b288b876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd063cc8-a624-4016-b3c6-b72a3daa0c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a575c2f-b8fc-4c47-a591-df97dbcdf7e1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b238e4e8-f856-4f2a-b5d0-3becefd16f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94106d3d-d0c5-4d68-852c-60b78a90169f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c6d3e2-0543-48df-8a5d-9a017462e998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "eae5c72e-3299-48a1-b1be-2ee7edec0d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75b7a13-31a6-457e-9558-498f3ac257f9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5752cfae-48b3-44bf-9c08-c689d29710cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dd046a4-6a3f-4bcf-ac46-84a4d7b73709"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5812ceae-864d-4c61-aa87-e4fd3252aac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b973a15-2105-41ec-90bb-c45e450aaa38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86640b4a-5e3c-4f30-88e4-2ea03188fcb5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4997e302-5d08-4a9e-8586-d5662ef30073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49623d4-2a8a-4136-b709-fd526495e256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4e91e6-6a12-43cc-86c4-28ca12e63db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d45c723e-f624-4e7f-9f99-7ce0eb90452a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8025978d-baea-4ed6-8509-7d46ac3b2adf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14399a6-7e4b-4998-a011-1b3385f6d1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f2c393-3534-4afe-a72a-bd3f924d16cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72f03516-e5ab-4c91-ab28-0b0a7ba7ba57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7e55486-0057-4a10-95e9-63fac7232fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b9c67e-e9cc-44f1-9c90-3bb01342236c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd6bf6c-7845-4a8e-ab68-9f792cacc2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c61690-f935-41b4-8df3-f00c6b5b96a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a0f7f38-d518-4ff2-8b6a-14595be599ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "435210f4-9eda-48e6-a9fd-72a49c57ef47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc71a03-0c48-4089-af8f-73a200ef65db",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10ac7ad-3857-4052-bd93-9ac4da351bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc58214-193f-49da-9855-12e056bf0a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaeea274-8924-4082-ad59-2d89fda61f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61002384-d8dc-479f-b9f1-b7c4f67cb4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e52b5e8-0344-432b-8012-8aa4f80073ff",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c7807e-f460-40d5-9573-011834d9529e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d11159-f7ef-4fda-b708-8aaae06fd2cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "785f0b35-82ee-4075-912c-4dee3925c56d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecf083ca-6806-412c-aa27-ad6a7ae395f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c427af36-9453-4e1c-8058-ce45b6a1fb1d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "126c5b1a-a22a-43d8-b7a4-9f0155628af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a7ad7f-d11a-41b5-95bc-a0042d5c62eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba32377-cb5f-45da-beb5-5b9f888649ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "346b785e-f31e-4e17-97f7-58159a167849"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878d0baf-f79f-4990-85ab-ab7a41524a30",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b9bdfb2-b66c-40ca-842c-d1109924bd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "651677db-1fd0-42fc-a64e-0dfa6ffee6d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a43769d-c118-4cc3-abd8-80aeb0beb5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a429303-9ff5-421e-abda-6bd4da54db60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a33106-0ba0-473b-8b97-2fcf402b7640",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb07a68-27e1-47d2-ab0e-e2ce435467ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67fe1cb7-49a9-4f66-92ad-725801552846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8393536c-fec4-4c6f-8506-c5421c40623d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79acfead-f02f-4f6f-9464-5098e03323aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc44366-9d20-4d41-9af7-6a7f09240cef",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d64fa35-60c6-431c-b5a3-c1c0ea9ce223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd05bc8f-5b60-450c-adb8-7aff7374114b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63976c2a-afdc-4369-901c-e01f3b9df8b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cbc4bab-d88d-4cd2-ae3f-42d8661eb3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c48ef89-6c78-41fb-96d9-4cf3b5d3bc7c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3c883b-0212-4a3b-a17e-28c20c293e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16ccbd8-e723-471d-b952-aa2974b550d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32de2b2f-bee0-4f24-8df9-a8a4565cc0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e215ef2f-6010-407d-8b21-26881f089a73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce09bf1-7039-4dbd-b778-0b7486a3186e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13eee9a7-2ede-4d39-892f-5ed083b09223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6842efba-d098-4300-a894-fff4e39d6663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85e8f6b-f8bd-42a0-994b-91251790da43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7014c8a8-3a18-4f6e-8789-063e89b4a17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b65d6df-dfe0-49f1-80f8-8bcda9fb6480",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfaf9fa5-f490-4280-9f14-211034c71bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee38ce8c-6c3a-453d-94d5-d510d9448300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a63357a-cf55-4988-b8f4-a0c9a7971c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a5f452-97fb-4707-8f6b-cd472081970a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a46a63e-7cd1-47af-86b9-174f7eb478e7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8a3f17-ca3e-493d-b384-3e7ed1fc291d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4d8f2f-2ab4-4ab3-93ec-c80c1f579253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fc86a0-d1e8-444b-b823-c61388d9b2bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bacfb22-8747-478a-a462-75008c413940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbf62b3-7896-44bb-991b-7abb0ba89d48",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1aeba0-0c41-45fc-8715-6f8b557ff4ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fcaf5e9-be4f-48fb-8d1c-be0f4077587b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412592af-5a40-4117-9ae3-eade0bbbe5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c47c9d5-d792-428c-a6dc-dafc1eeee6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edafbff9-4e9e-49f0-b679-cfd53194a8e0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a3bd14f-39cb-4bf2-9fe6-14f36ab64604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "124f97a3-c361-41c3-9237-ee90fba5c966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c22e79dd-3439-42fb-b192-b8e393f20383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a58d7a89-27d8-4a4f-aacf-e72a333b553c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1391dd8a-23eb-435d-aef0-05b4496fd8b9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b97a9f-6d9f-4ca9-86b2-b96c95784c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7006cc7b-6c46-4c43-928d-5579a818aa19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bbfd99-10bc-484f-bc0c-3541907c81d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5df62bd6-933b-412d-aa08-d78a275730c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec0f0a9-e780-4517-8e95-66bd831dc88a",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f478cdb-72c7-488f-b470-4edc3f2eccd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492c02bd-abdc-43a1-9e0a-b6e0d7ccec03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6cc85a3-d800-4c1d-b907-41cf269d16bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "51d05cb9-0c90-423a-8450-315a38be1514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab827ab4-daeb-4fdd-8851-ef91fb8cd27c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "326970da-969a-46ea-a09e-313df664da8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48888be-497b-4601-976e-53e0fe58ee84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b8391c-02ae-4c0b-beb8-519457acb5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "452a44b6-d6f0-4626-855d-441bdbe269f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd49c0d7-214f-49ff-8c50-b50dc3257925",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa8c833-f9cd-4fff-b83b-765a5701858a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68db86eb-f550-4c00-85ac-bb64f447d574"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c126002-98b0-44aa-8413-4f70a9b4b0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "540c8693-c064-4514-97f7-79cc6b7bfcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3e579a-9445-4f4b-9c17-ed4dacf2c6f8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8fbfa2-5140-4958-8840-68df82adf153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37913bd3-2c4b-462b-9035-5dc68bdbeec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1e22a9-cc88-4ab2-8dba-e0e4dba08df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c17bc78c-453c-4c58-b340-a3ed7f011b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9a4387-1401-454b-9e4b-c15b2e656a28",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f412c9-0e6c-44ec-bca0-fbfbaa23605b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b18d440-58c2-4850-85ba-92e672076489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29179dc7-eb2e-4fe3-b41d-3f8ffb205048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "900829d4-ea72-4dc2-be7a-9073f1e82924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11468b25-d019-436d-8312-eb2861a8ee56",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0a2ea6-8e07-4dce-8c9e-afafa2454e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63d4154f-9409-4ef8-82dd-8bec9bd376d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86dc234a-e6e5-434e-8b26-2ef8f53ffd75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "214fc1c5-5d43-44e4-ad04-b2d8345e35a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cb96969-591e-4331-b528-7dcffaf084ff",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400ad7bb-18c0-4792-884f-0098e283ccc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49eb4008-c20b-4d35-af1d-d94bdb4491fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833223ab-06d4-4d27-834a-9453b91d4712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e187f998-8eaa-4ace-8c6c-ca4049f7ee8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9ec9ea-480c-47aa-a417-a957b741f750",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c3b32d-7a65-44f6-983d-eda10ce89cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4aba0d-4b28-4a7a-91d6-993b0c29603b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8aad75-f579-4666-9fe1-1b9ef0722d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "51b7112a-3117-4a9b-be02-41eb528e859f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a5c91e-3c58-4509-aa61-685c591df193",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b785a6e-2724-4e5f-846d-26b4c8e12af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfe1a6f-a41b-42ea-b62e-836f84fa68b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996b6ef9-ef57-48b2-913e-cdde990c2d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20a0750e-3312-4fe8-8dd3-1db5e51e4f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88b3efb-4918-40c7-854b-61084ddcd223",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b323e4f3-9559-45cb-90d7-58037a704c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1013c25-241b-4c1b-8260-1670601eba6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338f7eef-3cbb-4c34-a61e-620547892b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4967a213-81b2-413d-bbc5-34eb97a2537e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6c4e21-b67d-435c-8707-8a5fc157d0b4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58115fd7-df75-4452-9263-24dbe7f0f249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc980ca7-3ca6-4703-973f-f02bc9e02737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83826e23-11b4-41d6-972d-44b9d97d1404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e407cc76-9b80-4c6f-bf80-dd8d4f4545d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d376e6d-6e42-4fa1-a471-009c67e26604",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1339aecf-f454-408a-9c9a-f6331b274eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ce526aa-a7ba-41e5-872a-00fa78141c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b722d7-4128-4e25-aebd-5ee80cb58f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "012598ca-eb5e-45a0-bbe1-70ada8ae1926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7bb437c-3f6f-4729-83d6-cd3cff7cdd71",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f878aa7d-9bea-41b1-8d7d-f7206eb056a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7be4f3d-a6cd-4e52-afc1-a7fe3cb62e28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a9fc2e-78ec-437c-b7db-d1d038587641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93f251b7-2e93-4962-8116-d94756eff08c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "924e812e-a46b-4620-bcc1-3ac4d2f1780e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5636ec-21fe-4a8a-8219-21d03e9dfef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bfc55d4-6482-4336-8df5-59f9e7c69b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63fcf204-7f85-4b58-a54a-0e4501170bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb56912-ddc9-46e0-a93f-54d6b0997697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4d4f17-243f-48c7-b8bf-6aa529ad35ae",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5844ee98-8ece-48ac-97f5-3316efc6ac72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566b22b8-43e6-4733-9be5-658d74707940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc14778e-de2b-4349-be82-4be39f0f2c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "4868eb5c-81df-4243-be6a-8629894aa60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e500e741-ee24-4a72-a625-97a79d88d38c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4a3cc5-f29b-4237-a8ef-07a3235ef34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "998ff6bd-0b28-4334-9f2c-b5345fb78763"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f37b2b-96bf-48f1-93ba-9dd0bf35b768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "145a0147-3fa2-47bf-a881-a65199aec468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dc95df9-d8fe-4a72-ad08-e9967b85cf29",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc141c9e-684c-4eca-b46a-d927f3839d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c83ed755-e273-49bf-8f4c-1100a7b94bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f4947bb-04f7-40a5-87b3-fcbe886c0471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "94647ebe-ecbc-4da9-899a-333cfb78efef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653e89f7-10d6-484a-98ce-9fc03ff04a38",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3099676d-c4cc-4e31-91a0-1006a6a82262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426a0d09-5cc1-422b-8b64-9fe92abc5b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a44a25-4885-45e7-8884-61581b9e23b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d86ff6b-1346-4afa-9f1c-25cf480068a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31e8707-b175-44ab-85c8-67c25cfc0420",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27684f00-9d55-40e4-bdad-ed70c2b37ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86336e64-55f0-4e7e-8339-eeed192c3f30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15143d85-a6a4-46a5-abec-bdf739df3ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0796f54-09fa-4cac-8361-770be3a5e0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42498398-c437-4f69-9625-fda2791fd0e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85b92d2-76a4-4e26-a699-6527f100ef2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b8ec24-2bb5-48a6-9ab2-e6d936d4fc79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075aa4c3-4f98-4baf-b2f5-6974bc8413e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5aa7206-3bef-4dc8-86e8-84333aaa17ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30a0d10-0e47-4120-b4da-417f7e4f2389",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a48168c-cb2c-4603-9dac-4655d83dfa1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dfc0ae3-4c43-42e2-80ed-9183db0a5b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4d1e88-921b-44c5-a560-7fcd63cfc1e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f840be75-b546-4bb1-920c-70b506292de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb97eb7e-3e47-44ee-b9f9-1db033ac37e6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da5384c-d275-424e-8aa1-aef047510811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e99e46-62ea-4388-bb86-f44734d06f22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b242b2c0-33d0-44ab-80b3-31fc8bf7472d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ace08004-9b92-4552-9b41-01c90f408801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b75ed4-793b-439d-8fa5-4d408f923b1d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d6909e-9bfc-414d-8217-12b48b398c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d1882b-9269-4a5d-988a-12bea9f85646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be45e35e-3ad5-4717-8093-7377939e5c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce2176c-23bd-4451-ada8-5ed04802600e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afc099a-bdf6-4f15-ab3f-bf3234677e6a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7fc06a-a41c-4579-b292-39876990eb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40fe21bb-f45f-499e-8716-a553356784d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d330764d-4c7a-4bfe-bd19-ad40a0e2b195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7026d05c-5da7-417c-9af7-1acbc3796b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0455b56d-98f8-41e5-8418-8e4d3255fdd6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99e1360-acc8-46c8-a828-12e6f151ffa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5c36b2-018a-4ca7-a037-3c749a3ad82c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6cecf7-75d5-42f4-a09c-32a1ddd7d2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b00cc3-6019-4fcc-9e10-277e07e618c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3071dd11-ae22-4b4a-b8bd-5eb87c942413",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b732aec-bcd0-4d35-8778-a9f82c7dd9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86cd9c93-aca1-49a6-9899-bd1292e20782"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17516012-5ae5-440d-b0b2-3fa903a66703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21048501-ee94-4d12-9962-4ea918291e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b1c870-5ce8-4a09-bfcf-88ff723c43c1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bc1560-4bb1-48e1-a200-4ad240bd8bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1736b35c-170b-4eda-98f9-7c68e80fc7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20ef709e-2b0d-4353-99ce-0c6d55438235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ddb2a09-631e-4675-b62d-d581fddf26e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd206da6-24a9-4e32-853f-13588fefc913",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c205ba83-5e69-4e52-b863-9e92fbbd11b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a89e76d-dcb6-4052-88ae-74dcb9790f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c566e0ad-0801-4638-8632-8813918b04f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac93b946-9106-4dac-9006-725b4887cbe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556cc61b-e310-422f-b95b-b7430e4a49fa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf63cde3-0f12-44a0-8e5e-f3795c8f99ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0e86a3-b66b-450c-ab78-36046c8f6ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee7ab16-7656-4f38-8bcc-3f231a458588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cacfec44-3abd-43f8-ad23-98a4ee2d4f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18decd9f-9938-41f6-b3f0-6390a7accfca",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6801cc2a-2441-4674-b427-8d2b61983e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2295c05-228a-41b2-8217-3d9efe13e830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae0e654-2e3a-4992-9ef4-de0ab2f68c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1617145-d351-472c-a943-687447500d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d75dc31-3c5c-41f9-9ba1-d4e0fe03a512",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a065511-b97e-47b6-82ef-f8adb91df968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e92a73-d0ac-4b93-8b3e-e506ad1283eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3ba6c8-5a4e-49e3-be49-a118d3d2512a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef7d353c-a6ae-45dc-abc3-adf670bb172b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d597ae9c-890d-4dd5-af04-d1eb057c4307",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a74568-22f1-42b0-b824-f3d1fea6a1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb307779-7a2e-4ec8-93fd-241de8faa7ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730df3a9-7f8f-4f61-a097-1fb522f2e260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "01b53888-14ce-4579-91fc-b35f1f9ff680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6efb66e5-83dd-48fa-b6b4-cc697dd8381a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0700e0fd-7447-4384-8555-07b668987e55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4809919d-f438-46bb-9cb7-4efdba62563c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b610d8-0f89-48ee-bd8c-1817ac74cef4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d71f4db4-9f49-4342-86bb-68b78af0c915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "040841ff-8c01-48a1-8e9c-87e4505b5c2d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d14f9ec-6329-48f3-97bb-0a9a01a5fc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da5f735-d265-4f3b-91b7-997dc2b12a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd53a05-36f2-4b90-94bb-d6159e1760ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9035a112-1db9-4393-8868-d0f4d212f1f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84dff84-79f7-49fc-b7ad-606a1f4ae05e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492cdff5-074e-49c6-b7b6-b66d283b4302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc530275-74f1-4b60-87d1-902601c2df65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53868d1f-708f-4c3a-bd45-ab3906f2bf43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3b1da8-757a-4372-85ca-b108dac84681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15da84fd-7c24-4461-af80-8ddea10deba6",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca5e82d-4d45-4895-9108-1a19b94d9889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54f6b42c-4c8e-44d7-8967-59dfd7152d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf78420-6fa2-4656-81a3-5ea2cdeef8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffea49fc-63dc-4c24-885d-052e21daa224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27b00a6-b360-4d57-a882-c2c1668cbace",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d926d917-5877-4570-add9-b2b725973474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1dbe1f-b0b3-4d9b-94ff-9333bd9e2e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83eeb1cf-5da2-46a0-a917-a9f5f196b83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84e1f79e-0a57-42ef-9ad2-3ca1869e8fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c059ed-babc-47a3-bbe2-8646a445f388",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59eccb4b-7e66-4ee0-80a5-0a9e3f84f8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775037b7-21f3-44ca-9abd-6578326846e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c2f6d8-9480-4244-a106-fff9af1fd3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa83a6ea-f08e-4877-ae91-293a0b218de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67d816b-01c7-4c2a-9bf3-a9a7b46bbccb",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249b9d97-dec7-4c8c-aaea-b7bee4f56505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebce709e-df1c-4d6f-ac99-187013083823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d36849-e6dc-4cc9-bddc-7bfb1b0ecd4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a092f4-feb0-47aa-9813-8b287342200a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9206d64-bd8b-4b18-bf8e-ae5013821126",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c954b0a7-0403-4cc0-ab1d-9c3077dae0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b01a34-daf0-4d98-a790-9439ccbe51a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3eb090-2cfc-4565-8dc8-ef7d60971b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "44e40376-058b-4fe1-9eb0-60562901e36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30758e7c-5690-4244-b07d-25a1dccc5b54",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8fd74e-be79-4a21-8fb4-9573509bfcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0825f1f0-2928-4870-8fc9-72bc2de35477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61266648-3455-48f5-99f0-5584b206f776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3ecb8a-eec9-44bc-82b7-a40704d2c40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec1d59c-c304-4139-9044-c3f0e38098c8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9e38984-9cbe-44f6-8103-7ef907cbbde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b1ce5ae-a2e1-4b0b-bf0b-3b9e3a734434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5d2e48-951e-43d1-8dcf-14cb98dadb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fab00943-52f6-484d-9b43-6f61cb6b2630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffe6fc1-94ff-4202-a413-c44d01d208d7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba89068a-e11e-40c9-b02f-d1b2291c801c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40d4cc2-f4a7-4c21-b33f-10684d9ac3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4771dc8-d98e-4f29-9953-fff1e6526af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a68d0bd-9571-4d66-9e19-ec8edf1b79e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd097325-aa33-451e-a35e-028e6fe7f4e5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "776b6447-21fb-4fde-ac70-5a3e41c8ea76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "230243b7-07c5-4c23-9641-908433e8d929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02db9b02-4b6e-4a05-8ac8-f55f0fb1b117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fbd4db49-f531-4f8d-857c-17354120856d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0cc38c-5d12-4aee-a9d4-8d0c094cba0b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fc1fb2-891d-4064-9ff4-185c2a1435bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678eb69f-d4e1-4016-97b6-4ef934ee84e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa908a53-dff1-43b8-8917-774bf47d07d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c036d30e-e425-4bd1-aa10-6f8a33b61df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6f7f5cb-dcc5-41d9-b35f-6e500884c576",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "986bc410-0dd7-4b8f-82d6-07fe02b00997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ae52c69-565d-4b87-822b-d8119905eadb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9fa012-dd38-4f86-890d-8187d7c97ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4d87918-7c74-441a-a742-c81c747fcca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959f4813-447b-42f3-a1b7-564eb03093bf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76b4fca-dd1a-472d-944f-8971bbb36a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a08e0e-c950-4461-b528-29b5876cb654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b209242e-5049-456a-a9cc-f684656d2461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d6a79d9-eae8-49a5-b826-377e3efd46a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f749762-ff15-45c5-820d-02afd56c98ed",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1ce7e3-e25d-488b-9098-08c70af232b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9313778-1b82-448e-b245-f6aee7d7c052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f394e7-6dfe-4f54-a3a3-8b97716a4e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bdb6541-cb6e-46c4-a963-e2e8563757b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9ed3a3-8f5a-440e-981a-bbe27b2e7dca",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc1453a-5d0f-4c7a-a0f2-8fabe8755e68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a9b683f-d26f-4041-865e-bf6786d7aa42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f4ba58-3192-423e-87f5-845096ec8d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "71ed9ea9-41dc-4c50-8aac-f2345853b8fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966c4c49-1e01-4e02-a202-30c20f652a26",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed1d2c1-0d4e-4e4b-97b8-8aee37923e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010e66c6-1e82-4cab-8772-d709bdde4cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1e5643-ac2e-4840-9617-71e80702f672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "63eb56c2-b834-4a8f-9af4-0cc7ccca4585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04dc7fc-2092-4dfd-8b28-fae1e5cfd307",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c32a8253-29a6-4d96-8b3e-c8ff54132765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "44785d0d-904f-4f39-a415-b22481a6e843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e05fa2-ffe2-4aec-8080-b4fe33a660a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "95f69129-6516-4c60-b31e-454e53c3d5ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "00c3c69c-b071-4836-93f4-13fa61a578f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1bf9c9c3-0ef2-49ed-a378-46025f6cc985",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72ad159-9c88-4251-941e-a9dd8c7e74ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4abdcab0-b05a-4027-ac1c-f7db43efa69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4e201a-d773-4334-8258-14525186dce9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4df41843-3212-4f06-acbf-d242a3eaaa36"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78039246-1a0f-4a2e-85c7-6c0b83d69894",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1440e13c-c96b-428a-a78d-103b5448570a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbff9113-ce7f-4118-82ec-26fa83f4fe3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "880e0c1d-dc0c-46df-9b75-0a0b17a6037c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0776a322-5063-4286-befc-f036b7a1a769",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "aeb78297-a355-42fa-8515-7b2e1dd337b5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ed2cd61-9c91-443a-bcbd-3d562ba774b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2131192e-1de0-45c7-b870-f3dbab8bf610"
                }
              }
            ]
          },
          {
            "id": "1cce2ad0-4316-4fe2-9384-9c0c778429c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f81507f1-58dd-4870-8f42-c0c468d48548",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7dd8aaa3-fa18-40b6-8830-27b51cdf74b8",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "173de0eb-23cb-45f9-a246-4e6145345e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "89a29c09-0c81-403c-b6c8-fb46bf0b35e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54cdf4d1-92a8-4571-a7ee-8f78c0e3929a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5123639b-071f-4ce2-8a4c-6807bae2f635"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b8b56391-a4a8-4400-87b5-9fbd4d16ed1b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f1b843c6-beb0-4680-b42b-7f97a67972d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d35adc0-616c-433f-ab3a-fdeefdb9e480"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e96949b-d243-4a03-a963-1da650962c76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d42ca553-299e-49e8-8b7b-c9188686f626"
                    }
                  }
                ]
              },
              {
                "id": "b4878ed4-cd4e-4016-86f1-f966c5d0d524",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6bd34ba-3b09-4daf-b45c-f6c2e7e7bf9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b0daf4c-8c49-48d5-9922-873d2a79c23c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c16ba983-ec86-451f-9771-8c1606d8531a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d9776c07-406d-4756-a271-f217d16c6bbd"
                    }
                  }
                ]
              },
              {
                "id": "30b84bb5-ddcb-4730-840b-b1c20df7309b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cabf97fe-27e6-4508-87cf-7f19c53bd47b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c3155539-3a60-4255-8354-d4fb23d43489"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9a77752-6c57-487d-909f-745a22991b7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a464f4c2-4099-42e9-969d-fa411da53b50"
                    }
                  }
                ]
              },
              {
                "id": "328ea111-c215-4433-bc0a-257fe38ed147",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0fbd0c2e-116c-4052-92c2-c9b3894737ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed719998-eb7f-4caf-88b8-1379495c2a45"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03ac05fd-ccc9-4258-8b83-d1d1e75f22db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "11f403be-4e1a-47c7-9d6c-270d667d110e"
                    }
                  }
                ]
              },
              {
                "id": "8be2b28d-fc9b-4484-8c1b-81bc3356f8a5",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b2224c4-569a-4564-b4b3-c3c5b009fa41",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4caaa99f-ac7c-48f2-bbea-3ffd3ae8998e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2d48e3b-1068-4bf2-86ea-ea15d3e12c35",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3453962c-4ba2-4c21-9b45-64c41cb29ec4"
                    }
                  }
                ]
              },
              {
                "id": "b9587517-8fb9-4841-b14a-3e70d51918c6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "afefe4f3-2f0f-4bc4-bf5e-8bdcc01dd71f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0295d6b4-ffe1-40ea-9a6e-f942540ede30"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9741c2b-431d-4407-aef4-acd61fd5d357",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c919adb2-b818-4d38-bab3-327794ac1c8e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba757a0f-089a-42e5-b2aa-39c2394da126",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "49749028-fc5d-4a61-a1b3-a09168dce8e2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1eadf042-2db6-4724-aa31-58e71da580fa",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "25568dc5-55b0-48d5-8ed2-59d33d91305a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7840c9ab-5f9d-4217-a582-71124b007465",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9ccc7947-32d7-478c-9dbc-1df158385478"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "585f1cb5-5015-4fde-930b-24a6f39b1592",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5eb3e69-91d0-4865-9e53-82aaf9363f44"
            }
          }
        ]
      },
      {
        "id": "7e6d4f91-467d-4d09-bb8a-5e5ed463be10",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f0d64cb1-501b-4916-b41d-12c917eab08c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd935d0b-d8e9-41aa-8fa8-74eccb7a9f6c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "01daaa12-2e60-49db-a668-4c7d7282e05c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "964d9665-adbf-4a86-a340-6af76eb45e22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c156a14-373d-43e1-a3b0-c475950d6923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ce0453-d663-47aa-af46-ee12b119a01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "893c1302-3e25-489e-968a-785cb07ae364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63d168f-eb94-4100-829c-0f530027d027",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a63f393-2656-48ad-b713-72f9c1b97be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7171bc4-fe73-4251-b0c9-e309a2346d3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa57204e-9082-486d-b5b5-2a6f42456bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9b9103e-e61b-44a1-9874-85238fe6a46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e3252de-1f06-456c-98be-2fb8dcf633d9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cffd84d6-017f-488e-959d-8df749827c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94d8ec6b-43cc-4923-9790-1e0357305784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1623a01e-c46a-4e38-887c-610bc2d7620b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6391da7a-e97b-4003-8278-650b6edd690e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a034b81d-5fa5-4de8-91cf-9ffcf6a40bb6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcd7fd7-447d-44d6-b493-46fe218f6f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1617ea34-a4a1-4fb7-bf45-60fefec6122c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7166e3b2-5808-4cdd-88d3-63f299742f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d2c3cf2-c3fa-4387-b347-cee55335f2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e212e19-121a-4c4d-a486-1fffe54398c4",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dce191-1921-4899-834f-b2b94914f626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30eb8fec-98f8-4e3c-905a-0bb86da5b36d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3111a926-8ba6-4aba-80ca-688cec02c26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e33f3016-2b67-434b-87bd-2d55d09fe2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462ce227-ef71-47fb-a3b3-edfc62b4d1f3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe6bd96-344d-464e-92b6-609edabd369d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e657d3a-aa0a-47bf-81b8-7f0c25b6c353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc7fc868-8445-40a3-a6d6-c661d0f09a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bd875b0-ed1a-41a9-b8b4-37d0bd38ba0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c88bf42-5fda-46e5-b2a9-afdb3ff7bb36",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6f64662-a77a-4b5e-9bb4-a9415d7f858f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5173819a-0775-46c9-8b21-c70879f3888c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc3d37c-95b1-4739-a079-f6f47d1f232e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "478cabb5-882d-408a-b585-5c219e94cccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4650377-0619-49d1-a27d-9c3d58d6c610",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b82a733-3baf-4f2f-b69b-71c75050989b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5b11c0-5156-4525-b5f1-152c854063f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09188666-78f8-49bc-b98a-752f414feebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a207442-c283-4576-bdf3-291156d00051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483ab2c3-a14a-4741-bfa2-976f9eca03a4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3793381c-678d-40d1-8b2e-98f8c1e34595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b616f0-01c6-4cb8-a658-7ac472d0609f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7998f14-4d5a-44b1-bddb-d00ae880f274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b339a849-660b-4002-89b2-70b80ad58359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5d6132-5baa-4519-b071-6cfd49bf6df0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93543fa1-4200-4b74-bfb8-ae0c40a3b233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6584a16b-ecda-420e-879b-930302ebff8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a288f6e-474b-4aef-88b9-78a04ca25021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3266cd5a-8534-4199-a618-3651b8caed35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d017a5cf-29d7-40ea-b609-5ea64e60f588",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab234f1-6399-42a6-9a7e-1b444d08c804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b36fd81-e180-48fa-b6ad-4fdf7a271ef2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5aad37-d037-4ecc-b71b-8d0a9a90f1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "23842d33-4476-4548-a3a6-47256bf5df61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3fa5966-c369-4e4c-9139-88a5b2b946f8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d823f06-778f-4dac-b2a9-18c46ef00ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d392f5c6-e653-4520-a3c5-87360a584862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848ecb4e-5862-4f59-9a0f-fad9a1703f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d8f48b2-7a0b-4cd5-b64a-f25323dd8ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d828fcb9-3b17-42d4-aae2-b5cf141e9481",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4604a83c-974b-4501-a38a-63ac627ab2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15047974-890e-4900-9933-4f504b262018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dca8f8e-a9df-4b97-ab35-d4978d1eec66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "878f29fc-7878-4e01-8614-dc32444169aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c890e09-51e4-4f71-b517-8274cd52a354",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0fe345-bcb1-4e06-a309-a6d1d05a0e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3783b360-ec3e-4045-b00f-bc5d78a344ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3214034-6608-40eb-ac0a-001fed893618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d595652c-1517-4427-b485-74a421501b04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558353f9-6c61-4210-91c1-79782bb89ed6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d8bb95-5764-43af-8cc4-f97a9ee81970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e97f5e6-1dad-4b34-97fe-9effda83026e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932fb202-85d0-4f02-920b-5f21ea9a964b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9689a46c-7745-4159-b67e-91f44e016dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b783b7-31dd-4440-bcae-c838135f3ef5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a7fdc6-d485-4b72-9e0c-f9bdb5a8cad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6da90dd-b586-477c-b5af-9290f32ca4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eae449-74fe-43f4-90ac-bf5777fcde47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e327472-645a-44cc-8470-c8a948931f5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23df8c1e-ee82-47d0-9fab-0cf328d848d9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d41c8677-1724-47d2-b522-1b9e5650821a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f7d490-86ca-486a-9cbe-8881e971bb64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acf4660-9e81-4797-bef7-70d6dd80245e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ffd8874-1d3d-411f-88b2-ad9db7e7e35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa68e11-4f66-43a5-a060-e3132d4dfd44",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b69336-6599-4675-8a4f-e1e695c165ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2124c7-6207-4243-b08c-5c74089d6169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87948cd1-0e8d-448e-9942-fb3013ac45fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "733e7f1d-5cce-4cb4-825c-89c8a1b8ad7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6196bc47-8304-420b-bd23-d90bf6411cd3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b687d8ba-c63f-4397-a6d2-8db7b76265cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d38d4925-8bfa-4b93-b1a8-9149e23abea8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73354279-d4c9-46dc-b16e-f7dc9b3af756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4d2cca-f314-4262-9ed5-67d464697fd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321a5778-e2a3-4602-80cd-87f92a2767e1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855493af-46f5-4dff-9ceb-d5d1ace13c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a29f055-7526-4d2a-9c22-51524daedc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788a686c-bdb2-4dd4-a291-de3c7cda0820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd6ddf50-1f33-47d7-8698-5bc248cc3c37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "154e1213-e009-41fa-b918-435300191ae7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e795591f-a211-4b58-a175-c09b398c3d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0b1ddb-b1e1-4a91-ab9b-63788a42ac68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a3fd61-6bb3-4ad6-91d3-ff5c10997a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e40cb8a-57fd-47b1-a606-c46b8a89185a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6409f0-2c20-4666-8624-212eff71a87b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a808a359-d0f4-46c0-aad5-812e942419d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a48dfb-1cfe-46bc-a86e-e6d7e6805262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ceb46d1-aaf8-4942-b650-84263bb198ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a6e4a6-9bf2-4aaa-aca4-5f1d81c83568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6c240d-72bb-42f9-a923-5f0a70ba94ba",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ed00f7-b384-4785-a87f-4995a88edcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ad46f9d-cc13-4c0b-99d8-ee235646df5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f5557da-008f-4704-a80d-c445b5c956f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8c68e0-f744-4b22-aff6-b65f1096baff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86424ba1-fd12-429a-92d6-1f9785f32505",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c5ebd8-61fb-434d-a6e7-c65af61ee95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3610c16-6d9e-4705-b5bb-0962294bc41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60c955c-3e85-4a03-a806-1a430e64b87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a343c30a-2510-454a-b3d3-d32beb9dbe40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660c6beb-d0cc-4a63-a4fd-4a78b9af4692",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c5cd14-d820-4dba-84ce-1759f4db5c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46c70a37-0438-43e6-8127-31dfef3240ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba0792f-4ae5-4d53-983b-68be930bd873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47211bb8-fdc7-4cf1-9bb6-11a247f617df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3170d209-3745-4f06-acf8-69fe508be157",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19242849-33bd-4bb4-8e7b-b54d268246e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb2ebf5-e15b-4819-9524-7ad7bafe7199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49e3cd0f-3ee2-4f7f-99ec-662e01aa51c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f86bcd7-77bc-48d3-af1f-e2b3a5954c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29264252-e687-43bd-8ce0-ecaed3893675",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cd22d1-beb2-48f9-937c-dc5b0335db61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ccdc633-88d1-441c-a0cf-bf4fa097c3ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de0108e5-9940-4e42-8a3b-d2a217b3d90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16fcdc0f-b57d-42ab-a6ef-daf15c683431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446ab79f-207e-4c07-baee-cccb946e6e4e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5debd63f-8c88-497b-b9ac-34f0a47c6e36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967e42ad-d2a6-4cbf-81b2-b06a1d3ba25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1835d46d-2bda-4035-8de4-304399ea6339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0516e3e-5cfc-47bd-9fd8-65589688dfe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55eae1c6-b391-4f69-a0ef-cdb830d90204",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd1cfc4-ab6e-4d06-a752-c00d33fae5ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f9117f-6e00-4b28-bd66-aa97e6b48b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f682319-ec1b-462c-a740-3b4e91dd8354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01e6309-a541-4d92-952d-230cd67b2efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f6b756-6600-4ff5-9052-445f99840e37",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16e65f8-c7f7-4c18-a61f-4366c8ca98a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b276c9c5-cb3e-4394-ab6c-612d83cb14eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f54fdf3-9831-4f0b-8916-cb032d0c5621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af9af8a-2b89-4e18-b9bf-cf5678a95498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd558e4-5f38-439f-a74c-323b3106e840",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c7148f-d6d1-4c40-a0ba-ea19c5000b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "789f5da7-1b78-4564-bf35-097776e4e4c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd418a58-a1b5-4143-8511-980588903980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e22830b-b932-4243-95ae-ae6032064903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a933e8-3fd4-42f4-8bb7-e71185d892ad",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28f2e80-414b-4c5a-a5f9-09af2ad66b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c990e5-8325-4a61-a910-3026e3691672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d4387e-8f9f-45eb-bc1c-0d18e1f821cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd67b9e5-d8c5-49f5-b18d-107ddc74dc48"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cb457e0c-299a-44e8-98c2-7828abd3c329",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dd5c2e44-583f-4033-ad22-c712ddb5e373",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95a8817-3ac5-4451-85e0-ba2bc24bf35c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "02b7acfc-30a7-4568-b267-98ba9483e709"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "074fcfae-da0e-4f74-aaba-173312055cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3c4c427c-080d-438a-b57f-0d230525df0b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c164861-568a-4df2-acdd-e2829d1cb532",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a3d4359-ff2f-466f-a16d-95e779925f5d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4266270-d6ad-4f5a-ada7-58b96de44e65",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "de8d44b5-7f28-4a82-a26b-0532dc0fe6e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ddd30c3a-f92b-42bd-9c14-7174e17f63e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f362e8a5-d168-43bd-9d56-3f69d1bbfdb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed109d62-c2de-49ca-a3cf-009d1bd7deda",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1e067028-4dbf-4d40-a132-be6cfcee19af"
            }
          }
        ]
      },
      {
        "id": "7a376681-d11e-419a-88b6-053f53a6b896",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "154d5ae8-7b89-4c62-9d90-3b8599a8cf5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fe80c010-3c23-4f2a-b91b-d0dcc544c1a1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6ef6d3a4-cac5-4e06-8b53-f150be920f67",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9949e137-e00d-469b-a9c1-a00006e0ff24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a6f59f-3aae-4f4e-8ab6-6d6c1b37db9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4000d215-4e8c-49a7-a337-47320511db44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7e8470-f824-4372-a87c-3e29fb65d5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174ec589-ccfb-4312-9ee2-3e67e7588c6d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70b647a-5230-49a9-a47a-a1afec71a07f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df5caa3a-c647-45b0-8c55-66b92d570819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f342d9-e7ac-4417-be2f-bca3c1c7ae32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6680fb9-359c-43b7-b8fe-aa3c7322742f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c8591c-5b3c-41b4-9535-e17cf3b25816",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37520675-e6c7-46c1-81af-ce4288af81cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70becd1-9517-4146-8219-1291ae168f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827f9ca5-bae9-4001-811a-6410e4c67bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "083fb0c8-bcfc-4563-821f-68c1e429a415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3fdb92-a5a9-48fd-be76-db759a516ad8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53587074-6a92-4074-b979-8736dcfb7459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96644fcf-feac-4ad4-8b0f-2e3a885905ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d94852a-9082-4a08-9ab6-a4e0ed6a42b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20633016-739c-49b2-aa2a-780b75616827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a581848c-a114-4627-ac2a-3345f03060e2",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddf3ec2-fa58-4930-b19b-369bb1be385c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6023bc01-5b16-47f6-a36f-ff8fe72722a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d871b8da-077e-4be9-b6fa-359479523ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26b44450-46dc-4e5c-9c4b-c719dc699c1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8481ef-80d6-44ba-babb-083f3b883bd1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "576db105-4246-493c-aa4d-61187efb242f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbe62022-c287-438a-9c57-ca3a0a3baa69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb96aad1-0f13-4e52-94a5-d2ac489fd7a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75ffc71b-ac11-421d-8bf6-e3065c519980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ddba8a-e986-459a-8440-fab4c45bb3f6",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "770bd946-a911-4d3c-805b-68376c763736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89a0cff-6b0e-45b8-b891-4b76f59c271a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4e6198-b059-4f5e-a8bc-49786a3132c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0428828-6c88-4669-ab40-580f6674e566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd52a21a-5caf-4b33-ba27-88ef3e4276a0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538015f4-8855-4bd4-b18e-36cca45d8323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4ee1795-d440-492b-840a-008d8cb279ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2e7879-6643-4a77-870e-5c5a85ccbfbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3b8879a-49ac-4717-87eb-3b30afb6844d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd056c02-a934-4fc9-9537-a5e7205b1311",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce19360-cc5a-48ce-8f30-fda3a24acbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4b23d6-642f-462f-b2a6-85ee6a3b8a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bccb52f-325f-48de-ad36-dd31bc65c2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1aceb17b-409d-459f-ae12-8654b3720c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "300557ca-6fe7-4496-9494-cc97344a2c75",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f32f91b-f7cf-42f8-9520-f6adb2c92811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8cf8a9-5069-4fdf-b2b8-980b649e490c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ba444a-002d-4187-b0bf-0dac00446542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3864c1-e3df-48ea-abc1-bf5288f4ae8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab4527d-15ea-4286-8809-d3ed3775c494",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2a5e8e-fbbb-4067-bcb4-9b0c60caf08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38709e0f-7d20-4893-aadc-4490acb964b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c06b5a4-496b-4a0d-b6fb-e4afe3d17fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f2f734-6b87-4c30-a95d-26bdd7aa86dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ab41029-46ca-4ea1-8472-efa4f04ad055",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e019cd-5523-4e58-b339-c056634f87da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "004859aa-f2bd-4ecd-bea0-34eb19a1c6b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58dd23fd-d8f5-4a57-936c-8c3ecd6bc52e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6cf8299-c3a5-4b72-b0eb-50b56755e140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89172535-b939-4039-bd28-a48d1928ce26",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102a69d6-6a18-4174-80e1-4a9200beb917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73320ec-f732-4c74-aa1c-db4be228cce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b1c7bd-7a12-46d0-a0e5-f06e6ff0e8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a56c0d5b-c59d-4325-bce7-215f5fd67251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0ce66a-c503-45c3-9c59-4452e5aab2e0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d459e531-44ba-463c-b56b-62a81c796491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74ced22-e733-49ef-ac8d-2f6c91649a6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9cb5c46-84d5-41b8-be41-0a8bfcce5f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "354e3cc5-e59d-459a-8ae5-36f05fc7839c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddd0523-0319-4495-ba4b-c8e24560341e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d552288-ce5e-41ea-941b-27409dd702b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd0551f-f3cd-462d-ac32-a537ee0de67d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3baa4562-9f28-4289-b189-abe7970e8d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec7a4504-1674-4588-a0cb-2d1fc7fa41bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e7fce1-eb4a-4a93-8138-696fe9537599",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82bd2800-8d2b-4fe7-ba0f-896a69fa3785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec7d7fe9-99b5-4e4b-a6b4-aa3d922bcd4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00eb8a17-bda7-4e88-a6da-702ee85317e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d6976f-20d2-4e1b-b8c3-7142e1cb5b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb8f2ed-ae47-4e22-b703-2b06e15582ed",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "023c89e7-18b1-4429-bd93-d179e7009d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1da48fc-d9e4-4528-9fb1-d1d19e2b68b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1652ef84-a8aa-4ac8-ab4c-9ae5e6d57e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e7f860b-49ff-4efb-8f86-4a1a51accdbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a881f8b9-52b2-407c-98de-9168cac2958b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6781d9b-4958-4eb0-9845-b7924d420855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab769430-8689-4648-bba3-69a217dcee03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa73d2e0-1c0e-4198-8379-e0d617e30628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f70fa99b-d225-4f78-ac09-e518c49e432f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381bc756-372e-4d75-867f-7f4a3bb43116",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1587b35-907e-4d41-a0c8-fe15c9a56af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b391699d-ccbe-4d65-954b-1d3d7f54ad61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a8e7d6-57ea-4400-9d97-c4b18fe191ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "340848e1-f31a-4b26-81fe-5da5e764e696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "819e306b-a209-4f88-9651-31ba637bdafa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bdee637-adac-41e1-bfdc-af7982839dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "551f53a6-0642-4a6c-a5c8-df09cdd3e55a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96aa924-909d-4241-b86c-8c04778ed882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cbd28d6-ac7c-47c5-bb76-48c6c7b96a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afdd7cea-c23f-4d29-8c91-530c2c9ae246",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6305fae1-f5a3-4f05-8b97-4cd790646c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d274c43e-0848-48a0-8722-d8691b2bc2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b71edfa-4366-4c60-a55e-3ef386b1b424",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3199e87-4240-4c66-8b5b-b7c8e3046983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf997a8-09b7-494a-ad70-9b2ed993c09a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468ce191-6414-49c4-853b-9b189f5371cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238b0eb2-b127-495a-ad25-0a249f9d7431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acff6a83-da29-4e96-babb-09b3f6b196f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22d307fc-9912-403d-a529-17fd9b921e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871a26f6-15f3-4b9c-b0a8-463a64347d60",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c594a62b-9a7f-4a63-bf21-eb720a51f445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b5a03b-48ed-4b1b-9b65-f1f2e6931e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ed6bdd-85cd-4885-8d39-894d2368450c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7257f20-53ed-430c-b57b-bad273b399b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f044b86-73ed-4f37-9d91-d48e68e110ff",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfead9fd-0fdd-4bc4-ae30-8681cb3188e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acccae55-706d-41f8-b13b-775e3151545d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aecb3d90-7690-4f79-b39f-4d122f5e1f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30c865aa-5b7a-43cb-9083-88ea6a38d914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956fe1e0-220c-4da5-bf9f-6c6e3a767b13",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "752052c6-0065-403c-9f88-27b0cdd544b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a42d7209-7b5b-40c1-80e1-8eef35569af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa75539-9374-480e-a3d4-7c551abdf1b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73c5c1f6-3634-466c-abff-94496465b7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecedcbd2-0f24-4c09-9227-80ffb42b15f0",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05684817-8e61-4dfe-83b5-c8ae80864961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1ab51c-d127-4f3c-a475-f83cb49a0a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60feb6bd-8b88-46e9-958a-bbccdc20d62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe25c9c1-5955-4de9-85c1-8e5cc388cfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c359b49d-7b91-43cc-b7e8-2cbcc834e976",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa960a8-e282-4ce5-ab7d-f1a07006835d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d57b805-84c6-4c5e-b942-197bc79772b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e462b74-0cc3-4d2c-8927-470eb56b8768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1e35d4a-5ae2-4d86-8b87-7295dfe26ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b53c2a-6eb1-44ba-a657-39d5371f6bcf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdda2ec6-906c-4f23-9b56-7481ad6bdf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "344384dc-5e0a-42f6-bbf4-a73750f57415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "606a400c-b53c-4f1f-a780-c74430029440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3f2993-daba-410c-83b0-a831e4871a71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2eb2349-87b8-454c-b309-e2d49220fde2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb317664-8749-4e71-bdb1-bc26d2c9695e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e867585-caf4-4313-8e03-39ade23bdfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04dd82e6-5966-44da-a97e-3f03edd037de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd40198d-70e8-492a-986c-143c86ff5a89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c200dd-7250-49ec-bd7a-29bfed54f4b5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98596894-475c-4f47-80f0-d2ad103b1094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9411aa59-556d-4b4b-a483-75e904d3e365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4102d7d8-1b46-4b96-aeae-37ed327fcc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28ee2e58-58d3-42ae-8824-677e694083ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0196a9d8-6b25-4657-a710-e6a4c8ef39ab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e5c14e-9c7f-47c2-a579-006a6bf5bbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994b12c5-4e82-4ce8-be38-ae5b75b6420e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9473c03-733c-4e0f-b510-0e464892129c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9af7ad28-1ef6-4837-b351-0fa73e5f7d4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9573d00d-ff80-4f8f-a265-329d506ff43b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ccaa98-7d8c-4c58-9066-47305c336df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c3577a-595b-4f15-bd06-7e02d153816f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10bdbca7-baa9-4d95-a4e2-03cd3f97f538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e51520-be7e-4a13-b51e-63492dc146df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9a59e1-e48d-4dc9-8bc1-dff6b517df70",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b3fe055-da5b-407f-a07f-6fe281a5c91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b414a0d-8ed1-4dcc-a926-a291272ae120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c72ee6-6bb6-4a7a-ae8a-c89720ba3cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90ad29b0-5626-43f9-87d8-1e7afd00a351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3dc0f50-e225-4adf-8057-f4dfb2ce467c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc534f86-d636-4791-b69b-c66f7c52e3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43fc1f8-bb73-4741-bb23-64c373dfbf4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9695cb5-0c34-42e9-a61b-8cb2856e4c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc687a3b-5fc9-415f-a52b-62fff33bdff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d440d33-b8f2-482e-ba0c-02a3dfb4d057",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25822b1-1321-43ae-a1b6-81b821ed00ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e6b677-2698-4335-868c-6312546d489e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ed8a7f-0813-4c58-ac24-c3f0d729da07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc408d2-9eb4-4bae-8e4d-9ed826557474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da56042-227e-4501-8ce4-0aff506a2e16",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0460ab78-6045-46d3-8234-77266e302114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "320de2af-0390-4b81-9e9d-224cb5ca58cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd80ffaa-5e70-4e28-b9dd-6f14b0fc57c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "955d9cef-9a2a-4d5c-915e-18b5d2981761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f736e1a-d9db-4ed6-9337-4e1db0dbd107",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed862ec6-350c-4122-ba6d-bb9bcc100628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95599e49-4f10-4217-bb24-90e166fad264"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f29d3d-6dab-4dcc-8886-9a80c702faf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc6a10c-a397-44ec-827e-0aee976ba809"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e6a41b5f-4a09-4a96-a383-b6704ab8c66c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25eda142-2f8e-492a-a693-24ed3d53d9f7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050c228d-521a-4106-904d-ec1ad16a9585",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4477d4e0-a49e-4178-ab25-58c68860219e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e78293d-c363-47ae-bbb2-e763f0e9061d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4372316c-a0bd-4d1c-ad13-5a4088f90a5e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "959ec190-0597-471b-8ec3-35c502ca4a1b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0358db13-2113-4f87-9078-b83c651298b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44dd730a-8de1-45a5-ad28-1cda4cd97794",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d65da97b-cd6b-4fe2-93e8-6ea6d9ef75a2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5489a51f-6a77-4a61-ae6b-2e888dfa3833",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2a9ed6d-8491-43ca-9d49-fb6ecb4d7d74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2cae9d7-ab7f-44e5-b0af-1db0c4673fc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a41eae89-aa17-41ed-99c9-38c0a411f0d3"
            }
          }
        ]
      },
      {
        "id": "ad37a38b-3bcf-424b-be5d-c0d600afbf51",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "915ef994-a75b-41f7-9f7d-f0a3cead33a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84e548f7-6723-4ca5-8997-9d21a20a170b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0b417d4b-f4e6-4815-8982-2bfb007ab7e6",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd39775-40f4-4c57-9d28-5aec94574f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c0d9f91-9dba-4318-a26f-b8b0684544aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98821b22-1158-4d83-a13c-c3555cd7784e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efba3161-fb10-49b8-abdb-86dcd39915e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317d0c65-4547-4fcc-b2e4-5101a4bac911"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bdc602-7826-473e-bfb1-237e053dd1a0",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90058cd4-c4e5-4866-aba8-63adf3871bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb61534-4d54-4842-b746-463395383e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e83e76e-d27f-4d48-a231-ab733f6d81a1",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bacb051-f3d6-43e1-b918-8ee8f57eee12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3617bee-43db-42f7-a2f3-a6ec6e4e265a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0246b1c8-bc4c-4c72-80ee-08bcec76c409",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d4f963-e966-4760-b3ac-b91f140e3f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc262e41-35a4-4259-8374-81d036e3c4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad3b6ba-f13f-45ba-a238-fb62be311d82",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "134d3ccd-7db5-4622-865b-705633209229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b87b4e9-ad6d-4aa1-ac44-ca722ca785c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39c913a-62c5-40d4-8f39-c28380895fea",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2f1c5a-8ce4-45d3-ab63-5018a86d629b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81c53035-2dd7-4bcb-898d-02d87bfdfb26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4a961d-3ad4-44ae-9f12-d9cd34787218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6cf4d8-279c-4960-9813-ae6885cf447d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfbc4809-482a-4195-9895-36d68079c3b1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5a7679-bef4-46ab-8ebf-c5ff8510dc7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50810177-7bfd-4099-ace6-52e6173d3718"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23b93dc-c48a-479c-bb61-79119f364595",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2aa25711-9bff-4d8c-9d2e-1a738b122a8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a27cbde-a029-4775-add6-204252c51c87",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10559fdb-7254-47d6-b717-95689d46bf5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85dfd4e4-023f-42fa-8678-4cf2f5709eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfd3232-82fd-4ab9-a86d-4fe32d440c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3ffe9d8-fe23-475e-9815-39aa69b787dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e435c1df-0923-48bb-ad81-81dfd77ac9ed",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14414d2e-a51a-4633-b8b3-6fb7e5758f98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4930620-b2b3-473a-a828-b12cfbaf2c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "705d569b-af00-452d-990a-812aa7f83775",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf297d2c-d440-4901-9262-53ad286ce305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dad4eb-86e8-4576-9e8b-e6d4411fd5cf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51db21f-16c8-4477-91bd-0e969b6dbffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb6fbf89-5f11-43e9-afc8-e9db25801acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2d9beaa-a9b5-484d-bcfa-9ff172efa19b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69844fa1-ef78-40e1-a8fc-5be0045925d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d71059-51b8-4b25-a3a0-fa8803783c62",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf820e0-0065-47c1-be4b-3f789e9292f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee0d2f6-3eea-423f-93a8-893298da47f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25f505a-9466-4313-b62f-34ed742ef0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba0350f-9baf-4a4a-ae87-183ad6df8955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec85a4d-cede-410d-a051-6dd87c4472a4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b5c2fa-5de9-4da3-96a8-4106b975651d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102e681b-2bee-46b1-af9b-db33dc71c6d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba50e7e-4dcb-4a84-8408-7732f3aaaf18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d95a075-f9cc-4711-8779-03c27645e5a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33baae70-568b-4fcd-9c54-db9426556712",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3a6f86-231d-4138-b167-644406640684",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7b5ed82-924d-40af-98d5-2d15a6979ea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "175c7301-9d82-416d-9234-6af07432edf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e92f978-8385-49f6-a3fe-69b6322066a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d1d1d8-8d46-47a3-9950-a0493842df10",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1d9e072-9524-4613-8bfa-8f9b5fad0c9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaf7bb52-6978-46af-9257-223b172017f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae648a2-5181-45e4-a80b-90b82844245f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "328ff8e1-3de5-475f-a269-c331da631274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f671a80a-b7d3-4e1d-896e-5ba737a5794b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24f51b64-130c-44d0-93bf-f3f9d47a32fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3c9521e-1ad7-4e3f-a8cc-b3000407ceba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114ad04f-6254-4016-9fe3-97c13a44b455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46b5600-282a-4ccb-bd40-293b4cdd0ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f7db4df-8f7a-4760-aafa-501fac1007a5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda5ad33-a3e2-4044-979a-9eeb0022a396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9bb7f64-0030-4f2b-a186-d0d62efb4834"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbc37fa-5d98-4098-957a-0cde20cc5753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e32914-adeb-4a68-9195-19e44557789d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896bc74b-a577-4ff5-8e1c-09d583ad849d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810f2c1f-254c-4a9f-b2be-29573e337e7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9831699d-261b-4b05-a7fa-d744fbd33a8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c50b64-1002-4f5d-8f15-39df98274db8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44de430-62ea-4167-ab57-29c0c1e65eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b241bf-3775-4985-b7b1-0598306575e1",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9391c216-dfbf-49cc-aab9-a9c536919e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b117f6ee-bc05-4e3a-b72d-5997cc34cd95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a634f818-2931-44f2-b228-94ea4619dc57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74cf4fb-4a66-4f53-9868-5026959aa2eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a20fab96-1317-4302-82e9-60468f7a33a1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e785bac2-d717-4f2a-814b-506e25084d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33214780-59ac-4580-be4c-57a4263cc52c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1124ca-1de4-4f61-9780-aca874366a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f817a6e-09fb-4ae1-be55-52065d87d43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794946db-7ac4-48de-9bdc-3695d5c315e8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "758e7253-e4dd-4c09-89cf-d81859ddb3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b0b3b2-0551-480b-9850-1c584b972de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4f0aee8-9aaf-48c7-98da-3bc31005aa9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edeb7473-0897-46f0-a56f-c107c8ef3cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebcdf5b-8345-4ae4-b24d-f39a689e5da7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d598bbf1-bef1-4a3c-85a7-7b9291f1fa39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f6703e2-dae1-4a69-b13c-36fce2d3fa08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004452bd-68f0-4c2a-9a0f-f9b5fe6a8aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69df6524-4443-49dc-983a-fb16f1502887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c4ca33-76df-4a32-b714-6e73945ac7c5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4414ea6-8a4f-4ebb-892d-d938e0eab891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ff1540-95ad-4bae-bd17-f491f64f7397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe8e26e-e39f-4956-91cb-a3f2ce5ac105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "512a108b-999e-4c2a-8df6-e97dc7090082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70921de-5f57-4086-a30f-795513f8ed31",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c8251c-3b67-4c00-b5c5-98d059393755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebd405cf-26c1-44ba-9553-dfb49b5c2509"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d01e7d-749a-4631-b758-abe2679e7eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29a33dc-e179-440a-b313-a8a5e605459d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb2fcf4-5195-43bd-b942-e7d9822360a3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4dc5f3-80b8-4daa-883f-bb5417449884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb6b2b9-788d-45bc-bc0f-d3c559cdb018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00d490c-0db7-498f-b3b3-aa59c046cd6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5577f80-2bb2-4120-b98f-2317ab2198ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf45e43f-9c4f-468f-9758-99b225a0940e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aad53d72-eaae-40af-8308-6ed65c64398b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9aeb117-14d2-44c9-8670-2a23e779e373"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59958c19-e7c1-4304-9ac0-b00bcbd29b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0af5dcc-af36-4f05-bd55-83b23f1d4685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6b5135-93d7-4c99-a1ba-8a5ca9529bad",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f6528d-ae01-4066-a559-dcf738f24776",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2765f59-06ad-4637-a697-3a86cc02558f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29f569f-a820-4f56-afee-b16b11d8fd70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a5c6d9-5374-4eb8-a224-afe128a480da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056fee54-549e-434a-8d4c-8f9e63c23bd0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53644bd0-191c-4370-a338-ee54467f294c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34f23403-53ae-49c4-8b29-3ab337ddfcd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74bcd31c-8267-4ed1-b9da-766ea4998ad4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee17fd7-3a8e-4d8d-bbe2-7da77626677e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4c1360-1cf2-44f4-9ab7-7d75f2ae5f54",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d20c1c-ac27-4650-baae-ad32825c3e0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba257c80-4dca-412c-ae89-f822ff592a9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf71cfc-48db-41ef-979d-dc1cff409369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4a0d27-5cfe-47a0-8afa-feae4e7ebc99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0be2681-4aa9-40bc-9e6f-469fb55f5737",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d76a51c-cf82-4a5f-babf-305cad446044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60da5212-4272-4ed7-8e81-e9ba7c54c91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a077f5-86b9-45a5-b0dc-99f61423f062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4e5c2d-eb0d-469d-881a-e1c5f0689b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5247276-9a6b-46a2-970c-1330e97749d9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6164d560-a18e-4c26-9176-6806564ffabc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fedb910-459d-4386-bd4e-223627acea3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58f87d2-ea1a-48ca-aeb9-7c2d05f9bc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3389ef82-16ab-4583-b153-6f68d7cc40cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fa4167-f185-4706-962a-3fedd11badb5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b399431-3d09-49b3-871d-3bf6385ad741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a32fd3ff-7cb2-486c-9a8f-cb5b3f1266cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80146d1b-7ccb-4852-bba0-eab23c2f97be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f0c9cb-4b84-4246-8be9-8e8d7afd7ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c63c870-6ddd-466a-b32c-56939d0e2818",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0e2c3a-394a-489b-8074-590abfcd87e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afa180db-9ab7-4a0b-949d-5072a7c8dfae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d638970-d89d-48c0-ac5c-f7d211a71cec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de943e9-7343-445c-ad07-079cb46e15c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47505ef0-afa8-4348-b411-a4b060d4fcbe",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048d383c-d2d8-4d9e-b818-c51db10f59fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3ee331a-3d9b-47e8-afb1-adde19d9684c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d796bd8-8ce6-4730-acba-e3e3fd103d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02a61e6-f632-44de-95b5-cb88986f7386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f140771e-2f5a-44a3-b20a-c656ed306bc2",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c970f79a-51fc-462a-8202-3e5826b229a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0059ec1a-1ad9-451d-9c27-42e26aa9f6c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4f28a2-82fc-4dac-88b1-1b5b32bc5f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62c9cf9-15ac-45eb-93dc-15f40d92c1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4094b5fd-27e9-4606-9680-6610589c8fd1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef26d09a-2b44-4d34-b3e9-78a5dcd959d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ba54c7-0ab6-4681-8c6a-b1319254076e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "709663b5-080a-4955-995a-2624dca58fcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4ee12c4-ba62-4628-ba02-7934b64fe6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1f952b-c918-4bb7-916b-a7060bf5e7a0",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26738e02-b5f3-41ed-8ae6-04d942683240",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a0b7aea-4bab-46b4-bfce-dab9bc21f728"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e866d64d-1edf-4652-8360-b44fb42943e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87691c3-f219-4c3a-a5e3-f792978336b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c387a3ea-0dae-487a-9bff-64d411281823",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2c8bb9-8c13-48dc-9ebe-e8668b5c66e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "848fdf80-928a-4f78-8495-d3c0fe70a659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd85a39-df6d-45f5-a35c-91b9f2d28d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f9b379-8416-47ab-91b9-853253c92097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ca12a92-e852-47e7-bcc5-cbb527c87084",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57629f14-f184-463e-b5df-6f09f2526be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae81b847-47f8-4614-aec2-446913a54f5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125f9a29-defe-4bc4-98c5-08025a88dbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5586cfb3-3d84-484b-920e-bc6161d0f960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070f92f6-5ed8-47ba-99ed-0d5f886f3aa8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dba15c8-e309-4d50-b6e7-ca4c85c86dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9b2be7f-5297-4bca-beff-5ea39365a647"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5145d277-1b6b-45b0-94d4-2f48422e496f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac53643-2470-4fac-a3d4-6c4039f140bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0b2566-13cf-45be-ad8d-abd388819315",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bbee29-4cbb-454f-9cad-2bba7a3d0753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec9c14c8-a7b5-48bd-844f-64707d25aab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da15417a-bc96-4570-b42b-59cc6e5db706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15392c1f-4836-4157-ba98-8527129d9831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00ab517d-8652-4d34-ae91-83d010bee453",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2dc434-34af-46b4-88f6-d183b4c8affa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d71694d3-451d-4d93-bf10-3101f9302f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09f5242-74fe-45be-a853-d0538f342806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b53057-800b-4734-b921-c6162fc0da98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4975a87-c1f3-4d90-a0a4-881371ce1b06",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71c50df-72bd-4dd9-9b14-4c9fa4f2bea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2419e8bf-b757-425a-822b-f4a9d92310f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27e2840-815e-40a3-824b-da148612a075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3049d961-00bd-47c0-9b32-1c5a141819d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a1a012-ca1a-490a-a850-6f143c40d927",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cce2287-f6f2-47f4-a4dc-861d091da996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5fed9c7-9d19-4241-9131-5972f03d6dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafbc329-fe69-4d8c-b978-78e62212f1c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0e7432d-14bf-4b25-b18e-61b53c9a307c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56f9551-cc58-46ca-82e9-c9a5053ab09e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7095ab1-9b65-49a3-b3d3-e484e860cff0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae63055-f4fd-4304-867d-4b92beb4b6be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded5469a-dddd-492f-b539-45f97f209210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60e12a3-0633-46ca-bfa5-2f898c2b8868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a23a20d7-1299-45ff-b3a7-41596f3d50d2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4d952a-0fe6-41f8-b380-aea30a2fff13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b9ff7b-40e9-4153-a90f-a53261e12a3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb86df14-c757-454c-bab1-a00e0c47a6cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c372ea7-5869-48e0-b6ed-d1ee75b9b882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf96bc8-2286-4aee-b733-72afdce008a9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8039a409-c04a-4a64-ac06-b35d14f9d605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cbd3198-863f-4af5-b2c4-d46a9064edbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6986267d-c2d8-4e28-8ec7-96796791ef88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "707585b1-16a7-4bf4-a1b0-429ff28461f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f287e86d-a1f1-4727-b1a2-0be7e894ff2c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93b540e8-6e1f-4851-99f1-027f282d44a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0821068a-4cc0-45bb-87f9-1fdb608442ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9109914-407c-4c33-8f51-ac17a02e596a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c403309e-9dd1-4e06-94b6-87af4f4e9238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1d214f-6637-4b62-9bf8-c29f98e94bc4",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4e4423-033e-4549-9537-aea25ba79dd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f15b2cd7-80d1-45af-91fa-b88e2e886fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a458d24-c779-475e-956a-f66213d35e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9474708-451e-4d34-8731-d8bcd14025fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed569ba-2f3a-4cb9-9574-970519dfed25",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39c988e-8ea9-4674-90e7-57956a6af390",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1084ecb1-96f7-4e90-bda4-6e920caaf9b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83abc2f-1099-4631-ad90-2e50c67635bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "232fec09-74ae-4665-a393-14cbe653b130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce1a26c-afef-4a4a-9b01-08c165cbcfbb",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4bc2dfd-85dc-404c-b929-214f062c93d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a974247b-0d05-4103-90ca-669cc59b0f86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4b924f-0e7f-4c46-8b31-1f8bbe58b3b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc623d2-2e2b-4845-aea4-36f55110798f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7237efb9-97ff-4e4a-9904-ece8f580d1f7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d0afce-20b2-4266-bf55-cdee9385199a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361e2417-0b17-4e43-98d6-55be4e4ee068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a432b3a6-88c7-4560-a686-a3941e1d3fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c3c06c-acc5-4ea6-985f-89d21ccfb810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d488826e-38fa-4681-9c01-0515ae7ab108",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32872934-e9d2-48bd-b1de-f7641eab937a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67b9d4ac-3a64-4892-8062-7168f9efb251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c78ed75-1418-479e-ba98-b6daf9eb3cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eddf71a-d2bb-4e61-8d76-d809b3e27f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee4b5829-72c9-4154-ad68-eb6a7640c9ba",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3ffc40-1f19-44ff-8812-ce6e88130540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f80be497-9d30-4d2d-9f98-d0e697263acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45a5b188-5113-4141-b366-7ea0f41cdf23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129f52de-3667-4589-83ec-ddb9961aeefd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b831390-db58-4881-998d-07b53124cdda",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769879e4-da16-4452-ad7f-97f21a55541e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "826e091c-497e-42bb-a69f-558583161b79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6490dd6d-7b49-42b0-96ca-18bfa6893699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e7741b-1b8c-4f0f-9292-9e97eb8fc2b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254bf6de-8bad-43d0-9d36-b75780e73beb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efe72bc-cb98-4d07-8955-c74b607684a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bcd9e8-3ac1-45a7-8f20-cf804b11ec12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a62b984-c657-4762-89d2-e48c1206b9e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4789c5-509d-49b9-a375-ef75d8416168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dd6d261-39d7-427e-b984-ba3859a5e347",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6dec72-1978-4b50-8218-5bf782c764d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c5455d4-6773-4784-b207-32fd5173cc61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8c106b-44ad-4ebf-afe7-627f37b5726b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04af11bf-667f-49df-b2b2-226e4fd5fe23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21facd8-d321-4b56-a095-c74af7c4cbe4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb71ee4-763d-40ac-bfee-0a77f015acb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07dc6d74-ff76-4a47-88ee-da81f6858256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e529937-bae5-4628-9031-8adc997d0769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef83e95a-d11e-4516-8c7a-f100a71920ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad9bb70-876a-4a73-b271-fa833a8e22e9",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0708efd4-896e-4448-84f7-dd539d5dd932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b41cdb-75d3-4da4-b333-bdc6f41bed03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf4b3ac-7d9b-4bd2-a571-b951921b94fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ab062ee-8747-4964-9db4-05a922afc30b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f469b2fb-0617-4214-ba95-5179b9ebbe1d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789ef733-97d4-4f77-94c3-bbc9b941dc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c800fdc9-9611-4e85-ae2d-cd272d3b582b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b11426-f62b-4112-b362-8d600ec79f0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "721c1353-ae98-475f-ad5d-fa2bd6116267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0504d63-6aa5-46d0-8d4b-c286387d2119",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c362fcf8-0f63-4be5-b44d-75528e831f5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949be4cc-926c-4ddb-99cd-411d5baca428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9ac813-2cd9-495c-bbab-c1b207839fb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea923669-b2d2-4078-9829-b4d6223d455e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d383faa-de17-4361-aa08-3b4af40474f1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a01f3e-3304-4c27-bd62-7c2d17f0bed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b11f4ca-3f37-4158-a3da-8c1bffc37986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e8a472-4f88-42e3-8b72-35c9d08f21f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f28e57-d18b-42f5-9214-f8a7551d1f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb38e39-802e-4d17-97de-15b74d736453",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d570c149-23d8-4c60-a507-b976278bb7b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7856705c-5c2d-4607-bdc1-dcea268bb8f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3a7c59-5103-4889-9da0-ec9e1dedb472",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b01ccb9-8868-4203-9269-5aa5c791ae57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2dc54a-ea29-4aef-b4ec-1f2653495b92",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd4f792-e386-440d-9c58-bb6d90ea31d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e43f3691-7199-4bac-84ec-067c27ff6e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b505e5-6198-4e4b-9e3f-33de6e6c4b13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84d32bb9-d78d-47a3-b5fc-90259c00a3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460114b1-cf71-4b96-ad0d-eb7b07b13076",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9977f68-dbf9-43db-82c6-0df301ca356b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f16bbaaa-6f47-46ce-9938-c6f446f9e751"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89c5e74-be63-4b43-8cc4-66764dcea10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da15b82c-6f85-4979-bfc6-77fa1fcf050c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ac2bcc-a055-48f8-9b3d-fb86dd954fbf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2310125a-f102-42a9-b92c-fcd485f0eaf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e1bedab-0b58-4126-bc49-44696cd565fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e73cdcf3-d005-43dc-859c-e95cc7433de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ba6caa-aec3-4c39-838a-06dfe0abdb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be962d2-30b0-4705-aa75-34c4f6338abd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2213d9d-fc9c-43ea-a1d3-1df31a3412e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "721320f7-6148-4f0c-bc7c-cf58808e24d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb6f3f7-44a1-4f52-ba98-a02542299be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4f50b02-3db5-40ab-906d-6441623fc1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33219abe-6466-46b8-a650-876f07452070",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e81d44d-2632-424d-a886-8d74165f1d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4044aa3-d230-4cd7-884b-6a75f5a32df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc5af5c-9aaa-4eac-9bf5-4fe6e6e1c903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5b2c9be-7160-4fc3-9715-0a437d4e8b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3e2859-ea0f-4948-b684-fc88969d07bd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6b52ce-3895-48aa-bd28-83cb52fdb633",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cd2a5fb-3e3f-4468-82b1-dfc52c0f8420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e228a1c-afd0-44c9-b890-1e96cbaece86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9c0fcc8-62b5-4c32-87b4-2315cc0afcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3175c9cb-09cf-42b2-8228-d4dbbcc06fc6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cca0b5-dcf0-43b0-90b3-c47779bf5381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4c52e4-7380-4d33-a9aa-22accca5504c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "793b84a2-83e2-4387-bb31-e632a62b61d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d32ea4e-3741-46c3-b0f1-8aca034aa314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35846b88-28b4-4c3e-8b60-89315471d9c5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8835e0d-fdea-49dc-b5f3-89e257246c07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65bfeee1-3d2a-429f-9f1b-d930575b599b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba96fcd3-fae8-491a-95f7-a880345772df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11ab46ba-59d7-4fbe-8d07-0cab0e607000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb99141-1f47-4bb1-a9b5-5df455efb37e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081111d3-014a-4096-8225-4ff79c5cb7ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f27368-0942-4698-baed-fd5fd2386631"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f31eef0-13ae-43a9-b75e-722160391d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8e90540-232c-4706-bc71-21370e952a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79b1018-f23b-4bb3-8e4d-ad57401edcb7",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb2bb80-84ac-416a-bdbe-cd15c342cd24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e1e2e6-94ca-4b8f-bdde-f939b479b03a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bde96ec-2501-4753-858e-7c3cf01c4b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a008fc3-daa2-4d14-ae52-d60abb3071b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b522466a-1412-4286-a48e-24f2a674151d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95dda56-308c-4d65-8cd2-3a626c07441b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24a18fe5-aad0-4fc7-aa59-2912aa06a86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eeaf024-8e3f-4b06-9bdd-31ea2214cf83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1051cbd-6370-4276-b0ae-5747704f92b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cee4b88-0238-47b8-9563-f3e64502881c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c524eb5b-02dd-48e6-ba3e-47541d5ab78e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "505750de-e3f8-487a-aecd-0b0bf0e479e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67967b0-dc7a-4535-9d86-7b2c2ee4f9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a525b79-e95b-4c87-b947-6db22ec68567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a430cad7-4b50-4566-8ab2-9aa7946d1815",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894a2331-e1ec-4303-8ce0-267f4ef350f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb9ab43-5881-48a8-bec4-6c9de3582792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69afb988-3373-4092-a565-658048bfb102",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676f3719-c76b-4da1-842e-ccb11fd438fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb22248-655d-40d4-8d31-288ccf31490f",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0d2dfe5-06f3-4583-bb3e-b6e0f9e79868",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4454f517-4106-4015-8008-5d7c04ff5db9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c4e09f-dc3e-4b8c-94fd-2b78e48ef7ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad5614d-ddab-4ed2-950d-e566c699f87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5fb817-d6ab-448c-9409-7f1b76290e09",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49fcc84-1b70-40b7-85b5-cb08176b9386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cc542ce-ce22-41e4-a549-854f79557dc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ec7775-7c6f-452f-9c61-8cb7a50f1b88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d216cd-7640-4a41-b0d7-dbdb50415637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df17f979-5606-4721-9810-47be5dc44c32",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86738783-d93c-4862-875f-cc4190797962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "357dc448-e6d9-4b24-9ed0-2374ea2f23cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c52a1e3-16ce-4920-879b-96434fa3fa34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235f555b-3f9e-4db7-bf50-d83040cb89cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b16ad3-c2f8-49c5-84af-cb6604d66bb4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b01efb-3dc5-4367-9a7f-1768c71f03e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92487a9d-01cc-4963-b6f0-5afa86ec9de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "856b7851-a241-49d8-95a0-96db85462466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b9d1b7c-a6c4-4ee6-b783-4649d15cf89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9ffc06-9c57-4dd8-a314-301a11961269",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b32cb4-c763-43b2-9b52-d54941ed14f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cb3e41f-252e-4f26-9d8e-053b41dfc48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf298a7f-b4a9-4f1a-9af4-56fcf1c17eec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f797fa43-3f10-40e6-adf5-2d993a9c6982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74c89970-10b3-4a82-9482-dc72590eab97",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bd949f-3ac6-4c33-8a3e-be9444e28567",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ba9b51c-c503-42ef-af5b-f436c4ae6b5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cc2407-ae87-4351-87f0-3c3c0b8cfb5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2af796-c871-4b03-b232-9581fadbe640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f5a491-d208-4689-b651-1bfa0ab13378",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74447309-5ccb-44be-a3cc-9a2065b94a59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0486218-16c4-49ed-83bf-5a47130d54fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ec6938-51b0-4a5b-aacd-cbac611529b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223cbbc5-101f-403c-8b14-8d387b21ad92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa3ee8f-fcc5-42cb-bd3e-81604e702753",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b95469-2d33-4249-8947-7da955c53906",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b30796de-390e-418e-9d3d-b6e0f2613ee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1065289-0791-407e-8740-6788c104ec97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9e77c1-76da-4368-80e8-fd6009a88e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d7a09d-ffbc-4e4c-bb7e-79bc33115838",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc586cf3-b413-4f93-9fa9-62562adacea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e22a69b3-2ec4-413a-ba6c-28d1b16980a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc070d4-1ede-48c7-951b-1137ce88183b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e09668e1-e1c8-4a71-8c55-da1c4796f19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f5c472-364a-4f63-a671-3e6956758fbb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "433c68f5-2f5e-4823-a518-a45040871818",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "436765a6-f184-4e85-befd-a35fe8373955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb2527b-4ac7-45d6-9881-afad81669b1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0faea18-c714-48f8-9a04-68b417cad5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90b71ae-a284-438b-a7b0-d15ba7b8884f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cabe0d-b27a-47e8-9b0f-1c2d758f536d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4df06482-6c02-41f3-873e-c3501a9800dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6c1294-eb02-458a-a43e-3e32e6660c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2f5b66a-1aba-4a29-a4ee-ea8978e74ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e495486-7c8c-4d4e-a05b-214deda917b3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af97d2f-58f8-460b-b0e3-2993ff9d26e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17659dd1-2f6b-4b64-a30f-dd511e42adf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986b20e5-2f58-4f15-b130-b75cde06486a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdbde85-8f50-4fd9-ab7b-223f8c88798b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0c6ac7-d3a6-4131-b32a-7d1659bce977",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aef56c4-359f-4ca3-93ba-4b5065ccc8ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21705562-d5f3-4ad6-b35a-c4052d6277d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5db664e-d5a8-45fd-b26c-0edbca18c75e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "565a83c9-bcdc-40bf-8d3f-ca4af6ccf454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6486f40c-81de-421d-adc0-6adf7cfc89fb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39bbd52d-94db-4c70-9426-a953f24589bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4cd8435-d48b-49f9-a8ba-f63ab2d38ba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab21911-bb1a-4140-a6a4-e1c8012c7afb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf753f5-cf0d-4af2-a5b5-2398dc061561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2151f494-8be4-4137-9659-9ac7a5390343",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5ee105-6290-4ab4-be4b-c2ec7d4f4289",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b4c911-391d-49d1-86aa-8d5721ac7da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b48ae25-2c85-4e44-bd88-4315d94a7787",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "390b6ff7-88b8-448d-831e-5d6389191688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b1718ae-57af-4b98-8930-e8ae00fcaab5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecececa8-d97b-49f5-8b5e-15a710700835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1314b6d3-80d8-4abc-a358-84679a1b7aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e228e3be-6a4f-42e4-8f3e-5902d9dd06d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d99d112-c4dd-4984-8286-0ef215b94663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c828b5-0456-4d7b-b0be-370776f4ce3f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28bd798a-93fa-4390-8f36-b6f74e0bff1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92afd14c-0935-40ae-8778-ea097ce80b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79615f1-05cb-49be-951b-01627a6f7ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1b1a7b3-5189-4246-8a0d-fb5755b3ad0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c192215a-674a-4879-9f86-6ba5148dba75",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19399034-fd44-40e0-868a-213f13674122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71e5703b-9687-49fc-b0a3-98e60c1ed33a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0c76a4-5e7f-434c-9eea-fb58abc7ce67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e9e6f8-ce29-4d6a-8669-4d2ebb7bb347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92512b00-5f6b-427b-b842-e0fcc584de7d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83ece24-4c10-4806-912d-78dfea4f019e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45d61471-5005-4bc2-a9d7-95a9746f0a71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160394e5-55e8-48dc-9555-b37a9bdbe7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52e59de3-c6fb-4bdd-af8b-38d16d42ec5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f33b89-7de4-4a9b-a0a3-9df21135fc49",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca30748a-d264-45c7-9212-bbfed5972697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ecf141f-bc6b-4752-bd7d-88b90162832f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a60ee1-a1f1-4a5c-a4d6-96354be35837",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817f117f-d747-492c-ae96-70d282bd1375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a267ee9-5e22-4a3c-af06-97198fbeda48",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304f9874-706e-4a0e-8cbb-736543aaeacf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b2336ef-8a3e-4f03-b282-1b200a28e064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd825108-f5db-4fbc-81e0-3534bbb668d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a732bab6-7a96-4319-974a-9af7576612a3"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6abe0d81-a169-46a4-a1bd-009b09bf0b70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a5c5fc4-4baa-4d94-9b13-2bf643f375b3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b5b9d2a-ed16-4bc3-91d1-ebd48c6eae97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "323aa19f-a51c-4384-abb4-aef60154c892"
                    }
                  }
                ]
              },
              {
                "id": "fb8b498f-2400-4820-93bb-7268781d5883",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f72e22bf-ea43-4a81-b5b3-78f4d881e504",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d563ca-14c4-4b45-8bc2-7f943a91671f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "2fad5b73-e6ed-4f32-8d5c-3630ddc063a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a949f6-0d9d-4ffa-8159-d47702c4b9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50957c9c-5b1a-4dac-9a24-970291f5cc8d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b8d9ede-2bed-4c8f-b62d-8fa9b23f6154",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9689c30e-e2e4-4ebe-8ab9-3fbf976d7601"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4896f312-037b-4305-8cdd-00f0b72fe151",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "283abc56-f972-4083-98f9-4629c1d3b77d"
                    }
                  }
                ]
              },
              {
                "id": "6dbc6abf-ad9d-4e0e-a1c3-aba0c5c0a33b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "12261c40-1dbe-47cf-b06f-bdf74ee8caaf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f45473f-fd78-40bc-969e-02dad6f019d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "58d189c7-7c9d-4890-a0dd-2961e4629b97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441f926d-47c3-4af9-8e50-18e391b11ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bba777c-41c5-49c4-bd08-5c84cbbfb831"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b89a7d2f-00cb-47ae-81ee-b9b5419a4e22",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d7832a7d-69a7-446a-8f2e-4f03a874b66a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cc74f46-59e3-45b0-9354-a13230257457",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "444850ed-7d74-4cc5-9c00-6884b44305a8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad3aeace-fcc6-42f9-bc54-f8b75657354f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c508f26-375e-4d25-83f5-1a58a7066b22"
                    }
                  }
                ]
              },
              {
                "id": "9c5e06ca-e03f-459c-adff-b6d485809894",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9709ca7-0e0f-4de9-9194-f63c232c9af3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ebc001bd-a3bf-428d-8ea0-f423965884a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40782466-2c41-4f4f-bb3b-8724cf20b8b6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9d9e4a99-81ae-445a-bfc5-785436a20f4d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "86c8ee9f-3bd2-47b3-8054-a25faaeffa0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "170b3939-505b-4666-807d-be712f62aa5f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f49620d-d84a-4b70-a839-14858cc12c77",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f39dc8a-7542-419d-9a0d-9d2890119a42"
            }
          }
        ]
      },
      {
        "id": "4de3506e-4322-4e74-b3cc-b3a843defa45",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1be7c49b-5b13-4873-9584-f41705b33c26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4dc5ae20-b5e0-4a69-936f-63dccb45f6e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0297e68a-23d8-4baf-9843-8144a4b14c82",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffb5eae-b2fa-4352-8e6e-c7580c343547",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ee30e462-3106-4ffe-acb0-63c9cd5eef19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd34b24-b3b1-4e3c-b19b-a8343eb9a02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32b04850-b51e-4a5a-be3e-4a61180d2d8a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3d93b51-a9de-4bbe-b9f1-3992cb2a352d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f205fcd-feb7-4ee3-9941-234df5f772ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97fa56e6-c422-49a2-9ade-b1d0d8fe7c7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25f4b06a-0841-44ee-8b00-e0ce46777094"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ee25e76-c510-4f12-b5b0-4fe39fc1f07e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4fe335f2-6c2a-4b41-b4fe-a3fb1a4ed7a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eeb8beb8-21b1-4649-81a9-24ef46351879",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82a05506-4fcd-4d16-95fe-b5c525a23b09"
            }
          }
        ]
      },
      {
        "id": "bd183352-1544-48e2-a07b-29b2ef3c9107",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "779c7f29-31ed-4176-851f-511d65faf66b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c7ea3bd-b6d7-44b3-9433-b8cfceaeb690",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c76c8700-5f11-410e-a64a-7fd069a8f98f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea1583a-5b3a-4d5a-a3b6-05ad7dcb1aaa",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac067e2e-2cce-4c1f-bb75-8dd2a64b8ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26a9c60-0ce9-45e6-9d34-f736b7a26fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5343bd54-7e0e-4304-9238-0a91c446bba4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "69e87f01-b268-4073-a527-7ee4fe72c01b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b98c7f9-c166-4721-b3c1-3409775c8e87"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f66e02a-64c0-4399-a195-e97fb89769fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13b73a89-3175-4282-8239-8f9a9736ab11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26035212-e13b-47f1-95e9-bb5591db58f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "34547ecf-43c4-4229-b7f1-bc4971485ebf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9d16ca0-b344-404a-a3e3-c661bb896622",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ea8d21f-22be-43ae-bf24-fdc4ddb43f1b"
            }
          }
        ]
      },
      {
        "id": "b58de56c-9678-4ed8-bf9d-3d61a8f992f7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3ca64c6e-5025-46e7-ab29-6a819b9a8a98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06e2e290-7d48-431f-9cc6-47daeef647f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b5ee7c0-587b-4541-8542-01d9e69a58e7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b33bd69-51ff-4ef6-93fe-eb62e964917e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bde714b2-1b87-4375-8090-0e455b7fbb78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e2276c-6f39-4429-a49f-7c70c611b84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "90bffbf7-b1a3-47b5-a7dd-7d058719bb53"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "128f91f6-f472-4b29-9c7c-5d4b3fcbf9ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b078b352-f9a3-4f62-aa85-7af1c2aa0c09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cacf869-b3b4-466e-a770-8e922e156bcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71a019d1-ce52-45c7-a834-805724145408"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69952b3c-dd0f-4d6b-bdac-5df3ed533111",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "db029ce0-4a10-4342-a4ed-59d42d1a29d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43e70b09-a2a6-4321-925c-6294a29690f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d9b208e4-f1cb-476a-8c57-361e3d8ca493"
            }
          }
        ]
      },
      {
        "id": "9c9715bd-2bb5-4b8b-a079-f616d694c7ca",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "587c61e6-1530-4c0b-b1e5-25b9f2b41f97",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eda292a2-60cd-4d21-a916-3e2204dc290f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ae699e1f-51b3-491d-9aee-9a7acb75deb9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00fb0624-d84f-4880-b63c-e5fde5bcdac1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0de603db-fbdb-4ea9-ab54-15e32a06eda6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 80.79649122807018,
      "responseMin": 4,
      "responseMax": 4648,
      "responseSd": 382.29533084735516,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706747757220,
      "completed": 1706747789299
    },
    "executions": [
      {
        "id": "35a56d46-f2cc-431c-a137-0eca1cfe573b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5c03f928-5568-4c10-a378-0dd736c58304",
          "httpRequestId": "3e786f38-ba81-4758-96ec-333d13099d93"
        },
        "item": {
          "id": "35a56d46-f2cc-431c-a137-0eca1cfe573b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d058483a-0250-42c8-82d6-9859d92ad7be",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 0
        }
      },
      {
        "id": "1283a990-4f5e-4461-afbb-51f628958f76",
        "cursor": {
          "ref": "d3e35a50-1a3c-429b-8fff-469f389a9962",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "c70db4a5-ddb0-4365-ad97-0708a1c74190"
        },
        "item": {
          "id": "1283a990-4f5e-4461-afbb-51f628958f76",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bd9ecc86-6e5e-4aae-a9e3-43602a0ea8c5",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "540a2f30-f548-43bf-9d9c-fd5675906d51",
        "cursor": {
          "ref": "bf6846a2-6cdd-478e-bdee-38f28439fe97",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "53d43ce4-2b19-4f24-9aa3-1edea6f83426"
        },
        "item": {
          "id": "540a2f30-f548-43bf-9d9c-fd5675906d51",
          "name": "did_json"
        },
        "response": {
          "id": "411a9c5e-5b59-4d1f-ae97-571a51f71720",
          "status": "OK",
          "code": 200,
          "responseTime": 259,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad156def-eb53-47ae-853c-ccdcdc11889a",
        "cursor": {
          "ref": "0fb7aa62-77a8-4c67-a62b-7b2589428f16",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dc9b6b33-a096-450e-82bb-b6c449a4e7fe"
        },
        "item": {
          "id": "ad156def-eb53-47ae-853c-ccdcdc11889a",
          "name": "did:invalid"
        },
        "response": {
          "id": "cd5ae9fc-408c-41df-9c68-a327b1d846f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1130,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad156def-eb53-47ae-853c-ccdcdc11889a",
        "cursor": {
          "ref": "0fb7aa62-77a8-4c67-a62b-7b2589428f16",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "dc9b6b33-a096-450e-82bb-b6c449a4e7fe"
        },
        "item": {
          "id": "ad156def-eb53-47ae-853c-ccdcdc11889a",
          "name": "did:invalid"
        },
        "response": {
          "id": "cd5ae9fc-408c-41df-9c68-a327b1d846f2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1130,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2918608-7628-47a7-919e-b0342a7b29de",
        "cursor": {
          "ref": "9802df7b-7b5a-4cb4-a315-7490840212d1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "67ed782b-3ae2-4038-986a-f8f5646c212b"
        },
        "item": {
          "id": "e2918608-7628-47a7-919e-b0342a7b29de",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "966f66c6-ec1c-4144-a858-39d6551013c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 14,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4431fc06-1b73-4037-8d0a-d5b66acd6332",
        "cursor": {
          "ref": "f9ee7748-81c9-4c53-9cc8-66ef44e18038",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "21871a62-1a16-4846-bf90-a93bf8c1f21a"
        },
        "item": {
          "id": "4431fc06-1b73-4037-8d0a-d5b66acd6332",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "448a7ac4-e8c0-4c5e-904a-0539bd6433cf",
          "status": "Not Found",
          "code": 404,
          "responseTime": 15,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a9c40d-1d2e-43f9-b8b3-801c6e1275fa",
        "cursor": {
          "ref": "91ef77bd-adc4-4166-b99c-c74c33e21ab0",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "45cd6f0f-cf91-4bda-8ac7-b50aab0ef1db"
        },
        "item": {
          "id": "b6a9c40d-1d2e-43f9-b8b3-801c6e1275fa",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2adfe248-e4ba-4b3b-bdb2-156eb2e4f9d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80e8c85-9526-467d-83ce-6ae80541475d",
        "cursor": {
          "ref": "6de419ea-6e90-41ca-83be-8dcfadcfd34a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1ea9f3ac-fcf1-480b-b779-c1eb3537c72d"
        },
        "item": {
          "id": "a80e8c85-9526-467d-83ce-6ae80541475d",
          "name": "identifiers"
        },
        "response": {
          "id": "3cb51acb-7d04-45a6-98ef-d13cb079923e",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097cb0bc-b110-4cd9-a86e-787c18b2dcac",
        "cursor": {
          "ref": "dff5e88f-dc0f-44d4-aafc-c486cf6eab37",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "140fe2e2-dca5-43b1-8289-a9dd360e87af"
        },
        "item": {
          "id": "097cb0bc-b110-4cd9-a86e-787c18b2dcac",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0da06679-582f-44d4-bd84-1eb470c5dbbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d01b0cc-e1d5-40f9-bd82-3006cce93697",
        "cursor": {
          "ref": "a40be5f9-9c4e-42a5-b835-0d8946223b4f",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "76cbedca-95c0-439b-9a3c-f0736f9d093f"
        },
        "item": {
          "id": "4d01b0cc-e1d5-40f9-bd82-3006cce93697",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "8ce66e83-8dbe-490a-9381-fdd2e97cada9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345edcc2-29a0-469a-b6d4-85723df106a8",
        "cursor": {
          "ref": "b76f93cf-c896-4cea-894b-3203346ca5ef",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fc3e7cf6-b6f0-49c3-8e22-84b175dadda7"
        },
        "item": {
          "id": "345edcc2-29a0-469a-b6d4-85723df106a8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "52ee574a-f657-4836-8f6b-9db1a51fc628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a9a1ac-c6da-4a84-897f-c64a0900dc31",
        "cursor": {
          "ref": "b5529afd-487f-47fc-a271-1b6b81830fb8",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "958ce974-c0a1-41d5-93f0-849654aa9dd5"
        },
        "item": {
          "id": "69a9a1ac-c6da-4a84-897f-c64a0900dc31",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0a0a4b70-fcaf-4389-bd30-d181d47de23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7605ecc7-8603-47f4-8d8a-9de2f209d557",
        "cursor": {
          "ref": "e7ec96e1-c886-482f-b49f-791064fbb995",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "21769134-4967-45f6-9f33-498792a28f27"
        },
        "item": {
          "id": "7605ecc7-8603-47f4-8d8a-9de2f209d557",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4d6b3506-edc5-4c29-874f-31f1e96295d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdcffa6-9ef0-4e4c-af41-44de3cbd7996",
        "cursor": {
          "ref": "16d9effd-f928-43e8-99f1-50394247f3a0",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2f1c431a-1612-4f0e-95bf-8710c4b91e74"
        },
        "item": {
          "id": "9bdcffa6-9ef0-4e4c-af41-44de3cbd7996",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "75018577-564f-44fa-ab0f-dab2f4df4018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f4cbbe-a3d1-4683-9a37-697ba1fd8703",
        "cursor": {
          "ref": "7939d87e-78b3-4c23-b3c4-09dfe44804e8",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b6f554b5-add9-49db-a36a-56a61f97f5bc"
        },
        "item": {
          "id": "b2f4cbbe-a3d1-4683-9a37-697ba1fd8703",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e0c7cc94-32ca-4750-9e9d-9c48fc11e862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9255bac-ecfa-4610-9f56-795cd4c6af67",
        "cursor": {
          "ref": "b4b3b59c-77f8-46eb-94fc-3cb7989b60b2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "30d3c170-9c10-4c41-976e-3448ed8c478f"
        },
        "item": {
          "id": "c9255bac-ecfa-4610-9f56-795cd4c6af67",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "946f71c6-9481-4342-aba2-48b33de6e42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1698f57c-79b9-4dbb-b05f-5e82b90658fc",
        "cursor": {
          "ref": "26b66a14-2cc9-48d5-98d9-88722cdf2ab7",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4718cd0a-492d-45e9-9f09-d0bab4123db7"
        },
        "item": {
          "id": "1698f57c-79b9-4dbb-b05f-5e82b90658fc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "fd51fabb-abe4-46a1-8ade-b8641f253b73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cfda84a-b6a5-4b13-b86b-f35a877289fa",
        "cursor": {
          "ref": "ff4c79fd-6a26-49fd-84f7-f95d589e6ff0",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "43e30a0b-dffa-4f3b-9333-5741003e7a68"
        },
        "item": {
          "id": "8cfda84a-b6a5-4b13-b86b-f35a877289fa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6cde0da7-3849-4291-85a2-c22863612776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e440c3fc-d4b2-4706-8baa-77f69821a8e7",
        "cursor": {
          "ref": "a3b5d12b-5e6e-4ad0-bb00-a1253f3ad79e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5b6cc3a0-92af-4353-99af-812199c88f8c"
        },
        "item": {
          "id": "e440c3fc-d4b2-4706-8baa-77f69821a8e7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "6f4c3b91-a490-42e5-9ab0-d5dca0a8c11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a664b881-0a22-46ca-a3e9-effb6d1fd2c7",
        "cursor": {
          "ref": "428e57af-a48a-4313-a452-a70c11081df3",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c6069f40-0956-45c9-899e-d2216da3b185"
        },
        "item": {
          "id": "a664b881-0a22-46ca-a3e9-effb6d1fd2c7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ca980c1d-2c7d-4556-893f-6e3bfc1cfe92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b768a27-6c77-4251-8bbe-14081dad6f1f",
        "cursor": {
          "ref": "78a35b6e-db1b-4a81-b411-028f174c5662",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "033da2ff-1316-45fe-aaad-73a84146ec35"
        },
        "item": {
          "id": "2b768a27-6c77-4251-8bbe-14081dad6f1f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "696da5c7-8a9f-43f5-8fa6-f963ecb22c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d782b5-3d28-42b5-af58-f33d47730001",
        "cursor": {
          "ref": "0aa441c3-1c81-4595-9d8b-30e6ba5659ac",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fd790bba-cb70-45c2-aeae-40eac741d7d8"
        },
        "item": {
          "id": "f3d782b5-3d28-42b5-af58-f33d47730001",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "9a9245d0-9572-4c8b-b2e2-b29954ab2fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a27c294-4e1b-4fc2-9c94-8223c4c80e13",
        "cursor": {
          "ref": "8b288292-9441-4e4f-b77d-a1c1b8b09f7a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "69e9ec59-f454-409e-8325-dc94bacea4f5"
        },
        "item": {
          "id": "5a27c294-4e1b-4fc2-9c94-8223c4c80e13",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d2cbb112-79e4-470a-8655-0cea467316d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcac0413-33cf-4987-93ef-b98038fe586b",
        "cursor": {
          "ref": "5b0c2fa5-c003-446e-8489-a965501f6383",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cacb7aed-da76-4686-ad3e-f6f7c1dc27c6"
        },
        "item": {
          "id": "dcac0413-33cf-4987-93ef-b98038fe586b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7061e436-30f9-4278-91ac-f1ceaca64d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eef2292-5259-4d2f-a619-96e14ff9160f",
        "cursor": {
          "ref": "fe225613-5575-4bac-a96f-361b9c023866",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0b45e808-9d84-4994-b7aa-35c829bfc378"
        },
        "item": {
          "id": "6eef2292-5259-4d2f-a619-96e14ff9160f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "26c9c875-9ee0-453d-9e45-a010c39c0c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05abdc95-4c24-468f-9971-8cb68419bb09",
        "cursor": {
          "ref": "f029dc3c-d21f-4499-a970-5a63cf08606b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "463ec289-23a9-439d-ac64-c1fdf5a3fb60"
        },
        "item": {
          "id": "05abdc95-4c24-468f-9971-8cb68419bb09",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "11f5c9cc-455f-4989-9fea-ce2384d192b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f54f16-a4be-45ae-85ed-5211dc4da763",
        "cursor": {
          "ref": "a1a07a36-80f0-49f9-ac8d-1f89b4436704",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "00c09f39-5110-40ea-b996-0ae10228f580"
        },
        "item": {
          "id": "f4f54f16-a4be-45ae-85ed-5211dc4da763",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f369a6ee-6c27-47b6-bd06-2f53f3c59ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f784f6-8bba-4707-ba9c-4415cc5f66aa",
        "cursor": {
          "ref": "d699201c-5af8-4c3a-89b0-0f0433492dcb",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f3074d8c-4338-43fd-b1fd-cc82b8c9a372"
        },
        "item": {
          "id": "c2f784f6-8bba-4707-ba9c-4415cc5f66aa",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cd0a4517-720f-4b76-849f-27b66429b17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d8d6061-e628-4ec3-bd13-581dca95eee3",
        "cursor": {
          "ref": "da1b6633-59df-4439-8bff-2e3a31412ad7",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "82884d7f-7826-4933-891b-fa2e758b67b9"
        },
        "item": {
          "id": "7d8d6061-e628-4ec3-bd13-581dca95eee3",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "fe4d664e-6f7a-46f9-982a-fbfa05d06cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba677cae-e121-441e-b076-0bfa7bd02904",
        "cursor": {
          "ref": "216fe5d1-b7e7-44ed-ad1d-741783fef7b9",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "98adccc0-cce6-4745-8f78-f1301a207eba"
        },
        "item": {
          "id": "ba677cae-e121-441e-b076-0bfa7bd02904",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1586ae9e-1af2-48f8-b7f9-0b58c38b5b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f888a037-ac31-44ee-baa0-f2eb9d1deced",
        "cursor": {
          "ref": "2c1c4996-dbfd-4f36-b3b4-c537f6680f8c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2dfda827-ae66-4b1f-a91e-ad9d97b99b9d"
        },
        "item": {
          "id": "f888a037-ac31-44ee-baa0-f2eb9d1deced",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "266b2e3e-b281-4815-94db-b2cb04e59891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a575c2f-b8fc-4c47-a591-df97dbcdf7e1",
        "cursor": {
          "ref": "1d1f6d9c-0fc3-477b-8178-9492392c4568",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ec8a7b24-a6d6-4aeb-9d65-2ddc46f728c2"
        },
        "item": {
          "id": "6a575c2f-b8fc-4c47-a591-df97dbcdf7e1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "619eedf2-30ec-4ef0-b8f8-7e7bd690528b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75b7a13-31a6-457e-9558-498f3ac257f9",
        "cursor": {
          "ref": "31ec24f2-83b5-4010-9b1f-3ab7d6743124",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f71dc9f2-9830-4bdf-b2ad-bec546bd419a"
        },
        "item": {
          "id": "b75b7a13-31a6-457e-9558-498f3ac257f9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "93818726-cbcc-469e-ab45-9cbe22c92df1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86640b4a-5e3c-4f30-88e4-2ea03188fcb5",
        "cursor": {
          "ref": "fd8c7b26-3ed2-4175-988e-d3bd0a75cd0c",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "498d142d-2515-4b23-98cd-87520ef1ff1d"
        },
        "item": {
          "id": "86640b4a-5e3c-4f30-88e4-2ea03188fcb5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "3e1bc746-fed5-40c3-8402-4e62a9997fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8025978d-baea-4ed6-8509-7d46ac3b2adf",
        "cursor": {
          "ref": "01cd2732-2f81-4fa4-8390-de19a803e566",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "00ad357f-9426-4f52-9329-be71c8933f09"
        },
        "item": {
          "id": "8025978d-baea-4ed6-8509-7d46ac3b2adf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f4fcbc50-ce34-4705-bd7b-d3e8aa2248a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b9c67e-e9cc-44f1-9c90-3bb01342236c",
        "cursor": {
          "ref": "45b51dec-4226-4959-a5e6-7ad3c082610f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3c853dcd-e508-4bc1-9991-5f7e60e58d8f"
        },
        "item": {
          "id": "d7b9c67e-e9cc-44f1-9c90-3bb01342236c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e9121cb9-88ae-4bf7-a12f-581f10ce5a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 170,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc71a03-0c48-4089-af8f-73a200ef65db",
        "cursor": {
          "ref": "75ce5573-9376-4cee-8c47-da31495d902d",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6934ad70-67b8-405c-828e-b9b3fe7d4967"
        },
        "item": {
          "id": "1dc71a03-0c48-4089-af8f-73a200ef65db",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "27a2d3c1-cf34-4677-a75c-bc1b1e1df046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e52b5e8-0344-432b-8012-8aa4f80073ff",
        "cursor": {
          "ref": "7dd2ad02-b07e-47ad-86cb-77baeaab6831",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "389d8dd8-be07-482b-9314-8aca034830c2"
        },
        "item": {
          "id": "9e52b5e8-0344-432b-8012-8aa4f80073ff",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9b6c1b1f-e9c1-4acd-b740-ca9969e0fdce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c427af36-9453-4e1c-8058-ce45b6a1fb1d",
        "cursor": {
          "ref": "094eb781-2660-4cbc-b706-1e0849cb7a4e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "4cd4d98e-f5eb-417d-9e6c-e5dcdebc8720"
        },
        "item": {
          "id": "c427af36-9453-4e1c-8058-ce45b6a1fb1d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "aea85c0a-478b-47eb-8f3c-2eb0d2de6e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878d0baf-f79f-4990-85ab-ab7a41524a30",
        "cursor": {
          "ref": "78008b38-4915-4c59-8084-f275bbaca129",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6e603889-2127-4b06-aab1-68d75912ee9d"
        },
        "item": {
          "id": "878d0baf-f79f-4990-85ab-ab7a41524a30",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9bc30080-a15b-4d3e-bbd3-cf9ab66ba4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 216,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a33106-0ba0-473b-8b97-2fcf402b7640",
        "cursor": {
          "ref": "0bd41d97-029a-4869-99c3-b9af9f5abeb4",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7353fc1c-7ffe-429b-9043-817418b1546a"
        },
        "item": {
          "id": "55a33106-0ba0-473b-8b97-2fcf402b7640",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0d64a980-9e90-4650-93fa-be9ec96f982e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc44366-9d20-4d41-9af7-6a7f09240cef",
        "cursor": {
          "ref": "717a04da-37c4-4c3f-8342-03eececb797b",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "09578ac4-d31d-4080-b9c3-62ca21e83be6"
        },
        "item": {
          "id": "7dc44366-9d20-4d41-9af7-6a7f09240cef",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8bc6562d-6270-4db0-98dd-4e732aaeaca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c48ef89-6c78-41fb-96d9-4cf3b5d3bc7c",
        "cursor": {
          "ref": "b2e1b888-0f35-4f96-9944-007dee90bb9b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "24b1ea2f-fb85-4446-a5c1-75f7fcadceb2"
        },
        "item": {
          "id": "8c48ef89-6c78-41fb-96d9-4cf3b5d3bc7c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "79d7deb5-ad19-4731-aa33-138330589244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce09bf1-7039-4dbd-b778-0b7486a3186e",
        "cursor": {
          "ref": "eb99e279-54a9-4380-8a93-57ffb21426a1",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "0cd39e40-7bbd-4643-a8ce-17bea45def6b"
        },
        "item": {
          "id": "dce09bf1-7039-4dbd-b778-0b7486a3186e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5dffa7b2-aeed-478b-88e2-2b159853a2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b65d6df-dfe0-49f1-80f8-8bcda9fb6480",
        "cursor": {
          "ref": "64d2819b-e90f-455e-8e9e-d7d4a84bcb40",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ed8b9db4-5bf8-4df6-a337-29e574716b29"
        },
        "item": {
          "id": "9b65d6df-dfe0-49f1-80f8-8bcda9fb6480",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "92ddea35-b0b8-401b-a02c-bd52ef490624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a46a63e-7cd1-47af-86b9-174f7eb478e7",
        "cursor": {
          "ref": "0e36a81c-7f24-4dbd-a7d0-7f3d065c890f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "a6a34582-7224-49df-9fde-132d20489d60"
        },
        "item": {
          "id": "4a46a63e-7cd1-47af-86b9-174f7eb478e7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5e843d58-8428-45fa-905f-3568ee5193f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbf62b3-7896-44bb-991b-7abb0ba89d48",
        "cursor": {
          "ref": "e84bb70e-dff6-4680-b8d6-ac0b17ade2cd",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "efbe3039-4e1c-46de-b55e-a462ca2b69df"
        },
        "item": {
          "id": "edbf62b3-7896-44bb-991b-7abb0ba89d48",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6fa8833c-ed5b-498d-a550-cbea1dcb5f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edafbff9-4e9e-49f0-b679-cfd53194a8e0",
        "cursor": {
          "ref": "edcc990c-8842-451b-90c6-22ede87dbc68",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "491009f1-a5dd-4cf6-9484-133ef4d7dc29"
        },
        "item": {
          "id": "edafbff9-4e9e-49f0-b679-cfd53194a8e0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c3742fb4-2c34-4adb-abc0-8283d34db776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1391dd8a-23eb-435d-aef0-05b4496fd8b9",
        "cursor": {
          "ref": "2048d786-e716-4eb6-bd9c-164b1b75d739",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "73d3d496-f341-477a-b237-adc2ba7a1ef9"
        },
        "item": {
          "id": "1391dd8a-23eb-435d-aef0-05b4496fd8b9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "87abadcc-a3f9-4a7e-8ae2-87d19e9e8a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec0f0a9-e780-4517-8e95-66bd831dc88a",
        "cursor": {
          "ref": "a9855d33-54ba-4a76-a906-cbd4bf0999cd",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bb78a1b7-15ff-422c-a947-a3a878db0f12"
        },
        "item": {
          "id": "9ec0f0a9-e780-4517-8e95-66bd831dc88a",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6631974d-a54c-4f33-aa7b-fce39763577c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 135,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab827ab4-daeb-4fdd-8851-ef91fb8cd27c",
        "cursor": {
          "ref": "edb9885d-717c-48ee-ae38-814a28424a58",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fb7196f7-d638-47b3-89cb-2184e335e777"
        },
        "item": {
          "id": "ab827ab4-daeb-4fdd-8851-ef91fb8cd27c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9437f50a-dddb-4b3c-9fec-80aa45772f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd49c0d7-214f-49ff-8c50-b50dc3257925",
        "cursor": {
          "ref": "4feab56b-6512-440a-98a2-edb7728d5cd1",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ceed69d6-ebf0-47a6-b99e-287c26efe726"
        },
        "item": {
          "id": "dd49c0d7-214f-49ff-8c50-b50dc3257925",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "83dd4d1b-e316-44ff-a59b-96cb621aae49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3e579a-9445-4f4b-9c17-ed4dacf2c6f8",
        "cursor": {
          "ref": "8739f3f9-5b31-41be-8d94-f695a938264c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "892fecba-3aea-4857-8db8-095e0595ad74"
        },
        "item": {
          "id": "9a3e579a-9445-4f4b-9c17-ed4dacf2c6f8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d0d9298e-78b3-42b7-970b-33875d29e0fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9a4387-1401-454b-9e4b-c15b2e656a28",
        "cursor": {
          "ref": "423e2e57-e4c9-430a-8cd2-586cf335dc64",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "55256387-d08e-4542-92ed-67d322990694"
        },
        "item": {
          "id": "8f9a4387-1401-454b-9e4b-c15b2e656a28",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7d6f1337-d129-48bb-bb1e-f8fcffbdcc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11468b25-d019-436d-8312-eb2861a8ee56",
        "cursor": {
          "ref": "c6e04d87-41d0-46b7-ae85-a882c0189232",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "42c63649-d423-45de-9001-d7a7da9635ef"
        },
        "item": {
          "id": "11468b25-d019-436d-8312-eb2861a8ee56",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "00acac1f-8ddb-42ef-b7fe-443e851f9206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cb96969-591e-4331-b528-7dcffaf084ff",
        "cursor": {
          "ref": "83b8938b-c97d-4624-a5ef-97f59a13ad15",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "80d9c7da-03f4-4b09-81c2-c3e41402a569"
        },
        "item": {
          "id": "9cb96969-591e-4331-b528-7dcffaf084ff",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a759420e-0449-4e31-bf84-a592acfdaae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9ec9ea-480c-47aa-a417-a957b741f750",
        "cursor": {
          "ref": "6ff05366-efa0-4b34-836e-50499f16d955",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "52ac928a-5c46-417b-a7c4-b194684c3996"
        },
        "item": {
          "id": "3c9ec9ea-480c-47aa-a417-a957b741f750",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "da49b926-9914-413a-a0c7-ece518f7c89d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a5c91e-3c58-4509-aa61-685c591df193",
        "cursor": {
          "ref": "33f84ea5-ae4a-4b4a-91b8-eaa1ab0d2131",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "594cf4d4-7ec7-4074-ae8f-b1dd4f739c1d"
        },
        "item": {
          "id": "79a5c91e-3c58-4509-aa61-685c591df193",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9d807bad-e689-475d-b687-1ed6c960b439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 129,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88b3efb-4918-40c7-854b-61084ddcd223",
        "cursor": {
          "ref": "ea5b8879-d815-476a-a4ca-1c5d95dbb97d",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e8adecec-6b6b-4e5e-aba5-db26e83e90cf"
        },
        "item": {
          "id": "d88b3efb-4918-40c7-854b-61084ddcd223",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "011ee68d-403d-43a4-ad90-861b94becd78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6c4e21-b67d-435c-8707-8a5fc157d0b4",
        "cursor": {
          "ref": "d7097910-0839-4f6b-b51e-84c35dbad218",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5d5bea80-7ac8-46f0-b4c3-da6f0b2a287a"
        },
        "item": {
          "id": "9d6c4e21-b67d-435c-8707-8a5fc157d0b4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ad7afed8-94a5-4845-ba8a-edb190b84a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d376e6d-6e42-4fa1-a471-009c67e26604",
        "cursor": {
          "ref": "1ef72ae7-3dcc-4bae-805d-bf5656229b57",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "76af4072-36e7-4bef-a282-f49c42498ab2"
        },
        "item": {
          "id": "6d376e6d-6e42-4fa1-a471-009c67e26604",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "66dde3ff-0e10-43f3-8db6-9b71422868a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 176,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7bb437c-3f6f-4729-83d6-cd3cff7cdd71",
        "cursor": {
          "ref": "f67ea0d2-dbca-4b89-950b-fb92cfd2f13c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "51eaafdf-b9f8-48f9-a4f3-af7639159bc6"
        },
        "item": {
          "id": "f7bb437c-3f6f-4729-83d6-cd3cff7cdd71",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "963697aa-7248-4834-9e3a-78438d81e035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 211,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "924e812e-a46b-4620-bcc1-3ac4d2f1780e",
        "cursor": {
          "ref": "0b1cea5c-68c0-4982-bf5d-af72fb1dba60",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f3f6df32-04dc-4512-9923-a5aa7b524ea9"
        },
        "item": {
          "id": "924e812e-a46b-4620-bcc1-3ac4d2f1780e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "346b8ca0-f1d7-47c6-8b71-d6983a259b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 201,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4d4f17-243f-48c7-b8bf-6aa529ad35ae",
        "cursor": {
          "ref": "6341c561-5d5b-494b-8314-abf05a8d70d7",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d91a6eb6-f95c-4b0e-9567-5e541a02b39e"
        },
        "item": {
          "id": "7f4d4f17-243f-48c7-b8bf-6aa529ad35ae",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "17aacb56-8f3f-4bf5-83da-8c3825c809c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e500e741-ee24-4a72-a625-97a79d88d38c",
        "cursor": {
          "ref": "f3c32ede-3d1c-42bd-a514-98cb743bc5c5",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "94e89099-6be3-4b6e-acaf-95d82e009e07"
        },
        "item": {
          "id": "e500e741-ee24-4a72-a625-97a79d88d38c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cbd15c2e-7993-4ac8-9745-951c858a871b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dc95df9-d8fe-4a72-ad08-e9967b85cf29",
        "cursor": {
          "ref": "099d1127-9c92-4936-90f6-94d4e9ef8136",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3ddd7f7a-6556-4264-8630-a1a1696e64c9"
        },
        "item": {
          "id": "7dc95df9-d8fe-4a72-ad08-e9967b85cf29",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "442f0dc0-d83a-411c-bd49-31823027d32f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653e89f7-10d6-484a-98ce-9fc03ff04a38",
        "cursor": {
          "ref": "c5001910-909a-4730-b0e8-08837600cec5",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b8491e51-de4c-48b2-b879-41ee2b89d0c9"
        },
        "item": {
          "id": "653e89f7-10d6-484a-98ce-9fc03ff04a38",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f0628d76-532f-4687-bb0f-210d7f2a0489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31e8707-b175-44ab-85c8-67c25cfc0420",
        "cursor": {
          "ref": "8a636fc7-4a83-4320-bc04-c136dc62dbba",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "100f5a15-58cb-48b6-a787-1ec985644456"
        },
        "item": {
          "id": "f31e8707-b175-44ab-85c8-67c25cfc0420",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "96ab8707-cce6-442b-966d-fb08c088105f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42498398-c437-4f69-9625-fda2791fd0e6",
        "cursor": {
          "ref": "f191dbb3-42a0-4e8f-a3ad-27abf60e67f4",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0f197525-2ad8-40f8-96e9-cc40183f120f"
        },
        "item": {
          "id": "42498398-c437-4f69-9625-fda2791fd0e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9b9ff9a2-1eeb-4d9b-aea0-dd1808749791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 171,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30a0d10-0e47-4120-b4da-417f7e4f2389",
        "cursor": {
          "ref": "7847872e-3bbc-403a-9209-bbb7e15ff810",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d00a7907-650b-45dc-a673-70152458d5a4"
        },
        "item": {
          "id": "d30a0d10-0e47-4120-b4da-417f7e4f2389",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2fa79c0d-4c90-4131-93a2-53580b0ce486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb97eb7e-3e47-44ee-b9f9-1db033ac37e6",
        "cursor": {
          "ref": "1583ec8a-73d0-41bf-bd7f-bb947197792f",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7b004ec9-494c-43fd-8650-4a99fe0c8286"
        },
        "item": {
          "id": "bb97eb7e-3e47-44ee-b9f9-1db033ac37e6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "fac42da8-780c-4acc-8db4-0bda62b72336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b75ed4-793b-439d-8fa5-4d408f923b1d",
        "cursor": {
          "ref": "8a5ad163-3372-4fbb-8435-5a99de54fca1",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "74ac169e-3137-4cf5-948b-39901777a132"
        },
        "item": {
          "id": "a8b75ed4-793b-439d-8fa5-4d408f923b1d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "d9778010-e409-41e6-8fb7-b52cf9b22387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afc099a-bdf6-4f15-ab3f-bf3234677e6a",
        "cursor": {
          "ref": "5e954c14-69f0-4da5-872a-4cb434ee1d73",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9aa7d2bd-77a6-4b7e-b9f5-9fb392491ff2"
        },
        "item": {
          "id": "6afc099a-bdf6-4f15-ab3f-bf3234677e6a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f8b45a25-9e87-40a8-ab75-7a9ab7c16ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0455b56d-98f8-41e5-8418-8e4d3255fdd6",
        "cursor": {
          "ref": "976fc4f3-2572-44fc-84ee-a867d3cc255e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "30902dd6-b0c5-422d-8b90-05f42b5c761d"
        },
        "item": {
          "id": "0455b56d-98f8-41e5-8418-8e4d3255fdd6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "343a4ca0-e350-49ee-a816-7fb3e35955b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3071dd11-ae22-4b4a-b8bd-5eb87c942413",
        "cursor": {
          "ref": "7694ab41-021b-40f1-9176-cb8087a0c3d5",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "85377ecd-aae2-4ed9-bde4-4b68366824dc"
        },
        "item": {
          "id": "3071dd11-ae22-4b4a-b8bd-5eb87c942413",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c015ffbd-e6d1-42f9-840a-f8f6d9ece219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b1c870-5ce8-4a09-bfcf-88ff723c43c1",
        "cursor": {
          "ref": "4af03340-142e-41df-9423-8b05963b17e8",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e0933b59-ffa0-4377-8087-95aa5a41f3a4"
        },
        "item": {
          "id": "d4b1c870-5ce8-4a09-bfcf-88ff723c43c1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "0f532d3a-a876-49ed-8ec7-f760234f4906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd206da6-24a9-4e32-853f-13588fefc913",
        "cursor": {
          "ref": "72582601-59a2-4bfc-b95b-4ab691217448",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0258181e-cc8a-4fc2-a16c-edd15f04aadb"
        },
        "item": {
          "id": "bd206da6-24a9-4e32-853f-13588fefc913",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6cd6e7c8-37ef-4f59-92cb-9008a34d9128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556cc61b-e310-422f-b95b-b7430e4a49fa",
        "cursor": {
          "ref": "ccbaaec0-732e-4ccb-a931-2594414b50e3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "ce7620c3-f889-4c7d-b030-abbc763c8f15"
        },
        "item": {
          "id": "556cc61b-e310-422f-b95b-b7430e4a49fa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "98a7d600-b691-43e1-bcbc-53e22d85ef24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18decd9f-9938-41f6-b3f0-6390a7accfca",
        "cursor": {
          "ref": "ceb1fa4f-fecd-4f74-9115-0baf449c2f1e",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "27ac90ab-354c-407a-bd52-d9c9b947ddb8"
        },
        "item": {
          "id": "18decd9f-9938-41f6-b3f0-6390a7accfca",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "22e914a2-0831-41d9-8eb7-8dbb6fe79217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d75dc31-3c5c-41f9-9ba1-d4e0fe03a512",
        "cursor": {
          "ref": "203847f0-1265-4f4b-8dd3-934d27a55f91",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "59f887c1-a9d3-443a-9275-a8a5bef748ea"
        },
        "item": {
          "id": "9d75dc31-3c5c-41f9-9ba1-d4e0fe03a512",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ffb4b28c-fd89-4d83-ae08-d34d4b9a143d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d597ae9c-890d-4dd5-af04-d1eb057c4307",
        "cursor": {
          "ref": "58088e96-21f2-4483-8c4f-f7ea0bc36a0a",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "14ce1d9e-0cea-4b3e-91ca-402e2bb30e23"
        },
        "item": {
          "id": "d597ae9c-890d-4dd5-af04-d1eb057c4307",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e9676644-4d3e-4708-95f5-0edaa077dfeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6efb66e5-83dd-48fa-b6b4-cc697dd8381a",
        "cursor": {
          "ref": "a19598c0-ecd6-4eb9-8621-abdb9f7d1885",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3e2135db-7a06-4142-8b62-3eeb9c36a84f"
        },
        "item": {
          "id": "6efb66e5-83dd-48fa-b6b4-cc697dd8381a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "72e9051b-8c65-4fd8-9b91-0fd662d7cd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "040841ff-8c01-48a1-8e9c-87e4505b5c2d",
        "cursor": {
          "ref": "7cfc9b24-a38f-4317-9685-544b20749577",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "65f3aa7b-8064-4da3-948b-5cc3953bf67e"
        },
        "item": {
          "id": "040841ff-8c01-48a1-8e9c-87e4505b5c2d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2c105277-e4f3-4820-a69f-6e9e7a7d37f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84dff84-79f7-49fc-b7ad-606a1f4ae05e",
        "cursor": {
          "ref": "9c94a42b-3fd3-4a42-acb7-65ef257bde0d",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "5364788e-ea8a-410e-a699-1abd2c2892ab"
        },
        "item": {
          "id": "a84dff84-79f7-49fc-b7ad-606a1f4ae05e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "51e98bfc-2431-4185-85ed-76800fb8580d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15da84fd-7c24-4461-af80-8ddea10deba6",
        "cursor": {
          "ref": "c427d84a-f5df-4432-a08e-a09e9695e6a8",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7887a632-b2fe-4165-bd0c-e5b6bb789e6e"
        },
        "item": {
          "id": "15da84fd-7c24-4461-af80-8ddea10deba6",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "23123025-9846-41c4-8da5-39506f6bb46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27b00a6-b360-4d57-a882-c2c1668cbace",
        "cursor": {
          "ref": "4f4246fa-2671-432e-a0d4-bdb5fc48ef41",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4efadfd6-3fce-47bf-b79d-cf4898cbf53f"
        },
        "item": {
          "id": "f27b00a6-b360-4d57-a882-c2c1668cbace",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a9f65c19-feb6-4810-b850-c0dd75582120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c059ed-babc-47a3-bbe2-8646a445f388",
        "cursor": {
          "ref": "525f0a20-f844-4865-a989-c2d824b5b106",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b9cd246c-0f46-44b9-aaa8-121ae9d62ede"
        },
        "item": {
          "id": "79c059ed-babc-47a3-bbe2-8646a445f388",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4436ce1f-34b3-49c2-8e0c-1264fadac077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67d816b-01c7-4c2a-9bf3-a9a7b46bbccb",
        "cursor": {
          "ref": "3541069e-cd3a-492e-b26c-e17221090fe3",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ce8c0745-acbb-43b9-be33-2d3de1f05e0c"
        },
        "item": {
          "id": "c67d816b-01c7-4c2a-9bf3-a9a7b46bbccb",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "75cee7b7-8850-410a-9f78-a6cd70856dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9206d64-bd8b-4b18-bf8e-ae5013821126",
        "cursor": {
          "ref": "1d9003e1-cc15-4ee4-a289-2278040369a6",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2472901e-971e-4908-a4bf-83de245b87d4"
        },
        "item": {
          "id": "f9206d64-bd8b-4b18-bf8e-ae5013821126",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d0681a98-b761-4d36-83b2-b1842a7500ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30758e7c-5690-4244-b07d-25a1dccc5b54",
        "cursor": {
          "ref": "b3426ccb-3ae9-4264-a23d-2ebc8ab62edf",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "d3c1bc69-693e-4309-9ec5-72edee7ba83e"
        },
        "item": {
          "id": "30758e7c-5690-4244-b07d-25a1dccc5b54",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b6f120d4-029e-4d75-afdf-dc3271e9c442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec1d59c-c304-4139-9044-c3f0e38098c8",
        "cursor": {
          "ref": "a92114e2-56b6-4d76-8697-734e97fa47bf",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2b054d6e-9017-400b-ac47-1a95cf36906b"
        },
        "item": {
          "id": "cec1d59c-c304-4139-9044-c3f0e38098c8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e051f97d-cb30-4c1d-8a63-e8d24cd0b10a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffe6fc1-94ff-4202-a413-c44d01d208d7",
        "cursor": {
          "ref": "36abdb57-c7fb-4be8-89fc-c72770a907e1",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0825139f-16c0-41c0-8535-684d5c344a69"
        },
        "item": {
          "id": "1ffe6fc1-94ff-4202-a413-c44d01d208d7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fedcff94-886f-4497-87ee-15e3a2ba6764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd097325-aa33-451e-a35e-028e6fe7f4e5",
        "cursor": {
          "ref": "99bfb80a-06b3-4536-a041-2f74adf14d4c",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "ac326833-ec15-4584-ad98-328cf90bcb8e"
        },
        "item": {
          "id": "dd097325-aa33-451e-a35e-028e6fe7f4e5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6b2e8dc1-08c0-428c-b06d-186ec1f48705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0cc38c-5d12-4aee-a9d4-8d0c094cba0b",
        "cursor": {
          "ref": "51996f4e-f9ea-4a08-a641-50f082775149",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "86fb0d32-f435-4f6a-bf3e-ead65f318d09"
        },
        "item": {
          "id": "7c0cc38c-5d12-4aee-a9d4-8d0c094cba0b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b0975655-301b-4821-a4a2-6ecc4e13c0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6f7f5cb-dcc5-41d9-b35f-6e500884c576",
        "cursor": {
          "ref": "b77e291e-22e0-4b23-bbd6-2ecbbc43f85c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "4c322377-8d10-4665-ad3a-5b6aa584ed15"
        },
        "item": {
          "id": "f6f7f5cb-dcc5-41d9-b35f-6e500884c576",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0acebc8b-34be-4c3e-9d74-59ba3d01bc8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959f4813-447b-42f3-a1b7-564eb03093bf",
        "cursor": {
          "ref": "56d3c21d-7e7b-4fec-9617-05e953987e49",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "febab28d-8e39-4f44-8db5-53168ff502a2"
        },
        "item": {
          "id": "959f4813-447b-42f3-a1b7-564eb03093bf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "29bf3511-bef4-442d-ba6d-92e4a0708710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f749762-ff15-45c5-820d-02afd56c98ed",
        "cursor": {
          "ref": "c9c82714-9e8a-4015-b7a6-c88ba5e29214",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7dd077ac-9a76-474c-97e1-725b8d960c48"
        },
        "item": {
          "id": "3f749762-ff15-45c5-820d-02afd56c98ed",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8a5c7c06-c367-4e5e-9578-383bf7a1b6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9ed3a3-8f5a-440e-981a-bbe27b2e7dca",
        "cursor": {
          "ref": "814fdfa4-5327-4cf2-8697-fadc3df29610",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9614b1bb-2dbd-4de7-ad15-20d650464e56"
        },
        "item": {
          "id": "9d9ed3a3-8f5a-440e-981a-bbe27b2e7dca",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cecd5417-ca08-40f1-8066-62e4eec9e61e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966c4c49-1e01-4e02-a202-30c20f652a26",
        "cursor": {
          "ref": "9ef3b1ad-592d-4f0b-9d06-cc52870f1d4b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bb4a7503-90cd-4c65-b7b2-a77938997e86"
        },
        "item": {
          "id": "966c4c49-1e01-4e02-a202-30c20f652a26",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1b5f2a2b-b793-431d-a28e-29e8dcb8bf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04dc7fc-2092-4dfd-8b28-fae1e5cfd307",
        "cursor": {
          "ref": "8fc8fded-43a3-46bc-b0ce-929e8defdb55",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a1b65e68-0d8d-4cf9-a484-141ccad09c8c"
        },
        "item": {
          "id": "a04dc7fc-2092-4dfd-8b28-fae1e5cfd307",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2ad8eb0f-e192-4c8d-93b8-b7ae88971053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf9c9c3-0ef2-49ed-a378-46025f6cc985",
        "cursor": {
          "ref": "a4bd0f3c-62b4-4fa5-870b-16c988633ca2",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a3d87f6f-7e55-4c8f-9781-dee2d4f59373"
        },
        "item": {
          "id": "1bf9c9c3-0ef2-49ed-a378-46025f6cc985",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6ff0230a-8d5b-4fe4-bab5-1e0bdf9972ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd8aaa3-fa18-40b6-8830-27b51cdf74b8",
        "cursor": {
          "ref": "cbfbe22b-535c-4ea7-91d1-7e088c76cf98",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "2aff4b9d-8a7c-420e-9bc3-4b533e13054d"
        },
        "item": {
          "id": "7dd8aaa3-fa18-40b6-8830-27b51cdf74b8",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "5972ffbd-608e-405e-a6af-a8b67dc64c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "b8b56391-a4a8-4400-87b5-9fbd4d16ed1b",
        "cursor": {
          "ref": "74b20a31-02f2-44b1-80de-947ce2daf401",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4d8f4dd5-a70b-4193-b754-fcb71aaadbf8"
        },
        "item": {
          "id": "b8b56391-a4a8-4400-87b5-9fbd4d16ed1b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dd7e5093-3a99-4bf7-8977-4d1471006707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b4878ed4-cd4e-4016-86f1-f966c5d0d524",
        "cursor": {
          "ref": "88b874c7-6c13-4a23-90b3-ca3af286a7f4",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "90b86bc0-f7ec-4c75-b010-a5898737f6b1"
        },
        "item": {
          "id": "b4878ed4-cd4e-4016-86f1-f966c5d0d524",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e01cdc00-0dfe-4990-aa7a-5f4e702d5c96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "30b84bb5-ddcb-4730-840b-b1c20df7309b",
        "cursor": {
          "ref": "be14ef6e-f997-42b5-afc0-0f781c6c8eec",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9d0b1c46-69d9-468a-ba21-88860de7737f"
        },
        "item": {
          "id": "30b84bb5-ddcb-4730-840b-b1c20df7309b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b07961e0-8806-48d8-a3c4-1ea929cc91c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "328ea111-c215-4433-bc0a-257fe38ed147",
        "cursor": {
          "ref": "1e8f3a47-acc9-446c-b65d-ff2790544db5",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "db378298-1815-41b0-9db5-0cd7fb5327fc"
        },
        "item": {
          "id": "328ea111-c215-4433-bc0a-257fe38ed147",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b061a9f4-863a-4924-bcec-51152989be26",
          "status": "Created",
          "code": 201,
          "responseTime": 4648,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be2b28d-fc9b-4484-8c1b-81bc3356f8a5",
        "cursor": {
          "ref": "b5a6d6f9-e692-4c85-b81e-fef74f487ddd",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "2269c63e-1a73-450a-8993-7526f4999fed"
        },
        "item": {
          "id": "8be2b28d-fc9b-4484-8c1b-81bc3356f8a5",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9bf13f0a-dc0f-4a60-ae4b-49faf7f5a45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b9587517-8fb9-4841-b14a-3e70d51918c6",
        "cursor": {
          "ref": "f98b8556-2f00-41d4-9caa-6823bd5832dc",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e9b91358-9742-43d4-981d-14495f33e453"
        },
        "item": {
          "id": "b9587517-8fb9-4841-b14a-3e70d51918c6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "554bf27a-947c-4c9b-b1d0-dbe500447662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "01daaa12-2e60-49db-a668-4c7d7282e05c",
        "cursor": {
          "ref": "bf8da8bf-f2f5-4e48-8eb5-7f75ad0ebbf4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "b4021c31-e1df-47d6-9c47-37ff82b1c642"
        },
        "item": {
          "id": "01daaa12-2e60-49db-a668-4c7d7282e05c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8603f8b3-2890-47da-9401-86afa22b4daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63d168f-eb94-4100-829c-0f530027d027",
        "cursor": {
          "ref": "c561a333-3702-47f3-bf18-b250c7be614c",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "be9595bc-b522-4957-b8c8-ed0125fd12f9"
        },
        "item": {
          "id": "a63d168f-eb94-4100-829c-0f530027d027",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2efc577b-9f98-46df-a14d-3694f4e0e37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e3252de-1f06-456c-98be-2fb8dcf633d9",
        "cursor": {
          "ref": "6f04e640-af2c-4377-90d7-7d211c3d48e9",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "60d4de0e-c698-472a-9720-ef2e3296cb70"
        },
        "item": {
          "id": "1e3252de-1f06-456c-98be-2fb8dcf633d9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "186bb460-2012-4ad7-a3b9-cc535ae51e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a034b81d-5fa5-4de8-91cf-9ffcf6a40bb6",
        "cursor": {
          "ref": "e5fc676c-555d-4d8d-a2ac-e462ab410db8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "12c9dafc-7e42-4e9b-82c6-a5c9611d9ab6"
        },
        "item": {
          "id": "a034b81d-5fa5-4de8-91cf-9ffcf6a40bb6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "edafb581-2aa6-48f6-8bee-e11059e32f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e212e19-121a-4c4d-a486-1fffe54398c4",
        "cursor": {
          "ref": "9ffcaf4f-b8da-47bf-9532-42a284f7e6d9",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a7bcdfe9-da8a-4805-9efa-2d5ab229722f"
        },
        "item": {
          "id": "5e212e19-121a-4c4d-a486-1fffe54398c4",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "75c2d7b4-00fa-4b1e-b203-f1a4f4a37a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462ce227-ef71-47fb-a3b3-edfc62b4d1f3",
        "cursor": {
          "ref": "ae2181b0-67d9-4b11-8c9b-23bb298f5997",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f42b0088-3efe-4088-b260-db57dc0fe676"
        },
        "item": {
          "id": "462ce227-ef71-47fb-a3b3-edfc62b4d1f3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "46d88236-5418-4e18-ae53-81995ad254cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c88bf42-5fda-46e5-b2a9-afdb3ff7bb36",
        "cursor": {
          "ref": "20a33b6f-5046-4df3-9ed4-116e6d541d75",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3109b328-e871-4c50-95ad-25ec19db09ab"
        },
        "item": {
          "id": "6c88bf42-5fda-46e5-b2a9-afdb3ff7bb36",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "82bd4fee-e30d-49fc-b0b5-56b1652e4af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4650377-0619-49d1-a27d-9c3d58d6c610",
        "cursor": {
          "ref": "c6e8066b-b98c-4129-8f83-a11a14a675f9",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0722fe8a-63ba-4c04-b57a-82cf2912e5c4"
        },
        "item": {
          "id": "f4650377-0619-49d1-a27d-9c3d58d6c610",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4bf1f2f4-1149-45fb-9e59-0000c462cc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483ab2c3-a14a-4741-bfa2-976f9eca03a4",
        "cursor": {
          "ref": "81527245-522d-4e58-879e-b18f65ab7524",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2315cb58-de31-43b1-9be1-859674e5f00f"
        },
        "item": {
          "id": "483ab2c3-a14a-4741-bfa2-976f9eca03a4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f9d9c285-ae46-4605-b2e5-732c1e006138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5d6132-5baa-4519-b071-6cfd49bf6df0",
        "cursor": {
          "ref": "4cb2c1a6-8ea9-42cc-968e-baaf249d180d",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bb4ca7a1-ecc5-46dd-824e-ca5bcc055267"
        },
        "item": {
          "id": "6e5d6132-5baa-4519-b071-6cfd49bf6df0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2d2973ff-4e9d-452c-9039-6aa5560c6991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d017a5cf-29d7-40ea-b609-5ea64e60f588",
        "cursor": {
          "ref": "a43ad7d4-4b11-46dc-8c12-03b5260ccaa5",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f37b99d2-ce44-4807-87b0-d7c1b3daf59b"
        },
        "item": {
          "id": "d017a5cf-29d7-40ea-b609-5ea64e60f588",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ed5aa68c-2016-4d1e-bdbd-b35a9467beeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3fa5966-c369-4e4c-9139-88a5b2b946f8",
        "cursor": {
          "ref": "7700b3bc-1f3a-4bce-ab39-c37e1bd685b7",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ee220e0e-a520-449c-998b-6cd467bd0518"
        },
        "item": {
          "id": "d3fa5966-c369-4e4c-9139-88a5b2b946f8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "cd1ee6a1-1bf5-4ea1-aa70-9dbe3ba41ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d828fcb9-3b17-42d4-aae2-b5cf141e9481",
        "cursor": {
          "ref": "5c70963f-cad5-47ea-9810-96ab72b5da58",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "543ea61d-ddbb-4bdf-aff0-460ea11ce81a"
        },
        "item": {
          "id": "d828fcb9-3b17-42d4-aae2-b5cf141e9481",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2ba2188b-0299-4dfc-ae53-0cf097a2d88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c890e09-51e4-4f71-b517-8274cd52a354",
        "cursor": {
          "ref": "aa091715-8666-483f-8831-92c742a5cd17",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e8878d4c-f907-4dd3-9bb6-824540d899a9"
        },
        "item": {
          "id": "0c890e09-51e4-4f71-b517-8274cd52a354",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9e616958-b84e-460f-9255-2285a52ecc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558353f9-6c61-4210-91c1-79782bb89ed6",
        "cursor": {
          "ref": "1fa10c7e-7f1b-4560-8369-ce46cda13bcf",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dfd6720a-27c6-48b8-a7f8-f074a518ad64"
        },
        "item": {
          "id": "558353f9-6c61-4210-91c1-79782bb89ed6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dfbe0171-a8cc-4ee1-b6aa-0cc06283065f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b783b7-31dd-4440-bcae-c838135f3ef5",
        "cursor": {
          "ref": "4ff175d2-97b4-4f55-a200-6d5317ab2490",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f33ddaab-e279-4502-8d43-1d4136cc6a63"
        },
        "item": {
          "id": "82b783b7-31dd-4440-bcae-c838135f3ef5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0dc0dbda-4b07-40ca-824f-228a0262500e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23df8c1e-ee82-47d0-9fab-0cf328d848d9",
        "cursor": {
          "ref": "eef8f28e-39a2-4f5d-8221-aad0897167f0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7495195e-8d23-4d2e-95a9-00cabfd6f65e"
        },
        "item": {
          "id": "23df8c1e-ee82-47d0-9fab-0cf328d848d9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "75436975-ba64-4d35-8d35-9b47d237ebd7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "7aa68e11-4f66-43a5-a060-e3132d4dfd44",
        "cursor": {
          "ref": "14f9cf95-1472-435d-9b65-838ca2355933",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "af840510-4256-4af9-aeef-db521ddf2b32"
        },
        "item": {
          "id": "7aa68e11-4f66-43a5-a060-e3132d4dfd44",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b94f9418-e832-4ea3-86b6-ad9de818da05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6196bc47-8304-420b-bd23-d90bf6411cd3",
        "cursor": {
          "ref": "673f1b28-b392-4fb1-be9f-7e4f50ea2657",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "8332cbe1-cf66-4762-b01d-a0a0eb4fc0a9"
        },
        "item": {
          "id": "6196bc47-8304-420b-bd23-d90bf6411cd3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5d4466e5-4bca-46bb-8d8e-c50e1c3c004b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321a5778-e2a3-4602-80cd-87f92a2767e1",
        "cursor": {
          "ref": "da3b1d1a-877e-4c40-b4f3-d16f36c946ba",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7144923b-d48d-4a13-b128-2bd19dae27c1"
        },
        "item": {
          "id": "321a5778-e2a3-4602-80cd-87f92a2767e1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "59017280-7b03-4913-abb8-1c6c5677879d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "154e1213-e009-41fa-b918-435300191ae7",
        "cursor": {
          "ref": "4b921a30-c984-4dda-a44b-8ede6298d261",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "17bd3676-6629-4d98-966c-9bddd99c28a8"
        },
        "item": {
          "id": "154e1213-e009-41fa-b918-435300191ae7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0f3b9ae9-2b93-41d3-a7b6-fc005972a4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6409f0-2c20-4666-8624-212eff71a87b",
        "cursor": {
          "ref": "2f5b711f-3b53-454a-b0a4-ace9a668051f",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6fc7c2ae-46fa-4b10-98e9-50dc69e52713"
        },
        "item": {
          "id": "3f6409f0-2c20-4666-8624-212eff71a87b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ff52528d-01f1-48dd-9c27-0bceeb21378f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6c240d-72bb-42f9-a923-5f0a70ba94ba",
        "cursor": {
          "ref": "1b6d85e2-8fa9-4801-be02-1283d19ab8a9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ca9ac66f-08a9-417d-a243-1173dcc058f9"
        },
        "item": {
          "id": "7f6c240d-72bb-42f9-a923-5f0a70ba94ba",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d3828e15-f8e7-4c92-b2ab-100a316222a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86424ba1-fd12-429a-92d6-1f9785f32505",
        "cursor": {
          "ref": "0fabcf49-a142-43c0-819f-a7c9eb0eecf8",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7f22bfbf-9c81-40e3-a41f-e6d2c613f0eb"
        },
        "item": {
          "id": "86424ba1-fd12-429a-92d6-1f9785f32505",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fa089661-c223-4d35-b849-a785c94dfad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "660c6beb-d0cc-4a63-a4fd-4a78b9af4692",
        "cursor": {
          "ref": "d8236628-5de1-4814-8c1d-c7827b13d091",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0bd35971-68ac-4c33-af35-40d50186857c"
        },
        "item": {
          "id": "660c6beb-d0cc-4a63-a4fd-4a78b9af4692",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8381df2a-e98d-4190-85ea-a223be71a47a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "3170d209-3745-4f06-acf8-69fe508be157",
        "cursor": {
          "ref": "17116418-30f8-4ba5-aca7-c3d12029bdf8",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "07db4f5e-e6f5-4dd3-9e5b-34bbab7d22c0"
        },
        "item": {
          "id": "3170d209-3745-4f06-acf8-69fe508be157",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1b6bef50-fc20-47fb-a8b7-c9453e8173da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29264252-e687-43bd-8ce0-ecaed3893675",
        "cursor": {
          "ref": "5f058feb-56ac-4f99-95bd-b5edc81db5b4",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "f532cbb3-6b0b-48cf-a764-b50214e0a6c1"
        },
        "item": {
          "id": "29264252-e687-43bd-8ce0-ecaed3893675",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e6a15cae-8364-45b9-aba4-a3b6700b7db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446ab79f-207e-4c07-baee-cccb946e6e4e",
        "cursor": {
          "ref": "f1381b47-8f6f-49a4-ae1a-dcaf33c67dbe",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1cae8cf8-edd0-4453-b18e-b849e54ee57a"
        },
        "item": {
          "id": "446ab79f-207e-4c07-baee-cccb946e6e4e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6038cfdf-c473-4770-af01-024d9b26fee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55eae1c6-b391-4f69-a0ef-cdb830d90204",
        "cursor": {
          "ref": "6763a538-e6d0-4718-8209-8b22b547ccfa",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "83511a47-7e79-4292-a510-356ffad4615b"
        },
        "item": {
          "id": "55eae1c6-b391-4f69-a0ef-cdb830d90204",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6dcde746-b75d-41af-8ec9-9fb2d41a16d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f6b756-6600-4ff5-9052-445f99840e37",
        "cursor": {
          "ref": "3ae9b3ac-b02f-4629-90c8-f2e502a2f0f7",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "3f408c69-f071-4b93-87e1-373bf82662c3"
        },
        "item": {
          "id": "92f6b756-6600-4ff5-9052-445f99840e37",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "16834bd3-4977-44b0-9065-36d8c0b4c25c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd558e4-5f38-439f-a74c-323b3106e840",
        "cursor": {
          "ref": "a7595973-e574-41a2-8324-718c77b7c2f7",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d792f578-e559-43cb-b722-860da52d3b11"
        },
        "item": {
          "id": "cbd558e4-5f38-439f-a74c-323b3106e840",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2c7111b7-db4e-46fa-8d8b-450a605ac5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a933e8-3fd4-42f4-8bb7-e71185d892ad",
        "cursor": {
          "ref": "0f363321-fdbc-4cfe-919d-b4d8d86d291e",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f2ba8748-5086-4dd9-b0fa-18698c5edb8f"
        },
        "item": {
          "id": "28a933e8-3fd4-42f4-8bb7-e71185d892ad",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "17afa958-b23f-4b2b-9e61-08728a34b0ed",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 104,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "dd5c2e44-583f-4033-ad22-c712ddb5e373",
        "cursor": {
          "ref": "af873728-dbac-455e-96c3-97937e49f1d0",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5a03d4b4-f392-4536-b739-1d45425126b6"
        },
        "item": {
          "id": "dd5c2e44-583f-4033-ad22-c712ddb5e373",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "565bd74a-b9df-41a8-9852-5a7dd8d7439c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef6d3a4-cac5-4e06-8b53-f150be920f67",
        "cursor": {
          "ref": "d556b84b-d862-497a-a879-fdfc41e82b42",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e07adf40-14b4-4293-a60d-cb08d097c620"
        },
        "item": {
          "id": "6ef6d3a4-cac5-4e06-8b53-f150be920f67",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8f643a82-7fe3-4f3f-a49b-0424ade00b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174ec589-ccfb-4312-9ee2-3e67e7588c6d",
        "cursor": {
          "ref": "59c1d854-edd7-49a8-81be-43eb120a54a4",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8f4b5475-dc07-4451-b08e-4f7f90291394"
        },
        "item": {
          "id": "174ec589-ccfb-4312-9ee2-3e67e7588c6d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ae7a3024-07ca-48b3-813f-a54fea0e62b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c8591c-5b3c-41b4-9535-e17cf3b25816",
        "cursor": {
          "ref": "c9627622-1836-442b-8b80-9a7480f5ca4e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "88b5e2d8-5f29-4aff-adfb-7522252b2784"
        },
        "item": {
          "id": "20c8591c-5b3c-41b4-9535-e17cf3b25816",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "63ede53c-3ccb-4b8a-9c80-c55393ed8504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3fdb92-a5a9-48fd-be76-db759a516ad8",
        "cursor": {
          "ref": "b4c0aa8e-f321-41bf-b7eb-f9b885c6c684",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cd9d0036-15fd-4305-a17b-39b39af90493"
        },
        "item": {
          "id": "4c3fdb92-a5a9-48fd-be76-db759a516ad8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1e5c3e54-be2a-4c16-8cb8-1aeea4ac762e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a581848c-a114-4627-ac2a-3345f03060e2",
        "cursor": {
          "ref": "7e6d640e-f708-4396-8831-6a57c1590dde",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6ad47bf1-32fb-4a12-ad66-9b699b89b380"
        },
        "item": {
          "id": "a581848c-a114-4627-ac2a-3345f03060e2",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "214b1e89-2b3f-4de9-93e2-81ed2d757477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8481ef-80d6-44ba-babb-083f3b883bd1",
        "cursor": {
          "ref": "f5417795-70b8-45cf-baf8-ab9363c2de5b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "254129a3-0211-4888-8f37-21f1e5b082ff"
        },
        "item": {
          "id": "9f8481ef-80d6-44ba-babb-083f3b883bd1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b4bfe7ff-a5e2-4063-82f4-99134c254438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ddba8a-e986-459a-8440-fab4c45bb3f6",
        "cursor": {
          "ref": "357fa29a-985f-4318-b7f9-8f66b590c2c1",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3e4fcd8b-ba61-4f79-8917-f064a7112b35"
        },
        "item": {
          "id": "45ddba8a-e986-459a-8440-fab4c45bb3f6",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4cb9a8d7-44de-46f5-ae1b-e1f2bbe829aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd52a21a-5caf-4b33-ba27-88ef3e4276a0",
        "cursor": {
          "ref": "e8c8008c-bcd4-4df0-a2b9-a8d509161cc7",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "867cda54-2396-4df7-b7e2-a61e44fb753d"
        },
        "item": {
          "id": "fd52a21a-5caf-4b33-ba27-88ef3e4276a0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2c699a6e-0a46-47a6-bd6e-e70e88f2cce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd056c02-a934-4fc9-9537-a5e7205b1311",
        "cursor": {
          "ref": "7344ba4c-b463-43c3-95e3-bc7599fa3c56",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "aa716286-2b44-4760-96c5-2e549effa14c"
        },
        "item": {
          "id": "fd056c02-a934-4fc9-9537-a5e7205b1311",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e68c8c1e-e084-4ca6-88e0-755bda1e86ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "300557ca-6fe7-4496-9494-cc97344a2c75",
        "cursor": {
          "ref": "f2dbad72-d1c1-43ac-98c8-92bd5f4d5632",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "e38b2d05-fa95-40e5-a32a-373b97bcedd1"
        },
        "item": {
          "id": "300557ca-6fe7-4496-9494-cc97344a2c75",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6536b505-f035-4fd8-abb9-3499a9a7deec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab4527d-15ea-4286-8809-d3ed3775c494",
        "cursor": {
          "ref": "0d2cfee2-4b96-4967-ae41-281fbf544f42",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e2d64548-e12c-44c1-8642-5749d02717c4"
        },
        "item": {
          "id": "0ab4527d-15ea-4286-8809-d3ed3775c494",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "df1cb5f9-1139-49c5-af9a-9e311d0deb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ab41029-46ca-4ea1-8472-efa4f04ad055",
        "cursor": {
          "ref": "c0428b60-5cae-4222-85ee-ae4d76c1e044",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "25a8c86a-45f5-474e-961f-4ba4340b841d"
        },
        "item": {
          "id": "3ab41029-46ca-4ea1-8472-efa4f04ad055",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "18093619-1cf9-4bbd-935c-ddb4a63f74af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89172535-b939-4039-bd28-a48d1928ce26",
        "cursor": {
          "ref": "a0ed89e9-4f61-40e0-af31-fdd6a07a6ed1",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c65bcb61-ebfd-40da-b09a-343d78d8c952"
        },
        "item": {
          "id": "89172535-b939-4039-bd28-a48d1928ce26",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2efcf14a-91cf-4103-9bba-59bfe22acf58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0ce66a-c503-45c3-9c59-4452e5aab2e0",
        "cursor": {
          "ref": "0518f327-5611-4831-bdaf-1e682f1a3a35",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "21e2bda8-1461-480c-bfcc-e91dfd4cf23b"
        },
        "item": {
          "id": "7f0ce66a-c503-45c3-9c59-4452e5aab2e0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "02eb4a85-a7c2-43f9-b3fb-17b3c95aed7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddd0523-0319-4495-ba4b-c8e24560341e",
        "cursor": {
          "ref": "9441ed79-dcc2-4718-b40c-efee752b21f1",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "61216dac-ba58-4f45-a896-b7f9c1b2e470"
        },
        "item": {
          "id": "2ddd0523-0319-4495-ba4b-c8e24560341e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8b03492c-078f-445a-b917-21bed953cf0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e7fce1-eb4a-4a93-8138-696fe9537599",
        "cursor": {
          "ref": "ca833cc9-7791-4578-8625-e4b879f41dd9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2dbfdf9b-1c9a-43c2-a66b-c37fd6169120"
        },
        "item": {
          "id": "05e7fce1-eb4a-4a93-8138-696fe9537599",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "93de6fc7-d92b-4909-a90b-e5134a75a82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb8f2ed-ae47-4e22-b703-2b06e15582ed",
        "cursor": {
          "ref": "ee763a2e-58fc-40c7-82d7-4c667bf78169",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c13626c0-ee6d-4a96-91b2-3328f2938ac5"
        },
        "item": {
          "id": "1eb8f2ed-ae47-4e22-b703-2b06e15582ed",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "25c363e7-5e34-4ed8-af37-d646a869e688",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "a881f8b9-52b2-407c-98de-9168cac2958b",
        "cursor": {
          "ref": "3b310728-9058-48bf-b341-b858924aa9d8",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "345abbd9-8f78-4314-8e01-d743145c6bdb"
        },
        "item": {
          "id": "a881f8b9-52b2-407c-98de-9168cac2958b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "94e99e21-5f26-4e75-ad62-7249b0873359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381bc756-372e-4d75-867f-7f4a3bb43116",
        "cursor": {
          "ref": "9fa508b3-3104-4411-af18-4217c0077360",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1d00a27a-c29e-4cc2-9d41-298c990e3a61"
        },
        "item": {
          "id": "381bc756-372e-4d75-867f-7f4a3bb43116",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a8d1c0df-b460-43bf-89ab-464d45fd3ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "819e306b-a209-4f88-9651-31ba637bdafa",
        "cursor": {
          "ref": "39499a11-08cc-4fc4-a098-c88d41928f86",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "aceae96e-8cef-4cb3-8d64-a9cbd3660cef"
        },
        "item": {
          "id": "819e306b-a209-4f88-9651-31ba637bdafa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3a621b91-6f4b-4be9-97b6-d3f47f703689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afdd7cea-c23f-4d29-8c91-530c2c9ae246",
        "cursor": {
          "ref": "edadc5d2-3c56-4a7e-afcd-e93fac1bddfc",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2225b272-8db7-472c-9819-f03e66eff57b"
        },
        "item": {
          "id": "afdd7cea-c23f-4d29-8c91-530c2c9ae246",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "76d31f45-bebb-4140-9249-f4a00cf4bdc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf997a8-09b7-494a-ad70-9b2ed993c09a",
        "cursor": {
          "ref": "7cbfb0a2-d650-4291-bbe8-150fdaf0b9f7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "21c7f328-ea07-41fc-b7ff-23c2cafcc512"
        },
        "item": {
          "id": "9bf997a8-09b7-494a-ad70-9b2ed993c09a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "07794605-9093-41d3-996f-a73713feb909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871a26f6-15f3-4b9c-b0a8-463a64347d60",
        "cursor": {
          "ref": "da335660-3024-4c98-801f-2a6ea1795af8",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "41108d8f-2b49-49d9-b345-864172ec99ac"
        },
        "item": {
          "id": "871a26f6-15f3-4b9c-b0a8-463a64347d60",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a471989-c8d5-427d-9d72-d5e51cb596e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f044b86-73ed-4f37-9d91-d48e68e110ff",
        "cursor": {
          "ref": "3fe16689-eeec-464f-834a-8acf2addeb54",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f10a5259-d937-4b23-a81c-714f7e044a2a"
        },
        "item": {
          "id": "9f044b86-73ed-4f37-9d91-d48e68e110ff",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8ef04719-a79c-4948-89d4-2b2eb4d240ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956fe1e0-220c-4da5-bf9f-6c6e3a767b13",
        "cursor": {
          "ref": "7d8d45cd-f84a-46d4-94b4-a88030f479d4",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0fd420ac-3a8b-42cd-a543-2fedf2fada59"
        },
        "item": {
          "id": "956fe1e0-220c-4da5-bf9f-6c6e3a767b13",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0c7e3bbf-993e-4e18-8691-3b50983840ef",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "ecedcbd2-0f24-4c09-9227-80ffb42b15f0",
        "cursor": {
          "ref": "9f880024-2ca5-4517-8559-f965f4dce74b",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d7349623-5b9d-444b-96e5-f40b95846562"
        },
        "item": {
          "id": "ecedcbd2-0f24-4c09-9227-80ffb42b15f0",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7700cc06-86d3-4fe8-a153-5578c6831168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c359b49d-7b91-43cc-b7e8-2cbcc834e976",
        "cursor": {
          "ref": "887d710b-08fd-4ddc-be90-ddafb926ebd5",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "12c54395-1686-4209-9162-21bb9e0f46b1"
        },
        "item": {
          "id": "c359b49d-7b91-43cc-b7e8-2cbcc834e976",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ba71bf72-388a-489c-985b-04378cad8d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b53c2a-6eb1-44ba-a657-39d5371f6bcf",
        "cursor": {
          "ref": "7fba5666-0535-42dd-a1af-d19309bf327e",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "654a6966-8587-4f0e-9d93-dd19ab598c11"
        },
        "item": {
          "id": "f2b53c2a-6eb1-44ba-a657-39d5371f6bcf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "844db02c-f2fd-4fdd-8e2d-1416028c880d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2eb2349-87b8-454c-b309-e2d49220fde2",
        "cursor": {
          "ref": "c7e76c61-72de-46e3-8ca0-7bc0f70461b8",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "04af104c-a298-4254-98d3-283d894d46dc"
        },
        "item": {
          "id": "a2eb2349-87b8-454c-b309-e2d49220fde2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cb914cb8-b822-45ca-b46c-8668e9fd4b4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c200dd-7250-49ec-bd7a-29bfed54f4b5",
        "cursor": {
          "ref": "48ed6528-9697-4ff2-abb9-e482e3c61827",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7907192c-c02e-4ae3-bbcd-5f627be0c28b"
        },
        "item": {
          "id": "52c200dd-7250-49ec-bd7a-29bfed54f4b5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "292c95eb-54c4-4b2c-921c-8a06ac823690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0196a9d8-6b25-4657-a710-e6a4c8ef39ab",
        "cursor": {
          "ref": "49aeed62-4eed-44be-b8ef-eb5e7de793cf",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "74ecffac-5297-4d2c-9912-f972c2ec0ab6"
        },
        "item": {
          "id": "0196a9d8-6b25-4657-a710-e6a4c8ef39ab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "02289477-6d40-4b0c-b558-ad25ca9002f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9573d00d-ff80-4f8f-a265-329d506ff43b",
        "cursor": {
          "ref": "e278c347-4c86-48fd-9c41-120d3ee65c8e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "73c17675-ff9e-4e2b-9560-17991769fe65"
        },
        "item": {
          "id": "9573d00d-ff80-4f8f-a265-329d506ff43b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "968b7f59-1a70-4e7e-81bf-19787fd7bae3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "4a9a59e1-e48d-4dc9-8bc1-dff6b517df70",
        "cursor": {
          "ref": "0236127e-1b37-4c96-afdc-2d4afe2143ed",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a72bcd0b-360e-4c47-854f-843e47c475a8"
        },
        "item": {
          "id": "4a9a59e1-e48d-4dc9-8bc1-dff6b517df70",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "949790ef-616f-4d15-9741-6fbcc26b0501",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "d3dc0f50-e225-4adf-8057-f4dfb2ce467c",
        "cursor": {
          "ref": "a69a0d6b-d175-457d-98c4-b3bbf014b081",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b9b21525-d1e1-4868-9ea8-69848b9a2d7a"
        },
        "item": {
          "id": "d3dc0f50-e225-4adf-8057-f4dfb2ce467c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b722f366-a258-4c2a-a8dc-69b4f03a0655",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 12,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "0d440d33-b8f2-482e-ba0c-02a3dfb4d057",
        "cursor": {
          "ref": "9b1371d9-8073-4cbc-ab84-c75354b9e76b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e3785b3c-2a58-4317-a18a-5d66ca0acbcc"
        },
        "item": {
          "id": "0d440d33-b8f2-482e-ba0c-02a3dfb4d057",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c12a4b34-d9f1-4fcb-82db-dc8611397567",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "7da56042-227e-4501-8ce4-0aff506a2e16",
        "cursor": {
          "ref": "300919a4-f96d-4e28-8cac-53e61d54b3c5",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "af91e307-6574-436b-988c-d5a94015c9bf"
        },
        "item": {
          "id": "7da56042-227e-4501-8ce4-0aff506a2e16",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ed0fc01e-9716-4029-9db3-8cfbba09ce7a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "8f736e1a-d9db-4ed6-9337-4e1db0dbd107",
        "cursor": {
          "ref": "edb5ec59-dc71-4bb0-9bbe-4c8e9f31e1e2",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dd56ae6c-13da-4387-88ae-ae643ad9c68e"
        },
        "item": {
          "id": "8f736e1a-d9db-4ed6-9337-4e1db0dbd107",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cfbfaaec-c0be-49f6-9ecf-6f04910b2f94",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "25eda142-2f8e-492a-a693-24ed3d53d9f7",
        "cursor": {
          "ref": "85cc9847-4301-456b-8b48-326b1da70c6a",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "5e3ab2af-840e-47a9-955b-205af3af889c"
        },
        "item": {
          "id": "25eda142-2f8e-492a-a693-24ed3d53d9f7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "b642b368-2195-4a5f-9dac-964b98e6b429",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b417d4b-f4e6-4815-8982-2bfb007ab7e6",
        "cursor": {
          "ref": "dfeab1ed-fb6d-474d-b4f6-6878d1ef45e1",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fc4aa08c-3ccf-424d-a1d8-7da64505b069"
        },
        "item": {
          "id": "0b417d4b-f4e6-4815-8982-2bfb007ab7e6",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "168354dc-d1db-497a-a340-802240878d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98821b22-1158-4d83-a13c-c3555cd7784e",
        "cursor": {
          "ref": "236f0213-9790-4724-839a-449d48a1d756",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ce075af9-c87d-4de9-bcc7-4e651952f252"
        },
        "item": {
          "id": "98821b22-1158-4d83-a13c-c3555cd7784e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "5c9de4a0-b16a-4672-8414-f65f3b857694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bdc602-7826-473e-bfb1-237e053dd1a0",
        "cursor": {
          "ref": "70c6caab-fe8b-43e8-a8b3-268b69765739",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "540bd397-066f-4dde-bb23-6ee962194d46"
        },
        "item": {
          "id": "69bdc602-7826-473e-bfb1-237e053dd1a0",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0e71d1d0-2293-41f5-a09b-16529ae8c8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e83e76e-d27f-4d48-a231-ab733f6d81a1",
        "cursor": {
          "ref": "06e09fc6-b8f3-4163-bde8-267308d6d5e3",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3cd1e058-3610-4394-b959-bf483dd47a71"
        },
        "item": {
          "id": "0e83e76e-d27f-4d48-a231-ab733f6d81a1",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "72c1b695-7425-478a-a06a-13aadddb9a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0246b1c8-bc4c-4c72-80ee-08bcec76c409",
        "cursor": {
          "ref": "4185f433-96ce-47bb-961b-fa86dc7bdcc8",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5ac5dbcf-611c-4840-88a9-87ad7127e6be"
        },
        "item": {
          "id": "0246b1c8-bc4c-4c72-80ee-08bcec76c409",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2f359f8b-8f42-4cba-bc4e-0fc08885ba2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad3b6ba-f13f-45ba-a238-fb62be311d82",
        "cursor": {
          "ref": "2baea638-e8f9-44c4-9d2a-f5e8b415572f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2a2f052a-f556-4208-92a5-828742843840"
        },
        "item": {
          "id": "1ad3b6ba-f13f-45ba-a238-fb62be311d82",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cbd57ad7-0fba-4bf2-8121-4ffee318d600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39c913a-62c5-40d4-8f39-c28380895fea",
        "cursor": {
          "ref": "fd87e31b-0db4-489a-aa68-10c3f7395117",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a20390ac-e9b2-47ee-8fd6-a49bad12105f"
        },
        "item": {
          "id": "d39c913a-62c5-40d4-8f39-c28380895fea",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0ee87aaa-25c2-4720-825d-2d7b27bc23aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfbc4809-482a-4195-9895-36d68079c3b1",
        "cursor": {
          "ref": "0dd75b2e-b8a3-42fa-a872-c0294ead982d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "cec8a8af-d981-46a9-a9fe-ed7cf61055b7"
        },
        "item": {
          "id": "dfbc4809-482a-4195-9895-36d68079c3b1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "6b4999e8-4e55-409a-8078-5739e1e583fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a27cbde-a029-4775-add6-204252c51c87",
        "cursor": {
          "ref": "7a286847-4932-4237-8bed-4f393bdbf406",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b7c11f02-5064-416f-91db-5e0966cb5828"
        },
        "item": {
          "id": "0a27cbde-a029-4775-add6-204252c51c87",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cce5aa6e-f1ee-492e-96a1-58f59e88a393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e435c1df-0923-48bb-ad81-81dfd77ac9ed",
        "cursor": {
          "ref": "e1a656a0-2504-4579-bac1-e552c17ca803",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "36dd7323-4667-4343-825d-566f35d4c3e9"
        },
        "item": {
          "id": "e435c1df-0923-48bb-ad81-81dfd77ac9ed",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1b6cbc2c-5c9b-4263-8fca-018c1a610d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dad4eb-86e8-4576-9e8b-e6d4411fd5cf",
        "cursor": {
          "ref": "013c8396-8572-4793-b158-04f98c428a5f",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7513b4e1-2314-4e4d-9922-9ffd5ecf5cdf"
        },
        "item": {
          "id": "f5dad4eb-86e8-4576-9e8b-e6d4411fd5cf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "bf254ef3-6d52-4353-abd6-3ba8ea0a00b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d71059-51b8-4b25-a3a0-fa8803783c62",
        "cursor": {
          "ref": "bb38a2a2-ed37-468e-81c6-68d3133c4104",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "14904a91-0933-4071-8ae5-1b6e46ba689c"
        },
        "item": {
          "id": "42d71059-51b8-4b25-a3a0-fa8803783c62",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "86ec1ee5-215b-447a-a6e8-e669e45afc49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec85a4d-cede-410d-a051-6dd87c4472a4",
        "cursor": {
          "ref": "3eccb458-d0ef-4e36-8e56-5802ede1af1c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "22c9fc11-abc3-41d9-bb68-a8e711566c73"
        },
        "item": {
          "id": "aec85a4d-cede-410d-a051-6dd87c4472a4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5242e607-9426-40c0-bd72-0c740dbc375b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33baae70-568b-4fcd-9c54-db9426556712",
        "cursor": {
          "ref": "4f713f3d-7f2a-468f-887a-f4a84c7bc81a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eca59f16-ba4d-40e5-84e8-0d59adcb6459"
        },
        "item": {
          "id": "33baae70-568b-4fcd-9c54-db9426556712",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d7b53ea3-9116-43c8-a773-6c154b28f577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d1d1d8-8d46-47a3-9950-a0493842df10",
        "cursor": {
          "ref": "9c9fc604-7fa7-4bfe-aa92-d454c75bdc98",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "d4c89ae4-e5a0-431e-8a22-fc51647c17a2"
        },
        "item": {
          "id": "98d1d1d8-8d46-47a3-9950-a0493842df10",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "15a90f5e-bcb3-4820-a2de-045b3a5d49b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f671a80a-b7d3-4e1d-896e-5ba737a5794b",
        "cursor": {
          "ref": "458a6ff4-3e0d-41e9-9bec-888115d24bef",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bee1e284-17dd-49ef-9097-ad55f3ed7af6"
        },
        "item": {
          "id": "f671a80a-b7d3-4e1d-896e-5ba737a5794b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ee9ee836-d76f-49c1-9814-04f6efa37814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f7db4df-8f7a-4760-aafa-501fac1007a5",
        "cursor": {
          "ref": "52826430-cf26-46d9-bfe2-19c596d0d860",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "22ca19c0-d162-4625-8428-89df26d58562"
        },
        "item": {
          "id": "5f7db4df-8f7a-4760-aafa-501fac1007a5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cdf7ad43-106c-4535-9dac-dc9da680bbec",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "896bc74b-a577-4ff5-8e1c-09d583ad849d",
        "cursor": {
          "ref": "d3097f61-a1a1-4488-ad57-b77a9236a9bf",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "ba524bcb-3015-4ee8-acc9-6232f6c6e75e"
        },
        "item": {
          "id": "896bc74b-a577-4ff5-8e1c-09d583ad849d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6ad2e379-1c68-41ea-aed3-e0e62d83d6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b241bf-3775-4985-b7b1-0598306575e1",
        "cursor": {
          "ref": "43340dd9-3624-4dfc-98e7-9df379151e26",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "46ef8cad-7118-497b-b29f-8c1480f99d16"
        },
        "item": {
          "id": "d1b241bf-3775-4985-b7b1-0598306575e1",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2ec9ee37-42cc-4c49-9de3-480ee6aef16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a20fab96-1317-4302-82e9-60468f7a33a1",
        "cursor": {
          "ref": "b18e6a10-ab48-4fc8-a849-73b89e595d16",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7df7c978-ffbc-48ba-8753-9b51788b7c4e"
        },
        "item": {
          "id": "a20fab96-1317-4302-82e9-60468f7a33a1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4cc4bff5-aeac-4585-a6f5-03b78de974ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794946db-7ac4-48de-9bdc-3695d5c315e8",
        "cursor": {
          "ref": "4d82652d-01ec-4d12-8e27-8d23f9bcc568",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "84af9e4f-a5c0-4a1c-96d0-5749410cb9ca"
        },
        "item": {
          "id": "794946db-7ac4-48de-9bdc-3695d5c315e8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "70de6e1a-16e9-4b66-98a1-3996d456f9c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebcdf5b-8345-4ae4-b24d-f39a689e5da7",
        "cursor": {
          "ref": "0c13ffb9-b2ad-40c1-beaf-c6af2323c76b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ff4dc347-196a-495b-868b-dd0a00357d66"
        },
        "item": {
          "id": "cebcdf5b-8345-4ae4-b24d-f39a689e5da7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "18a6cf4b-8a72-482a-b160-b63254524d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c4ca33-76df-4a32-b714-6e73945ac7c5",
        "cursor": {
          "ref": "05abc3be-4ba7-46e3-95c5-0d323ffcfc6a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3f22ba5d-304a-4d7a-b87c-e76678085bb2"
        },
        "item": {
          "id": "54c4ca33-76df-4a32-b714-6e73945ac7c5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f5405544-04be-4f27-9a15-05c032a67c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70921de-5f57-4086-a30f-795513f8ed31",
        "cursor": {
          "ref": "fa14c831-a748-4b24-a643-817445075108",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5598ec8c-55e1-4314-8c8c-eb7784ca18a4"
        },
        "item": {
          "id": "e70921de-5f57-4086-a30f-795513f8ed31",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "60fee94d-e800-4f5e-a9d4-d6df5fde874f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb2fcf4-5195-43bd-b942-e7d9822360a3",
        "cursor": {
          "ref": "64a76354-1999-4295-81c3-541c72a307a2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "493fce08-ad5c-4b4a-8c5c-51b0e7214e77"
        },
        "item": {
          "id": "0cb2fcf4-5195-43bd-b942-e7d9822360a3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "abee9f21-4ee6-4db4-ab15-000c9beccd31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf45e43f-9c4f-468f-9758-99b225a0940e",
        "cursor": {
          "ref": "62cc2921-954a-403a-8d75-34e7e7dbba60",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cbd9d292-443a-4bd4-9817-7415afe47458"
        },
        "item": {
          "id": "bf45e43f-9c4f-468f-9758-99b225a0940e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b51c801d-3d4f-4185-9817-a9eac1fbe67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6b5135-93d7-4c99-a1ba-8a5ca9529bad",
        "cursor": {
          "ref": "d5b11136-eb0c-4904-b896-c50bf93891aa",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "229fb6bf-c5f0-4281-a546-6b6bb6121fc8"
        },
        "item": {
          "id": "5f6b5135-93d7-4c99-a1ba-8a5ca9529bad",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d7fe8816-a511-4472-b8a2-6fa1f0f9cc86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056fee54-549e-434a-8d4c-8f9e63c23bd0",
        "cursor": {
          "ref": "582b445a-2755-426b-a561-039c37a7ac62",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "41c0c7dd-5a70-47f9-8818-4d1f80567b11"
        },
        "item": {
          "id": "056fee54-549e-434a-8d4c-8f9e63c23bd0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "23417038-aec0-4a0b-a724-429f6ad44ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4c1360-1cf2-44f4-9ab7-7d75f2ae5f54",
        "cursor": {
          "ref": "0fd75a1a-059b-4259-8e5c-d9209c91cc83",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "046fb485-f1d5-4dd3-b748-e970c94cbfc0"
        },
        "item": {
          "id": "8c4c1360-1cf2-44f4-9ab7-7d75f2ae5f54",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3e5a3169-4e50-46d2-9e5e-71920d484b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0be2681-4aa9-40bc-9e6f-469fb55f5737",
        "cursor": {
          "ref": "996104d4-e7e3-400a-9e1e-b6f5c3022374",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "597128d6-5be8-47a3-9c5b-4e5fe92e71ab"
        },
        "item": {
          "id": "d0be2681-4aa9-40bc-9e6f-469fb55f5737",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "afb0bce7-14f1-4185-94c7-ab100a767008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5247276-9a6b-46a2-970c-1330e97749d9",
        "cursor": {
          "ref": "2c3c8b33-4042-4f3e-b8c3-47fc0937e835",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9c3cdaf2-0008-4b36-be54-b83378ad264a"
        },
        "item": {
          "id": "c5247276-9a6b-46a2-970c-1330e97749d9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e111f71c-8727-46d8-82fd-40ec65ded2d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fa4167-f185-4706-962a-3fedd11badb5",
        "cursor": {
          "ref": "542cac88-5142-44cd-857c-1321601f6621",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5d05aacc-b799-4670-8f6e-09fa6d048429"
        },
        "item": {
          "id": "c7fa4167-f185-4706-962a-3fedd11badb5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7292d1ec-9022-4fcc-9119-1ce5c80d21df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c63c870-6ddd-466a-b32c-56939d0e2818",
        "cursor": {
          "ref": "8e51b4d1-0ab1-488f-a518-28c5b94024ad",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4a54710c-5fc9-49d3-b604-7a08cf7b353d"
        },
        "item": {
          "id": "9c63c870-6ddd-466a-b32c-56939d0e2818",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f6fcb223-e39e-4e7d-9300-a803818c85dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47505ef0-afa8-4348-b411-a4b060d4fcbe",
        "cursor": {
          "ref": "3a15975f-dcd7-4e36-873e-b75ec7d95ccc",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "3422ff69-151c-475e-876e-1dd6b312cc66"
        },
        "item": {
          "id": "47505ef0-afa8-4348-b411-a4b060d4fcbe",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "77f921d3-3378-407e-be50-ccc4ce7ac1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f140771e-2f5a-44a3-b20a-c656ed306bc2",
        "cursor": {
          "ref": "a004ed7a-200f-4cb1-9035-ece7f4b3a229",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "443c0c3c-cd44-4068-9ee5-1a30a303621f"
        },
        "item": {
          "id": "f140771e-2f5a-44a3-b20a-c656ed306bc2",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c469a748-69e0-41cb-bdb6-2e7fac6f693d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4094b5fd-27e9-4606-9680-6610589c8fd1",
        "cursor": {
          "ref": "673c350d-5b87-45b8-b2c6-289e6577d9e0",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b9499c21-9cd6-4b37-96d1-98fe03d1700b"
        },
        "item": {
          "id": "4094b5fd-27e9-4606-9680-6610589c8fd1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d59024f3-0aac-4dd7-9e17-d2890cf7de6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1f952b-c918-4bb7-916b-a7060bf5e7a0",
        "cursor": {
          "ref": "ffebb2ef-2cd0-4c18-b52c-8647eff84c2d",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ab27726e-e2ca-41a9-8ad6-59bdaf62946c"
        },
        "item": {
          "id": "be1f952b-c918-4bb7-916b-a7060bf5e7a0",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9f82dda9-065f-49aa-b4a1-de41d81d4510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c387a3ea-0dae-487a-9bff-64d411281823",
        "cursor": {
          "ref": "b6407dd6-2642-421e-9dbb-885050a90e3f",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "acbfa709-b329-4f21-9ca8-8ce54cd9dc2d"
        },
        "item": {
          "id": "c387a3ea-0dae-487a-9bff-64d411281823",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "40611be7-89f2-4818-bf5f-b3ce23c36059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ca12a92-e852-47e7-bcc5-cbb527c87084",
        "cursor": {
          "ref": "acb9d80b-4394-47b5-aafc-ef9b406e9f38",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6f67535a-776d-4f8a-b417-7bf35a823fb3"
        },
        "item": {
          "id": "2ca12a92-e852-47e7-bcc5-cbb527c87084",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "5336f5ab-b162-4b44-880e-d534dc2fc8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070f92f6-5ed8-47ba-99ed-0d5f886f3aa8",
        "cursor": {
          "ref": "f6047268-fb27-4575-96c3-5fd871a01e39",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1964e6bc-b116-458e-8cd8-9fe86c7b739b"
        },
        "item": {
          "id": "070f92f6-5ed8-47ba-99ed-0d5f886f3aa8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "3e67408c-0635-4564-8fe6-36add2f6cd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0b2566-13cf-45be-ad8d-abd388819315",
        "cursor": {
          "ref": "28b5a7ae-71b6-48ce-bfbe-e10823e6871c",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2465b808-05b7-47c6-9e63-b65e4d779591"
        },
        "item": {
          "id": "5f0b2566-13cf-45be-ad8d-abd388819315",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "13c78724-58e6-41f3-b5df-6771116f24e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00ab517d-8652-4d34-ae91-83d010bee453",
        "cursor": {
          "ref": "c0de8c47-8b44-4a68-98b1-37733e717d48",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "38a017fe-df3e-4838-9c16-772328f19ea0"
        },
        "item": {
          "id": "00ab517d-8652-4d34-ae91-83d010bee453",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "11cca28b-593d-41cc-b789-159d9fed23aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4975a87-c1f3-4d90-a0a4-881371ce1b06",
        "cursor": {
          "ref": "edf7b2d4-99dd-4940-a6c2-8feb978d291b",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4993fa59-678b-4ec6-bb89-1d7eca6eccab"
        },
        "item": {
          "id": "f4975a87-c1f3-4d90-a0a4-881371ce1b06",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "f76ddb34-c020-46f2-9968-a68e850b82a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a1a012-ca1a-490a-a850-6f143c40d927",
        "cursor": {
          "ref": "b997b5f3-b145-4716-9569-810663d6358d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "26c4fabe-77d3-4518-aece-b9af89e68d8e"
        },
        "item": {
          "id": "23a1a012-ca1a-490a-a850-6f143c40d927",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5ec51a9c-7f28-4892-ada7-a7566d467286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56f9551-cc58-46ca-82e9-c9a5053ab09e",
        "cursor": {
          "ref": "83f5e33f-d4f1-438a-b633-ac9f810ba2a7",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2035edba-4e22-450d-992c-f9f5b0e17528"
        },
        "item": {
          "id": "b56f9551-cc58-46ca-82e9-c9a5053ab09e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "098d8193-c144-4950-802a-004914619e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23a20d7-1299-45ff-b3a7-41596f3d50d2",
        "cursor": {
          "ref": "d8a45654-8a0a-499a-b7ba-6ad7863b0a8d",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "391ae4b4-3179-4625-8da7-ed7aa37e85e0"
        },
        "item": {
          "id": "a23a20d7-1299-45ff-b3a7-41596f3d50d2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "11c95bb0-c576-4853-95dc-8f6fb946eba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf96bc8-2286-4aee-b733-72afdce008a9",
        "cursor": {
          "ref": "1e500ade-a2fe-4f59-b25c-2d96f3533f8a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "98e7bea4-a499-468a-836b-f28a13da5d5f"
        },
        "item": {
          "id": "9bf96bc8-2286-4aee-b733-72afdce008a9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c1e3ecf5-aa10-4f8d-8b27-6dd681768775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f287e86d-a1f1-4727-b1a2-0be7e894ff2c",
        "cursor": {
          "ref": "14341a50-96b2-4fdc-9ab9-eb0a844ab93a",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8521a27d-11da-48bb-a35b-831a20001148"
        },
        "item": {
          "id": "f287e86d-a1f1-4727-b1a2-0be7e894ff2c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "6d63467d-5a07-4340-acd0-d0048d264980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1d214f-6637-4b62-9bf8-c29f98e94bc4",
        "cursor": {
          "ref": "c23f128b-6ffb-4c9b-a779-e9dc76dca822",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9bc13d57-0459-4033-841e-b2f961a45184"
        },
        "item": {
          "id": "fa1d214f-6637-4b62-9bf8-c29f98e94bc4",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "47d40263-1a57-48c8-be34-ed6f977daeb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed569ba-2f3a-4cb9-9574-970519dfed25",
        "cursor": {
          "ref": "2752a2b6-7ade-4deb-8442-1865732a4e71",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1a14cf8c-bcfc-49d0-8643-f2658bb0f4ef"
        },
        "item": {
          "id": "8ed569ba-2f3a-4cb9-9574-970519dfed25",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ccb061e6-23f5-4b09-a6f5-959fd6a66210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce1a26c-afef-4a4a-9b01-08c165cbcfbb",
        "cursor": {
          "ref": "90c83788-9926-4b76-83b4-5544c37496b2",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cfd32613-f905-41c6-bf09-8e74499ea2f9"
        },
        "item": {
          "id": "fce1a26c-afef-4a4a-9b01-08c165cbcfbb",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "5891841a-4809-4bf0-8e01-e7db2b32703c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7237efb9-97ff-4e4a-9904-ece8f580d1f7",
        "cursor": {
          "ref": "5e0ac780-bd57-4602-9fb6-ba23f1824291",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3873fbcb-0d2d-401d-bdfe-7b86437b3085"
        },
        "item": {
          "id": "7237efb9-97ff-4e4a-9904-ece8f580d1f7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1f4376b1-9635-47a3-8e52-582a0b135213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d488826e-38fa-4681-9c01-0515ae7ab108",
        "cursor": {
          "ref": "113d03a7-bf6f-45e1-99db-f3530548e7f3",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "57a9a4c9-fd05-444a-87d9-5a8d22491571"
        },
        "item": {
          "id": "d488826e-38fa-4681-9c01-0515ae7ab108",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "53201dd4-8908-45a9-ab85-a6d94b8a8419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee4b5829-72c9-4154-ad68-eb6a7640c9ba",
        "cursor": {
          "ref": "364b7162-baf7-4e62-9b73-81449e8d3db4",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5a949914-22f4-4a16-8048-362bcbecbd12"
        },
        "item": {
          "id": "ee4b5829-72c9-4154-ad68-eb6a7640c9ba",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "85d77cc3-258a-4663-a075-38dc368ed1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b831390-db58-4881-998d-07b53124cdda",
        "cursor": {
          "ref": "1dd4840b-7b01-4aa6-91a4-55723eb72a8c",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "67b063f8-3982-4a2a-a45b-3d05336d1fb6"
        },
        "item": {
          "id": "3b831390-db58-4881-998d-07b53124cdda",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "d4edc560-c3f2-4bea-ae77-3e08b238cd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254bf6de-8bad-43d0-9d36-b75780e73beb",
        "cursor": {
          "ref": "fd45508e-f67f-4c8e-a1a7-bfb621caa80c",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d98538ae-2318-4b9b-aa26-dd246bdcadac"
        },
        "item": {
          "id": "254bf6de-8bad-43d0-9d36-b75780e73beb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d5857401-6642-42d9-a911-5bb3c9cbf69c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dd6d261-39d7-427e-b984-ba3859a5e347",
        "cursor": {
          "ref": "2398fa15-9f9f-405d-bbb5-dd4fecc6ac30",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "de79024f-ce5c-4700-8233-1f896b29ddb6"
        },
        "item": {
          "id": "4dd6d261-39d7-427e-b984-ba3859a5e347",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3c8e0141-4e2e-4b73-b821-804f776f5751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21facd8-d321-4b56-a095-c74af7c4cbe4",
        "cursor": {
          "ref": "e1758086-4775-4959-a40f-668bd57b9d52",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "3a63add7-316e-4e86-9230-b91709eee3ce"
        },
        "item": {
          "id": "f21facd8-d321-4b56-a095-c74af7c4cbe4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4e43684e-732f-48e0-a50a-4bfe31c326c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ad9bb70-876a-4a73-b271-fa833a8e22e9",
        "cursor": {
          "ref": "be8a31a9-c4ac-4da9-b975-0dfab0ef5ced",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a5b0f455-1888-4097-a087-91e5618db378"
        },
        "item": {
          "id": "8ad9bb70-876a-4a73-b271-fa833a8e22e9",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2bea7949-c19e-40ab-becd-ae0678b1cf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f469b2fb-0617-4214-ba95-5179b9ebbe1d",
        "cursor": {
          "ref": "bedf22e3-434a-4c60-8d5d-883c9b9ad1d1",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "b301105d-b4cb-4ad0-9b38-639fdd480de3"
        },
        "item": {
          "id": "f469b2fb-0617-4214-ba95-5179b9ebbe1d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ce114338-fa03-4866-99df-a731459d3d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0504d63-6aa5-46d0-8d4b-c286387d2119",
        "cursor": {
          "ref": "8b16d4d0-b960-4147-9f42-f4804c24d4e3",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e33d70b0-8c18-4241-8f4b-dafae832e2c2"
        },
        "item": {
          "id": "e0504d63-6aa5-46d0-8d4b-c286387d2119",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "861df75a-08e2-4967-bdf5-7cdd0c92cddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d383faa-de17-4361-aa08-3b4af40474f1",
        "cursor": {
          "ref": "e6f32208-4087-40c0-ac41-72f5a7286247",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a24044d4-4bcd-4834-95a0-60dde9da365f"
        },
        "item": {
          "id": "2d383faa-de17-4361-aa08-3b4af40474f1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7273a6b5-5094-4fee-a12c-c69d1f45f98c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb38e39-802e-4d17-97de-15b74d736453",
        "cursor": {
          "ref": "be5d4b5a-8436-462d-b297-4e7d80643f9c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "62939f79-bbfc-46ab-a594-9c8f3b28587e"
        },
        "item": {
          "id": "9bb38e39-802e-4d17-97de-15b74d736453",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fe2b3469-e2a3-467c-8ffc-1531b05d669b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2dc54a-ea29-4aef-b4ec-1f2653495b92",
        "cursor": {
          "ref": "7caf6ba4-6843-4993-9c42-73159507cbdb",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "da91ee98-7fb3-4373-966b-f6718afa43c0"
        },
        "item": {
          "id": "bf2dc54a-ea29-4aef-b4ec-1f2653495b92",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bbf62b61-3266-4708-b0ff-e88be1b06b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460114b1-cf71-4b96-ad0d-eb7b07b13076",
        "cursor": {
          "ref": "9f3631eb-860a-4b62-8beb-a96e4cde2991",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "7b1245bb-69a9-4321-9632-d013838af128"
        },
        "item": {
          "id": "460114b1-cf71-4b96-ad0d-eb7b07b13076",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "82afa93e-8fa2-445c-b7bd-362b3bcc5ba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ac2bcc-a055-48f8-9b3d-fb86dd954fbf",
        "cursor": {
          "ref": "450f742b-e7c2-4d20-aae6-de9b00dde2ef",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "180392e9-9a27-411d-9677-dc4495be8efd"
        },
        "item": {
          "id": "b5ac2bcc-a055-48f8-9b3d-fb86dd954fbf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "31ef263f-1789-460c-803d-cc24a37cf411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be962d2-30b0-4705-aa75-34c4f6338abd",
        "cursor": {
          "ref": "22075440-defa-4367-91d9-15cdfab5a4da",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d80e9bfb-c0f1-4d9f-9b36-63116110669d"
        },
        "item": {
          "id": "5be962d2-30b0-4705-aa75-34c4f6338abd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f1723211-dde6-49fd-ac3b-fb1d5e2890cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33219abe-6466-46b8-a650-876f07452070",
        "cursor": {
          "ref": "e4a8fbb0-0585-4319-8181-014ce43fac72",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "59243d41-8ece-4d08-822a-356dd1e36760"
        },
        "item": {
          "id": "33219abe-6466-46b8-a650-876f07452070",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1a392142-c2c1-4fac-bd1c-41d8ea1d155f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3e2859-ea0f-4948-b684-fc88969d07bd",
        "cursor": {
          "ref": "00f56c0a-ce75-4cd2-acbe-71a1d7900142",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "28213498-15bf-4cba-ad15-1cabe7d49de6"
        },
        "item": {
          "id": "5b3e2859-ea0f-4948-b684-fc88969d07bd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "74263cc2-e056-4070-8197-5746f681376d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3175c9cb-09cf-42b2-8228-d4dbbcc06fc6",
        "cursor": {
          "ref": "2ddca19d-db8b-41c6-8ac9-e61115b484dc",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4dcc34ea-c591-4ff3-823e-7a589b4898ec"
        },
        "item": {
          "id": "3175c9cb-09cf-42b2-8228-d4dbbcc06fc6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a212baae-fcf4-4e36-bf1e-00e47e569b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35846b88-28b4-4c3e-8b60-89315471d9c5",
        "cursor": {
          "ref": "aa9f9873-072b-402e-8b37-7019dea895c0",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c9159053-8ca1-4b6f-a8d3-9c7041595967"
        },
        "item": {
          "id": "35846b88-28b4-4c3e-8b60-89315471d9c5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ab697ca1-f58c-4e82-8d08-6d5de32c985a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb99141-1f47-4bb1-a9b5-5df455efb37e",
        "cursor": {
          "ref": "a7e4d555-eec5-41f3-bd2e-415f733c9381",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1af14a0b-003c-4e7b-b797-fa9c7da95535"
        },
        "item": {
          "id": "5bb99141-1f47-4bb1-a9b5-5df455efb37e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d72bb53f-b280-45a0-aa18-dc8844602142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79b1018-f23b-4bb3-8e4d-ad57401edcb7",
        "cursor": {
          "ref": "20b67461-a90d-4701-8335-6d7775a5aa8b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "0ba3977f-6713-47c3-9bbb-78eea3924101"
        },
        "item": {
          "id": "c79b1018-f23b-4bb3-8e4d-ad57401edcb7",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "97ceabec-942a-43d1-8b53-9e0ddd07f2b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b522466a-1412-4286-a48e-24f2a674151d",
        "cursor": {
          "ref": "c2a8db1c-9a4e-4b46-a173-ca923d845181",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "60d48a78-9799-4355-84ff-99a35db617a2"
        },
        "item": {
          "id": "b522466a-1412-4286-a48e-24f2a674151d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7e1fd873-2f7d-4825-aaf6-ba0d8e5ba5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cee4b88-0238-47b8-9563-f3e64502881c",
        "cursor": {
          "ref": "b6606679-f954-4091-9e2d-f957a1fe2a1a",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a15aa81f-1f6f-4a79-8981-665bae7184a4"
        },
        "item": {
          "id": "4cee4b88-0238-47b8-9563-f3e64502881c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fbd22ef7-fa97-4628-975c-4049aa666d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a430cad7-4b50-4566-8ab2-9aa7946d1815",
        "cursor": {
          "ref": "9f25b8d0-ca71-4b63-b38a-e13597b3c730",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "c68815e1-b52e-44a2-b076-e071d78d25da"
        },
        "item": {
          "id": "a430cad7-4b50-4566-8ab2-9aa7946d1815",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d85114f1-f62d-47bc-901b-a6e5625baf6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb22248-655d-40d4-8d31-288ccf31490f",
        "cursor": {
          "ref": "523b9e99-3598-491d-89f9-6ee570d83c93",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e1c0275a-234e-43c8-81c8-1e4ba7ecec51"
        },
        "item": {
          "id": "ceb22248-655d-40d4-8d31-288ccf31490f",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "28ae72b4-062c-4a94-9f3c-bd35419fd432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5fb817-d6ab-448c-9409-7f1b76290e09",
        "cursor": {
          "ref": "7dbad29e-591c-4d50-8a09-1dd953a44a06",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "d5892bf5-6788-4847-ae9e-c61757edbdae"
        },
        "item": {
          "id": "bc5fb817-d6ab-448c-9409-7f1b76290e09",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "a7800b56-e22c-4b16-8fd9-cec368a2043c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df17f979-5606-4721-9810-47be5dc44c32",
        "cursor": {
          "ref": "50aeddc6-a500-4873-af69-b319d06866d9",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "c0e2f119-9669-49fd-9e70-e310e494ebe8"
        },
        "item": {
          "id": "df17f979-5606-4721-9810-47be5dc44c32",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "90e5e77f-d667-4a6b-9ec7-b639dabcea65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b16ad3-c2f8-49c5-84af-cb6604d66bb4",
        "cursor": {
          "ref": "9f27db83-2c2b-4ac4-a5b6-9a540c5c1506",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ae4ef158-c9bf-4fcf-aef7-b4002af92168"
        },
        "item": {
          "id": "91b16ad3-c2f8-49c5-84af-cb6604d66bb4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f332d215-e3b8-47fe-8674-aabb51c7f859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9ffc06-9c57-4dd8-a314-301a11961269",
        "cursor": {
          "ref": "0901cb7b-fc45-4e6b-9b4a-c9e8bb24f4b0",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d7929436-dac2-4175-a4ee-9872cfd12526"
        },
        "item": {
          "id": "ad9ffc06-9c57-4dd8-a314-301a11961269",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b9d01349-f4af-45cb-ad39-fca00ffab2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74c89970-10b3-4a82-9482-dc72590eab97",
        "cursor": {
          "ref": "516eb633-5491-4e32-81d1-3728d47d715c",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "060ee5c3-0ec8-4432-8028-4c8231a5d5d0"
        },
        "item": {
          "id": "74c89970-10b3-4a82-9482-dc72590eab97",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "862f5d11-5aaf-40a8-8087-26a05fc96f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f5a491-d208-4689-b651-1bfa0ab13378",
        "cursor": {
          "ref": "30afbcb3-7d12-4c61-9393-ba65de248689",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1e3abd41-164b-41df-a83c-d286067e42fb"
        },
        "item": {
          "id": "51f5a491-d208-4689-b651-1bfa0ab13378",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "fee79993-b2fb-4c34-ad8a-da71c8871528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa3ee8f-fcc5-42cb-bd3e-81604e702753",
        "cursor": {
          "ref": "fe14de31-3a42-45db-b395-ea47ffdaafbf",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f6a817ed-19cf-4c49-9047-3ca1b41e51db"
        },
        "item": {
          "id": "aaa3ee8f-fcc5-42cb-bd3e-81604e702753",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8e739455-d2d7-4e3e-84af-25f23e1ce499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d7a09d-ffbc-4e4c-bb7e-79bc33115838",
        "cursor": {
          "ref": "a1aeec39-ef82-48f5-8754-0530ee36b755",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "533037ea-e971-4fb5-8f94-ac6f00a03a74"
        },
        "item": {
          "id": "27d7a09d-ffbc-4e4c-bb7e-79bc33115838",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b5363579-b0fc-4e1d-b022-05447d073100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f5c472-364a-4f63-a671-3e6956758fbb",
        "cursor": {
          "ref": "50814e73-c02c-452f-98f8-67117e6ffead",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b38092ad-57bb-4ca1-b560-d40ed6f55d45"
        },
        "item": {
          "id": "c2f5c472-364a-4f63-a671-3e6956758fbb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ea43699d-674c-4ad2-beb7-7a9bf7f4b5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90b71ae-a284-438b-a7b0-d15ba7b8884f",
        "cursor": {
          "ref": "e9fc8501-3fa1-4faa-b640-67faa306570d",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "789878d1-0a7e-435c-825d-8e43cb74ccff"
        },
        "item": {
          "id": "e90b71ae-a284-438b-a7b0-d15ba7b8884f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2374bce9-afba-4989-b7f3-b0334a9b4278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e495486-7c8c-4d4e-a05b-214deda917b3",
        "cursor": {
          "ref": "d33f4063-4605-48d0-b06b-f00b47c062f0",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1de46c0c-d2de-4e40-82be-b125c4400303"
        },
        "item": {
          "id": "0e495486-7c8c-4d4e-a05b-214deda917b3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a226837d-7bd2-4e67-bf4e-a86b8d7f6210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0c6ac7-d3a6-4131-b32a-7d1659bce977",
        "cursor": {
          "ref": "77bca1a4-e363-4e56-a4fe-a188e97a9a7e",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "cadf52cb-fac6-4196-84f3-a7212d5c2786"
        },
        "item": {
          "id": "5f0c6ac7-d3a6-4131-b32a-7d1659bce977",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ec0b23b6-8000-49d2-92a8-8cec7697f4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6486f40c-81de-421d-adc0-6adf7cfc89fb",
        "cursor": {
          "ref": "7bb72ad4-989b-4797-8035-d8b3cba730a4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "712bc46a-48ca-4307-82d6-11d69dcedb2b"
        },
        "item": {
          "id": "6486f40c-81de-421d-adc0-6adf7cfc89fb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8505a5a9-d1b3-4dca-8cdd-c00faeb2e001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2151f494-8be4-4137-9659-9ac7a5390343",
        "cursor": {
          "ref": "e51f94b2-3ac0-4a20-ad96-0a3b959bae5f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c2b766f8-9213-4d54-8c8b-b8051de560eb"
        },
        "item": {
          "id": "2151f494-8be4-4137-9659-9ac7a5390343",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "3a6ee207-1b12-41dd-a789-e10194eec067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b1718ae-57af-4b98-8930-e8ae00fcaab5",
        "cursor": {
          "ref": "b5c10570-cf19-4424-81ad-4fb5b1f23fea",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fabdcbb2-8054-49f5-849b-23335cd9a5ff"
        },
        "item": {
          "id": "5b1718ae-57af-4b98-8930-e8ae00fcaab5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8bce6d58-6b95-4358-884d-c0b917f372c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c828b5-0456-4d7b-b0be-370776f4ce3f",
        "cursor": {
          "ref": "ed80d080-a614-47fb-a3f6-187c1765b369",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "65053ef4-a6b4-4f4b-a2e7-bc838da1cde3"
        },
        "item": {
          "id": "49c828b5-0456-4d7b-b0be-370776f4ce3f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "37155be5-325e-4152-becc-87a2d3c71132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c192215a-674a-4879-9f86-6ba5148dba75",
        "cursor": {
          "ref": "a34a4818-6d3d-4b8b-8df8-bc8c2ec4107a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fcdc8d0b-3226-49e8-9318-389894372fab"
        },
        "item": {
          "id": "c192215a-674a-4879-9f86-6ba5148dba75",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "de6982d7-214e-4ad9-8c88-c63cd39d36ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92512b00-5f6b-427b-b842-e0fcc584de7d",
        "cursor": {
          "ref": "15740927-fe7d-4cd0-b2d2-e1f29b8bf79c",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5d53d29c-f6ff-4205-845c-f9b29b61adad"
        },
        "item": {
          "id": "92512b00-5f6b-427b-b842-e0fcc584de7d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "394d1d13-d521-4811-a48e-ca171d464e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f33b89-7de4-4a9b-a0a3-9df21135fc49",
        "cursor": {
          "ref": "9b3cc59e-8931-4698-bd59-cae22329538b",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3cc0e0e8-7235-420b-91d8-e4ebd171a929"
        },
        "item": {
          "id": "a8f33b89-7de4-4a9b-a0a3-9df21135fc49",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "b7efc9e9-d465-4306-b804-fbaca9562db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a267ee9-5e22-4a3c-af06-97198fbeda48",
        "cursor": {
          "ref": "8a54cfb5-a2c1-4a9c-9520-8d6f9c10623a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "77e194ba-3b2d-4caf-9016-92ada7848119"
        },
        "item": {
          "id": "0a267ee9-5e22-4a3c-af06-97198fbeda48",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b7a3a695-9673-4790-8caa-7dd99de703ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72e22bf-ea43-4a81-b5b3-78f4d881e504",
        "cursor": {
          "ref": "17b1465d-8029-4102-9984-dfded82d8952",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "097b2693-d80c-44ce-9379-3a63342aa0ea"
        },
        "item": {
          "id": "f72e22bf-ea43-4a81-b5b3-78f4d881e504",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5f0fc08a-7333-47c0-88f4-f99978c69b62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12261c40-1dbe-47cf-b06f-bdf74ee8caaf",
        "cursor": {
          "ref": "3a6c59e7-f6de-419b-a7be-be974d187802",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7c2d5a09-3097-4607-986f-0133eac68cd1"
        },
        "item": {
          "id": "12261c40-1dbe-47cf-b06f-bdf74ee8caaf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dfc2b4d3-e302-4dbf-a28a-99c54c99b60c",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7832a7d-69a7-446a-8f2e-4f03a874b66a",
        "cursor": {
          "ref": "b5be5feb-4b8b-4b6e-86ed-fb65411b937a",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e002ab40-f145-47f7-86af-4f316a2e8d79"
        },
        "item": {
          "id": "d7832a7d-69a7-446a-8f2e-4f03a874b66a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2581a384-e97e-4170-84bd-697dfb292c30",
          "status": "OK",
          "code": 200,
          "responseTime": 2928,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c5e06ca-e03f-459c-adff-b6d485809894",
        "cursor": {
          "ref": "626f56b2-dd46-42c5-a42c-c57598bfdfa2",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2d2a947c-73df-449f-b2fd-11c268bc6343"
        },
        "item": {
          "id": "9c5e06ca-e03f-459c-adff-b6d485809894",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "26f0aecc-9e5b-44eb-a8e7-da162b8c706a",
          "status": "OK",
          "code": 200,
          "responseTime": 2296,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0297e68a-23d8-4baf-9843-8144a4b14c82",
        "cursor": {
          "ref": "7a21583c-ec4c-4817-9acf-ef328c0dec0e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9161c82a-435b-4a05-b355-814111660a82"
        },
        "item": {
          "id": "0297e68a-23d8-4baf-9843-8144a4b14c82",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eb3c98db-0db9-4b20-bfa3-cf2d600415f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0297e68a-23d8-4baf-9843-8144a4b14c82",
        "cursor": {
          "ref": "7a21583c-ec4c-4817-9acf-ef328c0dec0e",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9161c82a-435b-4a05-b355-814111660a82"
        },
        "item": {
          "id": "0297e68a-23d8-4baf-9843-8144a4b14c82",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "eb3c98db-0db9-4b20-bfa3-cf2d600415f4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76c8700-5f11-410e-a64a-7fd069a8f98f",
        "cursor": {
          "ref": "f5624441-5dfe-40bc-8a81-9061613d6808",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "1aeb52e3-723d-4c1e-a6d5-4671f7d1852f"
        },
        "item": {
          "id": "c76c8700-5f11-410e-a64a-7fd069a8f98f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ade0611b-e576-4380-a8d5-643bb02113f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5ee7c0-587b-4541-8542-01d9e69a58e7",
        "cursor": {
          "ref": "d4c5b115-c480-4d02-8a5a-1ecf24dced1f",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d2e90be7-d060-40ec-b319-6519511fd241"
        },
        "item": {
          "id": "1b5ee7c0-587b-4541-8542-01d9e69a58e7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3a940847-b927-4940-9850-c24abbc5fd81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}