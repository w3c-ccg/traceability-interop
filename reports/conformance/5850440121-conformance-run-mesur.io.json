{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "040bb879-b92f-44ae-a4b1-b6fbf98c896e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3bd0edf2-b2bb-4587-82d8-c29cadc6f856",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dde9c6a0-79ca-419c-abf3-335c9917dfe3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2827dd12-50c3-490d-8640-991707b7c51a"
                }
              }
            ]
          },
          {
            "id": "23a87d07-d8fe-490d-90ac-0167ff7039d5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6fa3c1c0-def7-4ed7-8224-146178d3470e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "06e29c7e-2093-4fc2-ab0e-108d4232b082"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6baf8298-9808-45bd-a935-6f73cfcb72f6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "08bbae96-ce94-44b1-b65b-3559936e3a13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2d761f6b-db87-48af-bb21-b60d55c63032",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ee0273e-2d07-41cb-aa4f-cdc9e6b713d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c6d472b-9260-4787-8ef1-4192aad35db1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "01afa821-676c-41ee-b731-963c58f88722",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c83ea23c-d4ee-4edd-aecd-d9eb9e56b537"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e05fa404-6082-47ad-b894-4b1ea4caf6e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04b880e3-7d46-4310-b2c2-a31f146706c3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57eeb669-c815-4dc6-9373-528a7c2239d7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8b24f17a-3e8d-48e9-bde2-b3c72aa21ef4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42135338-ef56-450f-a881-3d4a61f6f53b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43bb78bd-eeee-4e26-a6a7-ca7f8208f917"
            }
          }
        ]
      },
      {
        "id": "8ade5c13-4136-4028-b65e-ebf7a3847e45",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c976a4f1-1a5e-461a-84b4-182635148a6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65b6fd1d-a1db-457c-9fc8-b77ed9e50926",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82a98211-2f86-4db0-b478-56599c4750cc",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab596470-0cb8-40c1-90b3-b6abab409949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "427a6cf7-5842-43b2-ae6b-c43ba431bf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a48bcfc-1dd5-4272-92b6-0206768c152c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e760bf5-d4d5-4125-bb85-0bc2918b04e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f4f8b17-292c-4fc3-bbcf-d7c158e28f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75dd9be6-7b4d-45fb-8733-1ca9c5712b1f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9371e92-c882-407f-a8c8-63e1def5b69e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "506e2e5b-5fd2-4ec2-98e7-e595c33407be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bead7089-a90e-4c55-8718-4f80477f2c2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9840ee49-7853-479f-8526-775a96397427",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573b1614-82e5-4971-9af6-8d38dc84f6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4336ad71-1910-4944-8b12-e4da1230b64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74c1164-d8cc-4367-9c91-8e74d2bff987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cea132d-6374-4559-8ce4-7c15c0d431ae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cd1b1360-05f0-4c67-ba85-dd65aadf2a3f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b23a01d6-51d5-4e58-b0c2-a8fa7fcdb4b9",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2adc951-e4ad-4d38-b2a9-b927eea5acb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "183cdc69-a4b6-47ed-8a7e-f80ff88dbd5a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cc787c4-cff4-403f-b8b8-1a9a4d1ff8f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "475a67a3-04b6-4b62-b7ff-20cee45f5555"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bddfcedb-6d44-4f23-91c5-8532a5a21c0c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d8ba735-f6a3-43bf-9684-eded6425c233"
            }
          }
        ]
      },
      {
        "id": "569762dc-6086-46b1-a777-0a501ed09a77",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9a913be5-f8ea-420e-82c5-8125b7406ffe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3a495c3-cca2-4279-8ac8-88d3b19d2d6f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "025967d1-007c-41c0-be25-5a46f1f6a3d4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa7a1b7-a72a-45a2-bc79-003483166d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2693d43-e9f2-4eab-b84e-5e059a70553a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3233d907-3c52-432a-b892-03452a623923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e3afd82-a1f9-4880-8acd-e7349e65b04b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40061c7-6a22-4bdf-be6d-37618fa95c32",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caaf7539-7931-4be4-a5f5-3d68dbcb85d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72c0ffc-ffad-456f-aaf1-e2c838fdd823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf477a5-1736-47bd-9796-82dc94525234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f0f115d6-4655-4fba-aa3f-3ef3841d0815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19ad6d3-7274-4f50-b636-0933cf50994e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0df5a2b-3037-4dfa-bd29-a747628564b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4518d5-803b-4b86-8f0d-4516765de365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20790699-39cf-4812-9b31-e0d6b56d8fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88f4b53c-5ce4-4afe-a155-908cd4dbf77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1093df39-fe6e-4c8d-b794-df54eace5139",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8795d9f9-ac15-4d44-884a-516b929d3fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d504ac79-fffe-4260-a6de-e1910ea28dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f17d5e-8510-4802-ad20-0d7ebacaf339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd1aef2b-bc6c-409f-a8f7-b69b6a5d0eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8238320-aed4-4848-8a9f-9f47fa9abfe5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54523b2f-98c3-4a1c-b499-1e472f22387f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94081db2-4046-421d-a139-8bc7414f9cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa143f3a-000f-4291-9485-68373bc9647a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b27e5b3-26ef-4a22-afb3-00f239667cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e479b3e-4f77-4dbc-b630-e063b5269610",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc964fe4-b3dc-4473-b8d6-d85a8c34bfef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c9aa9d-055f-421c-8c5f-7157329ae315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc53e2f4-4624-43a0-8acf-973f95d94d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "461ac4cc-c8c2-4085-9e32-7e9d5d2f7411"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abdcb02-f5ea-4171-afdd-632c132a4d80",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d856adf7-38c6-49e5-a559-2bf26104696c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e476da-a4fd-4bab-b863-6463277af1f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3976588-ed20-4bb5-a235-3b9886298dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a015b7b6-37b6-43b2-acc4-151bdbd10632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b3a8b6c-d4ae-4911-9725-209f4e5f962a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b230aa3-c5fa-4648-9fbc-94da29a53e66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf8e621-f1fa-4dc5-b31e-1fb175277357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8838ff2f-3a7f-4b80-bc21-bdeea03351ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d4f0ed9-ae3a-4d0b-9b8f-7f75169a3744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1874f27a-ea54-4335-8d6a-67a821b04d78",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce98ce0-73e2-4b8c-985d-a83f1463ea5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c179e323-9e43-4e4b-9f12-ba48925d3245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5363d5e5-746a-4ae4-9522-a62ad3b29d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b0e8fe5-dedb-4610-ab2a-80c227c878fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46797938-4546-4f37-a31a-a4df01f2fd48",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1874f62c-0946-4240-9e58-968b9d8cf462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c8b1a4-e646-4ef0-9c07-5d429682fa7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1509eb-2e99-412b-b42f-be8690e6d140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c8d0d6c5-3463-41a9-9d8d-26858782bbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e3dd88-6b83-4dd1-9e6a-137d44483ba1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a633d9-8537-4e53-bbaf-c37946a748ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c938b416-dbc4-4560-929f-b682aee3a96b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d6bc12-ff4a-488f-a2df-88b9735b17d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "072c13c6-acf1-413e-9699-52a50f730056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c4c32ca-296d-48f3-8ac6-bd0e5f799c15",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5de2b69-38d9-4160-90af-e6bb093bc255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a028326-524a-4084-826d-c7f077abd03f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970b2f5d-0558-4b0f-aeed-1360bea6a17f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae07545a-9a2e-4919-8c45-32e898d619f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a18015-aaf6-4ea3-854f-12e9cc1de416",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d2033c-ba06-4dd6-bd1c-448a6bbab6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48352d24-3ddf-4d57-9499-6c5bb4ca0773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d633bf7a-1f1b-4369-8d61-4a1c28ff53b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d3c3fe8-eaad-4d32-bf9a-faabc57dfcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a96fc0e-55cb-4864-9bf5-19b81816b248",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84763ed3-8bbc-42ff-a05a-53ce733a5f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57429985-b2be-4842-9ec6-87673cb54199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94936537-4a2b-4f91-99ed-9f97922eac58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29ba6f3f-2850-4adc-945f-bb1215ffcaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a930009e-d13b-4dec-b686-d45b66a0ccc2",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2484ea3e-2895-4305-b16d-8bcf9c35b218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99189310-c510-4312-9ad2-07efdf75a135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d093813-0122-4a0f-b3dd-65df6ba9d836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3279f16c-8d45-4d40-9950-86ab59e6de70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "defc6644-6c4b-46bb-9296-01b8697f19b6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd59ae5-1b9d-4c0f-bde0-fc2c655f6be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e448cd-341d-4bd2-bc74-6a4461c1619d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bb55da-f700-4f3a-ac87-e2d6648b5d86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f53b7a8-9928-4a9a-baed-046518718108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34cfa22-86af-4925-970e-2854ff8b3cc5",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c20dd7-376e-47db-9d81-17032510f3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b846811-19ab-4a3d-ae0c-9a8753cc3b4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d3e70d-e1f6-4d28-a0a5-7e8227819297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0e98142-2884-4056-8096-cc5acca1fb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa214b3-0d14-4f9e-a297-826b5722c1b0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "922d542d-13ff-42d5-b337-eafa7221da56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bfeb3c5-d78f-430a-8518-855b337637f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a854d6ae-67b1-442b-bc6f-52b3ced30794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "16dc27ca-4c6e-414a-a8db-c3f55dc4bf91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f0fdc3-a745-4284-b7b7-9290c1f8b4d6",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc16b789-31a5-45ce-93a3-b71fc1724e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb6f35b-965b-464d-aee8-7c07eaf460ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8a7e61-8826-4a2d-a9a0-617a22d1fcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "69c08643-77a6-4aa2-a6af-6ca7bf9a87c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8039962c-3727-46ca-a8e4-7396abd1a436",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa677296-d917-4362-a22b-19a137788d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4356ab0-6337-4a2c-b546-ebabe836583a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a958693-2f73-48ae-9bd3-5a9ebe305dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf14764-dca1-44e2-b30c-e256c4e44782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a9f6e8-bc27-4124-bb4e-0501465e052f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b62a4f-e5f3-4171-8717-24d60889033d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df354eb7-81a4-4c94-852c-5a1fdab622d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5909515f-5376-4a14-ade2-edcb739efb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76027549-3e68-474d-9505-d04421cc0611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8051261-90e2-4c3e-b290-9dc2407318b6",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d0e53f-97a1-4d35-b307-db8225e6d226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22fae0e7-22cf-4ee0-a57e-fb9fc9fb0339"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1acd8fa-e96b-4c93-bd30-50ab185a8c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "00ffdea4-66d6-4dc4-ab65-d29f652a97b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b609fb-edc0-4561-b464-3573138f2c01",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86cc805e-e2f4-4dc1-936a-0137f5f1eaaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99823738-28b7-4faa-b428-6207f573fb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8c61f5-b5fb-4931-887c-9440e7fb48ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69fd9cc2-a903-43fc-ab92-cb6d20385f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104cec24-8a75-41fc-a112-60c5a3a3a994",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be506e78-d758-4640-ae99-ff3a98cec6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20061b9a-35f2-4e06-a113-558da0c54e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3a8bd6-27c0-400b-9a47-150f450def6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "60fad776-5e0b-48cb-afb0-2d6fd16cd207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18384e35-5579-4638-9a60-47c19825744d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc8cf73-80b1-4a3a-b961-ea9d22144da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fafbc2dc-bf32-47a6-b2b3-9ef68299b284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4bdb63c-2922-4b8a-88dc-552e761bebb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6a04f6c-6199-49a2-bf46-7f77f7a2b855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da56da8d-db6e-4ec6-9aaa-7cb32b782f4a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac795aa5-8d55-48f5-841f-a6277e6a8c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b9b04f-0090-4372-ac6f-7cb0408df23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63c80849-2009-4a54-9ae4-75959729b27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9053580-d903-494e-8c06-585035956e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64271063-1231-4338-8d9c-a981c64a4a83",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2354322-c30e-40a1-837e-197a4afb55f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5031cbb-b387-440d-9ed9-63f7c65acfeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6844d93-0980-4d1f-a719-ea2582a81d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c03d4914-8095-4e3a-ad63-dbf94e097bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f7e63b-0d59-4e1a-9b25-a1cba35e4403",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6ab4a0-861b-479b-88f8-4ab296677b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0c9e205-2d51-47ec-93b4-c5e6018d4932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a977e41a-4096-4abb-83da-ae7b9563e4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1788a90b-8eae-4704-87e7-757fce4af21f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079752ca-01fc-4436-8e2b-d3b6e2ab528f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04edb19-c8b5-474f-a025-ead9805a9298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35fa5da-64e4-4f8d-8b8d-26c378940118"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330d1b1c-7384-455a-a0a9-80010457671c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a3df08-497a-4327-8c10-4130d925954d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458707ca-95af-4f55-8234-9c357dc987d6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f225b6f-5350-4308-b2ab-2868b323bcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e9d969-8cfd-4753-856a-73eddeff650e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7161ec19-89a8-41b7-a4ea-4f02c1a57dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e4e926-93ae-41d4-9616-88ff1ad5d7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "221ae286-6db5-423f-9f8e-02a6b5f33091",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdff9a7-99cf-4bd2-8f4f-d7919be277f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3caf990-bd14-4d7a-abbc-c61bac44be86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c99b16-fe6c-4417-9eb2-7f4b4700b19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdd087a-a239-44d0-a391-4e892f363d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e626b3-39da-4979-b91a-a316bbfb576e",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52825abe-a1a3-4cec-8ae6-942d57cff3a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b3bdc5-0533-43c4-9bc4-1dab1f9d60ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1936065-31ae-4775-9ccd-0d3ac874c3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4b9e3f-8ea7-41cb-92aa-80f70de0307e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4339092-db7e-4f4e-9773-a8b468f4b79f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179be42d-357d-400a-8933-3e00ba6c3355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a15c657-215f-4fea-a2ba-8edd0cb841f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb89e8e1-4f4a-4e98-a510-8a256ae52e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7de815-6eaf-459e-bc7d-9d8c6c87f7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dc268d-4648-41b8-879b-3f70ad088bdb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eebc28ec-e2a3-4a2a-88bf-37751c9ebbe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4313fb7a-2f4b-4b48-9174-b4fededaa479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a747ea90-dae8-4836-9a0f-89673c8857cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cd21dca-f979-47e0-82ab-9132d8b990cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee90f908-501b-479d-a5d5-dbb38c2a6a57",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414d6f26-16bb-48c3-a03d-1a8bb9037e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aead8ce6-552c-49e0-993d-6f97c2e0e188"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64341ab1-774c-491e-a47c-f8d31197aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4ca9b2-632c-4e83-abf6-69053bd27bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e365e99-3eb4-4915-987e-dfa112c04d0d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d171a154-1171-4707-a512-6d63cfd58bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "229e4ec3-b757-4c23-a3f7-a7354d62e594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87017ad-2a1c-4534-a111-22d5d0fad4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "496de4c8-6db4-4ab2-88f0-d9a7df5a6f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e135467-74ef-4427-8e35-9ad0ad23a543",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b77b4f-c9cb-495a-9efa-877ba7414c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80e7841-fec3-4a4d-9a9c-c9a10c460906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5126e6-6d8f-4c15-b178-73d3c2f9f2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a370af1-f5b3-4492-9d0b-54e0e699b3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ed994a-7641-469e-b7f8-c1bf0ed206e0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88467e8-1509-4d13-b226-73b8fca3d010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfaec5dd-db66-4018-a1fe-7af0748cf591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239127b2-c21f-447f-a0bf-16823766082e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca7baf2-602c-410e-9e6c-6fee1ab1678a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0093509-c7d9-4bc4-965d-39c8da0a928c",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "684e5543-f356-43f9-b850-fcbc5a8d9da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee06a60-5782-4e42-ba8d-d138025003b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ca3fcc-862a-4e3a-b87f-21743ce7322b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b7cec82-c193-4001-9cff-23ff2f042e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b3fff2-faef-463a-8f10-2e96789215a4",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa88ccea-248c-4d18-a512-7af8027296e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b662b072-0f63-49b1-9368-e8a25d5ac7fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d89f77-0ff1-4b36-95ab-9e40e451a78f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8017bc2d-3054-41a0-88b0-4356b7459bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0fb178d-1162-473d-b762-b7811ffa4487",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aea1bb8-8acc-4953-bc90-edfde9ba20ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "470c207f-2e73-479b-8808-91b671049be8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e664c8-6a30-48b4-a87e-b31c3763f85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d62d8d73-867b-40cd-9a84-4e7206933c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fc147a-aace-4312-b65d-9e3a576d97ae",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abb6178-942e-42f2-b0e2-04a9781a881e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09210f6-cd1f-4c1e-99ca-8d82d3be743e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef595367-97a2-4f92-9b0f-df4efc34ee66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fe0f94b1-bd95-434e-8dcb-329e060290dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4a1825-75d7-458e-a555-b45f10dd9f1a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc59256-cbb6-4b0f-979c-05307a32d4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25c25ef-25de-4511-be9d-69427c51acec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934c2ec8-6cf5-4c0a-a686-010b9afed97b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa582332-d19e-42e5-a3b7-b8a2570a4a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26eae88-0c3a-4278-9b86-e503bc115c1e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c08e66-30cf-4e54-8a8d-6e3390ce428e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fc7230-db29-4713-b971-4c6c7b6132a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e270be-2c2f-4008-98b9-138bfd555027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7fdcf8-02d3-463e-a717-be189e1ab4fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b2e300-6865-4ddf-8789-7a881dee1311",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e218396-1ce7-4dcd-a85f-dc558db9b777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be571ce0-0c76-4be8-8570-4e75d493f1a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1b132d-18eb-41f6-8524-70bca27821d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f547a9a4-d273-41ca-8d1a-88a3566d5460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83918330-ee79-4f69-9baf-d205b5bd5add",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d89038c-6e0a-476a-b2af-896831d9af38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeba2e9c-3d11-4937-b28e-7543cd8266c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870a7721-8d41-498d-bbdb-73b01d0d025b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6bb885c2-ba81-4799-a8e3-d022b66a4a27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfa4030-fa6b-438c-9cc8-2afaa4818471",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2bef67-b350-426f-aa88-8c1dea0536d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72cf31c7-1e2e-447e-a144-8a2fef8993de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca442a2e-8f23-4955-84ef-016486e276cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e34d2cf8-1ad6-40d1-94bb-a44ee81942a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f72b5d-778a-447f-8d71-69232dd9ccea",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebf4859-2124-4245-a784-26bd43d37d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae6128b3-46b2-4605-b4cf-cfd3f567d566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54804c50-d48a-46f7-a6f5-28f71858a02e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "098d0301-bd36-408b-9d8e-c7b8be9c843d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353dd7f2-d464-4a3b-b7f1-64e75a254669",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "284affee-f5f8-4656-8eec-eadf8d87a064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcec2389-f01e-4ae3-bf7b-91ccfa43eb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984efbf1-0012-4c41-9a0e-a539d8b06561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e2c0ba-d973-4166-8075-99f6d4b1b451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5cf7624-1682-4655-a618-4c4f7f1f9cf8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d840124-8db8-46a6-8840-cfcf20dc1906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d9d55a8-e0a1-4692-820c-4e0b5eac4ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab59a65-80c2-4f10-aed6-adf2f713cf8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0cdf2c2e-60c4-4652-80c3-53c675cfe656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b24110e-b379-4698-bc60-f5ff1ac5012e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e998d02-e519-4c80-9237-293ca1a20667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "332a9fb2-d7b5-4b8d-a471-be38e7ff7a33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d82349-1d78-4239-bbc7-0c7d231d461a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "200be708-9cdb-4d6a-a5f8-e7e24e7aec06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af123bb8-83d0-45a4-a5d8-87ff4e30f211",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8fed33-e2d6-4f66-9d73-043d8a18cf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9aa4d1-0faf-4855-b2b8-b92e7b39cdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f303b4f1-0c6a-4e76-8bfa-37f3d4e4f712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f952f24-a88c-4234-9145-332f4019389e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4cd9f15-caaa-4338-a0c8-1547acab943f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eda9668-e79e-4d98-a453-76d71f5be779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f388ce4-5756-480e-a4b3-8b4ae7031d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e037af73-37c0-4a27-8e3a-fe1628d665cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81209484-4f22-4014-b218-c5f48038544d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef8c660-8953-42ad-8e0d-58b282f0f595",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed209163-3ea9-40ef-8524-503249e2b32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f84e6e-b4df-4192-ba91-704b4f3452d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a31c33b-acf4-4d0b-b51d-cdfd791843ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1094090b-5172-43a2-8ee8-f4547e160ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b30d7fa-891b-4b62-941c-f52f606eaf4e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa085cd2-1b14-43e4-831a-ba673f6710e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6aecbd-f14e-463b-8da9-5585cc455fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e90953-8646-4f5f-9bb8-dbe059eccc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "066e317f-d8eb-4ea0-8ef6-ddfb249e2de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4666fbca-e00a-4265-af51-bf1878d034be",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594d81d1-d741-43e3-8cf0-18a80573dc7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d974930c-06d8-46c1-a659-97e60c8cdcf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29573ae7-35a1-4134-9995-7f0356ce1ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "135c4cdd-0052-46c6-8835-5bf01b9676de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d6ce80-2e69-4b18-a7c6-c21b20875db5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4b1f25-73c5-43cf-8415-18a7b54f8619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "163eb184-8725-48f4-ab4a-57f6b9675b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a95858d-992b-47a1-948c-c0277104fc0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "374c0829-07c9-432b-876c-ff07917d9ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2eb1193-0bd1-4c5e-9099-3bbe3a1066cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dca4b24-1da4-4a63-8ff2-40576d0c058c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987b82a2-7c67-4f11-bba9-9779bd2c2062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08135037-376c-46b2-82e2-337dcaa0973c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b04a3c-9f46-4141-ba28-ee2d29a486b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefd3257-fd68-46f7-9a69-81248816959c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7a70b1-0c44-41b1-99a4-c49985a0202d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6dd599e-946f-44f3-bf6b-e4ef5a5170a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e24ad2-d704-41c2-8b9c-1ad65f72eb41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "949a1f00-0e82-4377-812a-f9c01cc21bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8382a34c-4d20-4df3-bb96-e6103963b100",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b088b7-2434-4961-b70e-f9ce40089791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304568b3-6bf3-49ef-96ab-9d967c5ff64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e746cd1-d064-4ce3-ac18-129b8e326518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1db84e-bef8-49f2-847b-ba5cdeeb7a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb357b8-d707-47eb-8567-fd6d28ec7d98",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1afaf0-6a99-4f93-a1fc-69e31d9c4d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5920b30e-9c81-4161-81f3-d36f96036e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f14a8c6-8b05-4981-a695-9664f923ebe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf8da282-cbed-4e65-b01d-63eb865483c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d175653-8a78-41ec-8e94-037dee06fd1f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb446e7f-8cbd-452f-9d64-bd1e3d74c7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba541618-9973-41f5-b61f-a76dd85d3981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b64e82-0d4b-4404-93be-2801720318a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7d4ade-fd55-4bc3-8a59-7b3020b25672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030f3e7e-b063-4b4c-8b54-5ad738aa7b3a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962a307f-a6b5-4f9e-b074-413a8b23293e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56a228f9-d12a-4793-97d8-b2b63c0bbd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c64099a1-8b3e-44f6-b271-551edfa47e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "629fa955-789f-43fc-8c1c-8ee9aa2ba4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4997ac9-f6df-41ac-84cc-d6a856753e51",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a63b0d1-52bd-48e7-b931-5bb5a1ce38aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f0a263-76a5-4dcb-af4d-f6931d5f995b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a532e7ed-3f90-4004-a877-7c0b231b1441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8d9e4e-89ed-4b1b-a007-03798c442ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b72dc0-2a5a-4f40-96ad-97af5e61c52d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f170ef7b-79ea-421e-8339-fb4d440a69ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5742c5fe-c152-4af1-bd6c-61ebbed653df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f73098-7c65-4801-a4dd-cc10c9848285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f0baedf-4d67-4c51-aac9-e28240ffbe8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2eb907-f9bb-44d1-b643-46e42d911a14",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cebf5c1-abac-497a-ab52-455242986eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd1d1ec-a041-4097-82b5-297c165a2f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934f3475-8294-498d-bdb8-ae4a53f1890c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d138a2-1e32-4a9a-9793-8a40abe62668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f4161d-37af-4fd4-b4d2-56b5a7ca5c76",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31e870b7-5f13-44b1-88a0-0810306d4269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea0abdd-03fc-4799-aa89-10e23050cf20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5210bb50-a0dd-4835-a8c8-75a41c1f974f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65fef1e4-3aad-4a72-aff6-4695d2ec427a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6aede8-cbc1-4ad2-ad5e-f5c8dd2a35db",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375a5028-858a-4840-adeb-36fdb7944a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30626a43-ae7c-40c2-b8b1-4986d902cc09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6282077-02a4-456b-81b4-6edd42f86f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8cb1454-174c-4e4e-bb25-5118d70cf1f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a5cbba-05be-4d45-b9e5-1f650361a9e4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd9f03e8-f7c5-4223-b677-4511f4ee8b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "854c197e-7a4e-4b6a-9b4c-4b95d2215d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b261ecf-1445-4fdf-a0d6-efc6d1fedbb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7e0be76-f82f-452d-8fbd-1ca54ad66bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65f863c-58b5-4769-9fbb-a03c27737475",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae5c6563-c861-4580-8564-0f442015b341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491624e2-c3c3-4cb7-b641-447977e693c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dac80a1-8c19-4152-ab27-4b7dcec25ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "deed92bf-6913-4ee6-a4b5-0817f84ef7db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0ff602-13dd-4cea-b540-2d708990727d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d474470e-ff73-401c-b52f-06647184c2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ef737ef-b751-4514-8357-982fcb357476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22b7273f-c6cf-4c18-af7c-7d10792e8755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e40257f-fe76-4e4d-8c77-7990c7381f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed336c4a-c579-44df-b700-ab3004c6144d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dfc3b80-83a8-4a93-a3f7-ffc3276e04b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "903d88ac-e449-438c-be99-17184cc3da9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa7dd40-ec69-47cb-a095-470e2e981602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae802cd2-7ecf-448d-87af-7c6abe8f03cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4297db4d-5095-4644-a7d5-3da62680c5e2",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85671f3b-4f1f-4a13-8b7e-87c4d9b4c135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32fb614-909c-48c5-95ba-db6b49c6bbc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe4c112-130e-41ad-97d9-686c48c6200b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "34e09713-4e7c-43de-80a7-50589b7c4c29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24cc6e4-68f3-447b-9208-fe4b094ff36a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4214d31b-f02d-4f9c-99af-d1f2dd0eefdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02254cf-a904-42a5-8145-c574b12e21f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f548d071-5429-40ff-8036-dd301a2612f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d90311f3-4020-49f4-8538-3d72b27db024"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc3e9df-517b-4194-88c2-2cbbd2a3ecf9",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ac4f0d-f1ed-4b63-af1e-96c833580108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b51d9d57-c516-4853-b239-218082039064"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f803f5fb-b028-4c41-a0f7-53b84947d89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ee85fe9-0213-47f1-832e-11c86c4a0ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0731489-1f86-42a5-aa75-932c94989fb9",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a31bc10-c93a-4fb0-8d39-886be518db3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fef24b6-2371-421b-8f02-35ab8e140577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba6ae22-3c0f-4630-9fdf-d6fccb61aa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d1cf6d-9c31-4145-bdf0-39699be678b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a47df2-5950-41e4-822a-872fcb3ce948",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3caccdb0-a911-40ac-8d76-b0fc04b7621a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e176ee00-cc6c-44a3-a9af-261c9159e9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e9cf66-124e-453a-b325-7e9895c6766a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f985407-bf7b-4783-a0b3-d75c1c82931b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef01c1b2-1e67-4e72-897b-804eca462d22",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bda2701-5b21-4bed-9880-d35da89bdd1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f05c4d8-ccee-4f21-89ba-8058d5656f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d5edb3-024a-49e1-a8d9-2fcbaf49e98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "243dfbf2-69c4-411b-b0a6-545e5aa08a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbb58c2c-9dbf-41d7-9b82-84ab6b0273a4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b8801b2-d880-418c-ac38-2d6ea749b22e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dce11eb-66a3-47f8-ade8-bdd89b973400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d372e6-73de-4f33-a70f-ea5315776ed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41e33320-bcfb-4900-a0a3-42b12a146970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6363649e-00a8-4791-b947-f6dd3cd9d143",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9d88b3-a960-463a-b4c9-2f1f83777cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62cd929f-eba0-4fca-bfb3-6dfbd0227e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6ba412-7805-4f6c-9d6e-0fab48532063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67de8aa7-f6ac-4634-9a91-a7fbe4cf2a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735a51d2-0e6c-4743-9888-67970bd860f9",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e2a5f1-c61a-4f38-8aa8-189819b74d88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "762d4bad-d467-4a3a-8e8f-5e79c434b528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0f6bfc-bb3d-4709-91ad-a4682ff3c4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4646557b-8e1d-4814-866d-512ca1272f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83d8c4f-9e91-4770-9a6a-1c8de7cc0d7f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146e9a23-4e1f-42ef-811c-13a28c79c4fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f047b3b-8761-4c62-b84f-ea340a70ef68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d45ac42-a663-41cc-a3fc-f164743021a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ce8a684-0a42-48ef-93b9-38e898f9cf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f76d3db-d04a-44fe-a4fe-c283539a05d9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f9fed1-3391-48db-8d44-d0f878df0935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e526bb86-9262-456d-b9ab-e755994a733d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789045e0-d3f1-4192-8ef0-aef93214fdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "430a17de-1801-4212-8adc-c3dee9a0c9d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefb2587-28f9-4f5a-aa80-2742424d7454",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9bdd2d9-3b0e-42d9-b2a0-23e0175c9ab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec76f40-3fa6-4eba-be5a-9b2089ab7949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b914725-2dc0-40fe-9464-c906d6c93fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a4439ea-4637-4306-afdd-d29100088ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33fe8c8-98b6-4c46-8138-d9756bd50552",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e02b14-9b53-4157-9f0b-57d7b5c29039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fea22c4-b9dc-42c9-b60f-2a7eabd87552"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e4ff98-9f3d-4f9d-a591-541cf793019e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89448b49-91ef-43a1-9174-a6c524d08b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a779e7ee-61f6-41d5-a4b1-9d33b03ef98a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a72ec3-f19b-4078-b0f1-c5ccee8fdaef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94aba35b-fc1a-406a-a1a0-b71cbb6f0da0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ec4723-6739-4749-8f03-74f1508ea9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b64860b3-4700-4bdd-a7a9-b08009d0c43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a010b2-2654-4a57-987a-4980cba5cb3e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae2f046-5216-45eb-a88c-92e13ddedbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c0a49e-e570-49cd-85f8-53e142ca955c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9768492c-90c8-4a6f-9525-28857072a736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb9fc188-5345-4375-9c76-d261628a7851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005d37fd-4fb0-4dc8-9a2f-a4dbceec72e5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2e5b57-ea19-4006-84fd-62013bedcc28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835efc2f-ce32-4e79-8c87-e4e3d3bc3997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f9538d-8ae2-4d31-bf4f-0b9206df24db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6434ce31-f4ba-4c42-bb80-810405f71055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457935b6-bed0-45c8-bc23-05137d8d7007",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25eeca2-1201-4e9e-a6d8-c3a1b4ca49af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89546981-be17-470f-b2ff-6b672909a369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4df2c8-a8d0-43f6-8d45-3e8931d572be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e035da7d-1909-4d08-b9d7-3f0b22052c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8858047-da9d-4b8f-bd55-821a75b9d772",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea34e69-fcb0-42f8-a3c7-1b62809da6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f250f5f1-b9e1-485b-9024-9b7c70246ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50111471-6b58-44fc-aba4-ad170dc58557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb9510f-767d-48cf-b006-5df100e1db95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba27328e-8ae0-4345-96b2-8cb9bd4dedf6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14e935ec-414b-47f9-975a-03312441ba92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfaf5adb-fc11-4d06-9e5f-20a5d275bbe1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438f558c-85fc-4fe2-b96d-970642633958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "48a8458e-3868-4052-8149-de52841d04be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3919b756-1e1a-4227-bdcd-f9c814f7962e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba30b47c-5855-44c5-90e1-c2d45b133859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "639ab05b-60da-438a-8ae7-9cbf2f57f9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "372ca4f9-dac3-4a3a-833f-27c77b07137c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d64d39-762d-4e57-8ac5-ea8ed6259ce6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "86eaf707-6990-43bb-b058-7559b0f35610",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f23e4904-abde-4eb6-aa1a-3f71bf4c4785",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acf7fa7-7223-403b-8bed-c921869f102d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6d3e677-367e-4224-b5e2-cc116887f655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba5239d-ee21-407a-a636-2f3e4eb177f5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd3869fe-e689-4248-9983-d15d70fdfb86"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5ba27b16-79d0-42dd-9d41-661318586687",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0136778a-9d93-472c-8bbb-3ed5056a479f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b52fb44b-c117-4042-8d13-be9088d3b875",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d7728013-cbd4-4bcc-bf50-c00c824296f1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6c5f323d-c4aa-43f7-a866-f769ca7a8d77",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9da77b7-aed2-42ef-963b-eca0c34257a5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e09195ed-32d6-46de-bd1c-c7466b7e9f4c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c1b13654-390e-4f43-8d72-16cbd490d38f"
                }
              }
            ]
          },
          {
            "id": "89c847dc-0a9a-480c-a9f9-972aa306aca5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "68a464d9-a95e-4388-82c3-387c34d8f984",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "883152e6-3a4d-46af-ad0e-92475241fe73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d072e30c-51f9-482b-8a2c-2475b27bad6c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "57b6712d-e2e5-4148-8fa8-03b960d30465",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0f1e3f66-952e-44d3-9c3e-3034655c5fd1"
                    }
                  }
                ]
              },
              {
                "id": "45146f93-c894-4b82-9c62-b7f70f950719",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "436420f4-4329-4c49-b6a1-cb105c88fa16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6b6c0360-1bf5-40ea-8e3e-f4734064afc9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01d5f97c-5e76-4991-a347-d861d8e4d2d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dc4751f3-1339-4057-9f43-ff151a138e4a"
                    }
                  }
                ]
              },
              {
                "id": "091921e6-342a-496c-97d2-05d74a48e8a0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "aba0d07d-9262-4317-9865-3b30384075d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7655b295-bf3b-4dd5-8c95-7998d4d90d9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53542441-f48b-4fd6-a257-763abe5866a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f94c190-b98c-4a8a-bf31-78aa819ec59a"
                    }
                  }
                ]
              },
              {
                "id": "2e3acdda-a905-4dd4-b714-d0393dea6189",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4fac1fb-1662-4c48-99be-684f8d570932",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbe1133e-1fc9-42a0-8c5a-a082c39d4678"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5c0ea91-82f6-414d-8121-1c32539fefae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "608bd654-f234-4229-8f35-19a5d7f5f1cb"
                    }
                  }
                ]
              },
              {
                "id": "1cdf2cf2-7ff0-49e9-bbdf-2cdfb297ae34",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be1addbe-5cc0-4222-a90d-694441924cc9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93e12a2c-a958-4fe5-83c8-b4ac1df92733"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89b50f6a-41d9-4c3d-b79f-14cdbe6492f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c41138a7-93b1-4a18-baca-f50de781f10c"
                    }
                  }
                ]
              },
              {
                "id": "3b0b7219-c8e4-43aa-9a4e-2331ac74529b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88990191-7fa3-44c9-935a-e7c5c8635467",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87cf3fc8-57ec-4b13-9823-6dfa9fc66710"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "68a2e70b-b33d-43bc-ac96-b54f7eeaa2e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93a5ae88-7864-4405-87bd-3d158ab56ddf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d6edc155-9116-420b-9b76-b5246d2754a3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4ac736b8-2b7c-44d2-9cab-a487761779d6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "210ef1ad-30ed-4871-be7a-6f8faf3647da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a7ac9a9-3ac4-4d02-8d61-447c96094908"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "17c379fb-fce9-48e1-92e5-f5650dada1d8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c6f9412f-7e7f-404d-9af5-75b6ada39788"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1962f2c1-e51e-49f3-a72b-8eb544fd1aec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31ccdadf-bbfc-4f37-9061-060ce5896766"
            }
          }
        ]
      },
      {
        "id": "05946715-d923-4517-8ba5-3929c6bf2f84",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "410df062-fde3-4d56-be46-b6c00fe440f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "399df099-a926-4752-a37b-2ea628982137",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ce464ea9-48f5-451f-b46c-50a703cbdcfe",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5faad6e-063e-46e4-84af-6b0cc44f761b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "040f31be-d074-485f-9d8a-4383d289ca31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8478bbfb-5c7e-41b1-a356-270c702e8dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a2e33f-e2c7-4fb0-8c66-10ffe3d769be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4ff69c-17ef-4f95-b948-d139a69f6381",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da60339-eedf-47bb-b629-4cb5b2c207cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fc158a-88e7-4e69-a729-0cad45be464b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5239bd68-21e8-4c78-b4af-138db385a58f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e3b83af-a7c5-4650-903e-4878bb8bb8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c210e8b-9792-4dc5-91ca-2bd76e8eae01",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b06472-043c-44f3-8f44-8c4387d14618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2de52e7-f237-4016-90ca-0a9a012d041d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba68f06b-5369-4131-8b21-53144dd1c362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e542ed26-4ad2-4391-ac94-7d3b3e4d41ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92000ce-16e0-4e6c-8195-cd1b9ead52ce",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d24aaa-5d90-4019-b5ba-d11eaac9de4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a92186-377a-40c7-8763-e3083ac2ffb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c31061a-7ec8-4b36-b3a4-d50539d27f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6c2e89-7b92-404b-a83d-833bf812c11a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bf7b8a-7df3-49d2-8c83-e7d0e435ac7e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09dd313-9128-4f2d-81f7-0e9ce79f8b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c8526c-eb8b-40ef-bf69-2e8b82542439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bc456a-8014-49bf-bae9-95a7b2ed08c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb6d66b-9bc7-40f4-9ca7-db6d6d27ce2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a774f0-f0a3-4739-814f-207fdcc154a1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d845f5d-3f21-4b2c-bbdf-ac973f785d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af356fea-40a6-4b66-9b0a-8de416ab087a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49d196f-3c92-437a-8bc7-96382bff8ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54ea4ad9-2c9d-4087-b5ad-91b292708c10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded013b8-bd9b-4867-8395-c2371d6c6710",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c6fcd0-23e0-4c5d-8083-0051119e0ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd20319a-b00b-4b10-8068-af24d61c9599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f867f8f-85c5-4996-bc30-0f1dbbad0fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "48dada19-2930-4049-9758-070fb5592b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b7f6520-f70a-497b-a882-3ea83c6960fa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff1ada23-1abc-427a-80bc-9b1b2c1b5b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82026c8e-a99a-44c5-9c61-eabd9ac15617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded1fa81-0f02-4447-bb17-331443d4ce28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "580b4b7b-f659-498d-b921-57120ee26197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c430b5bf-0d6b-44a4-af9a-cf2f4b80dbc7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc96b294-5ca3-4255-9d48-84f6aa76c4db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d90cc9be-3212-4c2c-828e-7b685237e561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35464b2b-61d7-4a13-8d3e-dc6a493f4d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba48beeb-49f1-4bff-ae2e-da05417ba427"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c22adef7-475f-4d62-9a81-68728a66618e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb0fa44-4ab9-40e7-a343-eeed80a67af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a751816b-3bf5-499c-92e2-87e6c770fc50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec27b601-f52c-435d-b2fc-a02a2c0b057d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3df16f77-0e41-4403-a6d4-7bf54bd7dea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f23a262-29f0-48d0-9e6c-2dcf50facb41",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5eda78-6ae2-4950-bf97-70626b9e6387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "469f088d-64ae-45b5-bc9c-70585a053ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb4c793-0b38-470f-bc12-fdfa32a142fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1a526198-d98c-4f48-bedc-ac25821c5408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6370d0-09bc-418e-8910-17d63c50cf98",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f6b353-4f7a-4773-ac01-d9936206a4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab4a1db-f6a7-4441-9fae-68b48519d8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c564dafa-316f-4364-88f2-e93d73c94160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00b89820-027b-424d-9e07-cf3902bf3706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f5e85b-dd0a-4db1-9ef6-ca6d512a4eb9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83511125-8345-490e-b989-7ff31cbdbe61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02039fb0-adea-467a-9215-53f4f3fb5e1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ec1409-c1d1-44c1-842f-f25fb710797d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7675670-140d-46d0-82c7-69646f00112c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd65cfd-e2a6-473d-8250-8b3995576a4f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb111ac-0ac2-4d82-9c02-6332c0969ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14f249ba-49fd-425e-85db-3ec01a55728c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192d77ae-c4f5-42b2-b3ac-168ba687d29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c14ed3ea-38c4-4a50-baee-e5238f26bf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "591b48b3-ec3a-445c-a1c4-17fe6c128e5d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487bc4b3-a30b-4dd2-b102-9f2dafcbb3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a475be69-41e7-4b16-8af0-3913ba683a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ae573f-fd99-404e-b8d4-02c7a3df6a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "50cc716c-981b-4daf-a504-ccfc58e849ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36f4a5d-0463-4baa-acec-115835714c9c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e255ead8-7a81-4352-afc2-68dc9ee0e92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1344bc2b-186c-419a-bc18-d5acbc29a8d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c26097-4744-419a-aca0-6fe67e987384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "de072ded-93b4-48e7-a87a-f0710de17d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cbd7da-17ff-4361-bd7c-5538191ffe28",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1510277c-6b5e-4152-9edb-e918bc99210a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28379bee-6603-448c-9e1c-307983dfdc3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9faaa2a-7029-46e2-83e7-e0fc4392b51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "de9f89ab-5a74-4e1c-ad24-4ad650743571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b63b9f-0b4a-448e-9f59-991c06df75b3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67386190-3bad-422e-93b6-ee442599fe96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693bc053-ddf7-46eb-b4e8-3c565c2bb29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77fa6f24-279e-4a31-9c60-b7f068baab54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d669d7-5fbf-4b7a-9c0d-50d2715e8f81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf17b8d-3953-45ec-b7b4-bc411b3a4d77",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db25ff7e-7b35-40fd-9c5b-5a61418c441d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc6e03a-6ca8-47e9-bbf4-7e5e0592811e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9012bbae-ad61-4f65-b143-2afb0ec24cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e06458fe-39b8-4c5f-92cf-827f6ac92a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efacd97-0bf3-49d6-8852-549556869d6b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a48a3d-73a7-4468-aa48-1b7bba64eeae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "922ca452-2b68-423e-9846-8d7274f56c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe2ffa4e-d287-43f8-b7f6-2fc4dc8d0213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "526ddc4d-f52f-4f10-819a-2ef651a155cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3965470a-26ad-4e53-8356-043c89fb2d20",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c598152d-654c-4350-a59a-a80f11511dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af220a8-9f0b-4662-a92b-a18b6313cdef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4a6e4c-e38c-4e10-bda7-39368c77ccf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca3a92b-5f1d-4d5c-91df-ad4c3b2d8dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6efd4f1-68ac-4e27-b6e4-b02ec14e9759",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f05e7e-9bc8-445f-b506-51b095ed65cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8396c834-bd38-47dc-8a22-f6dfee2d5785"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa08319-aa76-4c2d-8064-125e6981bc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40d7b0f2-d06b-463b-bc66-66f8bca88b21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fefafc8-771f-407c-8464-66f6cf38cb0b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b58481f-d9d7-4512-8148-0932ca50ddf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57fc8f7-132b-4e92-9a22-730ea40ef772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6df7e2-82e6-46ca-a824-8c30939dadc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4f8e03-cee8-4245-8492-cca992cd2521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2addb75-96ff-48aa-8af1-83ec4b3559c0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d69167c-caa3-448b-9819-4e20c0405cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44b9f262-55ca-413f-bdc9-5a872855c660"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c9a79eb-0441-4316-9309-4b0787a40b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3caf6aee-77ee-48cc-92b8-67e1ef62ea5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72154590-52d3-4ebc-9a41-ed2c84fa2e69",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdefc90-e807-4151-aee8-e82dd40bda88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d71a67-2389-4821-b751-61ac7256ff37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f64b25-bf0c-48c6-ae15-fb73a5e85729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d138f7e-67cd-4922-b2b2-c2a5f4d7c9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318a5258-89fc-402a-9b20-abb5e0984f0a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41bdf6a1-ae00-4983-a118-cfb9a8720068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1add28-49db-4f24-b7b1-114e6a041419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940d2211-d4d2-402c-81d5-b329bd6c9b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1027748-c888-43bf-965c-310f0f76ed38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddb85670-78c9-4a85-a187-67b8d1287d49",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37263444-fa74-4b2d-a17b-012bce154d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4afeca9-b2d4-4d2e-bb80-87a345be5746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689ebde1-a9f9-48ed-a841-5a6996d35370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fc7a8c7-d20b-4f69-8977-5c7ff5a6bdae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06abab70-4fac-4703-aa15-571dffbefbc8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94cc9c7-bce1-41f4-b158-a5aa24608729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c85dbf2-6b3f-4282-829b-f80a26321e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12bc8de-fd17-40e3-aaab-704bf2159dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56397b2b-c661-4ab4-961b-8e9649c0242f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba54063f-d1de-4141-b645-dfe2d8ba73f5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970fd6aa-9f69-426e-8ab8-d96af16d6a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9287e04-c41b-4a74-b8d0-c6024432bf83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb954627-515c-4777-8358-c37f42b01478",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3adc9b58-1fbd-4671-9223-d06aacaf66ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8c55ee-dd90-4312-96b5-5fff217eef26",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b06bd5de-71e1-4415-a93d-ef053abe50ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9571d080-e9ea-4860-bd7f-71231629eebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439d34ac-856f-4250-8d5f-e78e0589bfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96c1f518-26b8-4ed3-a57b-5314fec980bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992adb70-bc7e-440a-a218-8979874132ab",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a49f9dc-7463-46a7-88b4-4c93115d7b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47e7075-6e39-4642-b5e0-e6c6f8335a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7673fd0c-cc21-44a7-8fce-4c7ef7125102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da87db86-3ff3-49df-8592-6dddc161437e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3da5003-454f-4171-a8a7-e1fa5f8e0c1e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48054d24-eed1-41fa-9f4b-60be24a80b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92762586-4d17-466f-83e6-4328bf572113"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f1ac68-1fde-4cd7-8efc-2d7f73b101cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d259475e-2508-4de6-a651-d290fecfe378"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9a5cd6a2-e257-455f-af21-59a07572edae",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db9009af-5187-4657-bda5-e99177a46e24",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115baf28-91f3-4450-98f0-64be9311d018",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "757aad08-2fb5-4dc3-bbd6-b163167499b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b1377bb-0082-40e0-baf6-01f89564597b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17ed4287-0c26-4710-81fe-a32cb696bd8c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fe583b2-2b58-4a5e-829c-3becd52426e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44c06fe1-e06a-4384-8308-00e607917af1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ac87258d-5d65-4db8-8ef6-09d23d29e618",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c51de9e-2a74-4cbf-ac6e-de02744ea779"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "42fcab4f-72ac-44c8-94d7-331f9f5a5255",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "dd0194c4-86b2-441d-957f-8c7edfe6c939"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "16fa605c-b9ec-4f55-b50a-489cf0752cdd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b115d4c0-0bdd-4cc0-b126-fcc7104bd8a4"
            }
          }
        ]
      },
      {
        "id": "634be7f5-059e-44f6-9f3c-df44926725b0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "de85167d-92d0-4374-80e5-211cfd9a5075",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39a6256d-3230-4c36-98e6-246d37e5891a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "89caaf1c-8a8c-4264-87e5-7dd58b80a355",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bcec2ab-b165-4ea4-ba16-6201dfaa5fe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8198f683-c3f4-453c-9b2f-0029a8107ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8578d175-e8cd-4388-bd86-421539667091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "335549e1-a15a-4bb8-a707-10798e1a84dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e857d4a-b38a-4e10-a484-7d91700960b1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58aa353-60a0-4c74-90c9-7e5093fe65a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e5ca389-fa23-4156-bc37-f44f954504d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b3edea-d1ef-4ec3-9a00-8a4ded60e44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "39bb2071-77b2-47aa-baa0-9da4491c609a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5789a258-1f12-4813-befc-65284bff481e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60943653-f281-4601-99c9-d42bb75c301c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37154ffd-7d67-4501-ab9a-aadd68599e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055c39e7-9455-4c31-b269-3b9f1eafbdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1efd6dd-3e93-4834-8656-855cb2ed8b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccb52f5-72ac-4c69-ac16-a1f11f835352",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03479283-82a1-4a4f-98a8-3b98989fa724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fa3778-fe18-4c79-ad13-6eb6702d0a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320c420d-c7a2-409c-88dd-81b9338a6c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd1bd21-75b9-49fe-af88-43f390751716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f3a2c9-ddc1-4c58-957a-bdc5dbf03161",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51f4bb94-2fd4-42c5-9752-9fadfc23a7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "597f96b6-1cfc-4139-a115-6317199094a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53362bf5-1010-40f7-9df2-062f6aba95b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "87c1ede1-db5d-4515-b2e0-fdf80c922673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5e1dde-17de-45e7-9bc4-aa4f5a8fcd76",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9d02e8-0fce-43f3-b65e-c752e01ad7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb8d4b76-d4d0-4c41-85b9-fecd55ac559e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df7f924-684a-424c-87b8-1e3be6a18dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75d80d15-c4dc-4d0a-9753-7dc3c85fa0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11070723-faa7-41b6-91a9-a9c431a4ee28",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "104355d5-92d5-4335-bacb-5df6fb28b60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09be4755-c296-4b9e-848c-3e7c44274b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061c7bd8-8dd4-48dd-aca7-311f9c2f743e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5152c66a-34c1-49ab-83ed-b25c93b72c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd7bc8cc-4b7f-41dd-afad-98a4a527a5a6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71b093b-ed2a-4784-84bf-d6ee532fb8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c469760-7847-4a52-a9b6-98f2b72a8c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549eebd3-0fa9-4168-b4e4-e9332334cc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "674be513-0f66-4379-8355-735e32970da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690dc03c-ccc7-4c7e-bf3e-ea48f74e837e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be68fb63-2060-4eaf-a218-92eb16a12531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ce3d21-e914-483b-a5d5-3317cdca2f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d6e4748-79eb-4d8e-b9ac-e5067125d563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "772811a2-ae75-4aaf-8f5c-01fa818d770b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676fe950-c86e-4321-b90b-e23bfc33a896",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9c06756-2641-48fa-be93-d642caf9cbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d27193f-45e6-4360-b346-5fddb5a9a9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4efc6d-2a23-4771-9e43-122777496adc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17bcee82-7de5-449d-8c7d-f4f9e1487ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8267c719-b74e-44d8-9b97-4e5703019327",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "541b3284-87f3-4357-bdb4-8c68cdef1fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4d286f-2915-437c-98b5-602595747f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c38be9-a991-47e7-8fe8-35af18df7bf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e3bd006d-9d35-4e07-b027-aa25d0c31bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5753c1aa-98f7-432e-be5e-edc94e39a07c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cabe84e-f433-4f4d-955e-8143a90ed4f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52bf1487-f6dd-4218-a331-4bb3c0194325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b155ee-ea65-4b92-9c79-be0c0bcf3d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f7a7f0-a551-4b5d-a592-ede1d7c5a543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6b28ac-bee7-44af-9cbf-03a404b87533",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ac09979-2b2b-436f-9152-fa083442d21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24a2451-a195-4770-bfc0-6925c8f266ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1b8f11-f17c-418b-90e8-c03548892e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b867ac25-64af-4c29-aa7d-1a4461da5ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e345682-a683-48f1-838f-24f3547b2fcb",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ee6018-386b-41eb-9247-e8992db6ffb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7498f8-6d18-4995-997e-9aba99e03ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d13ce72-9544-4363-8b5c-11dc29031f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "581b254a-22aa-4285-b214-c1ee71fb463d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d9d298-4443-49c6-b1e0-54fed0f9bc69",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537091db-fc3d-4e9f-8c94-0374b94ea7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56966fc3-2e53-4807-a6e4-34fd5d57e539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b02fdf49-0779-4907-879d-074901413c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a70436-64c8-4a7a-ba01-d13e37f585ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f905adbf-c4af-4895-9a36-09eb8f547ec8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "437f4c24-ac0e-4f8e-9332-c86c8bb7a527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3979276e-3672-40c7-a7ce-68282e26e9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7967411-b3ef-42bf-a162-baad55fb4ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea50780f-cfe3-41d3-a543-2aba5394142a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164237b2-d673-4811-b859-42bc63f60237",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a7d2de-d537-4df8-ab8f-a834177c67b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb1c313c-9ad0-465e-a43f-9267fe3ca2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee7de430-90c9-46fc-bc03-1779343faf3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "51a6343c-43a0-410a-b224-c4c8c9ed88d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f367cba3-66b1-476c-a587-bdbf39e379a7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78880ef2-fdf5-4d0f-8d16-f8bb07bb7149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d1ffbca-1bcf-4ba6-bd02-4b32b8ae2b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae520fb2-2ff7-4eb6-a8e9-d4dd0cbfe310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8901831-65a4-44ed-824b-d3d2b14f4a6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cc5ad9-fb5a-4f5b-837e-ea959cbdfc01",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6777441d-b8bb-471f-96da-37cbdb8da2c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "852fc4e4-4bc3-4d4c-8d9d-14edaa88a5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c8b08a-a3cc-42a6-b9a7-151b57206024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66d49de6-0c81-40d1-bee3-102827f02dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39274c32-2dc2-42ea-8f31-2f54199b41cc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db5ff4f-67c9-4214-b701-aa8fc21d4f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05b0ddf-a7f9-403e-8ee5-a24326fba606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bf9cb3-8103-4d4f-85a9-05aa822fcf9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1394324c-6294-471a-8403-69ab56a0063f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd52077f-4ca1-4b2d-bee6-b9308413aae5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbe23b7-5f79-42c1-8b31-e4f5b4843e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634dafe5-dcb2-438f-bbe8-397c30fe4309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712384c7-6df1-40df-b80c-2d6d9bbbd198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c48ea1b-21d9-4a24-9fb0-b7992229df72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4027946-1efd-43e9-b970-e45cf1deb31a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "809b8986-c624-4878-8d71-cf0d330d54d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe74cef-d84a-46e4-87de-efcadcfdf790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942d11bd-9b7f-4df2-a923-1338d777e263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76b38c1f-1204-4e54-9e1a-24899d992fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef2eccab-e445-454e-b5e5-1b8d998aa403",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8833399d-d221-4a3f-a8e0-832af1dfb9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95397d33-ebfa-4d56-85f1-dfe6b9baeeb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2596759e-59ae-4521-b30e-c9d7585d1edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b35f405-771f-470d-95cc-ca68bf4a8e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8168cff4-7946-4a4e-9d4c-7c18bd2deaba",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0f4ba4d-cad4-4a3d-9808-4a2597092052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f6c35c-e8db-479f-9149-566ed0d1b354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcfa3ce-484d-4e2f-ba52-aca2e39c0f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e116aea2-0112-4e10-93f1-63c6b6e55c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074a0bba-1f12-44b8-b911-46d8a835769f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8abfbde-4833-43c3-9f23-753a5b4a2db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3574e7f-185c-4344-8633-3e8ac39c1909"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d22be0-4e84-4987-9d91-d55d5c85c540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30613361-9590-4fd6-8ba0-f7d300f283a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b787006-2672-42d8-9a6a-36c84e28b1c6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc0c480-564f-4e4c-a3ff-46b639e8dbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9479acd-4c24-4902-9ce5-e31901dde84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43463e19-3180-4b60-ad9c-8726afff50da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91d01d6f-1c50-408b-ba4f-ed9da1ec9d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9ee58e-11f4-4a04-8b5d-efaffb7da37b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb5360b-3337-4d19-b308-84c3b224b61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b0fce4-a1d0-46f9-93a7-8792bb37363a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b958722-f9fe-4fd7-8d05-cf4580577878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0ba67b2-9e37-4663-aa68-26a46e06e6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389c4af6-f051-4b54-8277-5cb94a46d4c5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "619edf38-dec8-4a9e-8ba4-4ef8be3e7d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b3397d-49df-4281-8136-f9245098a063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30572ae9-1576-4ce8-96c6-32dc9a47c77b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0250e64f-5782-4b36-952e-2e6faf52f54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9d5e4f-ac2e-4f53-a9b0-ddd8fcfeed03",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8609d738-6f8a-48d7-aae2-a8d8cf7c4d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f41b9ee-9cd2-489c-90ea-4a0bfe99dcec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9fc9361-0b02-4245-b566-707f402a3b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35f706f5-4d0e-482c-af02-3f2701c86ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775fdff0-27a4-45a0-be18-5e825435ddd7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f211383-cc30-472e-a465-80d682f670de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb1185e-7bcf-41b0-ba7c-f51192a41828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8d7213-b0f0-47a3-a697-f10d9e14e797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "259c6dc3-8c29-4477-bf69-7e2e8b5bf0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5339adde-b282-4a48-90b9-36e12f02e290",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bd4f08-fe03-400d-92a1-d89d3ccb8fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39f63ca-e575-4713-854f-b618ce6970d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76b3b8f-753a-4d6b-ba5f-0d78c37a4d1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c46e66f-4ea7-42a7-8334-2d0f53a86af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a44c1a-4e0c-4a4e-86b2-0d87cd9be163",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485d1a04-45e3-486e-908a-88bfde7c787c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d45969b4-0840-4841-9ee6-ef2d5e0c88be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe035668-a6ff-4822-accf-35d166f66cb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3dee0e7-c3db-455d-9562-b3b56fed4a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee2634f-7faf-4522-9eb4-6936a6269d65",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b522903-fe1a-41f8-ab9e-33b004811fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d885c705-13be-452f-a8e9-daa0a2c20f99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c34b80-7b79-42b8-b706-a21e31e71b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eac5ed1e-e259-445c-92c1-36581f7d7a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c559adf-80c1-4e17-880e-186213f18313",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6625031c-852f-4ecd-ba7f-f22bce96e309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "242a746d-f3bb-4920-ae77-e25a5b863ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad2d863-b898-4008-b12e-e0eb1b0ba6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b685ecc3-83be-4d81-a202-ea548cd8fb02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d84d32b4-465b-4f2f-814c-e281de66d238",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7674213b-254e-4397-a3be-6db56d5fbc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6a4bf8-d5f3-4573-ba2c-db4735c3f045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50d919b-8d2c-4c45-a4f4-877108025e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db7a3e84-d237-4342-8c53-859b50f00363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeabfb1d-96bb-4691-abbb-836c968c5c6c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d351db-521e-4511-ac86-7c1b48c2a623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47a86569-26c2-411f-a5de-f07509acc3ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "774bff68-a092-4772-a427-df0a70a4a7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f297c64-34e8-4114-9471-2a4f43c95ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c641a7c-be60-4c45-81af-5e59a26e23cf",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb9ea1a-b638-45bf-8262-d69dc6a3c2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fbbbcbd-f589-4193-be7b-ee5c2d2dfb4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206668a7-af73-4c67-9d7d-a2302d5624dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a38fc8b1-a140-4e7a-aeab-7921a69a6812"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb587ac6-ee25-4782-80a5-f9242a1d7697",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15f78425-170c-43ed-bac1-5d7d43fde5ce",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215e31fc-5027-4e67-9c93-7314fb1b85e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9df1c3-444a-44bc-89b8-d50e0b5deaff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f247e2-5fa3-480c-816f-d30daeef10fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a560bf1f-f170-4f4a-839d-de034194452b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e89a671-fc33-4df2-9c3b-1186fd83b03c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4782aca4-1eec-4e05-8ef0-8ea93c81eba7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29f12ce6-76bb-4fd0-85d3-43ab985a0527",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e1ee622-7ce2-47b0-931b-a19a630b5f8f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d5c839d-1e5a-4581-8ac4-8634de173182",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e5f7757-ca0c-4641-825b-4e301c700a61"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b77d8c2-8a10-4609-985d-267775673853",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aa1ed0f9-0ff8-4e35-9ad5-17660907c8a0"
            }
          }
        ]
      },
      {
        "id": "a5d29f73-1ef9-46ec-b03a-7577aea033b3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ab7d3516-3e9e-48b8-be77-bf77a1b9b598",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d5ee0dd1-fcf9-4a51-8b70-9c6ed5a21dd1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "395d914b-4a46-4be2-8ddc-e053a940a2a1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a7d7c8-3836-459f-9e15-e143be16fe6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "310a4248-01f9-450b-86ae-dc67c40b26cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cb926a-8f07-4ddb-9701-324c62636198",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7749e4b-bb59-4668-87b8-1c53367941ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494424a0-8f74-4c98-8a94-887c9fef884c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fe3560-6eaf-45d1-8327-0e5d6df98ebd",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8357162-9509-45fe-a52e-381456b986e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01092dc4-304c-400f-89d6-01346297ee26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf4be22-dc84-45e4-acb0-93038ed739cd",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3aac0d1-d048-47f6-a8b7-c2e0f5cb58f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f87317eb-29a5-480a-86f7-3494e5b5b0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95577ccb-2e5b-4532-b3e5-f0d04e689d32",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2815806-cc01-4962-8894-afe0a2488da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9095752f-77a1-4f4c-9af1-73392a6d6071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8539f22-348e-4cea-a1c3-66065b42327d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a444250-e7b4-4a1b-9dfc-6d0e1a0020f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c171eff1-8567-4a39-b7d5-c3b05fab32ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e41fc2e-f6cb-4dc1-bed6-637becb8fb5c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3891db85-8d18-48e6-8ea2-bfa6881a7681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1d9633-f025-4df5-889b-9345a6822416"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7ce6b7-7cf5-427a-b7f1-382bb6f7b9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539ea2d8-11e3-4d54-aacb-be3967854e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23f1056-01b9-424f-b6d6-75e7a66b7692",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da05fd80-5c73-4584-9758-fa267066ccd7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59de8760-93cd-4fe7-9a54-ad64a9b16537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e64fda3-3465-4fe6-af89-0883fcdee07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbe18cb-a9bf-432b-80a7-4596bf72a32c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45229adb-258b-4423-ade0-61be8b9dbc61",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b3e0b44-c955-4060-9427-e7833cdf9f52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2eaab871-1776-4f0a-b41e-e556c6e1c8b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d870b7b-9e88-4b84-a901-061ea0d2ee0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989ab91b-cb28-4b77-903c-aa6b740d997d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0813d2-3d99-4774-a4b3-47e3598b5fae",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c23e9f-25a3-4259-9793-608710cc6278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a367a59f-383e-42e9-a79f-0269b9340618"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b75887-949b-4053-ad58-df3ce077ba79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9286d2e4-025b-4a8f-a772-66233284a74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5935fa2e-9723-41ba-80ed-c845245fd0dc",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4242d259-a360-48f4-ba35-9f084175fc92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a9d62a5-09f5-4090-8df1-292688758afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4445f0-5c07-467b-9c95-e053101a2d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "777d5b4c-8ae8-48fa-9d67-0c6cd527a2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3716c33-d7c9-46f3-b787-f17aa0fc1fc6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5308e338-abe9-430c-a4f7-a24666786379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e4d236-5aa1-4d75-bcec-83861999157f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c07b8bc3-c5a5-4ea3-9911-2b4f6702436c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dacd35d8-9ad9-47bc-8c64-2248a41a098d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20dbdefc-2608-4b27-8d35-66bf8ecb1374",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be2302c-46cb-4795-8998-542aa82dc6ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92fb8046-3b5e-44f4-b2a5-d27729adc990"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32b55605-27ef-4f4f-9238-19d05254eb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146e99a5-0dcb-441d-8d70-451a5237e1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed9c04a-c048-49d5-af38-1f463ebb7df2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b550e50b-5ebe-4ce6-80a3-15195c2d9246",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6a3a98a-e6d3-4a55-994e-7e51b8052fd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84357e86-5b5f-41af-a609-aeeda20e3990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbc84fb-3617-43cf-a763-a79c3698c74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf522338-dadb-473f-9fa0-39817f1cbf9a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5250e0-f4fa-4068-9602-0fc0b453b853",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f858af83-30a7-4b59-b394-1087ce2f5d6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af81e8e-bf41-4cbe-85c3-db951d2e4f16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85eb1375-d4e2-4f62-94a8-0ee7e1bc1932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32c86c9-cc79-4f8d-b68c-29718d93aa57",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2197ab-fe83-44e5-bbee-d66255cf1332",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102b581b-6b42-4e5c-85b7-8dd7be791c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c258db-6402-4e4a-8c14-5a0c65c4ad6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d45f79-c41d-42b4-af8f-10df952b8db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2343b6c8-dffc-49f3-a97d-70ebdaacccff",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233d106c-ab6f-42ad-b897-4dcca956f943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa19c79b-69c2-4a93-a253-7a7c78c3b5ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8b2b63-99cd-4ff0-a053-579f42f890db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffcda0ad-b028-45e5-a9a3-78676908c6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05216e56-bd88-4c00-b624-61d33720ba47",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c517ef8-c294-4d77-854f-d56b513f4ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c3fc1a-1595-45a2-8018-d21e36b1a8db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b870de21-70ac-4eac-a3fa-77afbc3ece79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88cea0d8-9d93-48e6-ba90-ac63605c3bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f7ecfd-f271-4884-a112-1be1e79dab29",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4877411b-b291-4879-92d1-3b783c7936c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb12f97-7cd0-4168-8ea8-50853a12216b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205cb8b6-763c-429d-8d9d-307eb58510ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d19fa9a6-cf5c-4868-b9d4-7e2b1aaf6a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd18be04-786b-4216-94b8-cc1d2a602e9f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bd565c2-1193-4b23-a99f-98bcde24a07f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c55761-1644-448c-b07c-8a4df5179469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edbaece-4e7d-4866-a3a1-a71f1dc80ce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8c336d9-7fa1-4fc3-8672-71c7ef6135b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f895f6-f238-4b68-b57a-5f39b9ecbbd8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58f58000-3798-4062-98db-cfe17655eda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b37971-9301-4eff-af65-99f2f0df80f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f92bd1-e740-4873-bcb1-f79a18b5ff70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3178a55-7e8e-4453-99a6-08c6ce35187e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94dd658-1fc2-42e4-8518-73cbc9e8b35f",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039d5e96-13b7-443b-a5de-12479db021cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25cedee-b6cb-4990-b8a9-1bad04894d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "578340b8-8093-485e-abe0-0bb629b1d242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12366d9c-992c-4c39-ad66-6d799e3e5bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda5acd0-fc38-4c88-a786-a12fe36ecb4f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "823feb9b-77fa-40b8-b8f7-7c3cc0984bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a84463-dffb-4f9c-8e41-74794002db4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e91e997-0178-4857-9a6d-9a7483431d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a88d16-8762-4c28-87c6-dd431901bd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55fff03-b0ca-43d4-988f-c66d923dfe8b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e28473-a730-44de-a016-3dfe49c62835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8345fba-50a5-4377-ab3c-deabc8f47955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31796b49-e2e4-42ff-b9e6-60336e7acb8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa022c9f-00a3-4942-a882-8392f52593a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1134c90a-1c32-409b-a19f-dd2d6b8604e5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda24395-69cb-41f1-bd1c-9ecae6e28005",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "254eea8c-9d35-4b88-aa5c-7dea3342d05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de8e730b-4b89-4339-ba5b-f10c2274fa71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f263362-e0c8-4607-91da-79b93475232f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9acadcfd-8722-4939-b3b1-0430ae02e4a5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ea6346-df7d-470d-ac52-47ea259ee362",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c6c709b-1908-47ed-815b-879c241f7ab6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef1ce097-3583-4361-9d23-c3d22701432d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f4cd0d-bfff-419c-bf7e-e1013d7b75ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c3bcd8-78c3-40b9-9cd8-b81d8cb7a685",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67af2b8-6c18-463a-8ae3-5835bdb6f363",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f4bbd2b-2c58-4b66-bd87-08719df4b7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e09e298-16bf-4191-9f6d-b130b8f2f324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d574e9b6-dd6e-41fe-bc78-b74003371907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bdf8d2-2cd7-4b5c-b156-c9a5a6f49f91",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97e6627-dce6-4103-aa2f-b471772bc4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ded4c4-10d2-4370-87bc-c3855c45e136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec861bee-bcf5-48ec-9d17-5877c4fd85d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c36655a-931e-4d67-8cde-f53439ec1f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e464a6-ff57-40ab-a7cc-1dc035c96714",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9f5276-1c86-4f99-8085-567c438c9b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "235e9794-da12-4fb9-819c-d9eb7ca086ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3d41b3-b2b0-4670-8696-a788e19adf0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47a04d7-e6d8-4c76-ac0b-77a76f102a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aaefd5-cca9-4695-9304-b8ffa8d7fe3a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b181e26-ae07-411c-8f07-2a990ac0afee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a87bba8-8c1e-4d50-86c0-36be530f91c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfba11c3-f112-4c19-9588-77d41fd2653c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2f04ba1-d56c-4fef-b1b7-fee61809c4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b8d772a-ec1e-4dcf-b8aa-dd1f9d99b3a1",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c23d9dd-f51e-4a69-b218-eaffd37ed18a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f4596e4-9bc0-4563-8559-9a98af8811ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0702eda5-b748-433b-a8f7-c3a5b7e50cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b8811a-7e59-473b-bdfc-6870c50c5de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d27ec01-2a47-408a-83c5-d2c5066176d4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b58f92-2bb3-42af-85b5-6a08f22eef8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e76c5029-489f-45a5-9735-7a7c3e83dfce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7e2772-e5b1-45b7-911c-f8fdb11b8b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540de4e5-8a8d-4b39-ba83-7f246f258b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76abb42c-78f9-49fe-a656-f10dd6c05515",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0888e684-e66f-44b6-a064-a7d619ad1e12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd860527-8669-48a4-80cf-753b243d0e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d5ca46-6206-4e27-b10d-34d6b536a349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22eb1b8-4600-42a5-82c4-7927092b88a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a19922ac-71e1-4aa2-b4bf-c36a9590acb9",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfef7cf-1d80-4eb1-862e-285959279381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a417a16-5d23-45a9-bb74-25702e47ad3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e1feb23-5be4-4b5c-990f-bca268a7a2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28770f9f-3bfd-4a11-a4bf-df4496a20582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8bc29fa-eefd-410d-901c-8905ad6029f3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f41094b-1fee-4882-9163-e2a6029a7f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf0d9306-1917-45b4-9d22-be5cd829d5de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb1343c-4d7f-4dcb-9fba-de0b7ef0fd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87cfbb92-53b6-46e6-a431-6ed7a0910fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b587479d-51cb-406a-8b28-566db572cf47",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49348fd0-48ef-4af2-a453-0d4368217a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0262293-0969-48d6-9b70-e316a584a12b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00274fb9-3bc6-4bcd-87b4-38eca35c7585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337488d7-7eb6-4db1-a24a-29da3099ae96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5529e58e-4aa9-4e12-914f-6f834bc8b4c3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bad35439-e552-4cbd-917d-d7781ce9670d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84249736-1159-4afc-ba63-52939a36a51c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835628a8-3cb3-4f3e-a0b4-8f8009560b49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "871d28ee-5d48-4432-be1c-932463f914cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18594ecd-1e0b-49eb-84fe-fbddecdcc475",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4860dd-1b35-440b-9a4d-804ebfe56a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176e994b-9a72-4622-9764-1f97348aae3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31ae9d2-ef2f-40b5-a5b5-59f435d4c1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a673db3-28d0-4257-9a6e-7e07c98143a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e78ddfb-8a64-49e9-82b9-5e3f441084d8",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed13fada-39e2-494c-bb7e-dd1ae7d9d72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b6043f-650a-40f5-90ab-f401b1b7dc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e28cae-0684-4418-8bcf-4e78b43d6e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ff539fd-c86f-40ec-944b-5a2a0121faf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd4994b-2f1c-46c4-8f5c-6714da063c2f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd62f19-73a8-416d-93bf-48b71178ad80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "231021de-63ea-4246-9342-5ac44c9da6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f279e99e-1483-4278-9a27-2e34a41e6b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c69ae0c-759c-4a38-91c0-9fa56f12589a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b86e7d-4520-49ad-b203-5e378ac449ec",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d290313d-88a6-4cfa-95be-25ba423c54b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f10bc7-b0ef-4c21-b4a0-8e33b4a990a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac062df4-a66f-413a-abbe-a8596b6073a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b4c3965-5d5c-43b2-a820-bc3c990d7b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b1a6a8-7fa3-4dff-b654-1a0c7c616be3",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee62c67-e57a-4c25-bbbc-1607cba58977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a44879-9fe5-4f37-8d78-afa37802f503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46df4b21-be6b-4e1c-91c6-f12848776596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88a42703-5a6b-47e8-afd6-971f3f315f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d2d705-1b55-4958-81e3-3d7023042b44",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fdd601-81a2-4033-ac0c-b839d6c64403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a931e41-80b5-42e2-932c-ba7516081291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e37006-f08d-49c4-bdcc-4f452f02e69f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf975276-daff-4267-8f61-2713cbcc6c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55b5281-13da-4a77-b77d-411c0049b628",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb56083-8bd6-4226-8cb0-ba1c482cb89a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a93b515-7307-45c4-b065-899d60c6a73b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd62940-152c-4b8d-bb89-380155db8446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5468c28b-b2f7-461e-9da6-458a5936bc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0b67f0-372c-4f2d-8ad2-7d8e07f56da2",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb478a6-ec8f-4e78-863d-5e5159ff6c43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc0793ff-349c-4711-addb-62a323160c95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc2fa56-6570-43b1-96d4-f9d96f4e4874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d828436-f229-4621-a626-493b8148ecd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06623cbe-a2b3-4bce-8ced-224f642462cb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcd1622-572f-4861-af0a-36b9c4d637c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44440819-3fe9-4a5b-be87-60ee4e9b3ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f3a90a3-9c2f-4913-bd8e-efb87aeb5f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6dc8867-6e03-425c-8e22-a5f5e08ef096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71eb9cf2-47e7-461b-9a28-d3e0d64b679b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40e2638-65e7-4bf6-8594-708bece1e37e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6565c4e-040a-4d3a-ba6a-3dcf2c2e6e86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "232faf69-636d-406c-9046-db5e1093bc68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "588a70cd-1535-4105-a9a7-ffc4adcce93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec241664-6e0c-48e5-8516-8b038bd60f00",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e69e0b-ad12-4b76-83e8-02a709db8fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb9cdf2a-017e-48c3-86b6-dcf31705f532"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19b11de-60e1-4c82-aad8-0488b34b69e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e409fea-5006-41ac-abef-4bbd3aa94f16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0729da-2e0d-4424-969f-ddfadf9e4d0a",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db073d6d-99b8-4369-a9c7-16f051273315",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f07706-6d31-4cb7-87a6-c2b2c52d3128"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "603bfdf9-abeb-47fa-a319-4929ecbd0767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4f2c073-4e68-4961-abd1-3fe59bb9f595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e636dc8d-7b82-4217-a0aa-e85762eca4af",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff9baf4-65ff-4c81-9976-57757cad834e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "879ef92b-9310-41b8-970f-a1a8d6997a47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f636a78f-a4cf-4caf-bcef-a0193ae139d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55828202-fc36-45a4-97e9-e3b0679783d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a525f2e3-022d-4abc-9713-5deab794699a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae9545d-45a6-42f3-b2e1-6bcfa67d1f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "255bd758-e01e-4f67-8dea-877aa0a1f8e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "342975ec-9ac0-4c2d-a154-d4d90f84e0cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd912def-2c84-4986-879a-12fe0d88a946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8afba7-be12-4e3a-9b5d-660fbe84cc88",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db58e8b0-0112-42ce-b59e-5accbdb7bd34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a662c6e-601e-4550-9afc-ee5c33b6a35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53df362f-4cb0-4644-be2c-f7383834cbfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6689a689-5f8a-4831-95fd-7655c6f3c8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2252ab-4c07-441c-b03f-44b95c3bade8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318a898a-34f6-4b56-b94d-0d336137bd9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720d2086-3036-48e8-a617-783e96b90db0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bde2e3-0a73-4e8b-89b2-18a53dce9b9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee726740-7fc7-47b7-b37d-9c7c102614c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f63b90c-0464-4da1-8cf1-39eb14d3d009",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77133932-231f-44c6-989c-a705babe8a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6eef36d-b486-43bb-a3ca-933322429c08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f95fb7b-1b36-4a02-bd46-1ec28005fa3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e20c8a34-4503-4e95-91d9-30a658061497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42c51e0-7155-4208-a9d8-f22428273077",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f29445-c053-4f3c-b1d9-8121ed733591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ec18361-a9d3-4921-86d1-dcb4199aa41c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb92a8d0-b822-4d68-98c3-7c94f38e5d6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35f41b45-fdd0-4849-ae30-de461d5099ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bb1c252-2b6f-41e3-8e7a-d98039f56ee4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71c67a8-7579-4c3d-9f63-d31ca0b66d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb922877-3b46-4282-9853-2494a21fd8a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019b5fc1-d738-4dbd-9f12-a24dbcd17aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "163f7f70-dddf-4a88-a3f3-5fdfc377c5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28a65910-4cd6-49fc-8216-c56097c34cf2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20e6d23-586f-4bd0-9c9a-6a7822c510d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094f8ae1-2c99-4542-87f4-bad65b373661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52766365-4e8a-4c72-9ea7-20341da87350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "256da9ff-1ca6-4ea8-9719-22af4cd37372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e452889-11c1-492f-81db-607b62bbfe42",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0011dd3-b1b5-423e-9c5d-a1e4df13e2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef8b275-6bc9-45a5-97c6-2950f26fbd6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1344570-23a9-4e56-bb41-0e1f20e5b992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1348289d-895a-4890-be95-2cf18c4d0ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e3c6f4-0cb8-408a-960a-d2268f233724",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275e382a-bd45-47bb-8723-2bf08f94c936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3a9bcaa-f964-47d5-9c60-07a7aabe0426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dae68dde-a19b-4665-b084-78c566c067b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1720137b-8346-4710-bdef-f24aa4364e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0e553f-5bce-424a-9da2-88880945b311",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6fc7d6-adbb-48e0-a340-eeba504e9b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4994e13a-3825-42c0-b081-5cbe93a7116b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e31897f-c20b-4752-be91-ab1fe8ffb7d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1680361-ea81-479f-9fa3-e51669c7a8be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccebb286-8c75-401d-b157-b816e581b43c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43be1afd-ed92-4785-b12d-caddcd7a32ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9fc3c75-dd7b-497e-954b-ab9e80890eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "889fde2f-60b9-4dea-957e-81249b2d3123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecff2b3c-2b13-4d95-ac04-15273a5321ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5364ea-a322-4637-91cc-5b18dae8337b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0874fb32-1609-448c-893f-b6601ced4ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba588fa3-e411-43bd-b832-1a8752dc793a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67c891ba-53af-40ce-97a5-952cefb2b98e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffde6e3-e783-424e-a87e-137a1b1e531c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f2f411-26aa-49f0-82c7-46b4a0c08721",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523f3a26-7ddf-41b5-a915-5be4968d0512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a8d108e-744a-44db-a59c-e45b7eabce39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e44d8f2-fdbd-405d-864b-fcf9dab175c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be2e1c37-f635-4dfa-bebe-54f9f7a4576a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63453be8-1eae-461d-a736-e1b5313f00dc",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6693e15e-bffd-4183-a2a5-64550163a039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91f3cef6-1941-41da-8229-ece302847bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3007bad8-d666-4715-8e69-dc3cf58ec5b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59842b5a-5961-4cd5-8b26-d838fab11f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fce4de84-6613-4122-a140-72c6e471861a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14becbb9-c498-4dd4-8abd-71ad9b0c744e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36f5fc24-53ff-4eb9-8f12-d608bc9bb5b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a58b332-70e2-4fe4-9760-d21291e28c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07f3c9e-cdba-4b72-b081-8f124f782133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14565b36-d137-4a21-ba9b-8dfd86a50d34",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3c2ff3-4dfe-4da2-a78b-18e2e086abe0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ca7ff2-de30-470d-8519-cf3ba8814ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e0a3af-df6f-4f85-a7ff-bf6933bac2dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11031a50-7f7b-4292-a3ff-31cfcf8cd3d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08fbe81-b0c2-4741-8837-3e3656f8ed42",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5f2999-29ed-4524-9b07-3652cfcdf895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a57a1f-107d-4cc5-b637-c73ec852667e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ba8d4a-a29a-46a8-92d2-54a11083e1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3073d1-ea45-4175-8fe9-6a09f6351b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea801afe-f9d9-41ed-a032-83b6000178b8",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4b8f4b-1689-4db3-9ba8-15cb63016a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a288035-5b1c-4b25-8b97-b4f2dec7c891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b9d973-c2f6-497c-af68-7c0a97710b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6674c94e-738a-464b-b0dd-4c366e0e46aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52963c7e-71d8-44b4-b5c9-74af8994ebcd",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42a34c34-0074-4b43-be19-539ab9ac2932",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "407cee8f-8b3f-4876-9457-32b2bbc83807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff158b12-82bf-4550-86e5-3f29e868dd8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd472093-095e-4996-ba70-2fd1b9073a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb827311-65bf-4adb-9047-dc7574f8cbec",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b837e3-04d1-4922-b9e7-6991c44ddd4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b9389f-5dc5-481a-a5ff-919a53b5140c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8f6ac7-efa9-4194-8ecb-a0e67ebc8d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949bb269-54c9-49ec-a849-989fb334c5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0497ffc0-82b0-4c22-84b9-bf3ec50b6fc1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b9ebfe2-8bc9-4a49-bdb1-f691b55c4852",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b580a82-7e8d-42da-94c3-202d51b21e39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7adf9d-b4fd-4a4e-93d0-72c81e817aba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b4970c-46a9-466d-badd-8c45220250b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6b9ca5-e6fb-4e06-b54f-afc1636dfffa",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8790fa4d-2b5f-4e6f-9823-1fc61a6f6df3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ffe1c25-6c27-4646-ab7a-63dc4abd27dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1325e14-2b1e-48ae-ada2-796e8d08a847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce228ba5-5737-4957-bae5-f51d818ea1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e823419-41d4-47e4-936a-dfb0af871277",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd23b8ba-4b32-4f95-b14f-ee2f4d3e0cc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867b8438-1831-4082-b6ca-0cc34930b48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b6787d9-e262-4864-acad-3c63523156dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a42c3a-3ccd-42c0-98bd-e850a320238c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916de222-94c8-4b3b-8796-632a55f0eadb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e18c91-a8e3-46c8-9d53-b2ccba193d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59b41b47-1559-424d-acfe-d3df097c0e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc34e5a6-f3d3-4b24-bea6-6aa95e2b324f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99759b9-ed08-4629-b1f0-55e34a6ac122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7deb8ac-b001-42fa-a203-e28cee91357d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e601253e-8c4d-439d-8fe0-2f7a52a02942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee2fab66-a288-40e1-9763-5f76a63b9992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50766d3d-a9a0-4bb7-bf24-fd2ea878722d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27c9ebe-ac85-4cd0-ab57-bef623ea226c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab11888a-2773-4b37-9014-70d16b039965",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83e8abe-2d5b-47d1-84f1-ba4c5b9ec49e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cc639fb-2b50-4212-836f-f6023e23a347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04dcefd4-ce0c-460d-a790-d0ed71c3dab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a71e1290-1969-4584-b65f-79b81b038858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7faaad1-0045-4a5b-b159-f1646b761168",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f3cd93-9ee2-4374-a6ee-b523d904c913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "731a8d8f-1f92-469e-a608-a888df6a0f03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f52f89b8-7488-49b6-8622-a1ac72f037fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30325fbf-2bf1-41b6-9457-b1206059b457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18eb1afa-78a7-4a94-8f04-1ed36f251284",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be7a70c-9277-47fa-aa47-36cd98fda198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4c3edc0-8742-4fd3-8b0b-69f9a5a97d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e09a44a-7cf5-4e1e-a06b-ad111fc2b4e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a117b05-ea41-4e5e-87c9-e9c929c351d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528cc463-baad-4ca0-a366-12059473110c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58683a3d-aa0c-4d76-9b9a-c0d206ce5e1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7a59b50-586d-4956-b2a9-24f2517e419f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "960f2564-2122-4364-96fc-39c0880abe20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0742c625-53f5-4b95-a239-967e4cc2ab66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ccd8d0-a871-4264-95fb-d2d22354a132",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c579e8-2e31-48d9-805c-f2af442befad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eba13f44-4c85-48a5-aa33-43ee9663fc30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f46ce5-58d3-439a-8dd4-715c18c1c8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f98d0a72-3ec1-48ff-a268-b75dde842692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccebc3e-20c6-46a3-b071-01873cb94cd7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2b097a-2e99-4f90-bbb0-b28a106ba0b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70382b93-cee2-4081-a83e-5271feaf4063"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acfc6de-a31f-4efa-86bb-723b1be795b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "205ab141-83e0-4455-8b2a-4ef1c00b82ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2ca862-91a5-4029-a9e0-e29f922618b7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9248a3a3-7773-49a9-a1e1-9b9e66842389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8406033-d55c-4e43-be62-1864263e0aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7585a333-8221-4e8f-a33b-9490200a6acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22247913-2f5b-4b15-9e62-8fc8fcd8dbb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba198470-aa46-431b-9e3b-0c99ea3f2601",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a855da9b-3127-4727-923e-41db62025e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54bfb8ce-7b60-474d-bb62-67d4a35b52f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabb2e6e-6cde-47b7-b393-9a2c6c34fb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb5ee19-2e8d-4929-9a4a-50eea0d6cdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689a07cc-30e6-4683-861e-9bce98e66c1d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656a8db2-25a3-499d-9faa-2cf7483cbf29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9644b123-dce1-4200-9a7b-1f4bb80b3002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f24e7b-1680-4267-977c-620f047a0576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695555e5-837c-4037-bd42-277757e4ffed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8639937-8b4c-4800-9ac8-8f7108728692",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda1603c-3a71-4a3e-870c-e67500ec7c60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a4606a6-8f5c-42b3-9bda-be297ddba5f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffb7500e-dfc0-4848-b174-2bc64c1ce795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f4f4599-78ac-4c38-8f1f-870345e36cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c720724f-c9e0-497d-b259-e75b0673763b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1108ae-2152-4715-9867-dc5c06f78c95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c74615e3-688e-4dfc-8071-b4c8f1fc5761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2da7db-f0fd-42f9-a6f4-2f8a0a11979f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8e5680-d43a-4c30-853a-f8abe7942e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2505ec86-ac12-4f4d-9693-41aea6b665af",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccebc244-f3c0-44e5-87eb-604e425cecef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93e64a9-37c3-4800-856b-0a0741d7cfdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55624e8-5d02-4993-9f69-26911cc18008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f14fe5c-14e0-4daf-9458-f95894d68295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f737bc9-350d-4cb6-b745-ccaab0ad9a3c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07d700b-0e40-479a-9b0a-8ec290cc307e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2900639c-39e5-4835-b49c-a035dc66113d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7130d2e-4f58-4ded-bd99-0e1d42ad7b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d5cb83-ab41-44ed-82fa-19151884d530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0f3f3e-387b-46ca-99f8-3b211d077b2b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513e2ec8-ba70-405f-9ece-fd34b885be3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e3eb85a-09fb-4907-96cf-1acc1afa8bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb95c002-8939-43b9-8838-46e2c41ea01e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720739ca-cbbd-4ae0-adde-0d2f5717bfc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748a48e8-037a-4b59-aee6-7996263ad8a5",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006fde51-84dd-4e04-a6e3-c7c76b2bc312",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "502db38f-41c5-44d2-b753-ddc24a194030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999095c2-f2a3-4328-8076-cfd7fcd23f4e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f3ef86-a041-41e4-8256-adae10508a1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b89f80-cf34-4e16-bc84-a5047b26894e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "657a6162-866a-4f05-9c1a-50cfab0880fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60d7bf7a-be13-4347-a45a-323c276df377"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6e4b7e-467d-4a3d-8af4-06d437c3e846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5095b417-1224-4ab2-90a5-371a0e40a075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a20362-5cc9-4122-be9c-dc2c442f1403",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ee95a3-4c6d-4696-b35b-020b2b9aa966",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92ae4181-f4ef-4221-9d22-688952297a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa987bf-81b4-40a1-b228-5bcf36b7e6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f86e4c8-f0d1-410c-833a-f3939e821a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4daf5b8-8e59-42a3-a9c1-5cac1c6fe60e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71c0249-e2f9-4833-acba-02de95162e79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1deae66-0524-4b05-84c2-6871f85640f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093f8638-92ae-46c7-a0d5-e848d3320483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "589e7638-603b-4a42-b0f2-ec989e9446d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c345b293-c33a-4273-8aa9-4846f743129f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d12a5f0-6c16-46ef-ae61-b7ea594e85eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b958fb82-58bb-4647-ba03-e32f623d993d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d87139b-228a-412b-894d-58561df07a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4e4ec9-5cfc-446c-8322-cc5b4eeec830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02603698-ccb6-42b7-afd6-2325db7183cd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b814689-b258-40bd-8506-53d67dc1785c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47dfc179-0b64-41d3-9cd5-414e4b69b8ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "627a500f-7595-4b5b-8a0a-0868e1b2b762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98972ead-5bbd-4f4a-a426-6680b422da39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace1d6bc-301a-4218-8dc6-fe537d6b1318",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c252625-f5ea-40d1-92c3-b229637a9c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbe1bf94-06b8-445e-9a4c-1d55f3b4c5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c88168-8851-4bdd-af93-3b420635c8d7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77c16874-7ad2-4331-b2dd-550f8a819503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13866ae8-3d0e-48ad-8165-4b5f162f4a2a",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "057e94c5-755b-419a-aa93-b2959a07bace",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a4ca6ef-4e3d-4818-a7fe-61d51e450fcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01696bfe-1096-458f-b555-e4878c9513d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8331d499-5a2f-4c0e-910c-6757854aa784"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c49ced22-b19d-4651-909f-cfe87bf7035e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15a107cf-03ad-4374-9589-7e78f1c174d7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01dca409-f524-4910-97f8-5b8a1a6e3f47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2cba5628-32c3-48d8-b536-14e8e9f5625b"
                    }
                  }
                ]
              },
              {
                "id": "d33f9b9a-ec2b-4bd7-8c55-19a9e0013520",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7cd3b060-cf8e-451a-a6c9-c3cad78eea89",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aabed04-ece3-49b4-a320-22e8b7468861",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "26a1a90d-dfc4-4214-862a-fc5902c755cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91738939-d632-4a0e-a2a9-b4eba774523a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f5bccb3-049b-4395-be4e-e9227bcca366"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da21f8ee-6086-4a4c-95ba-378124f6ddb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c99bfec9-f1b2-4590-a7bd-6325d4620e3e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd1e4e6d-a509-42e2-81a6-e3e906f37bbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd764385-7def-441b-94fa-92c43092a377"
                    }
                  }
                ]
              },
              {
                "id": "777b55b9-9292-4e7b-be58-73622f13c1ec",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "da3c7ef8-4d90-4cae-943a-db0927cb0359",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9588b37f-75cf-4b50-9509-4225a5b52b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e719622e-ca56-4d6d-8439-a7d9458eee6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500875bf-bb61-4e1c-8795-f7e687f33649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53b097c-6cd3-4cb3-bddf-9d7a80c66877"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cbf920e8-bd98-4b0b-8196-a0a40068f926",
            "name": "Positive Testing",
            "item": [
              {
                "id": "08e0adb5-5fa7-4a58-9ea0-653556ddf56d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c2c368d-fc8b-47b8-ba42-c0a0e5047a6e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "9de7a4b2-1d63-4727-b1c2-6391b6e08d75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c198ad7-24f4-4fc1-9033-8a4f281ce04d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5c1d3dc-6bd3-406a-b50b-257aeac7c1e9"
                    }
                  }
                ]
              },
              {
                "id": "cc2ca1fa-0f72-4451-b23b-3cfd76704b65",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f72cf435-85b7-4243-969d-8a63d53e53f9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fd040d86-8506-47e9-b96f-e4c10f4013ba"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8e9a914-8d1e-45c1-a0a0-ae9cbe161747",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31d4c539-5e12-4146-9fe2-fc69fde46dd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db2e98b3-2693-487d-87df-3237ffeea024",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3a2bae32-c7d9-4c41-a8c1-473a1c4d4f78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49d843ef-982e-4b88-b84f-1021b55f542f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b499981a-e64d-4d5f-9d5b-5c0f368e22d1"
            }
          }
        ]
      },
      {
        "id": "f6ba051d-25e8-4f81-afd2-1a9f0cf3a93e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "09aaa288-f947-46bd-9b8f-ebd3c0e9be6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22a81ec8-4ccf-4905-b1ef-ef81b2f17e2f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e0dce93-8669-4b2d-b537-cfdb90dd954a",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05527633-fa37-4ad2-9146-fe186fd5c118",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "df29e9c9-eb9f-4bf1-8948-5e8db8f96f2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bda262-3a70-4f79-af72-bf475232bbb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a10fc2bc-28e8-4a8e-b8a0-eedf7883697d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f53a5a55-f3fe-4ac4-9fa0-2ecb4b8c514a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "58877898-69df-4414-9af3-04f8ebeed09d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84dcdfd7-6a61-40d6-ba30-25a7dd5d0839",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f9e2008-dd9b-4559-b061-7c18970ca490"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb74ee89-d969-4fac-9d8f-7e87600bbd8e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "49bb0667-257a-493d-939d-fb074968637d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca395f82-68b8-4ae7-83fd-2706ec2a4ee2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "23856fcd-1433-4143-b1e4-794473dcb4ee"
            }
          }
        ]
      },
      {
        "id": "4e173b33-cb73-4ad7-ab39-d000fc372bee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "de8ef521-6d31-4a69-b3e0-e3f69fce41be",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e52728e7-6461-4933-b97a-c155d3faede6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9aebc22c-5fcc-42d4-9cbe-b73ee2b9e57d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f2a51a-0429-4b26-8192-d22029909420",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "11b6f8fc-6522-45d0-9c5a-047b75568e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0fb9439-449d-4e0b-a302-9357e3c41888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c39bb43-ee05-4501-9eb0-0ecf5b88cd0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51792501-0dab-4d40-a36f-bab094515036",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a28870e-fe68-473f-8faf-fb35f35ecec1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "214985f1-0d56-426e-98a9-ba53eca47e76",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6030155-b69d-4b66-be47-f4b61347c997"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c8a651d-c0fa-44f4-910a-be87af7dc578",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f86eff4a-c768-4fbe-bfb3-58f75e7ebbdb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04bf7d9e-80da-4b78-9bd0-92e4952fffae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ddf1c782-81fd-4731-ba19-1906d327bb1e"
            }
          }
        ]
      },
      {
        "id": "ee5699d0-cff5-4229-b8ca-c64de9732762",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f53d7efb-9ff6-40ce-90ae-40966dbaffa6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4103d665-9074-484f-be3d-1092eb893cbb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "971de0b4-6762-443f-a446-818563a32594",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a72dcc35-4538-4f9d-86f9-b918552b127a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaf533a7-a23d-427a-907e-ae82dc2fa164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e43242-b1d9-4079-9072-686ce1ed58d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "05102e94-015c-4610-86ba-7eb6e2cface8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb016f90-9072-481c-b1d4-6796e3ed1462",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70074357-dfe7-4ed8-be74-349a03c72a16"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3240c220-6a5c-4b3f-8fe4-28dcb71063f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "752c8767-379a-4a0d-8450-8288e026c742"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "242f567c-6d34-4049-94a9-4a182c5219bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d582a1b9-4f84-40b9-afac-e6258ed2a593"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9fc4c861-d6d1-48ff-80ea-b20eb639af45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b566770-92de-4f16-8869-ed2bc038d614"
            }
          }
        ]
      },
      {
        "id": "bdc6ace1-a308-403c-b4ed-28262e95765c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b33ba91-1dca-400b-99be-8dbcaafb4fdd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aefe5c40-939a-4acd-8cc8-63ccda41d1df",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "95ad14fc-92bc-4861-9640-ef2427556c66",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4405c5c1-89a8-487f-a8e9-a95163731e48",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a24cc6bc-00ab-4efa-9d9a-25a63b7b4f08",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 37.2218309859155,
      "responseMin": 15,
      "responseMax": 317,
      "responseSd": 26.642985537240968,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691973152400,
      "completed": 1691973176044
    },
    "executions": [
      {
        "id": "3bd0edf2-b2bb-4587-82d8-c29cadc6f856",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "30147bf1-7602-4b50-bf2f-292ccf8fd545",
          "httpRequestId": "9d0f2fd0-292d-4b67-b730-d4d78a86d6e5"
        },
        "item": {
          "id": "3bd0edf2-b2bb-4587-82d8-c29cadc6f856",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0265d7d0-7dde-486d-afe3-60a074c25010",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 0
        }
      },
      {
        "id": "23a87d07-d8fe-490d-90ac-0167ff7039d5",
        "cursor": {
          "ref": "1f1c5ee2-4608-448a-a11f-638d9f394ddf",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4a9abd66-3f3e-4e20-9ce8-12edcc98b053"
        },
        "item": {
          "id": "23a87d07-d8fe-490d-90ac-0167ff7039d5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "30b067c2-53af-470c-9a67-efd950bd8ae0",
          "status": "OK",
          "code": 200,
          "responseTime": 15,
          "responseSize": 0
        }
      },
      {
        "id": "2d761f6b-db87-48af-bb21-b60d55c63032",
        "cursor": {
          "ref": "3745fd2d-86de-4fef-b489-0f8eddff462d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "560c8a03-9c85-4ba8-8667-186975614b80"
        },
        "item": {
          "id": "2d761f6b-db87-48af-bb21-b60d55c63032",
          "name": "did_json"
        },
        "response": {
          "id": "8b45aa8b-24a8-4a1b-afba-cc3ec61d01f1",
          "status": "OK",
          "code": 200,
          "responseTime": 155,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a98211-2f86-4db0-b478-56599c4750cc",
        "cursor": {
          "ref": "d3cd3096-fcc0-49a0-8e18-d70a97d6ff7d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9d3e2b71-dd85-4bdc-a99e-0335fd835a9f"
        },
        "item": {
          "id": "82a98211-2f86-4db0-b478-56599c4750cc",
          "name": "did:invalid"
        },
        "response": {
          "id": "eba33e28-8218-4e70-a626-661f1d26cd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a98211-2f86-4db0-b478-56599c4750cc",
        "cursor": {
          "ref": "d3cd3096-fcc0-49a0-8e18-d70a97d6ff7d",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9d3e2b71-dd85-4bdc-a99e-0335fd835a9f"
        },
        "item": {
          "id": "82a98211-2f86-4db0-b478-56599c4750cc",
          "name": "did:invalid"
        },
        "response": {
          "id": "eba33e28-8218-4e70-a626-661f1d26cd7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a48bcfc-1dd5-4272-92b6-0206768c152c",
        "cursor": {
          "ref": "f7c61c2f-5471-4798-bcfa-a83bbdb723af",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e4720eac-2866-4e9b-8f15-247d7efc79ee"
        },
        "item": {
          "id": "1a48bcfc-1dd5-4272-92b6-0206768c152c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1fb371a2-0af5-408a-b834-aa6ef2a4f352",
          "status": "Not Found",
          "code": 404,
          "responseTime": 130,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75dd9be6-7b4d-45fb-8733-1ca9c5712b1f",
        "cursor": {
          "ref": "0e45968b-eef5-4e85-89d3-8d8a4c5483e9",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a09c87b3-44f1-44ea-9133-aaf85e13b7c6"
        },
        "item": {
          "id": "75dd9be6-7b4d-45fb-8733-1ca9c5712b1f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "63283313-35c5-4648-9f1a-066f4d6dc94a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9840ee49-7853-479f-8526-775a96397427",
        "cursor": {
          "ref": "fb90acf3-74a2-432c-8e6c-baf988f5af38",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "02aa7f50-de8b-48f2-bc7c-cff2ead53f72"
        },
        "item": {
          "id": "9840ee49-7853-479f-8526-775a96397427",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "05e7c62e-3736-46d4-aad2-22d6b5787aad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23a01d6-51d5-4e58-b0c2-a8fa7fcdb4b9",
        "cursor": {
          "ref": "ce0592e6-865f-4c09-9d0c-d2c871a9f01e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5be72784-88e6-451c-982c-2c0e2aac1a70"
        },
        "item": {
          "id": "b23a01d6-51d5-4e58-b0c2-a8fa7fcdb4b9",
          "name": "identifiers"
        },
        "response": {
          "id": "a4573a81-c639-4c0d-a897-2fc7bb715b2e",
          "status": "OK",
          "code": 200,
          "responseTime": 260,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025967d1-007c-41c0-be25-5a46f1f6a3d4",
        "cursor": {
          "ref": "c28dff69-d3da-493d-baa0-c5806229f132",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "71de8a7a-a2a5-4bf5-8af8-e73511738755"
        },
        "item": {
          "id": "025967d1-007c-41c0-be25-5a46f1f6a3d4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0740d074-dab1-4f98-97bf-83aacbeff810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40061c7-6a22-4bdf-be6d-37618fa95c32",
        "cursor": {
          "ref": "56e22d4c-4497-4f5e-ba43-677a8b6ef9c3",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ac55f7d7-123c-493d-9689-3b1f0c5154d9"
        },
        "item": {
          "id": "f40061c7-6a22-4bdf-be6d-37618fa95c32",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "118ba568-6b5e-4f9e-b38b-23a15870ed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19ad6d3-7274-4f50-b636-0933cf50994e",
        "cursor": {
          "ref": "ffac06e3-bcfa-4e9d-9e14-23ba469919e3",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7be80cfd-b2a1-4da1-a55c-002e340ea43b"
        },
        "item": {
          "id": "a19ad6d3-7274-4f50-b636-0933cf50994e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "97dbcc59-68a0-4ad4-aa9e-b02b302396a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1093df39-fe6e-4c8d-b794-df54eace5139",
        "cursor": {
          "ref": "19742a3f-2d26-488d-8c1a-8a4f1fb88198",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "adc4711e-82b2-4df0-b46d-4297cbe5c38e"
        },
        "item": {
          "id": "1093df39-fe6e-4c8d-b794-df54eace5139",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "0a90616b-0cef-4199-9008-a3009cfacfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8238320-aed4-4848-8a9f-9f47fa9abfe5",
        "cursor": {
          "ref": "026ab977-e97b-4ea0-a6f2-759544f092dd",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "472a3cc1-33d2-4f8a-be10-37a66e519c5f"
        },
        "item": {
          "id": "e8238320-aed4-4848-8a9f-9f47fa9abfe5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "75bf3ff7-3985-4399-88c4-84d856161fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e479b3e-4f77-4dbc-b630-e063b5269610",
        "cursor": {
          "ref": "20fa1671-24c5-41b5-a820-8f1d0f4291d7",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1339eda0-0faa-4ae4-b856-868a7c3e5c8b"
        },
        "item": {
          "id": "5e479b3e-4f77-4dbc-b630-e063b5269610",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e3ab8ac1-a2e4-4821-80d6-62f9afd3e93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abdcb02-f5ea-4171-afdd-632c132a4d80",
        "cursor": {
          "ref": "9f19149b-89df-4cb1-a1fd-abd25a587863",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "0d855c1b-582a-4853-828d-87b3a75695ec"
        },
        "item": {
          "id": "8abdcb02-f5ea-4171-afdd-632c132a4d80",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2d77b04c-fcac-4059-bceb-bffab5dd63f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b3a8b6c-d4ae-4911-9725-209f4e5f962a",
        "cursor": {
          "ref": "a78b6a30-5950-4d81-b456-739c25613949",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "528602dd-c84a-4e8f-be8f-fac5b2891016"
        },
        "item": {
          "id": "2b3a8b6c-d4ae-4911-9725-209f4e5f962a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c1431e37-20f4-46f9-bfbb-f64cc4454d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1874f27a-ea54-4335-8d6a-67a821b04d78",
        "cursor": {
          "ref": "6aa54181-9421-435c-93aa-5a731aaea0df",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5e776afe-ce80-4ec1-beff-a0cea9a13225"
        },
        "item": {
          "id": "1874f27a-ea54-4335-8d6a-67a821b04d78",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d7f1ec6d-ff0d-4e05-b04b-3d2b64d74488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46797938-4546-4f37-a31a-a4df01f2fd48",
        "cursor": {
          "ref": "bdbc9784-1351-4627-9ba9-d133bdf80c17",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0a841a1b-063b-4db6-9ce5-e0d8908eb422"
        },
        "item": {
          "id": "46797938-4546-4f37-a31a-a4df01f2fd48",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "06f4d35b-b08f-4b30-93d9-a11a7c90ef22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e3dd88-6b83-4dd1-9e6a-137d44483ba1",
        "cursor": {
          "ref": "3e8abb56-6341-46e8-9046-815c93bf8a6f",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "34c62f03-6221-45ae-84c7-75e59b5cc6ae"
        },
        "item": {
          "id": "b1e3dd88-6b83-4dd1-9e6a-137d44483ba1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9f3c4e5a-b915-4f91-9387-e210d8c204bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c4c32ca-296d-48f3-8ac6-bd0e5f799c15",
        "cursor": {
          "ref": "785f5ff0-d1cc-4442-a257-7861e10b92ec",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "84657a29-e59f-4442-88aa-01cb50aa93a3"
        },
        "item": {
          "id": "7c4c32ca-296d-48f3-8ac6-bd0e5f799c15",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0d324bdc-e612-476e-8e34-05403f9c7d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a18015-aaf6-4ea3-854f-12e9cc1de416",
        "cursor": {
          "ref": "72507d0c-8a4c-4819-84e8-b6809ba3a6d3",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "48ab7433-67d0-4ed0-bbda-22886fc8c722"
        },
        "item": {
          "id": "66a18015-aaf6-4ea3-854f-12e9cc1de416",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4d3ee2ac-0766-46f6-89ef-1afd60eba386",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a96fc0e-55cb-4864-9bf5-19b81816b248",
        "cursor": {
          "ref": "49bafa4c-3f0f-41ec-a688-115c859c065e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bd423ee3-a079-42e2-af58-28b49e3169e6"
        },
        "item": {
          "id": "3a96fc0e-55cb-4864-9bf5-19b81816b248",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "478f917d-066d-432d-bc88-0e26f35e9fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a930009e-d13b-4dec-b686-d45b66a0ccc2",
        "cursor": {
          "ref": "60bda845-5503-4a2d-a776-37bac8259702",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "8906aa84-2987-44d1-9e32-9d52ab9ae386"
        },
        "item": {
          "id": "a930009e-d13b-4dec-b686-d45b66a0ccc2",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "44181dbd-1aba-4d0d-abd3-fe750567f3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "defc6644-6c4b-46bb-9296-01b8697f19b6",
        "cursor": {
          "ref": "09bdf6ab-3917-4d91-810f-bb10e3690415",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f3942559-6ab0-4bb2-942c-4c04ebcdcb1d"
        },
        "item": {
          "id": "defc6644-6c4b-46bb-9296-01b8697f19b6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "92c16b5c-fb3d-463c-8114-d237f4a29128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34cfa22-86af-4925-970e-2854ff8b3cc5",
        "cursor": {
          "ref": "90aec878-572a-47bc-b43d-6e2e5b076304",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3c72c0ac-5fd1-4b1f-a75f-0553cd686555"
        },
        "item": {
          "id": "a34cfa22-86af-4925-970e-2854ff8b3cc5",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "13f4015e-29c8-43e7-953d-b5921a67e44e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa214b3-0d14-4f9e-a297-826b5722c1b0",
        "cursor": {
          "ref": "6656f1a3-e207-44c5-bed0-c7dcb9d24ac8",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "16378d61-61e8-49cc-97c5-daa3bc9089f8"
        },
        "item": {
          "id": "5aa214b3-0d14-4f9e-a297-826b5722c1b0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a5c83949-12b5-49e5-9736-ac76f7524038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f0fdc3-a745-4284-b7b7-9290c1f8b4d6",
        "cursor": {
          "ref": "7cba7dd6-2232-4fb3-a07d-f0fe4b097877",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c804792a-7bb4-43c7-9c02-cb2444dc6974"
        },
        "item": {
          "id": "18f0fdc3-a745-4284-b7b7-9290c1f8b4d6",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6493f810-fe79-463a-8570-12c9564af4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8039962c-3727-46ca-a8e4-7396abd1a436",
        "cursor": {
          "ref": "07a9242a-33d4-4607-8667-0e4fbe071712",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d09f45a4-276c-4848-a2d7-bb27218428b5"
        },
        "item": {
          "id": "8039962c-3727-46ca-a8e4-7396abd1a436",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c504e335-0d24-4e88-9f2d-940428ff2ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a9f6e8-bc27-4124-bb4e-0501465e052f",
        "cursor": {
          "ref": "1c3338fb-d381-437c-92c2-02b74fc243e5",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "463c85da-30f0-4841-a3ad-7dc397687166"
        },
        "item": {
          "id": "56a9f6e8-bc27-4124-bb4e-0501465e052f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9bdf919a-7431-4233-8f62-ec4fc2f38d5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8051261-90e2-4c3e-b290-9dc2407318b6",
        "cursor": {
          "ref": "2946f9a1-2b7f-4e20-a31e-328f609292c4",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7dc5088e-5ffe-4a46-88b0-d29248e264c9"
        },
        "item": {
          "id": "f8051261-90e2-4c3e-b290-9dc2407318b6",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1b65ed86-6253-4a4b-865a-32621dbcb7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b609fb-edc0-4561-b464-3573138f2c01",
        "cursor": {
          "ref": "e8c0132b-60dd-4d4c-995d-1c683325b6f5",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "87cdd3bf-eef2-4175-9586-3cd659e4595e"
        },
        "item": {
          "id": "d5b609fb-edc0-4561-b464-3573138f2c01",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "0433a2f1-2e57-4369-8208-00ef582133c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104cec24-8a75-41fc-a112-60c5a3a3a994",
        "cursor": {
          "ref": "2da257e7-13ae-4594-88bd-5a64e64c7344",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "500ba74b-2ab4-4dd6-bedd-e104b0c85e51"
        },
        "item": {
          "id": "104cec24-8a75-41fc-a112-60c5a3a3a994",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e4a339b5-cb46-4f81-9edd-9e4c70c704f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18384e35-5579-4638-9a60-47c19825744d",
        "cursor": {
          "ref": "97106468-0d27-4f9e-9de5-b0c8714b382d",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "c397fd76-f860-4a56-991b-fa084551eef3"
        },
        "item": {
          "id": "18384e35-5579-4638-9a60-47c19825744d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "70edd38a-840b-4ea8-8367-2bf1b5342e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da56da8d-db6e-4ec6-9aaa-7cb32b782f4a",
        "cursor": {
          "ref": "5f208201-727a-4ba1-946e-885242dc01be",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8fba785d-2721-491b-ad06-80c8d08746b1"
        },
        "item": {
          "id": "da56da8d-db6e-4ec6-9aaa-7cb32b782f4a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "7dd613c5-fd67-4bf6-916b-dadf4d98bc45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64271063-1231-4338-8d9c-a981c64a4a83",
        "cursor": {
          "ref": "c2b1576e-d715-4fec-a74e-459aef0f0a1a",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e4ce17a8-5b4d-4fab-b12c-012ae792b3d0"
        },
        "item": {
          "id": "64271063-1231-4338-8d9c-a981c64a4a83",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6f6fa20b-ec75-473e-89d4-56a1ef6894e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f7e63b-0d59-4e1a-9b25-a1cba35e4403",
        "cursor": {
          "ref": "34163bad-46ea-4746-9edb-ba5aae681564",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5b8296ed-e76d-4e73-89ff-896c4bf01b9b"
        },
        "item": {
          "id": "d4f7e63b-0d59-4e1a-9b25-a1cba35e4403",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a847d334-5b46-40c9-b54f-c1a1d9b31185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079752ca-01fc-4436-8e2b-d3b6e2ab528f",
        "cursor": {
          "ref": "3e1d443b-360a-4d13-b838-698f6de5d929",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b0be22fb-c545-4a05-b6fa-9bda3d43c043"
        },
        "item": {
          "id": "079752ca-01fc-4436-8e2b-d3b6e2ab528f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "ea912674-c55c-4091-8d5b-58667a8c53e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458707ca-95af-4f55-8234-9c357dc987d6",
        "cursor": {
          "ref": "792cb0bf-27e2-4079-b0ca-7c8c2431f7c9",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "01eb56bd-c7ab-4aaf-9be5-2ab46e008411"
        },
        "item": {
          "id": "458707ca-95af-4f55-8234-9c357dc987d6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ab877774-8bbf-4fba-8c2f-2939734a8942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "221ae286-6db5-423f-9f8e-02a6b5f33091",
        "cursor": {
          "ref": "4a4b0d97-918c-487c-829d-68ac8f7dd728",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "477069fa-7992-4362-b0ea-9d36b54479f8"
        },
        "item": {
          "id": "221ae286-6db5-423f-9f8e-02a6b5f33091",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1f2ef006-ba0c-4b53-9f09-fa4748237415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e626b3-39da-4979-b91a-a316bbfb576e",
        "cursor": {
          "ref": "467075fa-d18d-4fb0-bf69-5b851a0e8e1a",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c4610f25-94a3-443d-8204-39f411b78a5e"
        },
        "item": {
          "id": "68e626b3-39da-4979-b91a-a316bbfb576e",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "5efebc82-1431-4f29-bef4-42857d8287ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4339092-db7e-4f4e-9773-a8b468f4b79f",
        "cursor": {
          "ref": "ab8ce415-3a4e-4961-bf6b-76b200424bf3",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "e808afe6-e10f-4c3b-b79b-931d19e9b519"
        },
        "item": {
          "id": "e4339092-db7e-4f4e-9773-a8b468f4b79f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f0bbdc9f-a748-453d-bdfc-e3c699b25ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dc268d-4648-41b8-879b-3f70ad088bdb",
        "cursor": {
          "ref": "20c9f3d4-7d01-4e6e-8458-7393de7f4433",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "be852ccd-0fcf-4253-96dd-324045c38e0b"
        },
        "item": {
          "id": "12dc268d-4648-41b8-879b-3f70ad088bdb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ee579fc5-5e38-4c95-a574-e4bd1f650c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee90f908-501b-479d-a5d5-dbb38c2a6a57",
        "cursor": {
          "ref": "200ee574-e87d-48e0-adad-bbb030922c00",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fb5970d3-efac-43f2-b20c-ee89e954b4d2"
        },
        "item": {
          "id": "ee90f908-501b-479d-a5d5-dbb38c2a6a57",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "1d2d5717-80a2-4ed4-92aa-5c206c194179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e365e99-3eb4-4915-987e-dfa112c04d0d",
        "cursor": {
          "ref": "f4d7b917-7493-4aed-86b9-e3aa3859dc92",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ed220268-8a57-4b01-a84c-619bb08fd524"
        },
        "item": {
          "id": "7e365e99-3eb4-4915-987e-dfa112c04d0d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "39b55dde-4d1f-49ef-99f1-0c754b181adb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e135467-74ef-4427-8e35-9ad0ad23a543",
        "cursor": {
          "ref": "677caeae-45af-4978-a065-a8f7ad269b49",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "0b15772b-9624-4236-9662-2ee6013d5bed"
        },
        "item": {
          "id": "6e135467-74ef-4427-8e35-9ad0ad23a543",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "72616749-8b2c-4dfd-942b-ff82804d40f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ed994a-7641-469e-b7f8-c1bf0ed206e0",
        "cursor": {
          "ref": "912ab289-c75b-4073-990a-5936289cc44a",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5f837178-6471-41ba-bb48-cce337fea5ae"
        },
        "item": {
          "id": "75ed994a-7641-469e-b7f8-c1bf0ed206e0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "95e6483b-1e90-4ba3-8ac4-40d588a0203a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0093509-c7d9-4bc4-965d-39c8da0a928c",
        "cursor": {
          "ref": "e2369e6e-5b4a-47c4-b97e-a41d07cf0616",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ff3b99b2-db49-44a7-a71f-da3abe757b10"
        },
        "item": {
          "id": "a0093509-c7d9-4bc4-965d-39c8da0a928c",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "808ab6de-10c5-411e-9624-2586515a78ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b3fff2-faef-463a-8f10-2e96789215a4",
        "cursor": {
          "ref": "79a6a0fe-5900-4800-96ad-2a5f7970ce5a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "59ebdb39-cf02-4c63-99dd-63ef4fe6cf98"
        },
        "item": {
          "id": "67b3fff2-faef-463a-8f10-2e96789215a4",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "d246763a-8693-48fd-a381-8da4280e70c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0fb178d-1162-473d-b762-b7811ffa4487",
        "cursor": {
          "ref": "397c0347-2dde-47cc-b878-c8252edbdd0d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f7f83769-8e14-45d1-b28a-18318bde34a3"
        },
        "item": {
          "id": "a0fb178d-1162-473d-b762-b7811ffa4487",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "df398f2d-db91-459a-9938-ff6cdfbfef3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fc147a-aace-4312-b65d-9e3a576d97ae",
        "cursor": {
          "ref": "0afe729c-b997-4eaa-a541-d168cb6de78f",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "865965c9-38d1-4b6e-8649-c44121b6c077"
        },
        "item": {
          "id": "03fc147a-aace-4312-b65d-9e3a576d97ae",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fe428da3-c900-47f8-911c-8c5fcf82c965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4a1825-75d7-458e-a555-b45f10dd9f1a",
        "cursor": {
          "ref": "91559eed-76bd-43cf-9b49-4a2b288cc0e4",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "816ba09a-d748-42d1-a803-d85a3749b564"
        },
        "item": {
          "id": "7f4a1825-75d7-458e-a555-b45f10dd9f1a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4dce0bcc-52c2-4099-9db0-cb8850ee5c0f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 47,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26eae88-0c3a-4278-9b86-e503bc115c1e",
        "cursor": {
          "ref": "21a60db8-6c75-4dbc-bb9b-99378e5748e3",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "38171a5f-8cf2-4c5f-860b-67cd2f8cc784"
        },
        "item": {
          "id": "f26eae88-0c3a-4278-9b86-e503bc115c1e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "961aaa85-0839-4870-b5c3-241d3023bac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b2e300-6865-4ddf-8789-7a881dee1311",
        "cursor": {
          "ref": "259db26c-7cdf-424a-b488-b59f0030449e",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "efd2c306-e78c-4a68-a468-9b8c4ec194e7"
        },
        "item": {
          "id": "47b2e300-6865-4ddf-8789-7a881dee1311",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "72c68297-f0d5-4213-8416-8e0cc4df4369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83918330-ee79-4f69-9baf-d205b5bd5add",
        "cursor": {
          "ref": "4d409665-a1d2-4889-8d0d-7cf5ae0617b0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "65d8aa63-64b2-4916-a030-14c8c392da2a"
        },
        "item": {
          "id": "83918330-ee79-4f69-9baf-d205b5bd5add",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "900059c6-0b79-4431-b31a-39959523f1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfa4030-fa6b-438c-9cc8-2afaa4818471",
        "cursor": {
          "ref": "b888d69b-49c0-4d67-9731-db34f9c9dd36",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4ae6ec79-c817-42e2-8982-0c768ede19cc"
        },
        "item": {
          "id": "adfa4030-fa6b-438c-9cc8-2afaa4818471",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "3df30951-3a30-43f3-a964-ca2141bcd3cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f72b5d-778a-447f-8d71-69232dd9ccea",
        "cursor": {
          "ref": "0de89943-b2ac-49d8-9d83-5d670094bd73",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "db797f47-7648-4015-9356-0254d439d4ce"
        },
        "item": {
          "id": "04f72b5d-778a-447f-8d71-69232dd9ccea",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "faeca670-f526-48b2-b0c0-e637ab2980b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353dd7f2-d464-4a3b-b7f1-64e75a254669",
        "cursor": {
          "ref": "1f794ee8-2e87-4580-ae5b-7d0e71e38da5",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "ad32cd29-5157-498b-a7b4-ee7f62c70af4"
        },
        "item": {
          "id": "353dd7f2-d464-4a3b-b7f1-64e75a254669",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "62e2b223-e682-4720-8620-781b457bd086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5cf7624-1682-4655-a618-4c4f7f1f9cf8",
        "cursor": {
          "ref": "4d85c397-a1ca-463a-957d-d029f0483823",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "20b78c67-0f3e-41ec-8a1c-c2b3c72e1393"
        },
        "item": {
          "id": "a5cf7624-1682-4655-a618-4c4f7f1f9cf8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "be6c5e7b-0b7a-4451-8efb-6537ac6b3a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b24110e-b379-4698-bc60-f5ff1ac5012e",
        "cursor": {
          "ref": "d89985ee-ae07-4b72-9655-f208c180d895",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fd8d46f2-6942-496b-b598-98fdb1a7fdb6"
        },
        "item": {
          "id": "6b24110e-b379-4698-bc60-f5ff1ac5012e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f3fb1b45-edee-434d-952f-1827ae0c0260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af123bb8-83d0-45a4-a5d8-87ff4e30f211",
        "cursor": {
          "ref": "d390d69d-c0b4-4991-ae62-0523974de197",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f651d36a-9c05-4d5a-9bf4-c74563628aa4"
        },
        "item": {
          "id": "af123bb8-83d0-45a4-a5d8-87ff4e30f211",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1c1cdde7-62bf-4abd-8f2c-c16f77105c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4cd9f15-caaa-4338-a0c8-1547acab943f",
        "cursor": {
          "ref": "fb0fdcb8-a7f4-4c7a-94b2-5c1ae2df9b04",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1d7ef119-8445-4110-9042-07aeb4296756"
        },
        "item": {
          "id": "e4cd9f15-caaa-4338-a0c8-1547acab943f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "e9118e33-1f0d-45b3-9ff2-b0f39b5db164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef8c660-8953-42ad-8e0d-58b282f0f595",
        "cursor": {
          "ref": "2c0e291f-15ed-4511-88e0-5cd171d309d2",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "94207ff6-8be9-4557-97f0-487ce2a11a08"
        },
        "item": {
          "id": "fef8c660-8953-42ad-8e0d-58b282f0f595",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "203408cc-f3ed-416c-9d47-18e6ead8ac2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b30d7fa-891b-4b62-941c-f52f606eaf4e",
        "cursor": {
          "ref": "07baea49-ceff-46c8-8798-a855c7630372",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a1c4fca9-2510-433c-b73c-936d53492d47"
        },
        "item": {
          "id": "6b30d7fa-891b-4b62-941c-f52f606eaf4e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3b591d4b-2291-429d-a4f5-35f4e25005a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4666fbca-e00a-4265-af51-bf1878d034be",
        "cursor": {
          "ref": "24766b33-6264-4bb7-9772-1f180fe414cd",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "46d37e60-9ca1-432d-9e74-5fd78e216118"
        },
        "item": {
          "id": "4666fbca-e00a-4265-af51-bf1878d034be",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "62814292-a107-4920-a1c7-1b07392f48c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d6ce80-2e69-4b18-a7c6-c21b20875db5",
        "cursor": {
          "ref": "1594fe78-bd31-4edb-ac86-e57d80b14ba6",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "55cf5f62-1cc2-4fcb-82b4-8893eceb06de"
        },
        "item": {
          "id": "93d6ce80-2e69-4b18-a7c6-c21b20875db5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ade88a60-688e-435e-ab24-0b3bd065e49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2eb1193-0bd1-4c5e-9099-3bbe3a1066cc",
        "cursor": {
          "ref": "03213796-4cd6-4a15-a6e0-e5e2a848fa3f",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "87ccca1f-f323-4a9a-8620-919c54aafd2d"
        },
        "item": {
          "id": "c2eb1193-0bd1-4c5e-9099-3bbe3a1066cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "68412acb-a96a-4cfa-9b8e-87e3d05d49f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefd3257-fd68-46f7-9a69-81248816959c",
        "cursor": {
          "ref": "6a80412a-111d-4e37-a49b-d17253ea1021",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b522a189-1886-4e8f-82a1-3babf5d5fbd6"
        },
        "item": {
          "id": "eefd3257-fd68-46f7-9a69-81248816959c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a7c909d4-7f51-45da-9d57-d1ae6a4bd311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8382a34c-4d20-4df3-bb96-e6103963b100",
        "cursor": {
          "ref": "d0310594-07bf-4f61-85a0-53c8225e85bc",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6dbb4f32-6c0f-441d-8911-baab4c6434ad"
        },
        "item": {
          "id": "8382a34c-4d20-4df3-bb96-e6103963b100",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "88484b7c-a76c-483f-847e-8916f59974b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb357b8-d707-47eb-8567-fd6d28ec7d98",
        "cursor": {
          "ref": "83eacb8a-446b-4b65-9c5b-6fcc5c8cce28",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c02d9f27-436d-431e-b4a5-7b8ce99d7bbd"
        },
        "item": {
          "id": "1cb357b8-d707-47eb-8567-fd6d28ec7d98",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "f8bb4e6f-5592-4815-91f6-a341d4a33821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d175653-8a78-41ec-8e94-037dee06fd1f",
        "cursor": {
          "ref": "225cac6e-e843-4c9b-a672-2a5ab22dd54a",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a8be9f63-9691-49b7-acb7-c324241575ca"
        },
        "item": {
          "id": "9d175653-8a78-41ec-8e94-037dee06fd1f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "e5a9e027-3b96-4e7a-be81-1acde702f685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030f3e7e-b063-4b4c-8b54-5ad738aa7b3a",
        "cursor": {
          "ref": "2f3c097b-0fde-4f7d-a591-61f62eb74653",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "90078c0c-d1bb-4c85-a20f-a5238275a937"
        },
        "item": {
          "id": "030f3e7e-b063-4b4c-8b54-5ad738aa7b3a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "eb97f61f-e173-4767-a6e4-a1723aec3054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4997ac9-f6df-41ac-84cc-d6a856753e51",
        "cursor": {
          "ref": "96eef3bb-6fa3-46fb-a03d-67ee24530f40",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "08dbf27f-d07d-4364-87ec-5b46848c37d5"
        },
        "item": {
          "id": "b4997ac9-f6df-41ac-84cc-d6a856753e51",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e5832b2b-87f1-43aa-afba-e8d6c7eb4172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b72dc0-2a5a-4f40-96ad-97af5e61c52d",
        "cursor": {
          "ref": "4a32952a-fd87-416e-9cbd-31359ae2ecb2",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6cf45562-3594-45ba-af7d-dd8d89e4617b"
        },
        "item": {
          "id": "29b72dc0-2a5a-4f40-96ad-97af5e61c52d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "00d9125b-5277-4859-8931-7e8ac8edfd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2eb907-f9bb-44d1-b643-46e42d911a14",
        "cursor": {
          "ref": "5f117c5b-2c73-4fd4-a7d3-e67fd4012189",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "895cd340-73a1-43c7-afce-05f4eec16349"
        },
        "item": {
          "id": "4d2eb907-f9bb-44d1-b643-46e42d911a14",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b4a348e8-d3da-4e5b-8516-a0809068cef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f4161d-37af-4fd4-b4d2-56b5a7ca5c76",
        "cursor": {
          "ref": "f757619e-3aff-4852-8cfa-37eed9fe6ebf",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "629fc7ec-f773-430f-adfd-64a911e25c75"
        },
        "item": {
          "id": "c7f4161d-37af-4fd4-b4d2-56b5a7ca5c76",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6a3753c3-cbfe-4556-8b74-c5ed30fa8890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6aede8-cbc1-4ad2-ad5e-f5c8dd2a35db",
        "cursor": {
          "ref": "0d6ad552-8e10-413d-af3c-6ca3ac8e0432",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d32bf4bf-6712-4b55-8949-5e6701678e7f"
        },
        "item": {
          "id": "3d6aede8-cbc1-4ad2-ad5e-f5c8dd2a35db",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "161322b1-ffb1-41db-8556-68a273118ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66a5cbba-05be-4d45-b9e5-1f650361a9e4",
        "cursor": {
          "ref": "dcbad132-c76f-4b41-85f8-8f8803d9f77a",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2ab80982-ca71-4606-a381-8b19117e830d"
        },
        "item": {
          "id": "66a5cbba-05be-4d45-b9e5-1f650361a9e4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "62cad52c-30dd-485c-bdc7-191455436714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65f863c-58b5-4769-9fbb-a03c27737475",
        "cursor": {
          "ref": "ce15067c-01a9-4ae0-bd2e-e997cf179c10",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3d7fc9ce-a88a-440e-8a19-5119aacf0475"
        },
        "item": {
          "id": "c65f863c-58b5-4769-9fbb-a03c27737475",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "73b8b65d-e6f5-4ff1-9574-6c32f031983e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0ff602-13dd-4cea-b540-2d708990727d",
        "cursor": {
          "ref": "a871f9bb-e5bc-4905-bf7c-96fbe142b1de",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "8235a61f-4ee5-41d9-8fbe-8f1f731c5aa3"
        },
        "item": {
          "id": "2e0ff602-13dd-4cea-b540-2d708990727d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "27fb27d8-2b18-451c-bf0c-e4c75ef34a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed336c4a-c579-44df-b700-ab3004c6144d",
        "cursor": {
          "ref": "bd25ffc5-f068-40bb-9cc4-609d80384a83",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6c4914f2-a79b-4a65-91be-1f9f66e8d7cb"
        },
        "item": {
          "id": "ed336c4a-c579-44df-b700-ab3004c6144d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ee344d06-da6b-4145-b6c8-c01f412ef9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4297db4d-5095-4644-a7d5-3da62680c5e2",
        "cursor": {
          "ref": "0b369f08-1580-47a1-ae7e-8d758661fd36",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "da167b86-1dcd-4399-8af6-0c696230bae3"
        },
        "item": {
          "id": "4297db4d-5095-4644-a7d5-3da62680c5e2",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "cfa09f36-15e3-4f6a-ba18-8f94ebde54b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24cc6e4-68f3-447b-9208-fe4b094ff36a",
        "cursor": {
          "ref": "7ad95c7b-ef0a-4636-b077-41348b78e57a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "67df4fa3-9a2a-48a9-9f49-598109a1ec3f"
        },
        "item": {
          "id": "f24cc6e4-68f3-447b-9208-fe4b094ff36a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "18edfa5a-c7ae-46f6-971b-40896e3eabee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc3e9df-517b-4194-88c2-2cbbd2a3ecf9",
        "cursor": {
          "ref": "942a3fb4-233c-4d5e-9d3d-27f327b104af",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f0f5c440-73e2-494c-9343-a20b16290e31"
        },
        "item": {
          "id": "4fc3e9df-517b-4194-88c2-2cbbd2a3ecf9",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ec82223d-1b63-409d-925c-ea7164ab7e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0731489-1f86-42a5-aa75-932c94989fb9",
        "cursor": {
          "ref": "1216f5ef-afad-4651-8a01-af327a4394e6",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ddbcaa5f-a988-43d5-834a-f901e5f0becf"
        },
        "item": {
          "id": "e0731489-1f86-42a5-aa75-932c94989fb9",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "fccd3a96-237b-4b6f-aac7-c6bf0ae59d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a47df2-5950-41e4-822a-872fcb3ce948",
        "cursor": {
          "ref": "8d215547-ce65-4fcb-ba00-911266c24cf2",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "78743253-a481-46f4-a083-eb5049a00bf2"
        },
        "item": {
          "id": "22a47df2-5950-41e4-822a-872fcb3ce948",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "72ddb60d-6081-4b59-8a7b-588ea7bf2da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef01c1b2-1e67-4e72-897b-804eca462d22",
        "cursor": {
          "ref": "14578c02-3aca-4d67-86bb-ec86196db4ce",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8ef97f7c-aeba-4fb0-8493-b6f6da73317c"
        },
        "item": {
          "id": "ef01c1b2-1e67-4e72-897b-804eca462d22",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dfbc7257-10f2-4480-a5d9-b6377d08438b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbb58c2c-9dbf-41d7-9b82-84ab6b0273a4",
        "cursor": {
          "ref": "51b87651-785b-455c-bad1-cec59b178de3",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "51ee2e19-e2ce-4a0c-9c1f-3f45680e4ef0"
        },
        "item": {
          "id": "fbb58c2c-9dbf-41d7-9b82-84ab6b0273a4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2be2f9bc-53ce-41ef-9c81-04aa53fadb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6363649e-00a8-4791-b947-f6dd3cd9d143",
        "cursor": {
          "ref": "e94c7e16-007e-4302-b238-777902b02d5b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "512b0bd3-2429-4ecd-ab86-8732088bf700"
        },
        "item": {
          "id": "6363649e-00a8-4791-b947-f6dd3cd9d143",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "103fce17-696f-4e35-9408-ffa29295c55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735a51d2-0e6c-4743-9888-67970bd860f9",
        "cursor": {
          "ref": "bbca03f9-942b-47c8-9917-587e2c76e3b2",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "b61c6f43-0f67-41d1-90ec-d9f80dbbfc3a"
        },
        "item": {
          "id": "735a51d2-0e6c-4743-9888-67970bd860f9",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2f37c9ad-56a3-4b75-ae22-495fb8d1367d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83d8c4f-9e91-4770-9a6a-1c8de7cc0d7f",
        "cursor": {
          "ref": "54d52959-9cdf-4475-a770-afcb67b22eeb",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b7f3e20c-fa4b-4cfa-8206-f4e0965b021f"
        },
        "item": {
          "id": "f83d8c4f-9e91-4770-9a6a-1c8de7cc0d7f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "50552269-d29b-44b2-a478-a03c122f59cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f76d3db-d04a-44fe-a4fe-c283539a05d9",
        "cursor": {
          "ref": "8f6fc026-da00-4ceb-82db-e68c7d414fe3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "798db13b-f07a-44ca-ae20-602cf8952686"
        },
        "item": {
          "id": "1f76d3db-d04a-44fe-a4fe-c283539a05d9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c4b59c49-1824-4cd8-9f0f-830f756c04dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefb2587-28f9-4f5a-aa80-2742424d7454",
        "cursor": {
          "ref": "95f553c5-43fd-4fc1-a26e-af548d76eeb1",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b3424c3f-685b-4a91-85ab-9a14c69be51a"
        },
        "item": {
          "id": "eefb2587-28f9-4f5a-aa80-2742424d7454",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5ebab92d-6344-4139-8c47-30f26fc18ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33fe8c8-98b6-4c46-8138-d9756bd50552",
        "cursor": {
          "ref": "2420cf65-1c06-4298-b32b-b8fbf8401bfa",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b6f0f741-06c5-48b2-b7bb-7ba03c9752a8"
        },
        "item": {
          "id": "d33fe8c8-98b6-4c46-8138-d9756bd50552",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "556833e9-6175-42ed-9123-9acd92c57b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a779e7ee-61f6-41d5-a4b1-9d33b03ef98a",
        "cursor": {
          "ref": "5f9779ac-35bc-448c-a662-c3900f3b7f30",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1d95639a-b67f-4a3e-a227-5292b22c41a5"
        },
        "item": {
          "id": "a779e7ee-61f6-41d5-a4b1-9d33b03ef98a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bf75c11e-3642-4847-a9d9-f0d63905409a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a010b2-2654-4a57-987a-4980cba5cb3e",
        "cursor": {
          "ref": "11812510-285e-4db9-9694-4d884522969d",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7ccfefb1-fed7-4605-befd-7c3c8fb76cf6"
        },
        "item": {
          "id": "d9a010b2-2654-4a57-987a-4980cba5cb3e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4f592f3e-3e18-43df-8bb1-7e1148a81348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005d37fd-4fb0-4dc8-9a2f-a4dbceec72e5",
        "cursor": {
          "ref": "5d3d3b57-8283-4c1a-bd7d-76a874f71c2e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4d444f0b-7f6b-4fe3-844c-6e91d8bdec77"
        },
        "item": {
          "id": "005d37fd-4fb0-4dc8-9a2f-a4dbceec72e5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "98dc6f8b-0493-45a8-a53e-6ca395df5741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457935b6-bed0-45c8-bc23-05137d8d7007",
        "cursor": {
          "ref": "1131a4c9-3e84-47ce-b034-6d9cf16df4fb",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bd22991a-0f38-4510-93f2-3de79a5d63cc"
        },
        "item": {
          "id": "457935b6-bed0-45c8-bc23-05137d8d7007",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "569d410e-d483-4052-9d51-29f2b314aea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8858047-da9d-4b8f-bd55-821a75b9d772",
        "cursor": {
          "ref": "a64b7335-19df-400c-8358-66b1143c689a",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4a3cf197-e177-48f8-9345-7bb8a97088f8"
        },
        "item": {
          "id": "f8858047-da9d-4b8f-bd55-821a75b9d772",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6c7de636-4706-4412-8628-de28bf221322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba27328e-8ae0-4345-96b2-8cb9bd4dedf6",
        "cursor": {
          "ref": "2264d2ca-3cd5-4238-b069-7e4f314490af",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "03039882-cbe4-4bb8-a8bf-553082a735c6"
        },
        "item": {
          "id": "ba27328e-8ae0-4345-96b2-8cb9bd4dedf6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "63a5a837-825c-411d-bad5-0c7f3f5aadbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3919b756-1e1a-4227-bdcd-f9c814f7962e",
        "cursor": {
          "ref": "5baf722c-606f-4afb-9803-3c648a5c7207",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c5f05e51-b7b8-4ca1-a417-dc34fc836f99"
        },
        "item": {
          "id": "3919b756-1e1a-4227-bdcd-f9c814f7962e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ba0f2b3f-46e2-4fac-a365-0aa280d98fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23e4904-abde-4eb6-aa1a-3f71bf4c4785",
        "cursor": {
          "ref": "2effc744-cb86-466d-bb3a-13006e457899",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "63f94114-12f7-48c9-a682-87ded3934dc4"
        },
        "item": {
          "id": "f23e4904-abde-4eb6-aa1a-3f71bf4c4785",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7c1fdf7d-f15b-4ca4-ad87-4ad2cbd7042f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a464d9-a95e-4388-82c3-387c34d8f984",
        "cursor": {
          "ref": "714b18f6-137f-4c58-b428-817f54ae9e0b",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cff64eb7-112a-43d4-8ca0-b52ee8a5feb9"
        },
        "item": {
          "id": "68a464d9-a95e-4388-82c3-387c34d8f984",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7304d53b-3738-4e4f-9878-78458fd38246",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "45146f93-c894-4b82-9c62-b7f70f950719",
        "cursor": {
          "ref": "59849d36-4de3-483c-880f-141149b27707",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "15062859-dc22-4571-b61f-3927bef1d576"
        },
        "item": {
          "id": "45146f93-c894-4b82-9c62-b7f70f950719",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3fc7d10d-57d2-4fdc-a6a0-cb78e4a9266e",
          "status": "Created",
          "code": 201,
          "responseTime": 200,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "091921e6-342a-496c-97d2-05d74a48e8a0",
        "cursor": {
          "ref": "afcfb8ca-1dda-476f-96f6-68446c5f04bd",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2162f0e2-ca4b-4635-83b7-cb49b0800f0b"
        },
        "item": {
          "id": "091921e6-342a-496c-97d2-05d74a48e8a0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5d272529-b93c-4723-83b5-0f6caf5712b2",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e3acdda-a905-4dd4-b714-d0393dea6189",
        "cursor": {
          "ref": "cb812f62-d6e7-46ba-97c0-a7aaffdd04e8",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ae014fb2-8d37-4261-bac3-a339424a8373"
        },
        "item": {
          "id": "2e3acdda-a905-4dd4-b714-d0393dea6189",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "84c1c55d-7490-42c3-901f-245ce675c999",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdf2cf2-7ff0-49e9-bbdf-2cdfb297ae34",
        "cursor": {
          "ref": "9c42b9ff-7f5a-44e1-897d-915bff554bfb",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "154302e5-d68b-4b8c-941a-ee7adad48bee"
        },
        "item": {
          "id": "1cdf2cf2-7ff0-49e9-bbdf-2cdfb297ae34",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "f28dcef6-27cc-41c4-92a8-705afc0b8655",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 907
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0b7219-c8e4-43aa-9a4e-2331ac74529b",
        "cursor": {
          "ref": "0238952f-c70c-4152-b03a-b0fb112230b2",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "09e978e0-67ed-4be9-83d3-3eb21940c8b8"
        },
        "item": {
          "id": "3b0b7219-c8e4-43aa-9a4e-2331ac74529b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a3bee9bd-21cd-42a3-a429-b7c646f61669",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce464ea9-48f5-451f-b46c-50a703cbdcfe",
        "cursor": {
          "ref": "3eb01164-df4b-42a4-b368-933ba83e5f02",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "75a73833-a818-4386-b71d-573421d2110b"
        },
        "item": {
          "id": "ce464ea9-48f5-451f-b46c-50a703cbdcfe",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "60b2df42-6319-47a3-aac0-871daa1437b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4ff69c-17ef-4f95-b948-d139a69f6381",
        "cursor": {
          "ref": "b2afc6c8-fca3-4b18-81b3-2dd72dddb46f",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "08325c7e-d9da-4a0f-b7a1-3b7efa85bb1b"
        },
        "item": {
          "id": "ea4ff69c-17ef-4f95-b948-d139a69f6381",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ee8bf327-09d8-4967-8e9d-058d74dfbb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c210e8b-9792-4dc5-91ca-2bd76e8eae01",
        "cursor": {
          "ref": "4177ef22-1629-409c-9d07-499b2e8f723a",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "07833af7-3e6e-4684-894b-7f9a969eee45"
        },
        "item": {
          "id": "3c210e8b-9792-4dc5-91ca-2bd76e8eae01",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d946d2bb-da82-4c64-9e5b-04f109142427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92000ce-16e0-4e6c-8195-cd1b9ead52ce",
        "cursor": {
          "ref": "d8941b6a-927e-42b0-a57b-775429210748",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "26e00a12-eac9-48e0-b5c8-811ba6dc1308"
        },
        "item": {
          "id": "f92000ce-16e0-4e6c-8195-cd1b9ead52ce",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ce64da8b-b201-44d1-888c-ec829f54ed15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bf7b8a-7df3-49d2-8c83-e7d0e435ac7e",
        "cursor": {
          "ref": "2c9c73ca-c65b-4d59-8bed-28be5f0e3ff2",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "72662b44-b2d4-428d-b99d-e622ef728b71"
        },
        "item": {
          "id": "84bf7b8a-7df3-49d2-8c83-e7d0e435ac7e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7d6d73ad-e504-4c14-bc51-f1ed5429b67f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a774f0-f0a3-4739-814f-207fdcc154a1",
        "cursor": {
          "ref": "cff2d3b3-c239-49f5-9042-9ef3009eb2eb",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "39a2ee60-1940-404b-8c56-9251c3d725da"
        },
        "item": {
          "id": "e5a774f0-f0a3-4739-814f-207fdcc154a1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7904e206-2740-4f46-a3e0-cd7310cbecd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded013b8-bd9b-4867-8395-c2371d6c6710",
        "cursor": {
          "ref": "7b2496b1-024a-4f61-8ff4-22f183306713",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "f0a235c2-4c99-4c0f-9c1c-0330a5c55b6a"
        },
        "item": {
          "id": "ded013b8-bd9b-4867-8395-c2371d6c6710",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5dbbf7a8-d1de-40aa-9222-bceca78cd1dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7f6520-f70a-497b-a882-3ea83c6960fa",
        "cursor": {
          "ref": "9fdd3cd6-0db9-4874-b211-e4b27101ce7c",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e1a2cf86-9eed-4c06-a7cb-7e767421dbfc"
        },
        "item": {
          "id": "4b7f6520-f70a-497b-a882-3ea83c6960fa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "26d599c9-815b-4f03-8036-6c9488caaee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c430b5bf-0d6b-44a4-af9a-cf2f4b80dbc7",
        "cursor": {
          "ref": "7d3ee36b-7f5f-481d-9159-72c053541213",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b5d28109-9142-4fa8-9949-612c01e11e7b"
        },
        "item": {
          "id": "c430b5bf-0d6b-44a4-af9a-cf2f4b80dbc7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9d26a64c-1d0d-4d02-beb2-9b6b6ab76cf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22adef7-475f-4d62-9a81-68728a66618e",
        "cursor": {
          "ref": "a52bebe5-b6b9-4e1b-9c97-2266d7235377",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "047b8e9d-cc53-4af7-b059-2d9d2d6718c8"
        },
        "item": {
          "id": "c22adef7-475f-4d62-9a81-68728a66618e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eebf8dc2-97f9-4117-861e-8371ebfeb470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f23a262-29f0-48d0-9e6c-2dcf50facb41",
        "cursor": {
          "ref": "1f60a137-317d-4b04-a945-5aa503e9901c",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8641cf1e-6212-41b3-9e5b-5eefc201066d"
        },
        "item": {
          "id": "6f23a262-29f0-48d0-9e6c-2dcf50facb41",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0ac1ce42-6b94-46c1-8bec-fcef507ed917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6370d0-09bc-418e-8910-17d63c50cf98",
        "cursor": {
          "ref": "5dc65e4d-d05d-4dd5-a8f7-3586818e0283",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a51e8f15-0bdb-44c0-ba97-9ab46932a748"
        },
        "item": {
          "id": "da6370d0-09bc-418e-8910-17d63c50cf98",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "24e3cbbe-81e6-4c35-b29c-69ddbd679fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f5e85b-dd0a-4db1-9ef6-ca6d512a4eb9",
        "cursor": {
          "ref": "3ef9e9b0-49c1-49c6-a8a6-5ad1fb2e9015",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "36b2dd69-7f0c-480e-90eb-2ca8f3d57307"
        },
        "item": {
          "id": "a9f5e85b-dd0a-4db1-9ef6-ca6d512a4eb9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "761d9f18-b561-4bea-895b-e682ecaec966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd65cfd-e2a6-473d-8250-8b3995576a4f",
        "cursor": {
          "ref": "77d8417b-bd5c-4f24-a4c6-874a502dfe90",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d764f76a-1ca6-413e-954b-aa6593405a20"
        },
        "item": {
          "id": "6bd65cfd-e2a6-473d-8250-8b3995576a4f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "39b22143-1449-4b3a-8dca-be94b4b6e84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "591b48b3-ec3a-445c-a1c4-17fe6c128e5d",
        "cursor": {
          "ref": "e95bd471-1e1c-42ca-8e1b-192c9775bcca",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "67b6ec2e-33ae-4e77-9ffc-7158e6786920"
        },
        "item": {
          "id": "591b48b3-ec3a-445c-a1c4-17fe6c128e5d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "42e5e5f6-df5d-4656-a048-29a54d8e45ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36f4a5d-0463-4baa-acec-115835714c9c",
        "cursor": {
          "ref": "5c0fbf60-2760-46e1-bb02-342dfe744a3f",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "46980da0-8204-46f7-9658-07135ba38ab8"
        },
        "item": {
          "id": "d36f4a5d-0463-4baa-acec-115835714c9c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "031d2c4b-b570-42c3-8b08-3a7fcac83f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62cbd7da-17ff-4361-bd7c-5538191ffe28",
        "cursor": {
          "ref": "235f8914-3fc9-4f5a-85d1-bfb52f0b4cc6",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "29cd6ff3-e929-4a93-b698-5c3576b30e56"
        },
        "item": {
          "id": "62cbd7da-17ff-4361-bd7c-5538191ffe28",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "00f0af14-c3e2-45a4-b3fa-18f0ceeb7d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b63b9f-0b4a-448e-9f59-991c06df75b3",
        "cursor": {
          "ref": "17d09e7c-141d-418b-b467-ddd26788e7e6",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1a462303-b86c-4530-ad0f-bcc4fcba86b3"
        },
        "item": {
          "id": "79b63b9f-0b4a-448e-9f59-991c06df75b3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "131c7dd2-7f73-4194-8a80-1726270b3765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf17b8d-3953-45ec-b7b4-bc411b3a4d77",
        "cursor": {
          "ref": "574033aa-224c-444f-92c5-ee5781e75811",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c7a0d58a-4bcf-41a2-8d4a-73e49d2b1441"
        },
        "item": {
          "id": "9bf17b8d-3953-45ec-b7b4-bc411b3a4d77",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5ac3d7bc-4338-4744-ae51-a3c7b34510d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efacd97-0bf3-49d6-8852-549556869d6b",
        "cursor": {
          "ref": "3a552a93-318e-4cc7-816b-6cc6a0a88be0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bdb1aaee-9276-4a18-9f98-97e687239fa1"
        },
        "item": {
          "id": "9efacd97-0bf3-49d6-8852-549556869d6b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6ef9ad91-236c-4de8-9f3a-40de4918ffd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3965470a-26ad-4e53-8356-043c89fb2d20",
        "cursor": {
          "ref": "a76378b3-ff70-477f-8ced-5bfc0b7f1f4e",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ec5939ef-0be5-443e-a1b1-54a6c1a60868"
        },
        "item": {
          "id": "3965470a-26ad-4e53-8356-043c89fb2d20",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e3da24be-1f5c-498a-a66e-9e1af9809d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6efd4f1-68ac-4e27-b6e4-b02ec14e9759",
        "cursor": {
          "ref": "b3271893-e6ea-4637-8828-e4f8ddc1145e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6579ce41-50fc-4db9-ab8c-9ba25cc46208"
        },
        "item": {
          "id": "c6efd4f1-68ac-4e27-b6e4-b02ec14e9759",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "055dada1-93b1-4c01-8e86-ae28aa34807f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fefafc8-771f-407c-8464-66f6cf38cb0b",
        "cursor": {
          "ref": "6489abb3-d2c9-495b-88f1-06cd64267297",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "c6b1d9fb-b09a-4bf1-8fc3-85b76641bd32"
        },
        "item": {
          "id": "1fefafc8-771f-407c-8464-66f6cf38cb0b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "da0567a9-42ff-4801-85fb-c2e3f15426cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2addb75-96ff-48aa-8af1-83ec4b3559c0",
        "cursor": {
          "ref": "2a6701e4-61a4-4263-a0ff-9952e66005cf",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ef75099c-84c7-4362-8697-06992d4ae3e4"
        },
        "item": {
          "id": "d2addb75-96ff-48aa-8af1-83ec4b3559c0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "82398bdb-4a14-4f1c-aeb3-60c744653620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72154590-52d3-4ebc-9a41-ed2c84fa2e69",
        "cursor": {
          "ref": "9bde6e45-ad8a-4d79-85ed-2e822e3db260",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "68f5df11-b3ba-4874-a3e2-0a23737183bf"
        },
        "item": {
          "id": "72154590-52d3-4ebc-9a41-ed2c84fa2e69",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c69792b2-21f0-4823-acde-a1f96c29fbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318a5258-89fc-402a-9b20-abb5e0984f0a",
        "cursor": {
          "ref": "2e59cf91-5432-4217-8066-cb252799ac6a",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "423eac73-c409-4b5a-b943-4c8089dd71c1"
        },
        "item": {
          "id": "318a5258-89fc-402a-9b20-abb5e0984f0a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "51c94bc3-3d41-48fa-9537-14d057567f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb85670-78c9-4a85-a187-67b8d1287d49",
        "cursor": {
          "ref": "62a2dedc-5e64-46d7-a2c6-637267695cdd",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "77008665-f397-45dc-827d-fbd96e04fae9"
        },
        "item": {
          "id": "ddb85670-78c9-4a85-a187-67b8d1287d49",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "0b6f2925-d9ce-4c4f-8892-73d607df215e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06abab70-4fac-4703-aa15-571dffbefbc8",
        "cursor": {
          "ref": "ef67afc1-a526-47ce-84c9-c82458acdd03",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ba785a20-f1c5-4f25-be6e-fc7f52f876f4"
        },
        "item": {
          "id": "06abab70-4fac-4703-aa15-571dffbefbc8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d714dad4-7849-43cc-9357-de17bc787f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba54063f-d1de-4141-b645-dfe2d8ba73f5",
        "cursor": {
          "ref": "1ebef9b2-d928-4485-89ad-cfe1c27679a3",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "f9289ea3-473d-4a39-944c-87c5d2af6d8c"
        },
        "item": {
          "id": "ba54063f-d1de-4141-b645-dfe2d8ba73f5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9af6c966-cf07-45c0-9a5a-46876d26ef27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8c55ee-dd90-4312-96b5-5fff217eef26",
        "cursor": {
          "ref": "556f055d-ed53-4415-b687-9335b3fdf8d7",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d8adb08e-c90e-4cad-b9c6-248c1064ddad"
        },
        "item": {
          "id": "ce8c55ee-dd90-4312-96b5-5fff217eef26",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "c2bf028f-07ab-4e32-bfd3-4f7c6dbb5da5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992adb70-bc7e-440a-a218-8979874132ab",
        "cursor": {
          "ref": "c7fecf95-2dfe-4bb7-a639-97091f5ba722",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d0ece49f-ac5f-4d5e-ac85-cae17fbb4958"
        },
        "item": {
          "id": "992adb70-bc7e-440a-a218-8979874132ab",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a6a2c06a-11db-47db-bdab-9f0cf57b0a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3da5003-454f-4171-a8a7-e1fa5f8e0c1e",
        "cursor": {
          "ref": "3a7b0749-d256-41a9-8b65-a099ef5c1c39",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6795b5f2-6375-4b99-b12f-b2fbeed84df7"
        },
        "item": {
          "id": "e3da5003-454f-4171-a8a7-e1fa5f8e0c1e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "21adaaf0-81b5-4ec9-90b3-cc38ea6fc083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9009af-5187-4657-bda5-e99177a46e24",
        "cursor": {
          "ref": "2a40e38b-0838-4710-9d33-326785ae618d",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a614b9e1-4540-43a1-afb6-7f08e48c2fb3"
        },
        "item": {
          "id": "db9009af-5187-4657-bda5-e99177a46e24",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cfc52ba1-fd7a-458f-9898-8eb3202be95e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89caaf1c-8a8c-4264-87e5-7dd58b80a355",
        "cursor": {
          "ref": "fa6a3cf3-0b2e-4a7d-9eb7-dcfc6cd3ed45",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "82e359c6-0aa2-4896-a381-a2edf833b2e4"
        },
        "item": {
          "id": "89caaf1c-8a8c-4264-87e5-7dd58b80a355",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f4eab887-84e6-404a-8475-d791ac460473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e857d4a-b38a-4e10-a484-7d91700960b1",
        "cursor": {
          "ref": "b573adc1-f30c-47d2-ae8f-b694ad53a20d",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "dcf30fcc-f8e0-4c98-945f-05e55d89b159"
        },
        "item": {
          "id": "7e857d4a-b38a-4e10-a484-7d91700960b1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e40fe95b-ddac-4d83-a3b0-2093faebc5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5789a258-1f12-4813-befc-65284bff481e",
        "cursor": {
          "ref": "6b422b33-23dd-45bf-b00c-8e59de9a6347",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "92e72073-b00c-48f3-942b-0ccc5295e433"
        },
        "item": {
          "id": "5789a258-1f12-4813-befc-65284bff481e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "5a3924a6-7339-4da9-b7e5-c4ef8bb1111b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccb52f5-72ac-4c69-ac16-a1f11f835352",
        "cursor": {
          "ref": "bd8e98cd-e26f-4cc3-95b9-0403030040df",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d58dfa44-76aa-4f18-ade1-70d3eecc393a"
        },
        "item": {
          "id": "cccb52f5-72ac-4c69-ac16-a1f11f835352",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "71ad6f79-01aa-48e3-a334-ff86a237fa73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f3a2c9-ddc1-4c58-957a-bdc5dbf03161",
        "cursor": {
          "ref": "e752df6a-b31e-4f0b-9ae5-9fa0d0ab091b",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7508ac80-e434-489e-a3a3-bdd009059648"
        },
        "item": {
          "id": "50f3a2c9-ddc1-4c58-957a-bdc5dbf03161",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ead68c71-b568-43b3-9084-bb27a9129582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5e1dde-17de-45e7-9bc4-aa4f5a8fcd76",
        "cursor": {
          "ref": "98a7e216-45f0-49e3-8927-54a8f3dca153",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "12d923c4-1aaa-4f25-aea8-361eaea5725e"
        },
        "item": {
          "id": "6f5e1dde-17de-45e7-9bc4-aa4f5a8fcd76",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "46b9b326-372e-4999-a11d-8d884da05c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11070723-faa7-41b6-91a9-a9c431a4ee28",
        "cursor": {
          "ref": "9b78fde2-3791-4312-8e55-2ee45fb7c388",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3d016604-4260-41e0-ade7-46e975b10375"
        },
        "item": {
          "id": "11070723-faa7-41b6-91a9-a9c431a4ee28",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c4e269f7-9b88-4b9d-afb9-f0b0f556a37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd7bc8cc-4b7f-41dd-afad-98a4a527a5a6",
        "cursor": {
          "ref": "9a30df8a-7f61-4fff-aab0-724c4c79391a",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c90a0241-8ce9-41ec-9149-65bceb2902da"
        },
        "item": {
          "id": "bd7bc8cc-4b7f-41dd-afad-98a4a527a5a6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "83da0aea-e59c-41b4-b358-17bfd8b62187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690dc03c-ccc7-4c7e-bf3e-ea48f74e837e",
        "cursor": {
          "ref": "a61595f0-cf1f-432c-8586-ba91c93d6c25",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "694c0d53-62e0-4d57-80c1-b18afcecdf45"
        },
        "item": {
          "id": "690dc03c-ccc7-4c7e-bf3e-ea48f74e837e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f0ca8deb-1d05-4af8-865a-c74df68026cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676fe950-c86e-4321-b90b-e23bfc33a896",
        "cursor": {
          "ref": "29e93bb2-f2b8-4fc1-913d-6634c432a383",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b6b56187-7f6a-4a99-8c06-1a3493e788ab"
        },
        "item": {
          "id": "676fe950-c86e-4321-b90b-e23bfc33a896",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1a00aa72-01f1-4977-8462-b0ef8b83064c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8267c719-b74e-44d8-9b97-4e5703019327",
        "cursor": {
          "ref": "043ead33-9f20-4564-bfa9-6867136b1819",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f98b1a13-6110-4e9b-8acc-dd1c1a4af8a9"
        },
        "item": {
          "id": "8267c719-b74e-44d8-9b97-4e5703019327",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "cdacb5dd-8319-4bdb-9cf1-196b86bd2530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5753c1aa-98f7-432e-be5e-edc94e39a07c",
        "cursor": {
          "ref": "3d113550-8e22-419a-8963-4d0cf11f114d",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "de83c645-f3c1-44f9-8de5-7c05e8c2118c"
        },
        "item": {
          "id": "5753c1aa-98f7-432e-be5e-edc94e39a07c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "914e18c6-8073-4e84-831f-74df78cc1618",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6b28ac-bee7-44af-9cbf-03a404b87533",
        "cursor": {
          "ref": "70ddb27c-bc7b-4f6a-8386-aca1c241e08a",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d289af38-c50b-4bff-b5da-d26a9c29d23a"
        },
        "item": {
          "id": "ba6b28ac-bee7-44af-9cbf-03a404b87533",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9f7bb00f-8c48-4920-9ae5-407747e764e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e345682-a683-48f1-838f-24f3547b2fcb",
        "cursor": {
          "ref": "f07c5032-1d3c-4a8b-9bba-037503c73e82",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a3c2659d-78ba-4273-9713-a2c5d1bb0d00"
        },
        "item": {
          "id": "5e345682-a683-48f1-838f-24f3547b2fcb",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c484dca1-ddd5-4c02-8f2f-5bd056fd84f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d9d298-4443-49c6-b1e0-54fed0f9bc69",
        "cursor": {
          "ref": "1354a3db-231d-4c94-9300-040f6a8db232",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "97b87b08-a992-47a7-9da6-19c4684d8dc4"
        },
        "item": {
          "id": "47d9d298-4443-49c6-b1e0-54fed0f9bc69",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "dc853a7a-370c-4182-a011-92bd2140f68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f905adbf-c4af-4895-9a36-09eb8f547ec8",
        "cursor": {
          "ref": "cdae605c-3dc1-4aac-b218-df5f9dddef65",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "17c9a45f-3556-4e25-9675-76026980db11"
        },
        "item": {
          "id": "f905adbf-c4af-4895-9a36-09eb8f547ec8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3461d557-88c0-454d-aa45-8fe78329617e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164237b2-d673-4811-b859-42bc63f60237",
        "cursor": {
          "ref": "de2f646b-f2ad-4f8b-9875-82ffee7d0bed",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "31a48f2b-db3d-415e-8fd4-b13b6f0d17ea"
        },
        "item": {
          "id": "164237b2-d673-4811-b859-42bc63f60237",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d7d651d6-a2c7-4d62-aa7d-3460c8471308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f367cba3-66b1-476c-a587-bdbf39e379a7",
        "cursor": {
          "ref": "6ea9d6a3-d86a-47ac-a572-673a7f2deac7",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "99434338-2fda-4ac4-973c-849dab5a9064"
        },
        "item": {
          "id": "f367cba3-66b1-476c-a587-bdbf39e379a7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f7953437-fc48-4e9a-acb3-c1ed0dea72d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cc5ad9-fb5a-4f5b-837e-ea959cbdfc01",
        "cursor": {
          "ref": "3d0b345e-4b33-4e37-a9b7-2243e9ab03fa",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "eeec75cd-7e5c-4ec3-bacc-3717c74c482a"
        },
        "item": {
          "id": "e2cc5ad9-fb5a-4f5b-837e-ea959cbdfc01",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a025a444-6b70-473f-b3c4-70d0b9f83f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39274c32-2dc2-42ea-8f31-2f54199b41cc",
        "cursor": {
          "ref": "86eda0d0-4ab7-44c0-9bf6-407e9ca31ea0",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "048fdd3f-1514-4adc-8629-14ecbb156983"
        },
        "item": {
          "id": "39274c32-2dc2-42ea-8f31-2f54199b41cc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3d4ee075-dfd7-4d1f-b189-0cf4c05bad0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd52077f-4ca1-4b2d-bee6-b9308413aae5",
        "cursor": {
          "ref": "3e844665-cf84-463e-8fdd-cac8e9281221",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2366a5a9-fcf0-4f4e-9ec3-c22efa607e05"
        },
        "item": {
          "id": "bd52077f-4ca1-4b2d-bee6-b9308413aae5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8af7cdff-9596-46d4-9de0-a20fe4f6d103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4027946-1efd-43e9-b970-e45cf1deb31a",
        "cursor": {
          "ref": "b58f2866-9b4a-40ac-8869-46f36366228f",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dc3d7af1-e740-4336-b8f7-e8b784ddc983"
        },
        "item": {
          "id": "d4027946-1efd-43e9-b970-e45cf1deb31a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e0f69937-03cf-46f0-98f1-9ee025b5018b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef2eccab-e445-454e-b5e5-1b8d998aa403",
        "cursor": {
          "ref": "e57807a9-9f75-4ca1-a5b4-236f8fc9da76",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f5b70843-b933-470f-8409-df86233414b9"
        },
        "item": {
          "id": "ef2eccab-e445-454e-b5e5-1b8d998aa403",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ea32bb79-c9c8-477f-bc9c-367c369c1604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8168cff4-7946-4a4e-9d4c-7c18bd2deaba",
        "cursor": {
          "ref": "710dab01-21c7-43fb-ba47-a98d1bb5419d",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "350665d9-be82-4c0a-925d-61bc70e766c1"
        },
        "item": {
          "id": "8168cff4-7946-4a4e-9d4c-7c18bd2deaba",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e80a284f-2bda-44f1-afd9-777c4a8e94fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074a0bba-1f12-44b8-b911-46d8a835769f",
        "cursor": {
          "ref": "2714f490-b3d3-4616-9eef-1cbbf95f315a",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3014770e-e42e-417a-a468-501829c7b623"
        },
        "item": {
          "id": "074a0bba-1f12-44b8-b911-46d8a835769f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "c0817a72-edb1-45ad-bcdd-54d57652e116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b787006-2672-42d8-9a6a-36c84e28b1c6",
        "cursor": {
          "ref": "98ea9394-bb21-40df-97b0-3a6f7f4e0fc3",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "43d6d11c-a5aa-4157-a14a-a9034141e310"
        },
        "item": {
          "id": "9b787006-2672-42d8-9a6a-36c84e28b1c6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c3599c30-53f1-4914-870a-982d1e556255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9ee58e-11f4-4a04-8b5d-efaffb7da37b",
        "cursor": {
          "ref": "062bd434-2a95-4b96-b2a8-230ef5069694",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "11ded9ba-7820-4412-b924-34880baa92ae"
        },
        "item": {
          "id": "9c9ee58e-11f4-4a04-8b5d-efaffb7da37b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "2a069524-bc8b-4a04-bb98-45c132848d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389c4af6-f051-4b54-8277-5cb94a46d4c5",
        "cursor": {
          "ref": "b26d00f8-57ef-426d-8674-6ebc8f18f3b5",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "322618eb-8cc1-4f73-b514-011922d3e79b"
        },
        "item": {
          "id": "389c4af6-f051-4b54-8277-5cb94a46d4c5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "69b531d6-2cd8-42cb-92e6-1b3fc57cf616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9d5e4f-ac2e-4f53-a9b0-ddd8fcfeed03",
        "cursor": {
          "ref": "9e2d112d-abbd-4205-890f-ea91ad64329a",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2e868cf6-5675-4280-8d79-142ae8f1a966"
        },
        "item": {
          "id": "7d9d5e4f-ac2e-4f53-a9b0-ddd8fcfeed03",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a36a3a4e-be82-4c3a-9558-8358f9b1c7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775fdff0-27a4-45a0-be18-5e825435ddd7",
        "cursor": {
          "ref": "36e579a0-a0b9-4408-8811-2b177bf83188",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ffa45017-966d-4127-b3e2-09de79025884"
        },
        "item": {
          "id": "775fdff0-27a4-45a0-be18-5e825435ddd7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5c208540-a6a8-47d0-bd7c-c918fb6553a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5339adde-b282-4a48-90b9-36e12f02e290",
        "cursor": {
          "ref": "27558184-c054-480d-828a-a235945affa4",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "18cd0071-825f-46d7-8453-2ad8691c98e4"
        },
        "item": {
          "id": "5339adde-b282-4a48-90b9-36e12f02e290",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "2f6cdd15-2833-4971-9522-f758ee3bcb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a44c1a-4e0c-4a4e-86b2-0d87cd9be163",
        "cursor": {
          "ref": "6cbef47f-66cd-49c2-97a7-d3140320e6f3",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2471230f-b4eb-4cc9-8160-4eb918dbf38a"
        },
        "item": {
          "id": "02a44c1a-4e0c-4a4e-86b2-0d87cd9be163",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e4b6e634-873d-452c-8ba0-a17e5b4f6312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee2634f-7faf-4522-9eb4-6936a6269d65",
        "cursor": {
          "ref": "5e7633ad-7f8e-4a11-8c18-37cae9b95e6e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "395c0f42-ec47-40ac-8177-06b83b48c43b"
        },
        "item": {
          "id": "aee2634f-7faf-4522-9eb4-6936a6269d65",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "faac2c4f-4041-4890-b59f-faa76d7ab252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c559adf-80c1-4e17-880e-186213f18313",
        "cursor": {
          "ref": "c25f8abd-7a6d-460a-aa0f-2de4ceff5ea8",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2e69023b-03b7-41c1-8e1f-1c23a531c381"
        },
        "item": {
          "id": "0c559adf-80c1-4e17-880e-186213f18313",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "62b96586-6e99-4aac-90b0-bef5abf2f66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d84d32b4-465b-4f2f-814c-e281de66d238",
        "cursor": {
          "ref": "6102987c-394e-4034-8408-d274de790d71",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "aaa46194-1cb2-4933-bdd4-4debe7c0da66"
        },
        "item": {
          "id": "d84d32b4-465b-4f2f-814c-e281de66d238",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "582dac29-2b68-41ef-858e-ccdbee05cfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeabfb1d-96bb-4691-abbb-836c968c5c6c",
        "cursor": {
          "ref": "48c6ac82-8a4b-403b-ad59-97d6b525d853",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ad1f7618-0397-42d0-a5b2-dc91434ddd46"
        },
        "item": {
          "id": "aeabfb1d-96bb-4691-abbb-836c968c5c6c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "21951f5b-f38c-415b-a13c-ad99a1a225d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c641a7c-be60-4c45-81af-5e59a26e23cf",
        "cursor": {
          "ref": "3d94b1a5-c5cf-4b9b-81ea-5370fbd94fdc",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "da2aea1b-dd7c-4a7c-a8c4-5863cbc8bfd4"
        },
        "item": {
          "id": "8c641a7c-be60-4c45-81af-5e59a26e23cf",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8a9f4651-6197-4d92-867b-615a918c452f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f78425-170c-43ed-bac1-5d7d43fde5ce",
        "cursor": {
          "ref": "60d07521-3e85-47d1-8f69-ca8ab0b258d2",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "58bd363d-c0e3-4074-8458-8728835a766e"
        },
        "item": {
          "id": "15f78425-170c-43ed-bac1-5d7d43fde5ce",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ab8f0d91-fdf3-4c06-bee3-74084df8e7be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "395d914b-4a46-4be2-8ddc-e053a940a2a1",
        "cursor": {
          "ref": "ae056718-ea8a-476f-a5cf-52f00fffa077",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "812490f4-d891-4c93-aa07-3ea945b67f87"
        },
        "item": {
          "id": "395d914b-4a46-4be2-8ddc-e053a940a2a1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9bc99548-a0f0-40f2-b45d-ae88dcace90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cb926a-8f07-4ddb-9701-324c62636198",
        "cursor": {
          "ref": "2fdb8619-9fd9-4f3f-a196-30fa319ead89",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "aff0731d-198d-49b9-a0e1-a92ac355cb56"
        },
        "item": {
          "id": "f5cb926a-8f07-4ddb-9701-324c62636198",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "60da4c90-8ede-44b5-97ec-938ef2e8406d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fe3560-6eaf-45d1-8327-0e5d6df98ebd",
        "cursor": {
          "ref": "04d5ded0-d2f9-44c5-ac60-3b1e0ed55d1a",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "d5ce3aa7-b09a-4af8-88b2-cf9278187176"
        },
        "item": {
          "id": "42fe3560-6eaf-45d1-8327-0e5d6df98ebd",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0977e34d-3122-4f47-ba33-64c6a3d384b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf4be22-dc84-45e4-acb0-93038ed739cd",
        "cursor": {
          "ref": "727f77b6-8012-47c4-8ba8-1ade4947b20f",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1b48ba39-b0ad-412a-86b8-3c82ff898a31"
        },
        "item": {
          "id": "caf4be22-dc84-45e4-acb0-93038ed739cd",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a27abb89-0c3c-4794-bf9e-5ea8c13c9e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95577ccb-2e5b-4532-b3e5-f0d04e689d32",
        "cursor": {
          "ref": "afd6b0b1-07fa-4d01-98f9-b6501e97941b",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e2ad4da1-39fe-4285-9400-855d2c4fb294"
        },
        "item": {
          "id": "95577ccb-2e5b-4532-b3e5-f0d04e689d32",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e30fc33b-bc50-4793-84b6-70e09cb200c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8539f22-348e-4cea-a1c3-66065b42327d",
        "cursor": {
          "ref": "478a71ee-1954-4659-8f86-e52862eaca54",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "cd2261cf-6975-4c63-ab2e-942c004e8f71"
        },
        "item": {
          "id": "d8539f22-348e-4cea-a1c3-66065b42327d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "07973764-b168-47e8-b064-c9016bb568f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e41fc2e-f6cb-4dc1-bed6-637becb8fb5c",
        "cursor": {
          "ref": "005c47a1-27cb-4a84-808a-730a9ca195b2",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6606e34e-700b-4872-8838-43419e0c84a8"
        },
        "item": {
          "id": "5e41fc2e-f6cb-4dc1-bed6-637becb8fb5c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e125d3e4-3526-40ed-ab64-49bdd686a632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23f1056-01b9-424f-b6d6-75e7a66b7692",
        "cursor": {
          "ref": "c80074a6-6002-47df-8500-c8a806187aac",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4d618a00-ff2f-40d6-8eff-96d3b57907f6"
        },
        "item": {
          "id": "b23f1056-01b9-424f-b6d6-75e7a66b7692",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5cbe42ee-8aa0-465d-b6e1-021c89fe563e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45229adb-258b-4423-ade0-61be8b9dbc61",
        "cursor": {
          "ref": "092b7ee6-a938-44ff-bbd6-b132155353c1",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0b455a05-ae3a-46c7-a4d9-21bdf1efa01e"
        },
        "item": {
          "id": "45229adb-258b-4423-ade0-61be8b9dbc61",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "d137aa7d-e523-4009-8758-3e371ae5956f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0813d2-3d99-4774-a4b3-47e3598b5fae",
        "cursor": {
          "ref": "63b72821-913f-4207-a55f-57a80f30182d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "3c957ec2-1df5-44d9-a570-11a202aaff8d"
        },
        "item": {
          "id": "ba0813d2-3d99-4774-a4b3-47e3598b5fae",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b9dcfc1c-6a48-4ba4-a25c-8b53e51a99dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5935fa2e-9723-41ba-80ed-c845245fd0dc",
        "cursor": {
          "ref": "cb644c9f-ae15-4022-8733-3562061074f4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ed6fcd5c-a68d-4e66-afa5-d9f7044d18be"
        },
        "item": {
          "id": "5935fa2e-9723-41ba-80ed-c845245fd0dc",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2ff9c9dd-d978-436a-9fd7-3b97ba92ec2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3716c33-d7c9-46f3-b787-f17aa0fc1fc6",
        "cursor": {
          "ref": "4317ddfa-aa26-41d8-8a34-802345c79e61",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "33ebff79-da75-4790-a554-094e700b4303"
        },
        "item": {
          "id": "d3716c33-d7c9-46f3-b787-f17aa0fc1fc6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6210d28a-2bf7-43a0-8fe5-8dba47ec2504",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20dbdefc-2608-4b27-8d35-66bf8ecb1374",
        "cursor": {
          "ref": "03ded1c0-d679-4dd8-babc-d43a381d3365",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "d7217657-5429-4b84-a3f7-61394c5aeda3"
        },
        "item": {
          "id": "20dbdefc-2608-4b27-8d35-66bf8ecb1374",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c3da8048-4e19-4212-896b-d7061e6f3771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed9c04a-c048-49d5-af38-1f463ebb7df2",
        "cursor": {
          "ref": "6e3d2a48-4745-4365-ace6-b1042154fca2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "112c6550-28f0-48d3-be3b-c37894cb4976"
        },
        "item": {
          "id": "6ed9c04a-c048-49d5-af38-1f463ebb7df2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "81f3b27b-8c59-4b71-8e71-4be96f79665b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf522338-dadb-473f-9fa0-39817f1cbf9a",
        "cursor": {
          "ref": "2aecae57-9af0-45e7-a495-a7349ed219dc",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "42107ec7-318a-453e-b3e8-7354ab8c5481"
        },
        "item": {
          "id": "bf522338-dadb-473f-9fa0-39817f1cbf9a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2799304e-a610-4136-aa94-e88b7b8e7a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32c86c9-cc79-4f8d-b68c-29718d93aa57",
        "cursor": {
          "ref": "1747d05e-409d-4f4e-afdc-a030ad0bc8a5",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4f862057-e2ff-437a-a86e-bae6aae3841b"
        },
        "item": {
          "id": "a32c86c9-cc79-4f8d-b68c-29718d93aa57",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a1640f87-e087-442d-be4c-4891e9900f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2343b6c8-dffc-49f3-a97d-70ebdaacccff",
        "cursor": {
          "ref": "76e7ce80-c8d6-493a-97a3-98f5416d3416",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c2577743-6157-420d-9038-cf753f92c144"
        },
        "item": {
          "id": "2343b6c8-dffc-49f3-a97d-70ebdaacccff",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ee4b39c7-9b62-44d2-94b9-316d19893c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05216e56-bd88-4c00-b624-61d33720ba47",
        "cursor": {
          "ref": "48489e27-5bd8-4a6f-ac11-0b7022e0e35b",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c077d0ec-44db-47a7-8650-854ec83a8a7f"
        },
        "item": {
          "id": "05216e56-bd88-4c00-b624-61d33720ba47",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "3b643616-e4d8-4a3b-878a-82ba28026b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f7ecfd-f271-4884-a112-1be1e79dab29",
        "cursor": {
          "ref": "f6e4e63b-c5cc-4fb5-9190-9dd308255522",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "8a5cd8ce-2dc7-4ab8-999b-d2bdab0b8136"
        },
        "item": {
          "id": "23f7ecfd-f271-4884-a112-1be1e79dab29",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "68373d46-c79a-45b8-a716-92161790c4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd18be04-786b-4216-94b8-cc1d2a602e9f",
        "cursor": {
          "ref": "25c3857c-b716-4d58-9b03-3c160f4e9ab8",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b0cc94df-880e-4131-97d5-f6d27e40630a"
        },
        "item": {
          "id": "fd18be04-786b-4216-94b8-cc1d2a602e9f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "828229c4-a621-4d00-80d3-2b0a58312758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f895f6-f238-4b68-b57a-5f39b9ecbbd8",
        "cursor": {
          "ref": "8f3f5ad4-5748-45f5-a07e-0c3dd13e331a",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ef0f58df-3195-4197-81ae-8a7c59cba127"
        },
        "item": {
          "id": "73f895f6-f238-4b68-b57a-5f39b9ecbbd8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f3bf8c3a-c3b5-497f-8445-7f53554aa1c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94dd658-1fc2-42e4-8518-73cbc9e8b35f",
        "cursor": {
          "ref": "c7c63557-060e-40e9-8757-a9abe12904ab",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1a13d4d6-c17e-4f30-a42f-50004523ebf4"
        },
        "item": {
          "id": "c94dd658-1fc2-42e4-8518-73cbc9e8b35f",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "55d83382-bdec-4ebe-a9f7-943ef8b03916",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda5acd0-fc38-4c88-a786-a12fe36ecb4f",
        "cursor": {
          "ref": "a65503b6-0ccb-40ca-ac18-15b35e21bdb0",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "67f086c1-82f9-45a6-9c0d-509023339dc7"
        },
        "item": {
          "id": "cda5acd0-fc38-4c88-a786-a12fe36ecb4f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "db2e6c84-b054-4c5d-bda6-c53b7ef073fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55fff03-b0ca-43d4-988f-c66d923dfe8b",
        "cursor": {
          "ref": "d3d0ba31-1fa0-422b-825d-039add596659",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ddabe02f-6a3d-4b43-a7bb-57574d8b738a"
        },
        "item": {
          "id": "b55fff03-b0ca-43d4-988f-c66d923dfe8b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f5d445b8-a1ec-4b85-8e18-5159c617b251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1134c90a-1c32-409b-a19f-dd2d6b8604e5",
        "cursor": {
          "ref": "1d2827a7-b4b2-4fe6-ac1a-9d808ccaf378",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "95072ddf-0f63-4233-bb5d-0ae7c9572c54"
        },
        "item": {
          "id": "1134c90a-1c32-409b-a19f-dd2d6b8604e5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c2e86ca1-aa66-4d0b-bdf3-fc7ca86d5a0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9acadcfd-8722-4939-b3b1-0430ae02e4a5",
        "cursor": {
          "ref": "e1ca04bb-ccb3-4dd2-b11c-d36839f7d96f",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "216ed622-2f98-4b95-bcff-8fdc8b18dc6f"
        },
        "item": {
          "id": "9acadcfd-8722-4939-b3b1-0430ae02e4a5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "71c53458-2892-43e0-89ec-bbe0a7aa2e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c3bcd8-78c3-40b9-9cd8-b81d8cb7a685",
        "cursor": {
          "ref": "06292f9f-1cc0-451e-acdd-b7c54182e822",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "86317eaa-360d-426c-bd55-34ac7f35a276"
        },
        "item": {
          "id": "73c3bcd8-78c3-40b9-9cd8-b81d8cb7a685",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "307cbd59-1b11-45c2-b8c1-7bc07cf60da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bdf8d2-2cd7-4b5c-b156-c9a5a6f49f91",
        "cursor": {
          "ref": "96dd7cab-a8a6-4936-9d73-7517be882757",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b8749324-ed61-43e1-8d6c-c5a640d74be2"
        },
        "item": {
          "id": "b2bdf8d2-2cd7-4b5c-b156-c9a5a6f49f91",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "9d75cb0e-f233-4e89-ba89-499f077484f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e464a6-ff57-40ab-a7cc-1dc035c96714",
        "cursor": {
          "ref": "0bfe6b39-6dd0-4ce8-88cc-a8b18213dc2a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3b3155d8-2411-4353-9700-7808086d3489"
        },
        "item": {
          "id": "58e464a6-ff57-40ab-a7cc-1dc035c96714",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "73301f36-5862-405f-a72e-63710e859da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aaefd5-cca9-4695-9304-b8ffa8d7fe3a",
        "cursor": {
          "ref": "2a98bd21-7397-40d4-bd8b-2275edc5020e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "517dd8a0-dd4f-4ea5-9d1d-72a53db29225"
        },
        "item": {
          "id": "b8aaefd5-cca9-4695-9304-b8ffa8d7fe3a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7cbc9e38-12c9-4eb9-b4a2-6824a36341b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8d772a-ec1e-4dcf-b8aa-dd1f9d99b3a1",
        "cursor": {
          "ref": "5af24f9e-78bd-4377-a42b-1865d2ee2efe",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "35145c2b-5d3a-4519-a33f-80fad906b1bd"
        },
        "item": {
          "id": "4b8d772a-ec1e-4dcf-b8aa-dd1f9d99b3a1",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e78113ab-96b0-43d8-be70-ce10098fa557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d27ec01-2a47-408a-83c5-d2c5066176d4",
        "cursor": {
          "ref": "27a959dc-d540-4790-a14e-47eb339fa818",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "18d5d5f6-0738-492f-8828-c5663fd20bb6"
        },
        "item": {
          "id": "5d27ec01-2a47-408a-83c5-d2c5066176d4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "83b37446-e6eb-4dc3-a595-8b240fc18ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76abb42c-78f9-49fe-a656-f10dd6c05515",
        "cursor": {
          "ref": "e3e0b51d-b54f-4242-a7fa-049872e690ee",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "60b45460-0443-418a-943f-f6b14346d2c9"
        },
        "item": {
          "id": "76abb42c-78f9-49fe-a656-f10dd6c05515",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "bdd966f4-f3b4-4a8a-91c7-8edbe0d87745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a19922ac-71e1-4aa2-b4bf-c36a9590acb9",
        "cursor": {
          "ref": "c1b4b568-2494-4421-9d84-024f195a902f",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e87dc638-afa6-42f1-8a1b-2e451f81eeff"
        },
        "item": {
          "id": "a19922ac-71e1-4aa2-b4bf-c36a9590acb9",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1b5ccd39-d258-40d6-9fb4-c892b9639548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8bc29fa-eefd-410d-901c-8905ad6029f3",
        "cursor": {
          "ref": "6cbeed53-60e1-4b04-9ec7-c323180c7bc2",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0ebfcd20-db43-4358-b05e-d5e07a7a7ff1"
        },
        "item": {
          "id": "c8bc29fa-eefd-410d-901c-8905ad6029f3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "13b0fc02-8497-49ad-94b7-c6bf2876b355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b587479d-51cb-406a-8b28-566db572cf47",
        "cursor": {
          "ref": "0ce4d020-4e7f-4d4d-aea5-ad4a8e586d66",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3984b328-7850-47b7-a26d-4deb7bc94f92"
        },
        "item": {
          "id": "b587479d-51cb-406a-8b28-566db572cf47",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "be574c2d-658b-4ec9-8a7d-44435b2ebff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5529e58e-4aa9-4e12-914f-6f834bc8b4c3",
        "cursor": {
          "ref": "b7fa2470-f342-47c1-8386-1458f7e23d9b",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "83ecb6c4-1b3b-4d04-895a-47a4d14290d3"
        },
        "item": {
          "id": "5529e58e-4aa9-4e12-914f-6f834bc8b4c3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2948a8d9-04ee-45ce-96ba-b2ffdb5df060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18594ecd-1e0b-49eb-84fe-fbddecdcc475",
        "cursor": {
          "ref": "b4829fba-6e4d-486d-bac7-65b3f162a637",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "cf8e11c1-0a44-4eb1-806e-8176f123488f"
        },
        "item": {
          "id": "18594ecd-1e0b-49eb-84fe-fbddecdcc475",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b95d591b-a783-4e4b-ab22-b7dc5a5218cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e78ddfb-8a64-49e9-82b9-5e3f441084d8",
        "cursor": {
          "ref": "56a74442-73a5-41f9-9172-f3f58553f76e",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c0409eab-d584-4e7b-8ed0-1562713d2cd5"
        },
        "item": {
          "id": "4e78ddfb-8a64-49e9-82b9-5e3f441084d8",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7b9395b7-b284-492e-9382-3bc83fcccad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd4994b-2f1c-46c4-8f5c-6714da063c2f",
        "cursor": {
          "ref": "0918744d-4d7e-444d-9471-3e0f7be02e0e",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "134cfc91-c7ec-4b2c-a281-f1263e12393f"
        },
        "item": {
          "id": "1dd4994b-2f1c-46c4-8f5c-6714da063c2f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "cb8a3aa0-7dc3-46ad-a861-2b4303d3c49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b86e7d-4520-49ad-b203-5e378ac449ec",
        "cursor": {
          "ref": "ab3d2e4f-a663-43cb-a12d-c49cbee49e63",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "92f56b83-2d75-415f-865a-3a063937a14a"
        },
        "item": {
          "id": "b3b86e7d-4520-49ad-b203-5e378ac449ec",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ee43d532-452c-4f4b-9b6b-5a50e1bb8e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b1a6a8-7fa3-4dff-b654-1a0c7c616be3",
        "cursor": {
          "ref": "a5d1d913-70d5-43b1-9670-2d3bbe998675",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c95defbd-7655-474a-b591-8fbaf18c17fb"
        },
        "item": {
          "id": "c3b1a6a8-7fa3-4dff-b654-1a0c7c616be3",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3c5df094-b172-4eb9-aace-10b42723d470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d2d705-1b55-4958-81e3-3d7023042b44",
        "cursor": {
          "ref": "df7595a6-bbbb-409c-a1ad-21800c2e1055",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d0891fca-e306-424a-a444-dd203855de06"
        },
        "item": {
          "id": "03d2d705-1b55-4958-81e3-3d7023042b44",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4fbdb4f4-b516-4044-9d96-8807ab14aa3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55b5281-13da-4a77-b77d-411c0049b628",
        "cursor": {
          "ref": "030abf9d-99ea-48f8-b950-17ee818dc06b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "662c77a7-2e00-4258-abc0-3f91d9ffe727"
        },
        "item": {
          "id": "e55b5281-13da-4a77-b77d-411c0049b628",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b222d7c3-b594-423e-900b-2b0c8f07c7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0b67f0-372c-4f2d-8ad2-7d8e07f56da2",
        "cursor": {
          "ref": "c0bdb0d5-afc3-4868-92d5-83cfb0cad6d5",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e45e5813-fa5a-46f1-9168-06b38f521d3e"
        },
        "item": {
          "id": "7c0b67f0-372c-4f2d-8ad2-7d8e07f56da2",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "dad5aa82-12d0-4b40-ab2c-68e3801c5df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06623cbe-a2b3-4bce-8ced-224f642462cb",
        "cursor": {
          "ref": "d9eef308-9d5f-4712-8d05-ff67bb73d067",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d196b3f1-b87f-4558-a6a5-027a72903961"
        },
        "item": {
          "id": "06623cbe-a2b3-4bce-8ced-224f642462cb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1872be71-f018-42ff-8fec-04055bab9a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71eb9cf2-47e7-461b-9a28-d3e0d64b679b",
        "cursor": {
          "ref": "eab208d2-a696-4be7-a98b-27e0f5389870",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b092bcd5-bb2c-431c-82ab-a3dc9c506425"
        },
        "item": {
          "id": "71eb9cf2-47e7-461b-9a28-d3e0d64b679b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f674e8d5-62e2-4de0-a353-0bc46ef26b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec241664-6e0c-48e5-8516-8b038bd60f00",
        "cursor": {
          "ref": "3f337c60-c041-442d-af6a-6ae0c318d507",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "00716c3b-9aeb-4e82-be5f-a759e394c38e"
        },
        "item": {
          "id": "ec241664-6e0c-48e5-8516-8b038bd60f00",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f1e1386d-8ee9-4775-86be-f2053654c042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0729da-2e0d-4424-969f-ddfadf9e4d0a",
        "cursor": {
          "ref": "7d424aba-5fc1-4444-b41e-cc45fef1bcef",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f99ecc77-438e-4455-84b3-28793c32fd60"
        },
        "item": {
          "id": "1a0729da-2e0d-4424-969f-ddfadf9e4d0a",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e5994b29-2a45-4483-a0c8-01db0e214b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e636dc8d-7b82-4217-a0aa-e85762eca4af",
        "cursor": {
          "ref": "a91c7827-0b08-4a65-a2ef-38128652f933",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2156fa09-0071-4903-8b3e-acf7d770461f"
        },
        "item": {
          "id": "e636dc8d-7b82-4217-a0aa-e85762eca4af",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ed17b9c2-85b2-435b-ae11-594192963b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a525f2e3-022d-4abc-9713-5deab794699a",
        "cursor": {
          "ref": "cfb50d9f-423d-4aba-b1ce-95db24062e1e",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "14083ac0-8969-4fc9-9df9-2c3a4897037b"
        },
        "item": {
          "id": "a525f2e3-022d-4abc-9713-5deab794699a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "04f84bd2-f292-4bee-908a-3a3c2f7da9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8afba7-be12-4e3a-9b5d-660fbe84cc88",
        "cursor": {
          "ref": "e81279a2-b39c-41ae-b626-523db6dab038",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bb6e01dd-6a8d-487f-8b14-5ebae76327b8"
        },
        "item": {
          "id": "ca8afba7-be12-4e3a-9b5d-660fbe84cc88",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dc0d2699-a4bb-4638-91b7-f40a2e48e592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2252ab-4c07-441c-b03f-44b95c3bade8",
        "cursor": {
          "ref": "67b8ed90-253f-4083-85a6-04055a571852",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b4145d43-af49-442d-bbb6-5919c9193374"
        },
        "item": {
          "id": "2f2252ab-4c07-441c-b03f-44b95c3bade8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "443d24cf-9ae2-439e-aca0-df315c0542d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f63b90c-0464-4da1-8cf1-39eb14d3d009",
        "cursor": {
          "ref": "61cacd28-ddf6-4d58-a657-5465b085d4d6",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c0ed1f8b-7569-4704-8f9e-e5bbe0e0b6c5"
        },
        "item": {
          "id": "5f63b90c-0464-4da1-8cf1-39eb14d3d009",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a05a7d67-d6a0-4367-90fa-938b296414d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42c51e0-7155-4208-a9d8-f22428273077",
        "cursor": {
          "ref": "7617df31-d60a-45fc-ae4b-9241d60dd897",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "13b939c6-7a4d-4907-b66c-cdd5f548d112"
        },
        "item": {
          "id": "d42c51e0-7155-4208-a9d8-f22428273077",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "2d16bac5-6e5c-4c88-93e9-8458d7336503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bb1c252-2b6f-41e3-8e7a-d98039f56ee4",
        "cursor": {
          "ref": "ce6120af-732b-4710-bf87-d0ff8733230f",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ea1c1899-f128-44a2-99d2-400ca1905f7c"
        },
        "item": {
          "id": "0bb1c252-2b6f-41e3-8e7a-d98039f56ee4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "5ecc4a56-db2b-499e-a1e5-bbaff78e9cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28a65910-4cd6-49fc-8216-c56097c34cf2",
        "cursor": {
          "ref": "b915bf67-2f15-41c9-9c0b-ed1022945d3e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "50d071ef-f295-43a3-8c70-92825e977a11"
        },
        "item": {
          "id": "28a65910-4cd6-49fc-8216-c56097c34cf2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0309ccbb-747b-4628-9e9e-f40b0c3e91e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e452889-11c1-492f-81db-607b62bbfe42",
        "cursor": {
          "ref": "2c73a773-7238-427e-9704-77d272b3baa9",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "064f4969-93cc-436d-a252-5fb0653b6f9f"
        },
        "item": {
          "id": "3e452889-11c1-492f-81db-607b62bbfe42",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e6e523e6-5ea2-44f3-bac2-c4582c4c8144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e3c6f4-0cb8-408a-960a-d2268f233724",
        "cursor": {
          "ref": "30f4b826-1218-4f48-a93e-23bb3c9651df",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "52ac837c-536a-44de-9946-3ce8d89f33ce"
        },
        "item": {
          "id": "12e3c6f4-0cb8-408a-960a-d2268f233724",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "23ada602-bfd8-40ab-a428-865241238115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0e553f-5bce-424a-9da2-88880945b311",
        "cursor": {
          "ref": "a2951379-e56d-4386-83a6-4b5dc38eb216",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7305334b-29c5-46d5-ba1d-3718e2198185"
        },
        "item": {
          "id": "db0e553f-5bce-424a-9da2-88880945b311",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "26516603-9d2d-4ee6-9427-0897b2802610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccebb286-8c75-401d-b157-b816e581b43c",
        "cursor": {
          "ref": "ac0e0d99-8eb8-4a9d-9167-6ca5cba8e9d7",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8b3a68af-bfbc-4be0-b420-ad32991ff511"
        },
        "item": {
          "id": "ccebb286-8c75-401d-b157-b816e581b43c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7f2a3e30-dc46-4ffb-8cf7-a16e344ce4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5364ea-a322-4637-91cc-5b18dae8337b",
        "cursor": {
          "ref": "2ecda51a-d87f-41c3-a87d-464f07a2b8e4",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1a0438ca-da94-494b-9745-7bf8aeadad00"
        },
        "item": {
          "id": "9f5364ea-a322-4637-91cc-5b18dae8337b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "08815a55-2f63-41b4-a685-8ad30dc6a006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f2f411-26aa-49f0-82c7-46b4a0c08721",
        "cursor": {
          "ref": "ec18c0b3-d30d-4f0f-943f-6ac5139b6509",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2198b641-d6f8-4b6b-b10b-d9981202940d"
        },
        "item": {
          "id": "b0f2f411-26aa-49f0-82c7-46b4a0c08721",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "724d518c-72e2-4f5d-adf9-151e20686aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63453be8-1eae-461d-a736-e1b5313f00dc",
        "cursor": {
          "ref": "c64b516a-0ad9-4997-86d4-ffb3ccb53dc3",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d8d91498-7144-4cdb-bb2f-580dcaec682f"
        },
        "item": {
          "id": "63453be8-1eae-461d-a736-e1b5313f00dc",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7fb4871d-ca36-43c1-8fee-da8074db64df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fce4de84-6613-4122-a140-72c6e471861a",
        "cursor": {
          "ref": "34d2f562-962a-4a71-8ca3-7d2b9457b369",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1eeca711-6dd9-4766-bddc-01a03a1182f0"
        },
        "item": {
          "id": "fce4de84-6613-4122-a140-72c6e471861a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f6a8b964-55c8-4ef6-b403-7acccf8181ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14565b36-d137-4a21-ba9b-8dfd86a50d34",
        "cursor": {
          "ref": "1a61e312-6823-49f6-a90b-824ee3cba866",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "87717916-f5b2-42a0-bde4-6bd10e34e756"
        },
        "item": {
          "id": "14565b36-d137-4a21-ba9b-8dfd86a50d34",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ed24cf8a-30f7-4d42-8e53-f3586dcd32c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08fbe81-b0c2-4741-8837-3e3656f8ed42",
        "cursor": {
          "ref": "35754471-a81e-4d3c-bdeb-87c9314605ff",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "465360c4-2eb0-479a-b263-33f865facf94"
        },
        "item": {
          "id": "f08fbe81-b0c2-4741-8837-3e3656f8ed42",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "d42ff031-0989-4fb7-beba-8ed1e26c4e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea801afe-f9d9-41ed-a032-83b6000178b8",
        "cursor": {
          "ref": "144b6e8b-7e74-4904-821a-0a3237c54b1c",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fc3c8c6a-bca6-4f07-ad48-0590e5a1c02c"
        },
        "item": {
          "id": "ea801afe-f9d9-41ed-a032-83b6000178b8",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "b49e1296-ea42-4040-9895-665f591972fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52963c7e-71d8-44b4-b5c9-74af8994ebcd",
        "cursor": {
          "ref": "27a88e5d-f995-4d9b-b436-6d7096c718a6",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7681b56a-c9f8-4b27-adf5-5baaad28810a"
        },
        "item": {
          "id": "52963c7e-71d8-44b4-b5c9-74af8994ebcd",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "63884b60-98a8-4589-92a0-c52963997dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb827311-65bf-4adb-9047-dc7574f8cbec",
        "cursor": {
          "ref": "d426cf82-9f5c-43eb-a04a-079aa358c265",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "be2a0e6c-36d5-4147-b57e-7b344377429e"
        },
        "item": {
          "id": "bb827311-65bf-4adb-9047-dc7574f8cbec",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "cc7b54dd-46c6-4e5a-a528-8242539b7dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0497ffc0-82b0-4c22-84b9-bf3ec50b6fc1",
        "cursor": {
          "ref": "ed976931-4eb2-40e9-9743-bc56f5257724",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "af1ef971-b69f-45f9-a73d-94e27a27f281"
        },
        "item": {
          "id": "0497ffc0-82b0-4c22-84b9-bf3ec50b6fc1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d77adde3-3f83-42d1-b056-d8d9d512f8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6b9ca5-e6fb-4e06-b54f-afc1636dfffa",
        "cursor": {
          "ref": "157cce2a-ccb4-48be-a6ab-e72ce48839e7",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0e959455-5740-45c9-8ec6-432d5f5659b0"
        },
        "item": {
          "id": "ae6b9ca5-e6fb-4e06-b54f-afc1636dfffa",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "17a37ddb-5f4d-4480-af3e-4db5c30869d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e823419-41d4-47e4-936a-dfb0af871277",
        "cursor": {
          "ref": "e217aaae-f802-4c24-8b03-a938330f0101",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "5923c99b-4d27-4fe8-8899-dd24ab140771"
        },
        "item": {
          "id": "8e823419-41d4-47e4-936a-dfb0af871277",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d762cf38-db83-4cb4-826e-75aecffe659d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916de222-94c8-4b3b-8796-632a55f0eadb",
        "cursor": {
          "ref": "3f4301c3-c243-4e8a-957d-bd09fcbda354",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7ab26d59-f2ff-49f9-bf5f-1e2a76eb8375"
        },
        "item": {
          "id": "916de222-94c8-4b3b-8796-632a55f0eadb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e93cfe2c-3bd2-460d-8474-84f9dec39cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7deb8ac-b001-42fa-a203-e28cee91357d",
        "cursor": {
          "ref": "5301ceb5-ce94-4f30-9d51-22bcae871fd8",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "725778be-884b-4a5f-aaa1-7cf88b3992be"
        },
        "item": {
          "id": "b7deb8ac-b001-42fa-a203-e28cee91357d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4368d943-8795-434e-b6c8-886db6c8b110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab11888a-2773-4b37-9014-70d16b039965",
        "cursor": {
          "ref": "133c2a85-ce4b-46be-8a93-46fc47468dc8",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "4306ad04-7309-4e71-b0b8-ea4c28adca39"
        },
        "item": {
          "id": "ab11888a-2773-4b37-9014-70d16b039965",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b899f7b4-874c-4ed4-8257-0d8a9378dcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7faaad1-0045-4a5b-b159-f1646b761168",
        "cursor": {
          "ref": "89bce161-33a1-4834-8319-3f02bb008928",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "70b80895-030f-43f5-b286-e76d0dfd4f22"
        },
        "item": {
          "id": "b7faaad1-0045-4a5b-b159-f1646b761168",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ff8b22f8-8699-4cb3-8a50-ac57c5d8a144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18eb1afa-78a7-4a94-8f04-1ed36f251284",
        "cursor": {
          "ref": "7e0f21e3-0847-4bc9-bf2d-604e0ee34f88",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "4b22c99f-99b7-45bb-9e03-2c98eb9fb4a1"
        },
        "item": {
          "id": "18eb1afa-78a7-4a94-8f04-1ed36f251284",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "30943eaa-45d0-4fef-98b9-fd4d356db620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528cc463-baad-4ca0-a366-12059473110c",
        "cursor": {
          "ref": "135bed5c-4487-4ac0-9409-ecf0a7ec078b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f49e5ba0-b7eb-4bdd-8626-3f23c6b545b6"
        },
        "item": {
          "id": "528cc463-baad-4ca0-a366-12059473110c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "164b260a-fbe9-41e1-b201-194d9da4d4c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ccd8d0-a871-4264-95fb-d2d22354a132",
        "cursor": {
          "ref": "7aa3e19f-1093-4d66-b4ec-359c89f3f165",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "332bbd85-b9a4-415c-8ea2-d737b680d269"
        },
        "item": {
          "id": "50ccd8d0-a871-4264-95fb-d2d22354a132",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "18b02031-bfcc-4854-ba36-430cc3612a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccebc3e-20c6-46a3-b071-01873cb94cd7",
        "cursor": {
          "ref": "7d8192cf-74d1-4add-a98c-afd532673c65",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "fee0e96b-e0b9-410b-8f9f-52b8bccea98c"
        },
        "item": {
          "id": "6ccebc3e-20c6-46a3-b071-01873cb94cd7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "463bdee6-7d5e-4c66-b39c-a7871c9f7ad2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2ca862-91a5-4029-a9e0-e29f922618b7",
        "cursor": {
          "ref": "4602f12d-e865-439c-b3af-e530a0db0e40",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e7015e1c-14a0-4daf-b7ef-1306a12c8f9f"
        },
        "item": {
          "id": "ac2ca862-91a5-4029-a9e0-e29f922618b7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4b3bb6a5-3407-4037-a43e-be385e7acaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba198470-aa46-431b-9e3b-0c99ea3f2601",
        "cursor": {
          "ref": "81e98470-326f-4c09-b6c4-44c712f828fb",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "3676ea28-75fa-4d0b-8a7a-ac00db03f75d"
        },
        "item": {
          "id": "ba198470-aa46-431b-9e3b-0c99ea3f2601",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "213632f1-35ec-4542-8ef2-64b0035283a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689a07cc-30e6-4683-861e-9bce98e66c1d",
        "cursor": {
          "ref": "bd8531fa-d653-48c3-ae66-621c18ca956e",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9274f09c-e50f-40b1-964e-eb828009f51b"
        },
        "item": {
          "id": "689a07cc-30e6-4683-861e-9bce98e66c1d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "767fc02a-7762-4601-9103-7f788acdd73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8639937-8b4c-4800-9ac8-8f7108728692",
        "cursor": {
          "ref": "5e9a3a04-4928-4d64-a1af-92bbf40c02b8",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "7ceb538e-5f3d-40e7-b3c2-f242965029bd"
        },
        "item": {
          "id": "e8639937-8b4c-4800-9ac8-8f7108728692",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f3a573eb-5c6e-4fcb-9ffb-22e90605d101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c720724f-c9e0-497d-b259-e75b0673763b",
        "cursor": {
          "ref": "f6cd12c3-a933-4400-b056-a9b9969aa7cb",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b5b0773b-7e10-4e17-8f18-2bb915d4c102"
        },
        "item": {
          "id": "c720724f-c9e0-497d-b259-e75b0673763b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "975667f9-9736-4f9c-b473-45955f4324a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2505ec86-ac12-4f4d-9693-41aea6b665af",
        "cursor": {
          "ref": "c81c74cc-6466-4f61-a1dd-32f1a3b903d2",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b725dcec-c5c9-41a7-9d7e-a4db1983e2e4"
        },
        "item": {
          "id": "2505ec86-ac12-4f4d-9693-41aea6b665af",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "dddea3d0-c1b8-4cfc-a059-fd12605f883d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f737bc9-350d-4cb6-b745-ccaab0ad9a3c",
        "cursor": {
          "ref": "86bc7420-2992-4dca-966d-169beaad8799",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "021dc871-edf1-4d5e-a886-860095666936"
        },
        "item": {
          "id": "2f737bc9-350d-4cb6-b745-ccaab0ad9a3c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0b815374-a4ef-4a5c-b352-e1180d85ca53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0f3f3e-387b-46ca-99f8-3b211d077b2b",
        "cursor": {
          "ref": "b77f3c5b-7211-44f2-8b7c-9ebc68010ebb",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "2fcf70e4-b604-4218-a9ac-e7c9f414c430"
        },
        "item": {
          "id": "7f0f3f3e-387b-46ca-99f8-3b211d077b2b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "74f650fc-74e9-4e12-8f7f-29a238ec7cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748a48e8-037a-4b59-aee6-7996263ad8a5",
        "cursor": {
          "ref": "300049f4-ea68-4ba0-8920-cffeea4dd6b3",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c345819e-478c-4f3b-8016-fcba5c394b09"
        },
        "item": {
          "id": "748a48e8-037a-4b59-aee6-7996263ad8a5",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8fecd484-16d9-46f8-a66c-7193e2e957b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b89f80-cf34-4e16-bc84-a5047b26894e",
        "cursor": {
          "ref": "874a78c6-4669-41a3-8e1a-9cda403a0113",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2f9191b0-bdc9-48a1-bac3-12e523ecafa5"
        },
        "item": {
          "id": "d1b89f80-cf34-4e16-bc84-a5047b26894e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0926e812-3b17-4f7f-a0c4-4f7bcae2b36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a20362-5cc9-4122-be9c-dc2c442f1403",
        "cursor": {
          "ref": "e37af017-9e1d-49ce-a75e-d489385a6f13",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "cb0fe61c-ebba-45ba-bb7f-aef705409eec"
        },
        "item": {
          "id": "b3a20362-5cc9-4122-be9c-dc2c442f1403",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "088d841d-0bb9-4a0c-ab99-38ba012d1948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4daf5b8-8e59-42a3-a9c1-5cac1c6fe60e",
        "cursor": {
          "ref": "1e1b8f3e-9072-4bac-a044-62cfd346632d",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "decee6e8-03a7-42f1-a125-141b36907eab"
        },
        "item": {
          "id": "c4daf5b8-8e59-42a3-a9c1-5cac1c6fe60e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "1a76d128-679b-4485-b382-59adba7bbaa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c345b293-c33a-4273-8aa9-4846f743129f",
        "cursor": {
          "ref": "b310aa0c-ed2c-4db1-a448-229f8a3492af",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "b4061796-ff7d-40f6-bbdd-940c38b5e161"
        },
        "item": {
          "id": "c345b293-c33a-4273-8aa9-4846f743129f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "59bf7459-a6af-4c87-ae95-e0af0ee68857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02603698-ccb6-42b7-afd6-2325db7183cd",
        "cursor": {
          "ref": "8db95dee-491a-4c77-8478-32a6f38458b5",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "3ae3a494-2621-4572-b5f7-c82b907feca5"
        },
        "item": {
          "id": "02603698-ccb6-42b7-afd6-2325db7183cd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b3e9880d-72fe-491a-999c-9ef8e2364a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace1d6bc-301a-4218-8dc6-fe537d6b1318",
        "cursor": {
          "ref": "3f4f77c3-904a-4520-86d7-c699bf276666",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "15a677df-2179-4703-8e99-1f15bd4caa8b"
        },
        "item": {
          "id": "ace1d6bc-301a-4218-8dc6-fe537d6b1318",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7a299a27-2f01-4282-9ece-2c3ece6008ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13866ae8-3d0e-48ad-8165-4b5f162f4a2a",
        "cursor": {
          "ref": "ed8b4125-8b0a-4312-806e-6e0c8eadde7d",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b2d911ac-a20e-4242-b402-6cf2a8cd6ae7"
        },
        "item": {
          "id": "13866ae8-3d0e-48ad-8165-4b5f162f4a2a",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "41db1d5c-94fb-4689-9cf3-5251f99d2405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cd3b060-cf8e-451a-a6c9-c3cad78eea89",
        "cursor": {
          "ref": "7f09769b-1e06-4356-862e-4399e5c50953",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "264dfd8a-bb72-42da-98e4-2141f56f251f"
        },
        "item": {
          "id": "7cd3b060-cf8e-451a-a6c9-c3cad78eea89",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "13077a74-a39f-4c11-beff-4c76a634588c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3c7ef8-4d90-4cae-943a-db0927cb0359",
        "cursor": {
          "ref": "e6f350a2-187e-4f8d-8cf6-7edeace721ec",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ac058a7d-55b5-4167-8274-36123b94c456"
        },
        "item": {
          "id": "da3c7ef8-4d90-4cae-943a-db0927cb0359",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1e904a27-5c93-4b01-b45c-8c257ac10bc0",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e0adb5-5fa7-4a58-9ea0-653556ddf56d",
        "cursor": {
          "ref": "6bed9350-7dd3-42ce-8ddd-dd8bd87dcc23",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "78410744-7915-42af-b3a9-015d4d49c67c"
        },
        "item": {
          "id": "08e0adb5-5fa7-4a58-9ea0-653556ddf56d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a8daa577-c0b5-4e10-84cc-43b7fe3118ef",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2ca1fa-0f72-4451-b23b-3cfd76704b65",
        "cursor": {
          "ref": "c505626a-e634-4a35-89c9-dba9ebb6011d",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "69d2d67e-0c13-4235-82b5-d87a8664028b"
        },
        "item": {
          "id": "cc2ca1fa-0f72-4451-b23b-3cfd76704b65",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f6e9b4bb-a096-4ae2-99d4-ec9a5df9f813",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0dce93-8669-4b2d-b537-cfdb90dd954a",
        "cursor": {
          "ref": "720869ab-302a-4793-a12e-a14de04f8c83",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d1eb3597-baae-411a-adf6-e1e5a434fb41"
        },
        "item": {
          "id": "2e0dce93-8669-4b2d-b537-cfdb90dd954a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9c7eaceb-5531-4e5b-9682-f6d61a7f44a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0dce93-8669-4b2d-b537-cfdb90dd954a",
        "cursor": {
          "ref": "720869ab-302a-4793-a12e-a14de04f8c83",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "d1eb3597-baae-411a-adf6-e1e5a434fb41"
        },
        "item": {
          "id": "2e0dce93-8669-4b2d-b537-cfdb90dd954a",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9c7eaceb-5531-4e5b-9682-f6d61a7f44a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aebc22c-5fcc-42d4-9cbe-b73ee2b9e57d",
        "cursor": {
          "ref": "8d511e86-7ac3-4864-b233-0edf46768dde",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "7a5ccf22-3463-41a7-8220-3fff6f0aa880"
        },
        "item": {
          "id": "9aebc22c-5fcc-42d4-9cbe-b73ee2b9e57d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2649b3b5-c69d-42ad-adc4-974f4d65e08e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "971de0b4-6762-443f-a446-818563a32594",
        "cursor": {
          "ref": "140d31a5-6c60-43b2-9d79-d98781788cb8",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "92c625de-24ef-4ec3-9c33-2bb57713a372"
        },
        "item": {
          "id": "971de0b4-6762-443f-a446-818563a32594",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f190bff6-f35f-4b47-82d1-0fcc5cb5808b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}