{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6c99eadb-08a4-40e6-9122-c2465acc2ba3",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b29cd9c0-abce-431e-a852-53395f587c03",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "287862da-8d75-4c1e-860b-00f2ae007416",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4de96471-1d37-48c0-97d0-ecf44ca19558"
                }
              }
            ]
          },
          {
            "id": "abb6a4f2-ff02-4745-b107-1e6af60e48d5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f8688f7-6d4f-4d78-8c5d-bb31a68eedd3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "58e5f07f-d3d1-4670-b66a-2f53cebf33f5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b3865269-5ddf-420f-bab0-8a3a41c3c567",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "dc8f88cb-43d9-44ba-bc05-0a0d1f802ed9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27b5065b-0ea9-431a-ab12-137ba6bdac32",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "224e8f4a-0a17-4aec-bda9-ffd263909237",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d0959ba-02a6-4955-818a-f1efb9692992"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f03363e1-52b7-4b38-a4fe-2034920d9031",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19325d28-8274-4aad-a305-ae195f8eeb57"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d4bc0ea6-d491-4966-ad8e-4de28617c711",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9dd953c8-c5cc-4819-9901-c6597d8b70ea"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd613ee8-3354-480b-9bad-d93348ca484d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "291e5af0-1b78-4b76-8526-cb04536dd9a3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b50cc59-489c-4f4d-9e35-ca460293eb22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "efc14842-f3fc-4b0a-b0ea-b5a8ce000306"
            }
          }
        ]
      },
      {
        "id": "1ec3ee99-f4d4-40c1-9aad-ba76bbfe5b7c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "6fa1c48e-d336-4064-a31e-3cbf50d4e504",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e97defa1-f6ed-4606-bb14-8b2774dc40b0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bb2aeb70-c8d0-41a0-85f0-96cf6f861b8b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc8c8b7-1951-48e4-ac75-d209eb380f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "08944c23-db19-4480-b961-b118b72be469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619293c0-07c9-4864-bba9-0a288d5b0c2b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec01b4f1-ce11-4039-b0ec-88fa883feb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cf33a25b-faa1-40cc-832b-3b36ff26eed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04ec8cb-482f-449f-982f-9c30e3a91702",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aebf036-99e4-412b-a990-f368a9e45fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bbbf215-db3a-4dc5-a785-adf7f7f50f3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "35e2f67f-d407-415b-b3be-f2df3bdf5211",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85debb80-0095-4d9b-ba7e-5f729d195efc",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1148c7da-7a7c-4bb3-9188-2d2923f36b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ada035eb-f172-488d-bf16-5d6f2b20942f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c29d75f-5b4f-4b9b-9908-4dd0d469b2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751f6fa9-136d-4388-b412-0734e0dd4eee"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "37a86d2b-0311-40f4-822b-56e7479f3a49",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4698d0b3-c283-4e49-a497-2a6aa768de7b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c507ca6-2de7-42ba-b04d-8a5cb22545d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "6aff0115-1472-4644-bb53-18405491a8e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85527e6e-a9b7-4de1-a163-2608ba0ca5bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9d22acb5-960c-4f60-a4eb-410bb1044a5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d29d59e3-a6c2-494b-93a7-88f43d66d9c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad11ed92-62f3-4555-903d-08012bee5c9b"
            }
          }
        ]
      },
      {
        "id": "3174afe2-f2cc-44d5-813c-b9053da811f2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "085cfa73-4897-4e75-9e15-2ce109fad606",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92ff0d45-e734-4cb2-984a-868b75624028",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "032a3935-9142-4397-9fe7-e6451b141ff7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e393f08-29b0-42ce-9a64-2cb1c905bfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79b960f-377d-4bb5-af3d-7b67693507e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84326ee8-4e70-41b6-89a0-787c37455462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8dbb4e6d-df00-4504-ac08-5684ca9bdd48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b66531-0d58-4303-9728-c835959af3b8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f540e9d-9e42-45cf-a262-e2b1ad4383f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba99c59e-f624-41d8-bf17-a85c10a5a87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6fec109-d8c9-46a3-a2a3-717199e24f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38e2a604-b61f-48f0-8c9a-e36a02c8b959"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e2a93a-aaaf-4ca8-817f-96c0438e2a5d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9474954-f111-48e3-83ad-af9b49cb70ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3a046aa-e380-486e-8f2d-e8043b5cd72c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafad468-b6c6-4e91-8ffa-00ee935119ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a12d0e9-33b8-4b12-8e7a-99ad941ee42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d81e16c-f803-4020-b53f-3c94c5863796",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f94b46b-f4b9-4d4a-b9ee-bd1692b504bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c3bcfe5-8af2-47c3-aad0-f35d4083b519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd05fa54-9c98-4ac4-ba8c-11b78aa43ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2fb17bfc-e6d4-4b9c-bc2f-48992c62a106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22dced70-3641-4117-8373-8cbdd04d5f3e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e779352a-44dd-409d-95c2-47750a93024d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9303098e-00e9-4421-8be7-4e9769587917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39097d7f-7b33-4807-bbdb-76f77468ffa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "182056c3-163d-4eac-8426-1cfee2434cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72512da3-4b17-40fc-9130-04970020a6d4",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36afc81-c101-4adb-ba09-ce439e725b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a81eab3e-987e-4f0f-a9ef-9a752805caa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1305fafc-606d-4dd5-9a52-3234bc7d38d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcdde58f-282e-41f1-90de-fc07493576b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89ee55cd-ee6b-463e-908a-ca11daa942e4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d63f51-5700-4ed8-adad-5e9be8349aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03c8455c-abc1-4376-9c0b-15b37e3e1e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7b80c3-8233-4e87-9fa6-83792fb5a5cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d14c972-d379-4a09-900d-4eeaa87cee5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6e9a54-70b4-4a63-8e4a-5f95f1f38da0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17f1c0b-01fb-4bc5-8b34-a9639973d779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feb2d8fc-51c2-4ef7-a297-25a0361504ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d34f4f4-b165-4cf8-a114-c441dffbf8e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92388594-3c21-40dc-a9e0-7902e2cf54cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8750d833-d81f-4033-8fd2-67709e3a96ec",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5219772-b6a8-42a2-9c15-e59c5f5722ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5884661b-cef1-493c-830b-38e737ede5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c11c701-a67f-47c9-9d65-890ba5a48ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe26bf1c-073a-4fdb-8c86-72551977e070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320b149c-26b5-4d6a-b1a8-617a5a06327c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ce3923-03ab-4797-84a3-d8fbf8fbe254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f422a404-4069-491e-94ad-9c555b9fe7ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783e3ea7-2481-4567-8df3-9fd042aa802d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a45f7d2f-c77c-4084-9683-686754cf37a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e8d7cc-e543-4658-a4f6-d11904177f0b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc1e7e3b-3d3b-42b4-a587-71e3fe5acb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcef36f-59cc-433e-b71f-98119921de59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04545e8-8122-4d3b-b12e-ece03382563c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "84467f7c-dd14-4733-9ab0-ce5167254380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a142837f-2906-4c39-b463-ecc7e214d99f",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63ef918-0116-4c03-9e46-7080fbb8d261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b351908-10e6-4e59-8887-4b454c18158c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501cdfdf-6d83-461a-aba9-c60015ad14ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0cd4e945-d00b-41ee-8aa9-6e7517acf285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b011e003-af0a-4133-a0a8-043fd6a96b57",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41059e4e-8664-44ff-901b-b33a933f2d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e4bb11-d315-4344-8d84-f792e8ca49c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3905f8-ad81-4198-9614-e1c9fae54914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d9cecc7-4346-469d-8469-0012c6668c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cd994ef-2208-494f-8923-b62195850fa4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e3d68f-2810-42a8-81dc-18eb1bc4189c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f033b87a-0721-4508-911b-4300aaac60ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "934dc8b0-ddc0-444e-964d-78b811ca07b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddd0a2bc-f2ae-4247-b027-c952b89ee6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ba0620-be13-4bd1-a3f2-b7133fdcceb1",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0179f6e9-0414-4cb3-b7a4-f08342d9fb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02dba16d-18af-47dd-8af4-52eb5e5b0717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8299a728-94dc-4bb1-b74b-0645e632afd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97b379e0-b3f9-4451-b488-98d23443b291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b5ba44-a76a-4a2a-b94e-ccd4dab253c4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1ccf7d7-e0a0-46e7-81a2-ccf8956d7654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428c7ab5-8d65-4bbc-8915-3ec6c7ea7bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13987637-c389-424f-b5dc-bacb285128fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55a2bcda-dbc6-4a1d-a87e-f3c7930300a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320445e3-f576-4815-b2c2-53104929999e",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74965112-f8c4-40be-b559-df393d998468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8ea9c0-5a04-4859-a6e1-5a8cf325e4b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6046c51e-3fbe-4b2a-afe8-14700ea1ca26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a838e242-ddce-426b-909f-b7ccebe1af0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc2d224-6725-4c52-afe3-8e857bf181f1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc467f00-b858-4db9-b0b7-d15795c43684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7a4c79-1a42-489b-a36e-a311d8dda3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439183d7-9a53-4ac5-8a24-e4410ed5846e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0c26ead-179e-4891-8a5f-ee9577caab94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb297c0c-dda9-496b-a5a4-18542a6c1142",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8cdf3b2-f346-4471-b392-bfc041923783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b689198-69f1-4fc2-a807-feaf9929ea98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2f9195-4d38-46b5-bdc2-f489a2e855fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3648aafb-6408-4895-9d07-bb03e24d0f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b046e80e-6c87-4a28-b68b-8e1c4f44e3cb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e16be17f-468e-46fd-b336-428f8f2610b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66a5e485-668b-4661-82dd-959c43eceaf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1ebbf8-8332-4750-8643-f7337f7f1099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9c09f8-086b-49a8-9a6e-37782df62b42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94555d1-9193-47d3-8410-e8c39d9f7b63",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8dd79ee-a393-4b91-9aa2-f9e12d5e93bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4a8c40-f702-444f-a9bd-4a5a860bf3a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b15033-d8ac-4f65-a8fc-271ddeb28c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffed532-977b-48e5-b2b8-b6ea327f38b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be20a365-a952-4196-9c9b-ee8e62a7bffb",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff66aa82-0f2c-4c9f-9dbb-d147544e7005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0fd6e61-ee19-48de-8b62-6e0454d5f562"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890c01d6-fdf1-49bb-b338-6f74379a9842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38bc8c4a-04c4-4cb4-b2fe-1cebd9687372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0d66c1-dbfe-4a83-9bac-25bb7ae7029f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aeddd5a-1206-450d-af3b-947c6ad60f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dab3e298-96b2-457a-873a-04dcedb91db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e455009-2f3c-4108-9043-f6b12237e356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fbaae7a-4075-444b-9fbc-705fc9df9004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a3e72eb-2b43-4254-963a-fa1fff32eef8",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926e07fb-0229-408a-920b-51afaf092138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca92c71-78f0-432e-90f6-8c887ef49ef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bbc564-3ccd-4f40-9573-c0cc1ea4f13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "412783e3-f427-407a-a4ed-311c3656a16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a10856e9-2d1f-4f23-86f3-c187de66b3c3",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e48ced-edff-48f5-b6c9-a1fac3fdcd9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64bb6978-e44b-4fc1-92e6-4e97412b19ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de357b2b-2167-48dc-b461-25a1c88bd168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0fe3c7-c957-4d6d-8d1f-2160d46410f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05068b76-e21d-43fa-ac0e-70b218250e33",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1851d801-d83b-46da-ac16-b7c9d66fb092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ac4e99-b46f-4e70-a8a5-c58d77e87ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06202165-1184-4d94-b2d5-9575740b317a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6408075-1ac8-40a1-9ecb-a274fa05b2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c7f173-df97-43fc-9ab8-1f7116c84626",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9f1a1e-4919-4865-878c-77027749115d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13dc8671-aacd-4e05-95b9-2629c6835b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8510ef70-9884-4500-a6fd-7f5620b173ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "095d48b6-cadf-4723-a534-c365d63c2de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b19ccd-b980-48a5-ac4e-36f5aa0ed3a1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b23966b-a559-4855-b8bf-c174335a4fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ac13d24-a8f3-457a-a754-59513cf37e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b87815-476e-4a32-b040-ae05b6dce391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0589d0ba-7197-451e-a712-7afad161f4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6f4323-751c-4cba-b1fd-428b39f32d31",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13632933-4542-4ffe-b703-6ffc9d7c3d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5690e6ef-e12c-4f9e-a186-1b77a708110f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd762b39-dc05-45fe-8dde-5c771bc54d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d72d7dd9-536e-4b6c-9cab-9ad4aa9369f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e66ff1-940d-45af-bcbe-f37ed62be3bc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40116fd2-cb25-4c05-a1d6-e8e1438d9925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f635a8b3-8e61-4929-bb7e-3d002446422e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2b7c73-8e7d-4631-8a32-4fa5fb3c42c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "882d95e0-393a-4726-8303-c2a8d99315fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10160f2-772b-4090-bc91-fa40f83975cc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca473198-e6ac-458b-aeb2-65cbc77eb378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "626475b9-7a82-482f-8558-38fffd2549ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db8fb268-5004-4eab-808d-1e631140618a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "643850f1-6641-49ea-8809-650713b6464c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fd1a1f8-a118-4e7e-a910-7968f4871a51",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f3cd48-d98c-4b88-aefb-045e5efb0d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78003949-c737-40ed-830b-a3dc4298f355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f8c2e2c-216a-492e-953d-52c67a95866e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "84c21077-b1e8-47cf-a326-33695a2ce81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5fd408-bd57-4488-a58c-3c197a51cb5a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3388324e-4f03-445b-86fd-ed5fb02f5156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157799e3-2380-4a9d-9b0f-99ec4c5a6539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c04255-67ea-4210-9acf-a5973bd829c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2cc5f4-c3a8-4249-8f2f-aa0d6f724f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52cfe3f0-cf23-4738-bf43-b4c74a726fc4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c977e4f-2d4c-43e4-a984-0c2733c98177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d64fc615-9410-4248-b84f-1d9397209761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e69d7755-32cd-4f7d-b48c-3ce7a8da37b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4826b96-33a3-4084-8d4d-944a29aa24ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a98856ef-75ba-4d2f-a8f0-d541c39a5f76",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc86c0d7-357b-4ad4-88df-c4ec56fdf254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdd05bc-5603-47cf-8288-3bbf681c5407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28864660-c93a-4881-bfc6-6219d1016f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e17d525e-c4a4-4015-b78f-371020848a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edce6f69-a204-4591-8127-1b9b7cedd1e9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2d6a76-ba59-4552-94aa-5d64aab4999d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42e65e5e-5050-491b-be8b-4649d3d6c71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b9ccca-f5c1-4e30-965d-a4c74a13c574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afbfcd6a-a4d2-432a-a4f3-18b05fdd8b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e956b3c1-f221-4329-b27f-7b409c33856b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49be3b98-97e9-4cd8-85dc-e87b0812f9ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10e7337c-258d-4e49-ad08-0acf0f6ce68b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0ecc15-175b-4142-86cf-78519b9ddd1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c33bb83f-4ce1-4a89-8b7e-b6457711d2aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc190431-9303-4261-b62b-a81d1789a1fc",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8412ec88-12ef-45d1-ba0d-cd6b9dbffe21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1499438-d9f0-4a47-bd43-2ef9b022d59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa04ddb-37ed-44ef-ba66-794e1a712230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5ea9a1c-0102-4d9e-add6-cffa0c88136f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e0f74ed-6fc8-4527-8a0b-ab8e1cfe611b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3830c85-7a67-49f2-a75e-6d0b5489d67d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f380a353-2025-4210-9a1e-d6b6fbe0e828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692b37bc-82f8-4d32-b0ee-71284fb1677d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a744432-216a-4148-9ccf-8984ecf3ac8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de662676-877f-44b0-ac75-7c3683408ca8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2b2aab-87ed-4a2c-aaa8-74d8ed9ae662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f19108-6ef9-4d9f-9fbb-c7f51d2c7ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fbf6e2b-6428-427e-b5f5-917c51ba94b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "203aaae9-f30a-492f-ab37-cc2803ba22f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd8eb47-e30a-4103-aacb-e210a9bd5fe8",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b244859e-c2e5-4da2-b0e3-b16e1a81002b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869496ac-0316-456f-aa92-6ab90695f2c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ba62ae-96e5-4a35-aeee-074f7d7ccfc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fed41999-774c-4d6e-8327-497526d7be49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1dc1bfe-7c8f-4e73-adb3-b1103cc7668b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695b7879-ca05-48ea-86f4-8d4729036a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2481a94a-b8ca-4a67-9817-71c5ad93d4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25603a3c-9f03-4206-b257-dacd28ae15ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f9db7c2f-43e6-49f6-ba9b-36f6e0aafa75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e37277f-ffd8-4af8-b366-dea41071452f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed490083-a912-47db-8b88-0861619643e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe90761-7977-4165-b6a6-a5b305036d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bec919d-afb9-4dfd-8b0a-e157e43af79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "05c49f1a-448c-494c-9504-04c049b06302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da52c066-5130-4f0e-adfb-106cc1c12d45",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f693fd-d223-413f-b338-da20e72e08e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3f0e44-2f57-4422-955a-ce378bb64db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c15079d-f646-4abf-8b7c-adf1160ecfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e50b2eb-bc0e-4712-b898-69a689b3b7da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2424f55-9c90-46ee-91f7-20cc0d7f9464",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "060b7c47-a0d6-447c-b1be-e1b2eb49f1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9351f6d0-ac7b-4b73-b285-4ba512c5dc89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b97368c-9076-496d-858c-4d99ca8cb20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5cc5b62-324c-4c44-914e-b886689b7248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c069671-18a2-451a-952a-16b59ce7da7e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a6f5e1-f6bd-4561-9d3a-1f1607ebe2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60550de-b905-4209-8362-fcfdc9a411bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd638ce-63a3-4e28-b36d-2c61b640a57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "225b8b29-8d8b-4f1a-89bf-ed85f206f408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71555162-0b23-4726-9c74-a0357aa76354",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e08e63-78d5-4c8d-91f5-1d8f5c60e45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87d8e9bd-5334-442f-8620-3a738daff347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daddc41f-d97c-4390-99ec-6a795f0718af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bccac4bf-bbf6-4957-a50e-d4aa4a150c13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37d0011-f46c-44ea-9898-a594de1e29e0",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ea6b51-76d5-487b-92e2-7e8c9d130a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c2f5bd-f7d5-44b3-b1ba-dbb8d9332fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50abef6b-9a73-49ca-8c34-6532d8ea4d27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd220b9-c054-4713-bb80-884fe37cfb3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbaec4c-7b38-4c1f-a6cf-7a399f05745f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a9143d8-0c45-4526-81d9-d84b90cf4757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda0e3c6-53de-4ac8-825a-046bfeff61ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfe80a4-e57d-4322-a6ce-c634bcc793e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d16d070e-9af6-4a73-bb65-a603d62a398d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851f6884-2916-45ff-a68b-f7d766628a0b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88e5f15-04fb-4c08-9002-b1abbcf04953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b5749d-0c18-4d2d-85d6-19ff79ff3d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "894109f2-a255-4860-b65b-0559e0ea6500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "704a39cf-9ed1-49b5-92b1-461cd51a7981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a582d1a-371f-4403-bdd5-2ff4d222e8a9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b011c9b2-d9ef-4176-9559-c17352c42ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e52e24-f548-4822-aa1e-1af9ee566b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4f74a5-9c64-4b33-88d6-719327111da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cd8cb0f-648a-4fc7-8197-cea87ebfe414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a6c6786-a7e3-41d4-92ec-7914cafc2664",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ad2fa7-ea70-4e5c-8d4d-af183bfd9c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c5f2d8-a2a8-495f-ac50-f38691790eb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d32d8b-9121-43c7-8358-0daa23cabbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "99e33f5b-f371-4561-b1a1-d334c6ad5e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f6d23c4-40a7-4d68-b979-a995295fe653",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25f3f492-cbe6-4863-ab85-73e46ceeda21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6b6134-d8a1-4cba-a686-430a90e5e2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15e7354-2dee-4ee2-86de-5846e262bdbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d85b4fad-fef6-4c78-9b17-91cb3b36c595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f3582e-5949-4f39-9dd0-d67a18454a63",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c13e484-ca3d-46af-a08a-77a1fddd06d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21662b7-ca68-416f-a660-34e39f377730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb69abb8-4391-4786-ade9-baad3c69a47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "38d00792-efba-421b-a6e6-5ace34b28f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d5abfa-0f4b-46b0-b549-61280790e0e2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a44c524-9b6e-4e3a-8f7f-63e7ced785c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7999489e-cba1-475f-a923-54df13fa3061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c09237-3142-4b31-b2eb-a8fa049ed624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5cdd45-6735-42e4-be9d-20addff37f94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118daddb-c498-4ed2-ab8a-b29cbbec7984",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621db232-2cf4-4c90-891f-da70d94146f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee82aa6e-34b8-422e-97b5-ff42b63ade11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856f82cb-5aa7-4cb7-aa8d-beb3f6b1a5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b76cc338-20ca-4fd7-be4c-82fc71b10f6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186af6e6-9e1f-471c-ac4f-540eae2e3485",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03992be7-364f-4c8d-b85c-b2591b88acce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda139a7-8315-480e-a0f7-219d50c44090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78d591ad-3781-404c-959d-4e7bb8ee4522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb63a16-7e40-45a0-9526-eaf3ac67b613"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b068a5-4981-43a9-8898-9b8874df8e64",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad44aad-273e-47f9-8ecc-8bc2a944ac26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95cbb41f-e5ce-4205-93d1-cf69debd5bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22084e4a-5ce4-44d1-ba4f-ba2fff027436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aee63097-89d6-4355-adef-e77b0d9332a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "077b6292-89ca-4abd-ba3b-0a18cb51efef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b6a814-b287-46c2-9ec8-36eb3f8915d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b818523d-2474-4223-878b-11d6001a276d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a07f17-3725-490f-8427-205266d5795a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5ce7b9-564a-4611-ba00-5144a1e61be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ecd2f33-b657-42e1-bf32-8d3284cc7542",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc93684-a764-4b1f-89a1-7c2739dda573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8da59138-b502-4143-a708-0d88fd052f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde5b7e5-38af-4f3b-9ff0-94106d452007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d8ca5b-a1cf-4253-9e3a-1190894af8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbda7dd-856a-49f8-a01f-1c3d82c87e3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4b13c4-00d6-46c8-85a9-27088ea01c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d4de1b-903b-432b-b420-6a0a4b3f9337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "795d3559-ea32-4ccf-a0b9-27801347b3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "774e14b0-d3a2-42c3-9688-965a598bca82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1a116f5-75cb-46d3-ba52-32058c22ec5a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "398a174c-a688-4f2e-911a-bb95cb53e7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f388c670-a49d-4bc8-895d-cb66710249eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06198cdc-c609-4483-ab65-634f4eb9a384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c56ff29-8197-441b-9300-38745eac9b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf8a272-590d-4088-80c6-dd5d5e046d33",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cded92f-d959-49e9-a8e0-54ffbd7e29b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704f4cfa-15f3-4342-b3a8-f3d10054111a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c46a12-269f-42c6-a5d7-ce53cca952af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c023ccb-55eb-4e1c-9280-77c74a610658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c34d9fe-790f-453a-ab83-009a2e9f9557",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acafb486-4933-473c-a638-9a6370156266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6c3098e-f7cf-4269-ae5b-804209ce2b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "195f04e5-79d0-4825-8a74-602fe5eb565c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3caafd3-5491-4c19-93f8-83c171423322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad057af-42bd-42a9-9a0d-7160886e5c66",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce71e117-21da-4128-9ce5-f99b49e79f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "569cfc9b-8bf7-41c4-b4a2-48bf06b5d8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dc7961-9e67-4714-9d47-31e8352da119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83282cf9-11cd-4d40-b103-8b8df75827fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18090fb-fad7-4b25-ba2e-5120ccc6715a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d4930fa-53ee-4de7-8bc0-2173d52afca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdd3a34-51f3-4ccd-b2b9-d969a5a17d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63922274-7802-4f11-9a9a-8c0f2dcbff19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3707b280-3bbc-43ff-b8ba-4b926887a6fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de878a8-337c-4bd0-a109-d24e6bccbddc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42271cea-f3bd-4172-ae64-382c27a9a112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57765e0c-a9a3-41ca-8b24-ee5ce1f9e960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3cbb3b-d019-4947-be5f-1a1d02db8359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa688758-d39f-4219-8693-aa1d6e0ceea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff8c22b-ce0b-4d8e-9832-1e400e085a6d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e125242a-a4eb-4b85-9559-315d2594ed43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba7e9147-7ddf-457f-a841-2f500bff49dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d94407-12b6-4d67-b6eb-d58602ac3a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a45d348-66a7-457d-a527-776a351695b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0a9427-6820-4bab-ab87-6e1e0a56e1f2",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25b2f18-a8d7-4887-ab9c-1c047a684215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce8034f-51b6-48c7-9680-d544ae651cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad831eb1-4888-4939-a6fe-9fb30d67e0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c97785c-c35d-4cab-b717-f1109b6c35f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6e2643-b7cb-4aa6-a0d2-3449f8406eb0",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e64df2-b57f-4b47-9f12-39e41a877cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f10b50-1905-4f17-8364-24cfc202a258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2386e3f5-775e-4ed0-b261-bcdbb4670fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe9e6ed7-d471-497a-b38c-90ffc8a029e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf10b937-46b4-40fb-9211-214ef71f12d6",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "982c552d-7b9b-43da-b9f4-5a7d5c600a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78799812-873b-4439-8bd5-d6a1cab098f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec0cc10-94c5-4245-9dc3-93b2806f38d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "81b58569-2425-4cce-9119-349ac5a38df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c576e92d-59c4-4d21-9012-f56a1640b88b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0597b6-1c1b-4cf1-abf7-8d13fc584ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4fb687-0f3e-4d80-8083-04cb9c292e06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cc2e4d-690e-4031-a4c2-c761e115b64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "112e908d-c202-4837-91d7-4aa938993f06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3dcab8-6023-4624-ba7e-f8a684aac688",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4113a83c-17b8-4134-952d-3f77251eabd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1adcf76-fca3-4ca0-ae56-3244c5a3ea19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b60a70-8425-46fd-9f3d-44313f8ca0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5391c1-c123-475e-aaa9-b3933e9b5d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f17f49-54f1-481c-951b-0f0b58e4569f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bb668c-116c-4aa4-9a15-8c6c2d70a6df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e166d8e2-43a9-4562-817f-abecf115ae1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2313579-9242-444e-b030-97467f382966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "647858bb-3a92-4cbb-9225-bbfba399b615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdaad796-6eb4-43de-a035-8451af8afa8b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb3382f-68a8-4093-8bca-3d2ac7ba693d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31723057-3c3a-40a3-8f21-cc57943e7a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a305aea-c7d6-4b7b-8e67-f562f7b382f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a08c927-0f0d-448c-9896-b33d4a38780e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43030e08-18e6-4cfe-979d-65df70cabe96",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e0d77d-0aeb-4042-afd2-21af95c0b35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1226fb4c-db05-435c-881b-bca79c00ebba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2706f181-e5cf-47c4-b21b-5d575ce5914b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab717961-c546-4d97-9142-30196500d6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec06a74-5d26-4466-ab82-0898e8b2ff93",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6bd32d5-2396-4ebb-bfc5-89dc4e28a658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94b3df7-737c-4ffd-b5a0-d6c3147daf7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7cfaf9-50c6-49f7-be83-1cc095e1ef9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e966b7be-aeba-43ae-8985-7e0e1646043d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeed1886-37c2-4310-97a0-2f7e4e3c0529",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91279dec-b333-4319-aca7-9bf2a3b763f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2db280e-e02f-4c1e-b84c-65e64d554475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaa45206-56e9-4622-b9fd-545bd77c2ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d041bebf-91aa-4f27-8f5b-5e4f798b113d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f804b1c-5a04-49ed-aab6-d435456eef2e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88c2e2d-8d67-4cd0-bc61-734219d54799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fb2498-af66-40c4-ad50-745203b2ecec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51800a6e-adbd-4c5c-890c-1c9cbfc0395b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6584a15f-a1fd-4703-b37a-52aec49bff34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a8c3c0-67af-4a8c-987d-747f164b8fc6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc276126-aedc-4e1f-87d6-dc7bf7b30461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16ef597-9779-4818-b33f-c8ae9eb3fb5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b854a3af-af59-49fd-9d99-ef43ecdd9f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6c06eb8d-68e5-4383-a4d5-9b7d0501d205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc7d23d-e447-4db5-8bdf-2db8d4e1babe",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2296cfde-c658-40f7-9df5-cb6b525f885b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "732476c7-d3b5-4c55-a429-961a92456ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fb5f74-6d38-4973-a338-efd8824651df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbf0ddd-c9e2-4551-9792-8442662cabfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d06c8dc-7ec1-4225-ac3f-a9cbeaa9d67f",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d6a8a8-2e18-42a0-8fac-57371863c5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87f53e68-5278-4367-bb21-fdd788cb635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe05f12-35f0-4276-bd55-58e840e17934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "836802ea-9fea-466e-9fb3-d68e0e7374f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ba9b1e8-755b-4e4b-b493-e79f2a1e97f5",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c48bf37-764e-4dd5-95d3-b8af5d26f191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93a58e9-11fe-40b5-ad50-c361ffe83672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4690d3fe-e793-4ec0-9b0d-1435564643e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c943c31-de90-41a1-9be1-c884db90884f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd36e7c-eef5-4dc3-8e8d-7c0da6dfebea",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8cf3c9-cd94-463c-8bac-f091d8150567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e5496b-1148-44e4-8167-30fa2482c7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b524f4-a914-4743-a322-188a694a86d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29504dc7-98e8-4758-ab88-380409bea1d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc85071-08d1-4fe0-94f5-59899d02ed07",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4467ea2-a9d5-47d5-8e5b-59168397c614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b709083a-292a-4dfb-ab3e-8fcd3877c110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1678078-8634-4960-a2fb-f29113fd9117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f34a657-728a-4687-9b17-2b6687582b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84e6230-086f-45ac-856e-ea0371d1ce70",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e544bdf-9645-4d11-bbdb-80a19cc3ed7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d58c6b23-7ace-48f7-9778-b6eec162b2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65318240-6fe9-4d17-bb0b-79405bfe2fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e94f2eb8-7ee6-4e16-8ad6-7334d598b167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00164fe3-bf6d-4d63-8b9a-c7937cf9ce3e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dc2441-df90-4034-ab00-778c04487a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da3d9bb-4308-4494-bec2-62d73b388261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e60f00ec-3543-4d29-a224-55e6b84f25f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "80a786ad-cf12-4cce-a355-4ad7bca0b530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a6868c-eab4-4a6d-9904-5d6da1f86fde",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7aa88a0-0954-4987-9237-43de63610421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1e7696-df50-4da9-9b3c-a24769805a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ea070c-930e-4fdc-84ae-828743e5dd3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "93d206c6-c356-4a25-87fe-a4465624ddca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ceef177-47b8-456d-b6e2-b2e01823716e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0313eaf7-5732-4473-9b53-9c1d1bf80171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "023b9eee-da44-417a-ad9f-606b47987db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af28c98e-b8d2-4654-a268-10153473e566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca58388-710d-4358-9207-dab7b9af76a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb818f6-a844-4d6f-a75b-3f1a5ce2a651",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9310f730-4a1a-40fe-bcd7-b1f9391298d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5afcebdc-8637-4d4b-ad26-e6c5b2d91df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18cb251-4eaf-49a1-b343-fb2d6500b3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9f20041-2d85-4dc0-a9f2-1bfb71192993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5839974f-6523-4d4f-8eea-039fac57cba9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6805da2f-2b94-4d97-82aa-86d8a632f1dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67880fd3-5a40-4172-9f97-9b1c6adb5255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f660eac-72a6-4cc9-8f8d-cea5d8956b7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b319400-b6ab-4b43-98fc-99f834a59a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60302f6d-bf8e-4449-8b45-7077caabec13",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80123377-9587-43e1-a768-5d8af1027f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bbbb5142-3198-4034-aa01-95eacb4c7b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff33815-d697-4239-8777-dfe11775916e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b25aa8f8-b3a5-4984-a960-e12ce4af7fef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1bf3d391-b768-458d-a20c-3deec148d7f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8f2bf26-79c5-4c24-85a1-fc0dc84d8d10",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084ef63c-e7f3-4d1c-a250-38920bdf3045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb68d8b3-ad7c-4d50-ac91-4bce5352da0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c10b2d-bbfa-4f18-b2da-2f235f060e0e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9920bc22-ab6f-4c32-85c9-17c5edf9ab67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59eb8697-5ac6-40cb-a7ef-8a7ce182f36c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31c3e09a-532f-4857-9e63-c4b825b219e6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0ffed43-5287-4b4e-a3f5-0c874d15f8fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94ee8b47-c271-46a9-9192-2b5e1a8f2805"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "296e9a1e-8bef-4fb0-be63-4763d3beb115",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8e61ff85-294b-460d-929c-cac6844ca25d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d43e159e-6874-43d8-9c70-489c87d2e1d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "567e9039-bf0c-4d53-a0bb-81f7c5d32674"
                }
              }
            ]
          },
          {
            "id": "009a2609-2a1d-4190-bd1f-5d1f34140146",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2073037-cea4-4de9-b6f2-431bfb36fdde",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "b6928b69-fc1c-4c7c-9ef6-df188a29be84",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bbe352-819b-4548-8234-e8fb1cb2cf6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0c841531-d924-4407-9895-198d502c21f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb96b9f-f304-4ebd-bf4c-51249c30f51a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "299f0e7b-1c44-4f0f-8f99-7533406734e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ae3b2e0d-6eb8-4678-ba3a-3a741308d151",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "93953ae1-7bef-4406-bd3a-e7bb499b0bdf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ee250a1d-f933-43f4-bd5f-2e35934d4603"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7febc60-2050-4c4a-8f4f-d84e55cf22b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "aaef5c21-879b-4226-9aed-1abdf371ea7a"
                    }
                  }
                ]
              },
              {
                "id": "3bdb4619-82dc-4583-b1cc-130c2522b516",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0ba0777-d665-4a18-bd59-59072462779e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28dcb2f7-a9e7-402f-8171-62775b4e51d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "613536bf-3f2f-4935-a172-6c1d55b74990",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "94659ddc-b21e-4ef7-be07-0b5d1fa63d8a"
                    }
                  }
                ]
              },
              {
                "id": "abde9043-f802-484e-a669-176b81dbf146",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78943081-ef02-4449-bb4d-4bbd1c05e505",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b6238b8d-a83d-46f4-8ef3-ca86654748c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53312bf2-1e92-49bc-9595-588000559272",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66b856f0-24ec-44a6-856f-fefc2d98c493"
                    }
                  }
                ]
              },
              {
                "id": "0b3da83e-2c5a-405c-9069-3b0b5bac9f0b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f3492f8-3ff6-4a57-a471-f6e7b094bf89",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f261058b-30f2-4d46-860e-f724eef5243e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "192125a9-3257-48ba-8f63-a9ab29412067",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "fdef431b-35fa-45d6-812f-b0ceaaa035f8"
                    }
                  }
                ]
              },
              {
                "id": "75f08df2-f1db-405b-b246-20c3a44cc4dc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6807b61c-3f74-4189-b9c1-029a5fc14aef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f23592c2-a088-4580-84e2-d44c86bec1b2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46a9dd24-cee6-40b9-bb00-e6da8c8d4f36",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "2e8250f1-c235-4d9a-b106-75273bd2036b"
                    }
                  }
                ]
              },
              {
                "id": "477400dc-6c2f-4ad7-a804-128c7fc51c76",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40679f19-6666-4e8e-ac5b-e41fabeae123",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ea6e4de0-8a41-4521-91e2-2e45cfcd2822"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "846ab6e0-50f0-4c3c-8505-4d5b368f3716",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "84dc93f6-f531-48ad-b0f6-c3878233b1ad"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d8caa4ca-3e3c-480c-bc8a-10c6ca4bcb68",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67e66eb8-6b01-4ffd-8062-7136b62df1f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6ffde3e9-af1c-4977-b31a-336820cbb8f0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2639781b-d53a-4fb5-8691-4353ac008bf8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4cde6be-8fa4-430f-8c0a-7124cf4f4559",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "023b188e-5754-4baa-b7c9-38769f3d0f09"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6515baa3-8e25-4b5c-b106-6aa12e371087",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7f594904-9e6f-4a30-8b54-3ddc2f47dda5"
            }
          }
        ]
      },
      {
        "id": "18f3b574-d5b9-496f-9c98-6d8de5c9c4c1",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ce8404a5-7d3f-4bc3-ba7d-51ce889887ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "356fc861-d419-4e88-87be-b4ca39eb8e5b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "32091243-57bf-4ebc-b3a6-5db51dd29bf3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03cb5744-4c2e-4a2a-9e21-f35b2465d34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bbfc24f-2703-4e54-a673-282d7c638e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a88fcda-b0f4-408a-9f15-76f618ef0b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fed31668-41f0-4b86-8ce5-bf019e5bfbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d865bb81-ec64-42fb-b35a-55f21516cec9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7d7e7a-15b5-415e-a800-eaa72a99fbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ea431f3-3a1d-4c3e-82ef-f832782c0f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c8576a-17c9-491c-ac3e-38ac053ef19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05bb3dae-f751-4a8d-a8e4-b1f905355def"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5564030-b2f6-46f4-a853-a363e1eac849",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbe51935-90aa-49cb-af0b-070e4a7bb51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "872b79d7-842f-419b-9835-61a7dfde2d8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206f48fb-1d13-4baf-8b59-96cf71557833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf7ecff-7e3c-4ae8-9951-a6f484d54b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35de921e-ce8d-42c9-860f-8c3e94e6e791",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddfe4c0-1f58-44ec-bb43-772de03de1a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b555456-0880-49c4-b373-c40eec1f4253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1f92d9-924a-40a7-bf51-34e31cc7e419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb4708f-0d16-4d24-be7d-6dc699b7417f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df507fb-ab4f-499d-b4c7-9071f4456dc7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f453ea65-bfdd-49d9-ae96-a699226769d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "672ab47c-999d-47d6-b092-037ef0bf367e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c309f97e-1bca-4827-bf6d-bb6d4cd771d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d1151e-4d1a-439c-b8f3-c7c7d5a3a8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f71ea861-e175-4258-93f2-1176cd28cb0a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ef98a3-0fac-47fd-8f94-127fa68c0f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488eb951-1487-4012-9c43-f6667eb37b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23d1c2ae-6df9-4a15-a9ad-00e3fe4829ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c51ce456-df79-4383-9261-76c15f3fedda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203df79f-abac-4ff1-9707-fb1094f3592d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6663dda9-e2cc-4c35-8847-076bc52b805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "625df82d-0148-402e-8338-0146f57b76c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2922f47-4d68-4c5a-babc-add49f0e8f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0e6870-d092-4270-baa2-3799adefda0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ec6b54-f136-4894-9953-6421ac56ebbd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b2b4693-f468-46bf-9a14-a8154b2e1e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890201ca-e685-441e-a00a-5be01e61e469"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc8957f-092d-4b11-a64e-bde60455e717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46709863-3453-459f-bc21-d763c7ea1de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a117d3c2-4159-4448-bec3-76cc7585f93e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ebc88c-9ec9-49e0-b3bc-e013ab2c6b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42ef226c-f0f6-450d-a053-89f84249d0b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec32851-1495-400a-b759-6e9f8347491e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b7a353e-1697-4256-afea-3dd54f94c875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea75be8-030c-42b8-80af-d0e1e6a6f311",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2833f1b-4f43-4b3d-901a-0beabeaf09e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2a5096-57a1-4a18-b00b-0e4e9d2de04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff37694-08a9-4104-9b38-83665565da0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cdbbd6f-0741-4036-adef-c8d2adcfd2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d6b475c-02a8-4756-8392-d8dd61728a49",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0d173e-5867-45a9-8f91-78d276e52c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcabb3f0-2636-4f51-8993-d3e40e16d18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cd64476-8a6d-44df-a326-d4c21350c4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "33a4c119-06c3-4308-9a8a-8d77b99b7f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c76d0e-d282-41b9-aeb8-2a29963ea259",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "458cea46-01e2-4489-b1b5-3d6b4551d881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e65f99-ed01-4812-8048-b6b9dd0ffabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917a6b0d-676d-48c2-a2da-b9a37ef07e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d7dfa01-c484-436e-b0b4-1724dbcb2f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38d485fc-34e6-4c40-9261-3a865126d0a2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7721600e-84b3-4ff1-a681-96d76a22817a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22762893-bb95-4506-a4a1-09ceabfa44ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892210bb-6079-4f27-a6d5-d04b0ef029ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2b32cd5-f1d5-4923-a078-4c1c79287ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a321268b-a80e-435a-8878-ded5e0192a2b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b047fb-1440-482a-bf3b-03d02571f5db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5124e34d-53e1-4845-8a60-6238b5edab1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98360d0-26aa-4971-b1f9-f4adfb534e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a804472a-1688-4a30-be39-bf1e5ed29229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ead96ab0-bc73-49f1-b41f-318d4182f807",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "774fca77-ddaf-405a-88b8-fae4d60b28c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34bddb77-48ba-44ba-b10c-1361163b93e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "898fe701-5a63-413f-a224-444aaa4a3f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffc988e-296a-4e50-bbe3-c5f4e535ab6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc387dd-7326-40ae-8d74-e41407e137ab",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1fca7b3-912b-4080-a4f7-a40f309ae0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e72f13f-982c-4e0f-b175-b1f87efd12a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "361f26ef-d91a-4524-93c7-f6df43bc1e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8294265-20f7-4ba0-b045-8dad39ee22a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77527e37-9fc5-4018-b27d-3f5efd696a6f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1d8098-69bf-4a12-a1fe-dfb8c4f929db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77aa5463-c846-4912-b544-4f68f26980c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d1b997-b7a0-4bb0-ae95-cabcc490ebdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "56a6367f-eb3c-4a63-897c-8dc96e2cc8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7f1763-0dbe-42d2-87fd-ee1479e49d0c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ea8bf0-094e-49bd-90c8-0a766be6ecf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1238cfb8-2e6b-4ca5-a1f9-2eeca66dbd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f48105e-0bd2-4db6-a1e1-70420a404a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2f51f86-ad95-48b3-968d-d72e2f942449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af768414-41ab-4227-8513-14d04ded3efa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4d3773-6193-4140-bfab-c5411dc23da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e689eca-7e0a-420e-b9f9-ae76421b2688"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d873b58-cdc0-40f4-8bd6-8ce9715f5e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a632b338-de8c-4690-8114-1186d32b86db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d662e2-000c-4628-ae7d-354617f3cb8f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4703f0b6-a766-4201-b891-190bfe9917c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f63507-b6f1-446c-bdfb-a35941225333"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d9f267-e335-4422-8a23-164705b7be21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "380bbc11-86df-48ae-8a82-7cb313d1d035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb56312-d90d-4e67-9a48-d9a9f5a95c32",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce220c5-1cfe-4b76-9fc5-58e7d22a91e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68a5f50-7f2c-4373-9a8c-cf3da4d66ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1523da1e-4060-4893-b32f-b8eb9f0eb4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cb5f645-c204-43ae-8324-8fb25ebf18ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c9931c-f5a2-4097-8c76-bee2b0b7594b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "857f7b86-c72d-4596-9d3b-9d265ce7df9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcc4027d-8582-4700-875a-a63c24b9193f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36299234-3322-4638-a850-555e58ee100d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5af80ec8-825e-4a52-8a18-a14140302d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae6f06f8-0901-4cc6-94ed-4000c0b5a700",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c11f76-086e-412e-83a2-a778f3f62975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "689064e3-c6c3-42fe-93cb-b0975605134b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fd0be5-18e1-499f-8c15-62f0fdffaee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3adbbefd-b231-4f19-b015-f40b41ec27f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c156e2-9464-44db-92ca-85c11ccdb0ba",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883c67c7-83f5-44d1-b8ed-0266355c5426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8b8908-5d47-47f9-9a38-f6e54fa6e2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50bbbed4-f927-4539-8313-61a572110a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bad417f5-9f4d-4ead-9edb-0c842f39427a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60c39531-f4f8-49c7-8d19-e6dcf5c61e1b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8ee6c9-5053-4373-8d98-5fbe1d0685a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deba58bf-44ae-429d-8f8b-4b649a22ebd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d6dd21-43c2-4119-9222-67789ca081c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8273505c-6940-49a5-a743-d2c540bd1d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213adabc-76cd-4c7c-a111-2dd53af233f7",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6ed5dc-8c24-4dec-bf82-4205a6f35647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68c487a1-7acb-45fa-af03-6ed8546ba065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ca9cc6-dfcd-4c26-83ff-80da50cb3ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30a35f76-00df-4e5c-87af-7cd574c74e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e8ae98-4ce8-494f-970a-11ec258a0290",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b74c9e-a2a5-49f3-bc89-ce83005ef521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe648b6a-9070-4936-a956-5d965d6dbea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a516eb6b-9fa4-452c-bc96-9aa283e3eb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd41bb3e-407b-4970-9294-2e8d72bbc210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3487401f-4d7b-40d7-990c-3c2122dc8129",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19bfecc4-0222-47dc-8300-763484169516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f94ee495-d22c-43e9-95dd-9a09f5dacc91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f2672f5-7977-4ed4-84a0-e8f4d160d6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d40c08c7-a50b-4b0b-8289-3fc94b8b30de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f570ed0e-f45e-4a46-908d-13961773eebb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58305f4a-d2ed-486f-aae2-0e589e738a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7523c2d8-3026-4138-a4a8-eaedb1db9dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70324b62-4224-41c0-ac1a-44b72044ee56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd241fc9-08ca-4c97-8a34-ccc1d211d6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52401c4-9e03-409d-b1bc-414b1569c59a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b94d13f-7bff-4ca9-ad00-0b8660d2e153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7565bb-03e5-494a-bf81-9297a2834f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081ec814-0c79-4584-870f-3487e1941026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "14538dff-5d9f-4889-8c64-d28fee707de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553cc99c-6824-425c-b2b3-2b9847abe9ce",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeccac6a-7367-4f56-8349-2cb323936186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8f5199a-ed7c-4de6-805d-fbcf5f9b340a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2469dd03-905c-435f-a5c2-2d45421e039b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37dc8e0f-69f4-4d86-881c-46a8561e82e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12e3d829-2f78-4aef-9cd3-a6af57318f8d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60d2d14-97ef-4d74-8446-8f9fcc78b486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59dd7152-8824-489a-a9d3-23708e2af6bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f85e062-0a87-404b-b163-c2b21f11562c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bedb95-7b4b-450c-8c3f-4aa71a3904ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b05a4e3-1a73-4396-ae3c-1bb44b59451d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63d96920-2015-4512-9088-f6e20e52de97",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2209f616-0c1a-4527-8583-cc2ef5c018d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "34f69963-23a7-4049-b17c-01148ef12af0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6221f7-3732-4e01-8e61-901b7ecfd6ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "795aed6f-9476-4894-9633-0e4d1d7bd8ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dad4241-a34d-4d75-9053-0fb360647f87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42791444-9ce4-4af2-8380-fb978e7e5c24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b474f8d-0349-408c-87cd-74ad430b41a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26edf531-81ca-4eba-a3c5-c6aaabf656ad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8848b3f5-7f15-430a-a553-c448d726bc0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "911bc5d1-ddcf-4d22-a779-cf1262f3614f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "95a9e181-d79b-4253-83ee-7eb7a637c72c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fefbc22-95da-4e0a-94cd-ddebdaee201f"
            }
          }
        ]
      },
      {
        "id": "4a8f8bb3-0a4c-4acb-8fcf-a158dc2960a0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3ae4742c-d401-4418-89c1-46349282f948",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7171aa71-d7b6-4d01-95a5-e9bde6164cc7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f70de6e7-2012-4749-a595-d4ed7e256a39",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc24d0da-f5e8-4e29-be9d-a76dd74da486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e48922b-084d-46bf-9ed2-72ae36054b22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd1f155-1728-4c5a-b793-12c944c44347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "29d3d05b-5e59-4247-93cb-81d0b3acdfe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b185ad-f5d4-4aad-afd7-45533dbb56b8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0315f87a-587a-47b2-88df-cded0f15cfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582cdf31-76a0-46a0-bd0f-7ea79ca1ebbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aef3c97-7a4a-42b0-9a65-aee9e23d7fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c8d810-3a80-4e7f-bfab-aeb5663cfc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24c92397-eebe-40e0-9338-48b9e618dfa7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de03223-5fae-4167-be1e-bc9f3861c96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b0107b-0096-478a-be32-e74b9de06747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817481c6-5c11-4260-b210-8dc6b8700efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5868f6-f14b-4787-bede-2edd407b7d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7aeb2c-20ca-4b65-80be-0a45401271f5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd18486-00ba-4628-8b04-46b6e9a50de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd53291-7783-4643-b8c3-10fee2af5975"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa264fcf-1ab9-4192-95ed-8fd5d550d0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b063a3ea-8f7a-452e-81b7-cb59f6a6011f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9a4f92-93b4-49f3-ab97-e52375529cb5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f31782-43a8-44b6-94c2-5e4e49c2df43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c9247c0-041b-413b-9e1d-af1fbe7011a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061a14ab-7def-4961-9915-05c4ccb861d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef4565f-ef6e-4019-a9ba-1c4be2a26477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a2f9dba-b583-4ba9-a0b8-1c57fc3ceb57",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e4db6d-4087-44a0-822b-0063069f1184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95da8ab6-2e03-4397-948f-ebecf7bdcfba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70454068-1ee7-4a54-8e91-3a2c2bf2f72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe95ec9f-cefb-4155-8289-39d4909feb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1adbcbc-78a2-450e-9d67-afab67f28414",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5974931c-d955-4d90-9b9a-e669c2a1b6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54151d11-aef5-4381-af9d-023f3d73d798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6518ede3-026e-4983-8323-c6a46648f2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "88142bdd-099e-4ec6-8d59-e976c88f0483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a9a9e0a-a671-4ae7-a939-8626a541ec59",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e26ca2a-4c4b-4818-b1aa-ccce806018e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b4062a-9d62-4df8-a31c-38f3b745f404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b7d7e4-97c1-487d-85ba-6eaa20c3555a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5fd970-33a8-40e7-86fa-449546c68010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2288133d-929c-44c3-ad84-14244871b650",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b700b923-1ff0-43d4-ac42-6e7fe6a88d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78d57b84-326e-4d8f-99ef-e1d674ce0d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193fb0fb-653b-403c-a24a-aceb4a2b01b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5203ae8-bdd0-47c0-8ecb-c468777b224b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a70282d-901f-4c6e-8758-5c46c1b8d22f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eaa9bf-72d4-4b6b-9c9f-9d1744204f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d3fe3fa-5c15-4382-9390-f3712c85d012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a001f4-278c-4ad1-8964-6dfb5c64bfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3179b7e3-2660-41f0-96b3-5c5e8b63a609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0499689-b650-42c2-b771-e5b4d33a1019",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efcc586-fe14-41af-9b27-89438b3b10cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64391633-83c6-4f7a-80f8-c96057055dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e778eb-3ebf-44cc-b710-be3b2d54b75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cd11f780-2859-4d32-b80b-50ed65ba8f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e16cbe2-68ac-4e7a-8617-78501e51e123",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d3ce20-5713-4376-a620-d8977c72ab0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e7efc2-2612-4dbc-8b5b-d18d3e683220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a907a9de-0b22-42e8-8ecf-811a5ef37f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f51a617d-3148-4eb5-89dd-0480e51e5ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8107929-606c-487c-8122-93f77b3e17ce",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed101c14-1f1b-4015-b386-1c2d88558076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8360477-836a-4ed1-ac94-66d11a886fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e315aa84-0726-4e94-af21-469702f13ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4371fa6-4a36-41e2-8df7-d5663a78aafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854f06ee-d36b-45d6-b657-7b1961ad2c0a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbad210c-7d67-40d5-b209-27bf564a83ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1bab01-0591-4ea1-b157-dec1e14fbeee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f797a57d-e118-4b1a-99fd-e468eeb39509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ce6b33-72ac-41c9-8d19-f542e2cae71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f838135-aa5b-4969-a647-6257a5fdf28a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab348bd6-db89-48be-86dd-e6d8da49216e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3336c58-8190-4647-ad0d-42698cc054c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b2a1ca-f7d9-4f3f-ba31-bf34093d5eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1afeec3-a2fd-43d1-9c7f-1362f87f1ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3895d2f-eff4-45d4-a1fe-110918c8f51e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab01331f-d5fa-402a-bcfc-054f594b711b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bdc871c-474e-4858-a485-be958c91f5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf5a1d4-0487-483d-b759-960c8fc4aa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a3b717a-0afa-49f2-a4e7-98c4d2994556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c6a262-c55c-470c-b668-6d4d66394cea",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e838e91b-5d6f-4ff5-bb20-49a1c3ae142a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edb01fd4-5637-4999-a6ab-462b395100ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0edbeb-43fa-4db2-9501-a902fab331a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "33cacfc9-4890-4912-b3bb-88ff577d1522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65fbbf5a-ef92-4d3c-be66-4415fe168110",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae74bc61-cb2f-4f35-aeb4-49f4f0ff4aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a797bb7-94a1-4819-aa85-f2415100e5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f75a218-703a-4785-b6f8-a7cb6320c312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc112d5f-642d-46f8-b395-884166e67465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f347c378-24c6-43a4-9efc-75e3328b555b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8a67f4-6502-4ebf-91c3-92ac5585bb85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "773c51dc-1ed2-4a10-97dc-b986f2139e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac100ab-06db-44db-94ad-344e540faa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "30ea5b8e-a02b-4db3-82a4-cad39da4307b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a1e963-9bba-4814-8067-2adc2c14750e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3b300b-4119-4564-a26d-c6d6de0146db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36fa309f-8775-4a87-9b4a-3e152ca20ded"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd8026fe-df78-4621-bab6-cfe6a3f7f075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "078f177c-ae43-410e-899b-16cfc04e12e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74ada71-13cf-4c80-a5f2-00c8f05558a8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb227b9-aeaf-416e-a046-e9c65a1d871a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b53962a3-0c1e-4459-a038-39debb088edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c5a3fc-318b-428b-8152-664d6639cf31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42e03aa4-d8c7-4fea-9b15-7a8e16c66b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6bbb8a7-8708-4130-aa32-a92ec2c33cf9",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5680f026-71c3-4245-9ee4-c29987125eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ac5b52-fe7a-494f-8f47-751f414ec4c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bae6513-16d0-4cad-a480-b3c9aae8a8f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "611a1330-a6be-469f-9955-8057dedaade6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf57ffc-0759-40a4-b5d5-07bb3474aaf1",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb331d9-dd63-4495-9568-18de3340fe07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6434c5a-8d50-4a01-9a23-f5c30abc45b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a6b0fb0-d496-43be-aa31-2b20adf3d319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03715a49-a291-4fc7-b1de-6ab29fe26ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff46e631-b59a-4e35-8645-e2c28139e6be",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dc8ed7-b818-4142-8873-4eb5c7a30a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24ba1c9-dd36-4181-a29e-557500e57ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6894ddf-0db2-40d2-8ae8-de52724329b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa3856c-cad0-4ba1-900d-ca087c4d4b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a46f63-b18f-40e6-9965-4fa81d4d03f4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d473bdcc-e9c6-4b6a-8860-cba6801c9683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "940fc895-8e27-40bf-be39-ffd56588c34d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b613281d-4bfe-4a90-8715-ab2cf3cb438c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "899d1b0b-e52d-41fc-bd09-93c6128974e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "660a2dc8-8d20-4edc-89af-9cd75a2a8fad",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec63983d-06e3-48ba-bb75-388d7978e4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a94970-7426-4bba-8745-626d70383b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1686e1c-5393-4043-a544-3b948b2f9d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03dd0891-0bf4-4865-b78d-0be07587df30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f0fa72-71a7-4635-afc2-26b81973f7db",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53120827-5518-4723-bbb0-ce1c71810162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3094544f-97c0-4039-9269-1301f64163dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299bb983-66e1-4c44-b5d3-c17ee1d97dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "025dc2e6-dc1d-49d2-ac6c-3cf10afe2a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899d8655-2bb7-4039-8937-1eb4a3e4a27c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828303f9-a024-4a2d-90e8-e44f86b1cd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d0366cb-6c49-44c8-b181-b9cd76cd43da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a96812-8357-4da1-a088-e832660ee5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3fe835-f2ec-47d4-9e51-1b43d28d7933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f358c6-00a0-4d70-97d6-390eea248720",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f86a6a5c-6706-4f49-99b0-a6d659e718b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cea4c9a8-b22c-41e1-81e7-24525fc22cb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136b360a-e959-4e26-995b-e0f68f903a37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2616bbe0-30c5-4fe4-9e35-88dc899ed27e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77479b3b-043d-4b7a-bbc6-34a00700d0d2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185ebd8c-1d29-44a3-b4ef-0dea69f58af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a45dfbe-7afd-4139-bcee-56bb1cb2648f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781bcb60-6965-4c1f-ba6f-e326f8b9d4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40880252-3015-47f0-9080-2e3a02701246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc378b6f-f5c0-41aa-a0f3-1429e1fb3e24",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f137ff2-8aac-4232-b047-55beb1891f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde6db69-9966-4172-822b-dffe94ea1181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa9bc76-084b-40c2-83de-6ec8179db540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "399c4db6-0ada-4f79-8f79-db0dc09f1aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14f5734-cd06-49d7-827f-d453f1736689",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b1ac1d-5c25-41b6-ac05-a4921b870931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c36945-c24a-4987-bff0-6dad4b65a233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbf4cc91-e021-4d1a-b064-e20edb13bbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f411229d-c580-4eb0-9b34-6c124ecb2aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a2c98e-2137-4d90-9679-7f4f40e13350",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ca3079-a510-4f93-8d4d-fe632e10dab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7165b6ce-871e-4afd-a054-59de2ae9cbe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235aa1e4-7b05-4592-a9d1-e6ae4d1ecaa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb231ec3-e2a7-4fd7-b951-9215dd6313b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202018e9-6b5d-4e41-9001-ffdbbae89b31",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b81102-878c-4945-be0e-7794595923bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b044a4-d4c1-471e-9a42-11145f30a32b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b77aea9-2022-4160-81dd-77c54e3d038e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d814043-15d1-4ce2-b2d9-9a9808914194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146ac485-8089-4f5b-908d-02ab9d74227d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af945ca1-1281-4cda-ad9d-09479238ce14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88350332-6301-4029-a57b-a5a3a03d92cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a776ebb0-a5af-4b67-a77c-66a94b3a0d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82839d73-f23a-4867-9718-0a320a4c76e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76717493-842b-4999-8d68-5e1e900b3374",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dfd9a1-789a-4016-b3fb-7ba73d201042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402f0546-520d-4b96-b56a-71a7907e6fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c53e891-58f8-4f95-9caf-95436ea9f73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c528cd77-0496-40d4-b036-0784786542dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ca2f60-7ebe-40e7-982d-abf62ea15897",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241f821c-74b6-468f-8f38-5cd790182e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc870c04-f2b9-47db-84ac-802999b9bc64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caae96e3-25af-4e3a-a232-c1940d67c1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37401657-d716-4315-b364-a53baf0ea830"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ff5f3def-1a20-49df-a91e-0a55a9998d3b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17c2df01-24f9-4bf0-8883-7868c484664f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ba62ee-1228-4fa6-9229-25fdbc039e5a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7c89a0d5-d73d-436b-810f-5316114d6794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066fb315-89f5-40d4-ac4f-2cae9b8696ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce97ce7a-4a39-4fbe-bb57-dfee42111984"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18fbf398-aabf-4a93-bdf2-89bafdf32e16",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6690fc73-3a1f-4946-8b97-35ab83167b36"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7306389e-c860-4556-bd52-d4cb4757270c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ce979f2-b690-4589-9c80-d7ceb1b5fb29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce9e9ad8-e4c5-490e-8ece-84c261b3a1c0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "62ce56bd-a2ab-4f05-80f6-963b6646a3e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "07b7a6b6-4554-4cc1-83d5-ff02c9ee5746",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6182224-4f30-45be-8d9c-13fc8af65b6c"
            }
          }
        ]
      },
      {
        "id": "8ba6dcbe-0d33-429b-91a4-6eae0fa74e56",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "a5c805f2-54eb-402e-8398-1437925fdcca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "49e84bcd-bda4-48f5-b0ab-4f3a05022023",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6fb9698f-b10b-4518-8385-c3096a4d373b",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "942cde2c-86d7-493a-b5c0-20a4467a28d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccf395a8-1e9b-4b4c-9d82-9483ee24fe0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9790d931-d82d-4bf7-9af0-637b7a0725de",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f14e76-d4cd-4bbe-8c1f-20f6ce959462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3728d32c-d018-4a7a-84fb-d196b306c223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659128b2-a02a-4552-8d32-3eba669c7f9f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738bde03-56ae-4c25-84af-31cb49abebbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ebfcff-4e90-4aa3-8a96-bc4da3e9b195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e77cd1f-4d0d-40ec-8343-6490468d356e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937494de-e5a1-4ab2-a223-2a2283c7c67f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d83b00c-a280-48c1-8821-972834b58caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412abf02-a66f-40c2-b791-419295ef2dec",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa689972-f01a-4432-b63d-5a1c8e45d74a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af84adca-0d5a-4192-a743-4a798b3b52df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9fed3a-6cda-497a-b9c6-817bfff4bbc9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f1c4e4f-88de-48c8-ab33-5bcf4076742d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061cc723-6125-4e8f-a719-35e476ffd1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15516a67-eb2b-46b8-b8a0-307dad0f9f87",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd2ff8c-b1c4-439b-8c72-9c807363e594",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f83f062e-6bfa-4df2-841e-5160bbd70b49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b00dc2f8-4d6f-43ee-b2c4-e325ba98dd9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b0a269-9692-4c5b-b899-45489af7bc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f9c500-4419-4181-b9b0-dc72e939382c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e4fdba-0fed-48b6-b584-767ea65a379f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50fdbdfa-a456-4ff6-b457-6ae910a9aaed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91547f9a-2d72-4090-9852-e516c4decc17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599ff2be-3ed7-4500-8a3f-9b9a01213080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6335a7a-f5e4-4663-99a0-f863649aeac1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "876721bf-ae11-4d35-a91e-3d84848c4dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d38127d6-75e1-4430-a978-cb4e6fd61cde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae249031-4882-4d9d-a44a-4e838a562eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1370e51a-7428-4d2e-980e-e6a0fdd6bbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fcfc0c-264c-4bb3-a705-ef4a364d21ca",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e8ec5a-dc28-4a5b-beba-709fd14825d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fd261a5-81bf-4b21-86d6-9f3437cb588b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419b4036-a654-4247-93a6-69a251cd7764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9dbec4-29df-4c03-a886-1319ea62c70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e286bc-adf8-450b-af1d-fa17957dbf72",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc4b4a9-3c37-4a24-811b-75a9634ddfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc027f1c-a38c-41ef-82b3-16f7864fcfab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8adbbe12-f562-4fb4-8044-5782b075d890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31db9fd-4a1f-4325-92a5-924eb2829d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29ed102-ccb2-4b65-927a-c4ac2984ab7a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e2a3031-8db5-45b1-892b-25ab8bb84e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e007ba4-d8d5-47d3-82c7-bd82267bea52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f68dbab-7be5-4d4b-89f8-0eff72b0270e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2050ae97-5705-4037-b363-f2429df3cc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31fd85ad-84be-4ba4-81a1-04a98b622ff8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00632d0d-b3be-401b-b35a-d63bb284f0d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86939354-a539-430f-8ec8-cb16e732843a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf49d0e-5b83-4d5c-9f49-bebc1d8fe31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a89adf4-1ea2-44a3-a9b8-3b54a79fb46d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23ab3a0-00ae-4689-9264-a269730fac59",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18701ef6-a5a3-4d33-8bde-dc151dea91d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "470040b5-e8cc-421a-a4bb-5608cb8e15a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba4dfbe-943e-4d4e-b075-6c62a70acb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f88c83c9-3622-4cf9-9b08-52002125d6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468e318f-c325-455f-8d09-5b6427547edd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0102616f-51db-4537-a1db-b8af16a87c1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "664b8ad0-f2bf-4fb9-95b5-4897f7eed55c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21738959-28e4-44fd-ac50-4d5cdf58c987",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffdbba9-98ce-42df-836a-b12da63c6823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e506953-8cf4-4874-99e4-b4ff17f2bb19",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e2e72c-d643-430f-b65b-992a03f84710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54a3c3c1-d5f8-4a91-8d81-330d3e574706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078bcd22-b1b6-43b1-b9f4-d55b81825fba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d620b8a5-d5b5-4804-923b-de4f47d77b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863c29c0-1c75-47ed-87a9-21d2f379984f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1cff353-c242-4d0b-98ed-1b6e63787050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183d4947-d3d6-46d5-95b7-7cbe7358866f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "caff442e-3639-4cf7-97ca-29549ad7cca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ede06ad-f275-4317-bce6-5fee9c7879ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c18b29-2894-4d46-a1cf-fd71d8d8ea72",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74bcd1c-c1ec-4ac9-af45-5c03444b2e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00222f7e-0247-4670-b03a-c82a3ac92b69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7fa8cf-44a9-4a8e-9ff8-e606d3f63c48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22276cff-5cad-4992-a3c2-e7c08db02e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c75c713-ffa7-4375-beea-e3aba83daa9f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996c45d2-1317-4b35-95ce-c33d56c38212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "974cad29-385e-496d-a1a9-cad25cd5733b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "165080c8-1876-4925-9d8b-b532d4981243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50c4d922-6e00-4cb1-a02b-8ccf7532c91a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d7c651-5115-420e-a827-5cde05f9677b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0dbe24-cabd-4404-a57f-dd005ee4d32e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fcfcc6d-ac92-44da-ac9d-c6a26f2f6261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e212c0-13db-4443-ae1d-d50d0eb30091",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e9fa19-131f-441e-9728-16035e0570aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bf0541-ae6b-4f02-84c0-389138d30f47",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13631d67-e77d-44b4-8df7-07424496ad15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30f6f6d-67bf-4a5e-9bb4-f9e08f782a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23332e60-7951-4a1e-b7b8-4b668fa4c325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01cafee7-9fd3-4731-9a05-823ff2817b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0747da36-9f5b-4b14-b7de-964c71389e57",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd93dd7-1527-4a3c-a9f3-4fd16045ef34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d8682d-fe19-4817-a157-ad11f58ea7a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a096e1ed-8c03-45bd-b842-f04c496d8c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd4c5b6-f7db-45a0-941e-90006997939c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c2649b-5984-4668-828f-992c79a12913",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb734dcf-0b76-4145-a92c-92ff38e00163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51aa6385-9678-4bd0-b6ab-be3b87dcc95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd4a7618-b5ff-4c8c-9501-881787e6276a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59802171-2018-4f00-9e5a-555e116ecb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142844f8-5a02-446c-ad0a-313a6c98b1f9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8093bc-9903-4ca2-8ed7-68a823c1fea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ff8c7e-b45c-46f6-8579-547a68aa956d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61420ab9-0d0a-4fac-b6a1-e5210be3bd1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243e6029-ade9-4b6a-9704-4968ac0a0a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a21db3-39dd-4d73-ab22-d0cc0df404ca",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c434b7aa-8ea6-4024-abbc-1151a1c40b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ade7a18-841f-4804-9299-d0872bdccdca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef0cdf1-3042-4811-b32f-faa801f76e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107df62f-eae7-457f-b280-864b9e20b1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1f50f3-ba6b-47ca-8589-28cb89fc713f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e0c17a-a5b4-414a-8ceb-e7e4aa98d09e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "311de562-ed7b-447a-af4c-1e3d40b65086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "484ecbf9-61c8-4e91-9dd0-a61a84469227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8056d2d5-4bf6-4c70-8312-176f3bccf52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5541fc-35a0-4ada-8ac5-ff23ae2aa0a8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfa5a9b-c318-4984-af1a-849044928180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "708fa2a4-54a6-4c23-9704-7c716b497afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3adbe4ca-30ca-4adf-b36c-802b8fd03705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b854ff1f-9ec0-4040-a294-d4e2f28ee735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce7491b-a3cf-4ea6-a928-b9a3638319d1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56588661-3c4d-40b2-a95d-6dc8e860ad4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d964ec84-22c6-42c4-9607-2939e4612cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3265d38e-58fd-44d8-9aa2-80c3645c31bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4070a754-1a14-4725-bac0-2e188c0d4eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ac81e68-1587-4ee0-b607-6f684dfdc51a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f2dc9d-33b6-46a5-bceb-fcf189a3148e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04ffbdc1-1eb0-45e6-925a-8a2903f73d72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "381531be-5fcd-49b8-921c-92b8b1733e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f70739e-9528-41f6-b033-92861b3668ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6e12fce-824e-4604-9e7b-45f4593bea35",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d128cb-34fd-4311-9ae4-61e9e698c040",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "785a4e11-c9f5-4be6-96b4-ae2c3244e3dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6162716-d00d-4d90-9f7f-80d6111a964f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6390c02d-ff21-44aa-8938-d3b162404bc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf9c1bc-4d5e-49df-8e1c-3079ba995fd6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b101c09-d551-49d1-ace2-a3101fe7ecd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7459549c-7ff7-41db-a595-b9c11bbbc1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2ac8838-3761-4642-8134-321e269449ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37490a29-3ddf-4d40-b1b2-b77af4737947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc8f92d-e62a-4afb-a60d-e3866faf4654",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79f6d6b-9d17-45a6-bdd0-1b4689d9edab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b64f49-f768-4586-9c33-d41b78c8559d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61fa7b89-ca5b-412c-a548-626a48d2bc96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f46f8c56-155f-48cf-9928-22fa9ffb3175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf8ed56-0343-42d3-a6a6-bfa7b59bf36d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013e6411-edb7-463b-b585-718075ebe28c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "703993d5-c705-41d1-8ad9-d17fb8326645"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ee738d-1ffe-49ad-aece-6149241e7ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0fcf436-597f-418f-a63d-3f2c0a304d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdece20-4a3f-489c-89dc-46312d55f899",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "790ffb94-90e3-4137-b891-d4cad2ab878f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a152620e-d8cd-44d7-b8e2-155d36bf92f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01fd3743-ddca-42d2-9a76-c6b8d897f4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb6dc073-235e-4676-a2a6-4d0ec4123076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341ede23-59fb-4ee2-8bef-89b67f12ce0d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57933f0-a036-4bb2-aea4-c6eec9072a8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef9c206-2d29-4b0d-a7b0-d22d7b692287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96460b93-18f5-4340-97c0-765bb57aae22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97129592-f0f6-4f8f-a8e6-519f54341967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ac4477-398e-4614-a1c2-52545df59c20",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9477b9-0240-4a77-8cfd-bf45a32b950b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ed5ae4-28b8-4616-9ab0-0de425eb4604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b5ce53-3722-406b-b5bd-a7ae27a2aee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "322702ae-b959-46c1-91f6-0d06675f4266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4414ea98-d36d-4846-918d-a153aec381f8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab2c13c-5915-485c-b2b3-64205b8e4cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74477f2-9f3d-44c1-b6ed-85ca8d278b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8427fa28-810d-4e15-b793-f701b4ae5da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a747e6-2159-408b-be16-a894653c4f18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf760cf-ccdb-439e-8abf-075eedbaf28a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002fdfe4-b736-4a41-ab04-cd52429d1a88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348c03ab-3300-4b49-80af-c1aeff7eac9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ba2c54-a3a1-461b-90eb-801e3d99fc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c8bb9f6-996e-4861-ad24-b44536993758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07dcf3e1-8f70-43fb-aa04-efb237acd6bf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc9993c-5734-46b0-8aed-597dfa79e6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a094ca97-2843-4aca-bd2c-e4125fe5669f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede859b8-06aa-435e-a44b-a4811da5c95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cb6df7-801a-40de-8e0b-538e9876d946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893a20a9-9566-44ea-b960-d4fe6bd0df94",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94330786-8565-427b-acef-293418e4cd83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec3957b-83be-46bb-9208-9b147410cef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a52c521-fe9a-4d48-baae-d919470ba8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80388f7d-bd47-4a7a-8027-25a8719e3daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59201d1-32e9-4531-898a-375dea25c4a5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16d20fa0-783a-4ae7-a882-b90994866c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc22e5a7-0627-4333-b55c-4e6eb55edddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbe2b9e-187a-49d6-9565-a379d107c734",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e78f723-bd43-44af-ba99-81995c197724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d90b042-f617-415c-a3f1-16630105292c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e670249-ddd7-47d4-b2fc-0c761949532f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56625290-6041-4e2b-af57-8a1dfc960e14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f2962e-9404-4d73-a9e6-19bfc9dd2763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283eeb48-df2b-4bee-958e-db896a266b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b18bfe-31f1-416c-9563-e038921b9a77",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e946bbe6-ec31-44be-a55e-48e053f3649f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6ed31b-bb19-4a32-82af-7a9dc8926ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf94248d-71a1-4c4e-956c-2070f64d04d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22130fe-28fa-4032-9123-884443329246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da1dd4a-5a48-4f35-9c1d-0dba9ed00bc8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82695fb8-623e-4311-b454-d47297a978f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "159225dc-c357-49a6-b56e-e365045aa270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee55e1a-e1ef-4817-90d4-2221f4937a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41be04fc-8f47-4e40-ab20-ea8e59a17e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667b5362-6dcc-4582-b9f2-442044cf41b1",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7235b42f-59e9-44c8-91cd-16b9358b20b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe1fb21-5da7-4d6e-afde-66f7b5c94315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318c2af7-76a9-4e08-b128-d28a5bf045cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f13669-b654-43a0-b707-f74e12a27186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41ef3cf-1129-4cbb-bea6-ae688345204b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862dc906-05a7-449b-b120-adf725685577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e7b2df3-7ac2-4abd-a951-eb998918cc55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767eb090-c3d2-4914-af34-1dceecffade8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd8c81c1-96a3-44b4-a706-9fa2e84d472b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d70635b-5269-4f9a-b4c6-e715ad95e041",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c94db46c-f2c6-445c-8a72-6ff1adb43b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80c69091-1601-42f0-8120-d5e4222c2f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3125b8e0-4c4f-4029-923f-84eac77f3dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a58b61ee-11dc-4a44-938c-d1dea6188a91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf042f3-a933-4043-a62a-453410a4d6e1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eddc055-2303-41d0-beed-196e3dbc6a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9095af72-5fe1-4261-be34-501eab7855cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f22597-2dbe-44d5-a566-800d94d80029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba11cda3-5308-4ee2-8a73-762628b9aa05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "603a28ac-b805-4ee7-83f9-67f62f3113c3",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eab8593-f790-4577-b360-342cececc3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3cfd028-0f55-40cf-90e0-213a5a2d461f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c158b51b-cc39-4f6b-a5b7-8ee50253e722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b30f54-e1d3-4a0b-9b8e-85378fb713eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43a099d-c410-45e0-a3ea-a6d0019daf0c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40579e2-ab1f-4929-bb66-b685387ec4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6790c4b9-69d9-457e-8044-bc11b6aa563a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f86edc8-35fa-424c-abf7-e214c30b7f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6705574-7485-4e64-ac55-9c3331617ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d59498-a6ec-4c7c-8d7f-c14887e98b2a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0242da80-ca2c-4735-90ef-645c43462b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e6a19c6-3a31-4143-837b-83eb340cabf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bc3eb5-9559-4551-aeb0-3e804ed18818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73530ffa-32e3-4215-af40-93fe052d1410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd212af0-9b21-4e8f-b83b-bc66acfb99fc",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705bc60c-106b-40ae-9bf5-ec53e594f519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80afd18e-d43d-4c88-83ab-1350f3a38444"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2ce034-0dbe-4522-9804-e761cf6b707c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25c7be31-0bef-4b86-954a-4f1f9156fd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02570393-23d9-4bfa-8d3a-349e468b24d4",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92b2661-1778-4a35-af88-68c6b6c4bf31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52746db-f23c-45b4-ae45-463df98a9f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da9eaec-b975-4fe3-aaba-ac10e641b2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889d1b3f-fd35-4c07-8507-9a99cec2c8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f34d58-5064-439f-b244-c94320cab18f",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7804d8bf-c0d4-4824-b7af-379cff48b090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e73302-07ff-4299-97f1-e1fb7765994a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd08d0f3-79a2-478a-906f-d2d44ad6a40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e7356f-be18-42dd-b17b-cfaad91ef05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ae316f-d81f-4af5-abf1-802d0d9a8ecb",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454fb893-4db6-4134-a565-ef173d87d8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7bc859-06a3-498e-ae01-b5626fac8f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9ffa2c-2a21-4d33-96ef-599bf5fed438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edeb5b14-69d7-4e41-9079-ee58ee7a2500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bedf8ac-360a-4233-92ea-2a266e5468f5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdb9a90-1120-4cc6-bcd1-0f1ac2fbe009",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da278ef-03d7-4da1-b266-2aa8da3bbe7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6069674-b898-420d-8147-1ac37b7c2045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadd2192-a5e5-4d2d-a791-4314c39a64ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00462a9-f6f5-4562-9092-303a784561da",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54da8fa-b030-4d06-a460-2d1de73c5ecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d753b7df-a61c-4564-b2b9-6c56ac8f6f0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379e1d10-3f28-4f84-a03f-25da337b9f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1c6fd1-8221-4515-8d58-070f309d8d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9a81df-4c44-4b84-b5d4-615cea4c804a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf93589-b27f-4996-b421-8f45c811b07e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "243887d4-f4de-401d-8518-23ffa010e4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361b7275-8381-413a-9b5f-8060add485f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e6a35cb-265f-4718-9936-861522fc42c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb4aa62-8b52-46e4-b131-9049c12cdcbf",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee4e1f2-7a55-453f-b27b-47071402b304",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca397954-2da3-4428-8b49-1c19cb0ea9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5291d37-b121-4643-98d7-c80241f06778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c79c4c04-8e83-4218-a7a7-3b8d721ff685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0b4bcd-4b9f-4c71-9182-216c9bb23ded",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d38302-27ed-4a2a-bfca-38d137142e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82101936-bdca-41e3-a6c5-296764976a0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eab841-514f-4710-905f-40117939452a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8002bc-f169-4c8c-9515-b6ff5317c194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b530b547-967e-4280-859d-2542311c5778",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92fda72-3ce2-4df9-98ba-9825d4517e5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71356500-ca40-40d6-8677-6887cc965595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8be63b-6685-40a8-b5ac-8698f6d1c7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24edf845-0e07-4152-a427-56fae23e2567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be33c283-a894-4a15-974f-411295fa60ec",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5c223d-6a07-4225-9bc0-d5bd2f31540d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c1ee1e4-d27c-4953-b42c-98b2f3cbb40f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc2465ba-af56-40d4-aa67-eceaa6a34ca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a6be52a-2d07-4232-bfaf-03cdf9959413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14c75ea3-a7bf-4746-a6ea-ecc87583d7a2",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5590c757-3715-4172-b479-7c24dbfd1558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d483482-2cc6-4387-8d53-495b61f185dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1acb788e-5299-4152-a7c8-eed1cb2c728e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b42848-54ef-4e87-9d84-17504582c20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d83941f-19f6-4313-a445-696a7fba613b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f5fc790-a548-4d48-ac35-c7c0831a5bfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd416068-a11e-4778-ad9a-1cc00d34a966"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f06343e-15d5-4fee-b644-992462e68545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369a178d-73b1-4e71-927d-4d3eebf2ccbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa4fb5ad-8942-4990-a730-ccb08dececd4",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5a4f79-dbf8-48cc-9a5f-29a3f586cd29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10a45cb4-d108-44ac-a9dc-ceaf22088691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dba6f0a-e1e0-47e4-813b-e889a3ea265f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a28092b-ab1b-49fe-9557-e2e855bd1b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10055a83-5765-4b29-901a-fb2961bfa82d",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd8fd3c-2f4c-4c3a-ba78-0879a25668f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e455f5be-a675-4acc-8761-aec7b81a38d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db370fb4-bc2b-41fa-b9be-b5d27754ccce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66494a2e-cfde-421d-82a5-f193e9c85e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac77820-a1cf-4874-b7d9-2245c9c696b2",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5847a63-854d-4781-aa5a-7b530d943968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "189dc029-6a9e-40f7-8465-91adbfb9ea8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa89e6a2-47d3-4a5e-a2fc-f184e0b086c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002423db-14d9-416d-9fe4-10bd9c0a3d2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda80761-c295-45bd-beb9-18de0034c8aa",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41e3e31-5ae7-4eb5-8d2f-1fc86d401eb6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "507b2717-d482-46a8-9ab2-db7589440d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6fccc9-e680-4ca7-a7a0-7f0eb116227f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd206e3-e2d3-4012-841a-697092e6f6ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bf8430-0d98-4306-acad-9639d0bcfc30",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f98987-9e37-43fb-87ff-40368db154fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f678755d-10f1-4bc8-9ba8-f765c860b759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e915c033-6a54-454e-bbe2-727cb07874e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40eeaa0-31e5-4020-a948-eec0c1887ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c930a577-8564-4ca0-86a8-f8a90468583e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80831ec5-6d56-4c3e-8f51-1e9cb34dd0ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ff49796-1e82-40aa-97c4-f81dddc272b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf80c18-7008-4a78-bd96-31236c2ff578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f017406-d77f-4178-887a-0b9f4d16b003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4b0f9c-4b7b-4179-b69f-e0a67dab9a11",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e7f2d6-5854-4d0a-bdc1-1de43f1e1d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d83b70d-e4a1-4b36-aea2-562be6d4dc25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2cba9d3-92ac-4168-9320-8c41144a4f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8339bd71-0f71-4caa-b298-cdb5cfb450bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e415d4-3689-464d-a84f-23db62953af5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2102bd00-d724-4d14-92c1-1167988e8ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b3f308c-ef0b-448a-92db-3d5fda19d04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57abf023-75c3-4b0c-8fd8-660fab3050ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a172575-22ad-47ab-92dd-340f689248eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afd278b-6e23-4635-aa26-49f045332aec",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc06a7d-9663-45ec-a25d-2fbd684a709c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f51d2b89-d89a-473b-96a8-22a62a38bfec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f32bc4d-8589-4fcb-8f48-9a10ae06fcef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29e2beff-b908-471e-9729-a9933e820eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41673fe5-5261-4758-a98f-fb36fa8acd5f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9085888f-49e0-4312-ae46-7a3c3a42a17f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f9e727-ee11-491c-a69c-0e9425636292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25262716-c39f-4d21-9042-dbba702d7028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c9f8ff-6b40-44ca-9e89-14b18b74edff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9273cc-b78f-4ec1-b4a9-e5cf92605a2a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9f6e47-8031-477b-a797-133bbd6494a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9030d5d-f18e-41aa-a503-9f35a81760c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b4fa76-c7de-4a24-aa68-0a9659280456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f29d73-9bdb-40db-ac1a-d8e93955622b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91441033-70d5-4a13-a0cc-e50ddec439c9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29027bd-fb26-4fcc-9096-eaa083e9e70d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924a8e78-b638-400b-b1df-f8d9df2916a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4c8bee-8545-47af-add2-08ceccd76d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1689d2e-b696-456b-9663-300fd95736b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403827bb-547c-4e4c-907f-0af595900c06",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6d186d-1a16-4da9-8276-98d70a30cdbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c417596-7f06-47ca-8628-0fdfc85064cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5baafc3-3b80-4f5a-a1c7-8bd3677cc93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91725278-1123-4a8d-8af8-bb6e38bcc83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a7f70aa-6d03-4777-b455-e828936c8081",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81f0e8ef-8a36-43b4-9e02-617fc4ce6e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ed717d-7827-4390-9762-1e20bdcaa78a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e74f5d-55a4-4203-b40f-b7804dfe992a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf6c398c-5d5d-4b85-9bb1-4698d5038c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5e3885-a229-4904-8b18-e55c21c6c107",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d428863-71b9-43e2-931a-890682d37054",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6f3b721-2826-4164-b52e-9bdadb605fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a832f9e9-3f35-4fd1-a621-6c51f4e33eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66026036-4a41-4f9c-b7e5-c02f1eaa1893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e01162-669f-45a3-bb93-7392eb18cb0c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f2717f-b255-4ef8-905f-b6ad0481baba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a57cb34-47a8-4804-ad33-5ebdfc0db7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db6bdd9-a11e-4338-8a72-536431d86d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cdce8a1-61cf-4388-ab54-634a27b74c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0dbc70-e214-4e5e-9b6c-13af29555c82",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f37251e-a72a-4610-908a-7e20c3961543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd95da86-fa56-47da-a05f-9d281d73a355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8483c0d2-8cbf-4712-bdbb-f2e922e21189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed5ac4f-3c0e-4dd1-88b5-67249178c69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1e4e21d-c3a2-4bc2-9e7c-9199462ce284",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ecc05da-b672-499e-bb33-211f748a1e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa7609e7-be77-4227-bbe0-d173f1b862ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20034e14-92b9-42df-9dbd-9e45d6bd2f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b87e67-2435-4e3a-9151-ff0cd11db14b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b39b4f0-e75b-4776-b3e2-19a12b13335c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1315b0-93f4-48be-966a-7755aab28e24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1699de68-9289-437f-a18c-bad1148aebc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d86c05f-87de-42e7-af02-7003886dfdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5aedf57-8dbc-4823-9253-f29717960e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316407d5-7d9f-4311-b7b3-a65d67359632",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3dfdb4b-c43e-491f-a4dd-eb2e4263d72d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e6fe4c7-ae1d-47c4-85a5-814d8b050fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b41d46-dc27-4ad1-ac11-14b63c4cd5d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19450464-283e-4433-a785-6f3d9343d069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb5e5fc-dc4d-4620-8c71-ffb404174853",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703536c4-a6a1-460a-a0f5-6ea076ba6f76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2678f66-1ac4-43b5-9844-ec6dbd479fba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d2300e-d1e2-43ea-9d39-835c2e8b6141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc6026a5-1509-4330-8cec-b06dffca7b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565eeb7b-7057-4302-bb53-4bccd0e813ec",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f1dfea-d4a2-43ae-90df-7987f5070e4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e77153-ab2c-48b6-8e45-97465f47afd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d930a5d4-25c8-4b49-8d21-9bb45722beb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2deb9e07-4986-477b-abb1-ebba276579b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c683f7-c29d-4f54-a63f-eda13ae165b6",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4fc819-76b5-4a50-91c2-0ef0c12dae89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e76af274-87a8-4121-adf1-d6e7d37e07b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c551e0b-0631-4efb-9134-32f3f177fdd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a17a6aad-fa54-4192-9f15-d950c0fd2fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d70d1e-4d48-4909-a1a2-7a3d75990bc1",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5521d24-2b20-42b4-96ff-182ed0dea8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "855a480a-0021-491d-8637-13ad6dfb7253"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e713135f-3816-44fb-91bc-46ef9309f5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb2e1755-fa55-4369-96e5-3eea537a5f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da3d0ad-692c-4a7c-ba58-c6ea0787782a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb342e1-7e42-4529-a148-3c1bdcdce822",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4254947-6417-403f-96e5-b8b16a077949"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163ac440-acb9-4ecb-a4cf-8f94730ad188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165c6391-81c3-4817-a556-577c233f18f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd89d727-7a8e-4555-9d03-d82bd9585895",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8454ab-2ae0-4ee9-b890-627c50d140d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b01765b-067d-4ca1-ac8b-b972ad019203"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aaee051-c5b1-4933-a613-8cd3170f52b3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb699a9-405a-4ed1-a867-722fd9468765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400b50b4-81c7-47ac-a923-afd67d2784b6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941a6e95-1f48-4d4e-b8d5-98cbc3d32b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d754d69d-272a-4441-814d-a45c511e6eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af04b520-0b72-4d5e-a3a3-1cdbf3349095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ef611cf-6141-4977-94ea-7fe49b5ba8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686827e5-7ea1-43f7-a0d8-8973f88d41b4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04e8c5e0-f522-45d6-94bb-ce695640ea37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b1acca-4a41-4b30-a69b-fbc7d21bfad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647e8dd2-1a16-4baf-862c-c20db9c9e1f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86667811-4129-418d-8a85-d961adaec61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c945d29c-b926-4e8e-af2b-e748fe6fa5c1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0a8a58-cb40-4bea-8f9e-21c224a7e1a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3636db4-2823-4acf-afb4-6f50a629aede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4ee0e0-24f2-4bd4-8163-3cea05f6b48f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bf7d70f-6a25-4efa-834d-52d0ae34e195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d0c101-499a-4350-8e7d-82b72b50980b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12312213-aa46-461d-af52-da508c5a6309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0374891-5b1f-4f36-81ad-8bdc765f4fc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a8de42-8934-4c9c-bf9e-811039348724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc7d849-543b-4e6d-91e6-86faf00afd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0290a86c-e1b5-45f2-91b9-9b1eb7d2e05f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25742544-2abb-45c2-9cdc-c5544b5a2953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61cddacf-bfcd-4a7b-b3b4-364bf7158e1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b0bb46e-3d09-4cae-b919-5943d3fd1c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dfc6cf-a172-4b55-8e61-402815522bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ffe4dd-83c2-45d8-ad59-3b6ae82e9792",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1225ebae-e8b7-4d3f-8407-404b38397f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "618a2ebe-9a48-49e3-93d9-33eb32fcbdc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be42e0e-db34-4c6b-8bf0-512b411d324d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7548201-f119-4a78-84d0-5e0a3b98bf4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6a1e9cf-264b-4139-99f2-5e6acfd53d26",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4686f367-f699-4384-9241-f0923baeb4cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1217585d-abe2-44ae-acb7-95f1fd0cd828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f04c654-d927-4358-894c-fca8afa6eb44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cac5ba6-db40-46b4-a487-435a40bbf55c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba7e3fa4-db6a-4ee0-ab92-898854c0c59f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0a6d084b-ed0e-4c33-8ff7-0f1f34d49397"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "83890690-8f5b-4760-89ce-9c4914d17c10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ff9d9bd-c5f5-4ea2-ba60-3f88eb17b0c1"
                    }
                  }
                ]
              },
              {
                "id": "a840753a-b769-4479-89f5-cc5235b6a53e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "340ece9f-dd4b-4608-b255-493e75bad96a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620d7aaa-ff03-4c89-98e8-7b976433c4e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "25a84ebd-6354-4979-9a3c-fe5c9dc17e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6caed294-6475-466a-a766-9aa7d3a9cfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c92d8c13-0fa4-43ba-9f3e-f896b19be1b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d7a74c11-6012-4659-92ef-ff5fc0044ebb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3e5095b4-e247-44cf-bf3b-99afd1982ad5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a81bb45b-6ddb-4b0e-99b3-d8fc84b30d10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea07cafb-d6a0-4df8-b39c-342ad8d3c17b"
                    }
                  }
                ]
              },
              {
                "id": "2e8fb11c-f786-4439-8ad0-649369173373",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5b87402a-33a8-460f-8b90-aea60dfd0e44",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d7e178-bf92-448f-8329-5566f2ec05bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "410d2051-4431-45cf-a495-b74a6824470b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f78364e-38e1-4254-a915-f1a5c93fbfd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3effcfc6-d858-4825-9462-fe27acbb8dd6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e42a04c8-b253-4c7f-aa80-0b935d235335",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4cb9f911-c20f-4798-be54-8c2cf059af71",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72d9b87d-e176-436b-b3c5-c13db47bd04d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7bc5b7d0-9e81-42c0-9845-f46a00dbe1b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "94619abb-fbe0-43c9-b9f6-aa8a5ce2f9c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38e5168c-1f34-42e6-8443-0a8d1fc1189f"
                    }
                  }
                ]
              },
              {
                "id": "e84249eb-bade-437d-bc5b-614ac219ae0b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9010068-5860-4c0c-9426-4ace0edbbf1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d1018077-5d27-41bc-8940-f74dd7fc637d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26cc54cc-5528-4041-bdd2-4cc2f6ea5c3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e1f9a84a-b896-4944-a48e-afb3bf0e0b69"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32824ca7-38cb-4166-97af-e0621aef0e49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3735bc91-1a2f-44d2-8684-90fda11ea4db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6a91cd73-e753-4a5e-8e77-28b269083e51",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "52f8e4be-72ad-4506-8946-152695548ccc"
            }
          }
        ]
      },
      {
        "id": "c988def8-ef4f-4a5a-9a71-3e903fbff3ab",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8ab1629a-7e07-43b6-bd57-f34f6ab9ed00",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c2a8d4af-ea45-402d-b073-1a68ea6997b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20759432-3891-4a29-bcc2-f52d564c9d5e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ebd758c-d1b3-4b59-acd2-be3be5c4f101",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0b6c61c1-c68e-4aba-ba6d-2bbc3561ea29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d60bf79-4326-446b-a2ea-0dbfcc7dee7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acc5abf1-f7df-4e29-88e7-3ff3ae0b91cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30a47ed6-9acd-437a-8a1d-abb7babc08d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "674f7d6e-dc05-416b-9c46-3aaef9065419"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0591af72-c10e-4f5a-a704-2fb6f00508b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6045b1a0-8c3c-4b2d-b30e-f44367f5810f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "790dea0d-0307-41f5-8eca-9b10a91a2a5f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "63685436-e9ef-4de3-b7ac-5b99b6440279"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8db67fd4-2505-4663-9066-b479e6ce0bc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "78b82867-0533-4aee-9962-c7009484a2a2"
            }
          }
        ]
      },
      {
        "id": "3eb62c30-f8d8-4e72-870c-c74b71a0421e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b85feab8-51e4-44d9-9c89-d1ccf3579005",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75eb261f-a355-4562-bef6-d2231df3180b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0816668-cf32-4d99-9fd2-7f68a4cfab02",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6125e94c-b12a-45ed-9449-624d644f826e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "678e6bde-16b9-4d8c-8d9f-f149763d2218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4288b31b-3abf-40b5-b32a-b7425d23361d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2924828e-55c4-4a91-b837-380787fe4ed2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f567be5e-383f-4699-ae4a-a52f9b5e1b5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84a51a85-3c42-494a-8dbb-e98e4de07a63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f6f1adb-27e5-4564-95d7-1e376853b75a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27841c69-0cb4-4845-88c8-bac4284de0df"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4a3cd684-3664-4aec-9e1e-7091ecf94617",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8411dc72-ba15-4e3c-8d17-ddd0ae53473f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2a423d33-ac18-476a-a791-0661bf206a7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3051111-0aab-4a71-9764-21e0b8e26fab"
            }
          }
        ]
      },
      {
        "id": "85556d9a-528e-45e5-8454-713a233cf872",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0e27be80-2211-4513-a5f9-3f63c628c6f7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f51b7721-472d-47ee-ac86-f156657f2d51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc1f6333-defc-4937-afb9-504d9b81af6c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e779c5e8-2b08-42d7-b6c3-cdeade2a8683",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e3b9011-f0ba-4f27-9e8f-191a88003779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "059ebfda-d412-4ac4-b985-dadf50f982d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0459b95c-3d78-45b9-ba82-0f49502f0fd8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f6fa37a-f622-4a4c-a487-6ecb3b399ca8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8856c892-9bdb-4a5b-b5f3-3349f6cdc4c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0350dc8b-f893-4fb0-8660-c41f51dfd027",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1d4e0bb-b47a-4f18-9cf9-60e1d18d89e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db3b91d0-69ab-48d0-a677-4e92940d5187",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b8a21bfb-f4b6-483b-b89e-d50a8b4b4e3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51d487d4-f051-43ee-a8a2-9274a73c2370",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9de6fdd0-b30d-4fe9-b806-2c47ee09f726"
            }
          }
        ]
      },
      {
        "id": "9560b9f8-6bc0-447e-b51b-c674a7bf7aa8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2a445e7-bb44-4a73-97a3-985a8b59469b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f781c574-2cf3-4ca0-9e6f-4ca0a334684d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "77626f6c-b49d-453c-9b67-aad3f50dda8e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cef1fc9f-84b4-4616-8739-f01f5827a597",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "65f96e87-0bd0-42ee-bc7d-26d8a430d568",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 116.67719298245616,
      "responseMin": 5,
      "responseMax": 5008,
      "responseSd": 407.35096425113693,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706574848526,
      "completed": 1706574890887
    },
    "executions": [
      {
        "id": "b29cd9c0-abce-431e-a852-53395f587c03",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "fd351735-2fd3-41ca-b5d3-ba63a439ec4b",
          "httpRequestId": "ad0b159e-37f7-4c45-a10f-392d00fd52cc"
        },
        "item": {
          "id": "b29cd9c0-abce-431e-a852-53395f587c03",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "006631c0-e777-4be5-b34d-30fb97283cbb",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "abb6a4f2-ff02-4745-b107-1e6af60e48d5",
        "cursor": {
          "ref": "0b814a62-940d-40dd-bc38-b7705fa180cc",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aae577d7-63f1-4cf6-af23-f2259f125801"
        },
        "item": {
          "id": "abb6a4f2-ff02-4745-b107-1e6af60e48d5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "52113d6c-ee31-4102-9226-0e3d6928787a",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "27b5065b-0ea9-431a-ab12-137ba6bdac32",
        "cursor": {
          "ref": "04aa1f76-a22e-486a-b8b0-8dc7a04ce928",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c8ceb6e0-d968-4a05-b6c3-67b99ea85abd"
        },
        "item": {
          "id": "27b5065b-0ea9-431a-ab12-137ba6bdac32",
          "name": "did_json"
        },
        "response": {
          "id": "9e5df061-e97d-49d8-9479-f272a6e752e7",
          "status": "OK",
          "code": 200,
          "responseTime": 273,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2aeb70-c8d0-41a0-85f0-96cf6f861b8b",
        "cursor": {
          "ref": "a6da8af5-8844-4a0c-bf6d-4bab08fb1e87",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f5c361d7-1a63-4ab7-97ce-965038b37e99"
        },
        "item": {
          "id": "bb2aeb70-c8d0-41a0-85f0-96cf6f861b8b",
          "name": "did:invalid"
        },
        "response": {
          "id": "67d87275-d72b-4b5f-ab37-d3790b1b70ef",
          "status": "Not Found",
          "code": 404,
          "responseTime": 957,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2aeb70-c8d0-41a0-85f0-96cf6f861b8b",
        "cursor": {
          "ref": "a6da8af5-8844-4a0c-bf6d-4bab08fb1e87",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f5c361d7-1a63-4ab7-97ce-965038b37e99"
        },
        "item": {
          "id": "bb2aeb70-c8d0-41a0-85f0-96cf6f861b8b",
          "name": "did:invalid"
        },
        "response": {
          "id": "67d87275-d72b-4b5f-ab37-d3790b1b70ef",
          "status": "Not Found",
          "code": 404,
          "responseTime": 957,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619293c0-07c9-4864-bba9-0a288d5b0c2b",
        "cursor": {
          "ref": "3f52fac2-f900-4307-8dec-1e94a53ce357",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "51d5e01c-1c42-4652-86db-96c77bcbf5f3"
        },
        "item": {
          "id": "619293c0-07c9-4864-bba9-0a288d5b0c2b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f8bf307f-0c1e-4e07-9e4f-01f20a241c05",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04ec8cb-482f-449f-982f-9c30e3a91702",
        "cursor": {
          "ref": "cc2b21c8-e8ab-4448-b07f-e44ab6f7dc7a",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3f2dc2a4-a854-4dd4-aa24-5d927112c4dc"
        },
        "item": {
          "id": "c04ec8cb-482f-449f-982f-9c30e3a91702",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1130bdc2-67e7-407d-90d2-ef680599defb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85debb80-0095-4d9b-ba7e-5f729d195efc",
        "cursor": {
          "ref": "0ced872c-10f4-4ab3-a54a-e363efa60309",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2a643d91-877f-478e-9b57-37e0e088d139"
        },
        "item": {
          "id": "85debb80-0095-4d9b-ba7e-5f729d195efc",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fdfbae62-e284-4864-bb33-eb9a6b564061",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4698d0b3-c283-4e49-a497-2a6aa768de7b",
        "cursor": {
          "ref": "abf0f66e-9c39-4c5c-b867-2d0e964183b8",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "cca1fc8d-0955-4914-b704-567a837c468c"
        },
        "item": {
          "id": "4698d0b3-c283-4e49-a497-2a6aa768de7b",
          "name": "identifiers"
        },
        "response": {
          "id": "8bc13254-380a-417f-a716-a6ce632a271e",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "032a3935-9142-4397-9fe7-e6451b141ff7",
        "cursor": {
          "ref": "99cf4f19-e3f3-4c02-8cf7-6c1e38c2a128",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2356575e-8add-444a-9587-5e703d24caf9"
        },
        "item": {
          "id": "032a3935-9142-4397-9fe7-e6451b141ff7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f88ca49d-35af-45a6-856c-5e7881b3e752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b66531-0d58-4303-9728-c835959af3b8",
        "cursor": {
          "ref": "4b33173c-3502-4f17-ad3b-e03f6d5b85df",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b4796e5b-7a31-40fc-93ae-d6083a36441e"
        },
        "item": {
          "id": "e5b66531-0d58-4303-9728-c835959af3b8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f1507032-977b-410d-8873-2591840f0a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e2a93a-aaaf-4ca8-817f-96c0438e2a5d",
        "cursor": {
          "ref": "41185cbd-6934-4133-8756-31adf10727be",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a8d68937-f623-4ede-bba7-532ed3f6400f"
        },
        "item": {
          "id": "b0e2a93a-aaaf-4ca8-817f-96c0438e2a5d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "aba616fc-5b38-42bf-991e-34918738ded5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d81e16c-f803-4020-b53f-3c94c5863796",
        "cursor": {
          "ref": "dd4aa7a0-38a5-4ec5-a43f-2e1f113a827e",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6d2ac7fb-bfc7-4145-a521-b44e3442b59b"
        },
        "item": {
          "id": "2d81e16c-f803-4020-b53f-3c94c5863796",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2db02825-f300-4aed-ac2c-1caf3ccafabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22dced70-3641-4117-8373-8cbdd04d5f3e",
        "cursor": {
          "ref": "72dcdfde-7663-4219-8eed-8578c3eed5a9",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "89372131-f18d-4bd8-87ca-ae65230b0270"
        },
        "item": {
          "id": "22dced70-3641-4117-8373-8cbdd04d5f3e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c4a20c4f-42de-4f83-a32e-a609e84a61ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72512da3-4b17-40fc-9130-04970020a6d4",
        "cursor": {
          "ref": "d965b9dc-256f-4157-9b10-e46e41365ebb",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4e7f0570-bc63-4505-b709-d5692cb87257"
        },
        "item": {
          "id": "72512da3-4b17-40fc-9130-04970020a6d4",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "0b82910f-b65d-4110-b430-00dc750e24ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89ee55cd-ee6b-463e-908a-ca11daa942e4",
        "cursor": {
          "ref": "639374d8-60f5-45f3-8ae3-3715979258e1",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cd9b51ac-0aa4-411a-9552-5dcddbdc182c"
        },
        "item": {
          "id": "89ee55cd-ee6b-463e-908a-ca11daa942e4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b8100989-bb5b-455b-b52c-8b5bf0e99579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6e9a54-70b4-4a63-8e4a-5f95f1f38da0",
        "cursor": {
          "ref": "ddec228f-dfaf-46f7-a596-bcb298b5e26d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "873ba18d-8b7e-452b-992c-7cce5baea502"
        },
        "item": {
          "id": "fa6e9a54-70b4-4a63-8e4a-5f95f1f38da0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "10b061bf-4b27-4220-9529-77f3c0705d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8750d833-d81f-4033-8fd2-67709e3a96ec",
        "cursor": {
          "ref": "947bacd7-6ee0-4327-b819-a337c2dd13b1",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d08c1ef2-2bff-4060-a6f8-741443f3552d"
        },
        "item": {
          "id": "8750d833-d81f-4033-8fd2-67709e3a96ec",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "658f6f4b-9858-44af-b78b-98ed1bbf78b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320b149c-26b5-4d6a-b1a8-617a5a06327c",
        "cursor": {
          "ref": "40753714-e6ec-4467-b7ec-807619420671",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0656c143-888c-43b2-a42d-5b28e3ba64c8"
        },
        "item": {
          "id": "320b149c-26b5-4d6a-b1a8-617a5a06327c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f0e77948-51bd-4a3f-ad4c-78d7dc12cd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e8d7cc-e543-4658-a4f6-d11904177f0b",
        "cursor": {
          "ref": "b4b4a45d-2a9e-4a34-a10d-4f5e999865cb",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4c4f70ad-3134-4bb5-8882-ce2aea7a2266"
        },
        "item": {
          "id": "48e8d7cc-e543-4658-a4f6-d11904177f0b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b7fe8e22-6f5a-4cd9-b629-d46e599d6f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a142837f-2906-4c39-b463-ecc7e214d99f",
        "cursor": {
          "ref": "dbf9df86-e44e-46db-a4b6-60318bbc55a0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d68e8264-284f-4dc6-8c32-5167a08048da"
        },
        "item": {
          "id": "a142837f-2906-4c39-b463-ecc7e214d99f",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fce7e213-e49a-42dc-9903-0a8c02932e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b011e003-af0a-4133-a0a8-043fd6a96b57",
        "cursor": {
          "ref": "cec32cd8-82be-49cd-b28b-28088f9cf2fc",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dd6610be-02e9-49ce-812c-980c1de97479"
        },
        "item": {
          "id": "b011e003-af0a-4133-a0a8-043fd6a96b57",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f8ce4145-e17b-41b2-acf3-f2c4f80df684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cd994ef-2208-494f-8923-b62195850fa4",
        "cursor": {
          "ref": "4165bd78-cd44-4be5-b654-22901292a0bd",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "69c097b4-439f-4048-bc24-2e82da0bcdec"
        },
        "item": {
          "id": "6cd994ef-2208-494f-8923-b62195850fa4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "129f1e81-7ed4-4c1a-9935-7619aa653036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ba0620-be13-4bd1-a3f2-b7133fdcceb1",
        "cursor": {
          "ref": "834e8295-791e-434e-9444-cb04a6252337",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a6c30fb3-ac57-4e5b-a72f-f9fb156bb6a7"
        },
        "item": {
          "id": "56ba0620-be13-4bd1-a3f2-b7133fdcceb1",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "edb20c86-b62b-4599-9db0-cd9781b19581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b5ba44-a76a-4a2a-b94e-ccd4dab253c4",
        "cursor": {
          "ref": "bc8f695c-0eb8-4e46-8f63-272ca6836126",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4e9aeeab-8a9c-474c-909a-eb2ac8d582d9"
        },
        "item": {
          "id": "12b5ba44-a76a-4a2a-b94e-ccd4dab253c4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e6436912-fb0a-4c49-910a-43db2ed3a42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320445e3-f576-4815-b2c2-53104929999e",
        "cursor": {
          "ref": "5f537c68-6d3f-4d5e-9e29-452127b421a7",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "63252beb-082b-4cbc-91c6-92524d89f82f"
        },
        "item": {
          "id": "320445e3-f576-4815-b2c2-53104929999e",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b46e9fb7-32fe-4ce0-9975-f7a0e1ba79fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc2d224-6725-4c52-afe3-8e857bf181f1",
        "cursor": {
          "ref": "1233b621-2b79-490d-8375-0645a4e38a35",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bf4f7add-8985-45bd-ab6a-daedcdad82b0"
        },
        "item": {
          "id": "1fc2d224-6725-4c52-afe3-8e857bf181f1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4c1e16d4-b45f-4a56-bb7a-bb874c974895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb297c0c-dda9-496b-a5a4-18542a6c1142",
        "cursor": {
          "ref": "16f1c37e-9ffb-4163-b3ee-aa723367f0e5",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9041ab5c-15a0-47b0-8b2d-bcbbc6832afd"
        },
        "item": {
          "id": "fb297c0c-dda9-496b-a5a4-18542a6c1142",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "57da7f21-3bd2-46d1-9653-6018e44d7eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b046e80e-6c87-4a28-b68b-8e1c4f44e3cb",
        "cursor": {
          "ref": "85539cdc-a6dc-435a-b878-8adb25027272",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c3b95514-9204-4fb8-a622-d2ef43083183"
        },
        "item": {
          "id": "b046e80e-6c87-4a28-b68b-8e1c4f44e3cb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "250032d2-f4ee-4696-b8b8-d13df4a2f672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94555d1-9193-47d3-8410-e8c39d9f7b63",
        "cursor": {
          "ref": "0071b284-d210-45b1-9095-1d738daec49a",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "eba5ecae-18c4-4ffb-9b2b-7b3a3bd4de0a"
        },
        "item": {
          "id": "d94555d1-9193-47d3-8410-e8c39d9f7b63",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "02876d52-1153-437d-95a1-6f80d63758f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be20a365-a952-4196-9c9b-ee8e62a7bffb",
        "cursor": {
          "ref": "2e88c4d3-a67c-4a74-a9f7-bd40dc659fe1",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2646f2f0-762e-4fca-ac6b-7ffbfeae48d7"
        },
        "item": {
          "id": "be20a365-a952-4196-9c9b-ee8e62a7bffb",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "22415625-ab7f-4a63-93ca-84cae855971a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0d66c1-dbfe-4a83-9bac-25bb7ae7029f",
        "cursor": {
          "ref": "1e851e88-040f-4240-a451-78a6c7611cdb",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "539de2f1-000b-415a-b895-30942cc236a4"
        },
        "item": {
          "id": "8a0d66c1-dbfe-4a83-9bac-25bb7ae7029f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "2c1cfd6b-dd8f-41a6-945a-4416633212df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a3e72eb-2b43-4254-963a-fa1fff32eef8",
        "cursor": {
          "ref": "73516183-82e8-4c7d-b27d-fb621af1b470",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0fdd8119-b58c-4ef8-8b0b-87b997cd9959"
        },
        "item": {
          "id": "6a3e72eb-2b43-4254-963a-fa1fff32eef8",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5e204441-6bc6-440b-82c1-fd845901d95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a10856e9-2d1f-4f23-86f3-c187de66b3c3",
        "cursor": {
          "ref": "559c7ecc-eefd-4f5f-bf7d-f987b2c55aa7",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b8f2f2ba-6134-4dfc-9b0c-8ba0cb2d5f37"
        },
        "item": {
          "id": "a10856e9-2d1f-4f23-86f3-c187de66b3c3",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9ee21a12-aaf5-4552-98c0-0d6a4f072baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05068b76-e21d-43fa-ac0e-70b218250e33",
        "cursor": {
          "ref": "1cf78142-7ba7-45ff-bde1-fee3c6c059db",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "1cd2abb6-6f2c-4afe-b159-92cc3d5c6792"
        },
        "item": {
          "id": "05068b76-e21d-43fa-ac0e-70b218250e33",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8550bd0e-91ba-4576-a84e-58aa9befd648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c7f173-df97-43fc-9ab8-1f7116c84626",
        "cursor": {
          "ref": "ef2c5132-5a9d-4d75-b4ae-785e42ad51c0",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d96b35d1-b203-45a4-b04d-77ed228d35b2"
        },
        "item": {
          "id": "95c7f173-df97-43fc-9ab8-1f7116c84626",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9d819a94-9fe4-4f74-8b92-57d9e4294933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b19ccd-b980-48a5-ac4e-36f5aa0ed3a1",
        "cursor": {
          "ref": "a347f44a-3058-4c7c-99b3-f466c65a9acc",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9521f147-6b2a-41c2-b49d-61e9813decd5"
        },
        "item": {
          "id": "a0b19ccd-b980-48a5-ac4e-36f5aa0ed3a1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "6bd73b15-fd90-47c7-9579-9bd1a1f0b18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6f4323-751c-4cba-b1fd-428b39f32d31",
        "cursor": {
          "ref": "0f157550-49b1-4d69-8ee7-675b5d43d692",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0b4f45bd-5dfd-4593-ac5d-8e7ca1dfa7ff"
        },
        "item": {
          "id": "fa6f4323-751c-4cba-b1fd-428b39f32d31",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "071d29fa-9a9a-4bee-a7be-323b76af1132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e66ff1-940d-45af-bcbe-f37ed62be3bc",
        "cursor": {
          "ref": "a83595b0-2851-4841-b161-ecf69fcd6bf6",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0fdf0325-3a34-4fdd-a765-b3d0aa66aafc"
        },
        "item": {
          "id": "96e66ff1-940d-45af-bcbe-f37ed62be3bc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "27d9500f-45aa-4d72-b5e5-22e295dc62f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10160f2-772b-4090-bc91-fa40f83975cc",
        "cursor": {
          "ref": "2eeb16f4-6109-400f-bfbd-134c18311307",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "189f6133-797d-4004-8be9-876cba89b8a6"
        },
        "item": {
          "id": "e10160f2-772b-4090-bc91-fa40f83975cc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "478aaf86-eea6-4be5-b1a7-cf023e446ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fd1a1f8-a118-4e7e-a910-7968f4871a51",
        "cursor": {
          "ref": "05d63817-fb04-4f09-ad28-3c225994e0f1",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "5cc9e4a4-5c54-4755-85af-cd8935aa30ce"
        },
        "item": {
          "id": "3fd1a1f8-a118-4e7e-a910-7968f4871a51",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "562dad45-c358-49eb-ba21-6401ef100e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5fd408-bd57-4488-a58c-3c197a51cb5a",
        "cursor": {
          "ref": "25ff1f4c-a126-4e92-a0d0-e51cb9d281e0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cbf341c1-598c-4d95-bb5c-326bd52b5264"
        },
        "item": {
          "id": "6b5fd408-bd57-4488-a58c-3c197a51cb5a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4ac98115-efe7-4aac-8aa8-e7f16572dcbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52cfe3f0-cf23-4738-bf43-b4c74a726fc4",
        "cursor": {
          "ref": "a524a229-562e-4590-95f2-0720d7c1480e",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "de412d5d-9274-4797-ae3b-c10959a81b01"
        },
        "item": {
          "id": "52cfe3f0-cf23-4738-bf43-b4c74a726fc4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "94e6434d-937b-47a5-93e1-9b6a616367cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a98856ef-75ba-4d2f-a8f0-d541c39a5f76",
        "cursor": {
          "ref": "83447408-f570-4860-9896-5982aea77eb8",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ea2d5735-1569-4f95-abbf-694c626a75b8"
        },
        "item": {
          "id": "a98856ef-75ba-4d2f-a8f0-d541c39a5f76",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a43a95c9-b042-4c3a-9534-d92a625e2b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edce6f69-a204-4591-8127-1b9b7cedd1e9",
        "cursor": {
          "ref": "db78b40e-a0e4-4df1-b40e-f55c7a094aa4",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e6013b57-0dc4-4a84-b64b-40d71fa9718a"
        },
        "item": {
          "id": "edce6f69-a204-4591-8127-1b9b7cedd1e9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2686e829-895b-4b4f-bd77-26f35335f040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e956b3c1-f221-4329-b27f-7b409c33856b",
        "cursor": {
          "ref": "2b1901f6-a225-4e7c-800a-d0f77bb371f4",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5fe336e8-2d92-42f0-866c-b18f20a3a202"
        },
        "item": {
          "id": "e956b3c1-f221-4329-b27f-7b409c33856b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "0b67f15a-e27b-4b34-bcec-2e84c81af5df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc190431-9303-4261-b62b-a81d1789a1fc",
        "cursor": {
          "ref": "c2f9bf90-c432-4a69-8900-2c32185c2f27",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ba3ecf11-cd53-46a2-811c-589edad0476c"
        },
        "item": {
          "id": "dc190431-9303-4261-b62b-a81d1789a1fc",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c3f1b18a-83c5-4003-92aa-0ecb659c55f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0f74ed-6fc8-4527-8a0b-ab8e1cfe611b",
        "cursor": {
          "ref": "9987793c-b045-43ac-93de-d1b85fe15717",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "81b1e797-2117-4b1c-8ed8-54a8ce121186"
        },
        "item": {
          "id": "2e0f74ed-6fc8-4527-8a0b-ab8e1cfe611b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4592c28c-1af6-4f2d-a14e-4eb8280c7865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de662676-877f-44b0-ac75-7c3683408ca8",
        "cursor": {
          "ref": "cff528a0-9e51-4b72-889a-51f57940679d",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "dc08cd58-e35c-4483-80de-97a29b3f21be"
        },
        "item": {
          "id": "de662676-877f-44b0-ac75-7c3683408ca8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "50db0ad4-dfdf-45c0-9248-1963d2f7a930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd8eb47-e30a-4103-aacb-e210a9bd5fe8",
        "cursor": {
          "ref": "ad756280-4a49-458c-91fb-327b6e5867b2",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a7346c73-b945-45f2-977a-4d4bb11c837b"
        },
        "item": {
          "id": "6bd8eb47-e30a-4103-aacb-e210a9bd5fe8",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ab81c2cb-db01-4d60-9e76-d17820c018b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1dc1bfe-7c8f-4e73-adb3-b1103cc7668b",
        "cursor": {
          "ref": "6e3ca39f-7941-46ae-aeb5-2989b4fe75a5",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "29fd36b2-23d0-4203-891e-65f4b037d979"
        },
        "item": {
          "id": "d1dc1bfe-7c8f-4e73-adb3-b1103cc7668b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d25dda6b-a3f8-4653-b794-b46251fde782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e37277f-ffd8-4af8-b366-dea41071452f",
        "cursor": {
          "ref": "53753801-c406-4849-b5fc-2e3da9808536",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "fa4cb9fe-39ee-4502-b6ab-14a9340da004"
        },
        "item": {
          "id": "2e37277f-ffd8-4af8-b366-dea41071452f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e7e77646-6f86-4775-a899-c5bf91ed1ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da52c066-5130-4f0e-adfb-106cc1c12d45",
        "cursor": {
          "ref": "2faf788c-6d2d-4e4b-aeab-56853c07879e",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "86d44c33-43ce-4418-8905-51ece45d8dba"
        },
        "item": {
          "id": "da52c066-5130-4f0e-adfb-106cc1c12d45",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e4287919-6214-4221-b548-9bc167516395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2424f55-9c90-46ee-91f7-20cc0d7f9464",
        "cursor": {
          "ref": "7ae72ee7-0edf-40fc-9b77-3c26a133ae71",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "17223712-2fa1-4ff8-9dd6-398988fa3061"
        },
        "item": {
          "id": "e2424f55-9c90-46ee-91f7-20cc0d7f9464",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fe70443f-149b-420a-a2e4-284616076989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c069671-18a2-451a-952a-16b59ce7da7e",
        "cursor": {
          "ref": "f4c577f8-5ebe-428d-b2e3-fd290b89f314",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "01426f16-36ee-4255-937f-ccf8063a39b1"
        },
        "item": {
          "id": "1c069671-18a2-451a-952a-16b59ce7da7e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aa191af6-4592-40fb-a30c-ad7a8bd4860e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71555162-0b23-4726-9c74-a0357aa76354",
        "cursor": {
          "ref": "ebaf7047-2e61-4378-a85b-83830f0e8295",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "2d845e5d-0244-49ab-a89e-af9a91da4451"
        },
        "item": {
          "id": "71555162-0b23-4726-9c74-a0357aa76354",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "be1afa7b-70ad-4ed6-954a-8e02d9173120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37d0011-f46c-44ea-9898-a594de1e29e0",
        "cursor": {
          "ref": "c1ae436b-c2a3-4d78-b2f1-b40816606981",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b553fa75-f7da-4385-8a69-46020ec12d49"
        },
        "item": {
          "id": "b37d0011-f46c-44ea-9898-a594de1e29e0",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "94b3fe98-c098-4f79-9d8b-624deba6ac06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbaec4c-7b38-4c1f-a6cf-7a399f05745f",
        "cursor": {
          "ref": "36ee51ec-0390-4247-b80e-b3b79a3af8f3",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "42fb56d1-e86f-4c67-822e-8f0c392d6fdf"
        },
        "item": {
          "id": "ecbaec4c-7b38-4c1f-a6cf-7a399f05745f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ef35a9dc-79c1-4de5-9213-5a438700c2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851f6884-2916-45ff-a68b-f7d766628a0b",
        "cursor": {
          "ref": "33c2d95b-17fa-448b-8859-178ac93aab59",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "24cdff88-da78-4449-9f0e-932b70e3ba0d"
        },
        "item": {
          "id": "851f6884-2916-45ff-a68b-f7d766628a0b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6ea107a6-b6b5-4e00-858d-1282de08846a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a582d1a-371f-4403-bdd5-2ff4d222e8a9",
        "cursor": {
          "ref": "1314504f-be58-40d0-885d-23aea1e9b5b5",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "67a43734-ae28-4b05-9df1-0814934af5f8"
        },
        "item": {
          "id": "1a582d1a-371f-4403-bdd5-2ff4d222e8a9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "428d9304-94dd-424c-a8ca-1d1fcc05c535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a6c6786-a7e3-41d4-92ec-7914cafc2664",
        "cursor": {
          "ref": "32602536-ceb4-457c-8ae3-1d09086f3232",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "04227892-f6ad-439d-b37a-83f8f027939c"
        },
        "item": {
          "id": "0a6c6786-a7e3-41d4-92ec-7914cafc2664",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "311ca18d-c605-45e9-85f4-1c2b51f28bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f6d23c4-40a7-4d68-b979-a995295fe653",
        "cursor": {
          "ref": "b83c913b-639f-4680-90b6-6c78ecab15d3",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "983218fe-470e-47dd-9a29-f37773308a8b"
        },
        "item": {
          "id": "5f6d23c4-40a7-4d68-b979-a995295fe653",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3f36f38c-0c91-4d29-b10c-491458f534a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f3582e-5949-4f39-9dd0-d67a18454a63",
        "cursor": {
          "ref": "0ec66148-232b-466d-b7d2-992552678e33",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b6e3854b-50fb-484a-8801-e0e193595bf3"
        },
        "item": {
          "id": "10f3582e-5949-4f39-9dd0-d67a18454a63",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "12f85281-7fa4-4ae0-99ef-a20b5aa235d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d5abfa-0f4b-46b0-b549-61280790e0e2",
        "cursor": {
          "ref": "ef02cbca-d4b0-4417-a7fa-1afbac67e7f3",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d1e20a2c-8289-404b-b301-77b832057596"
        },
        "item": {
          "id": "89d5abfa-0f4b-46b0-b549-61280790e0e2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "d3a750dd-1a2f-45a1-9059-556b2edc1222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118daddb-c498-4ed2-ab8a-b29cbbec7984",
        "cursor": {
          "ref": "1c7fddd7-d255-424f-8bfa-db64c43ca15d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ed14226e-1be6-487d-b608-d9b6e320a7d6"
        },
        "item": {
          "id": "118daddb-c498-4ed2-ab8a-b29cbbec7984",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ad23e4f9-ab33-47a9-a2d1-c9830e6b9d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186af6e6-9e1f-471c-ac4f-540eae2e3485",
        "cursor": {
          "ref": "bf366c50-b42c-4212-bf00-e8ceba79ef7b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "357d8215-5b0e-4313-8433-ed28f755d0a9"
        },
        "item": {
          "id": "186af6e6-9e1f-471c-ac4f-540eae2e3485",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5b6b68e1-c334-4b63-bf5e-1953670ea21a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b068a5-4981-43a9-8898-9b8874df8e64",
        "cursor": {
          "ref": "78394829-96fa-4717-9d83-11e5865d806f",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d7a8ff70-e9c9-45b0-8729-3836be684f92"
        },
        "item": {
          "id": "d1b068a5-4981-43a9-8898-9b8874df8e64",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e1899e15-cb91-4b69-a0cb-59931d331fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "077b6292-89ca-4abd-ba3b-0a18cb51efef",
        "cursor": {
          "ref": "3b396749-b8c7-4691-bc9a-e45dea8ba449",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "48b32747-fcad-4a52-9833-1172f76192b1"
        },
        "item": {
          "id": "077b6292-89ca-4abd-ba3b-0a18cb51efef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8f977403-ea7f-41bf-922a-7d3acf48b95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ecd2f33-b657-42e1-bf32-8d3284cc7542",
        "cursor": {
          "ref": "a91d9ae5-9c8a-43e0-8995-34b765de54a5",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b7e1a331-fbaa-4e2b-88f6-19c61b14d9fd"
        },
        "item": {
          "id": "3ecd2f33-b657-42e1-bf32-8d3284cc7542",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "faf4f550-6b3e-471a-bc98-6b435bfab15e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbda7dd-856a-49f8-a01f-1c3d82c87e3e",
        "cursor": {
          "ref": "08a85327-18b4-438c-8fb4-1aeb1e462a3e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "35767050-5884-446a-a193-e479cb104fa1"
        },
        "item": {
          "id": "7dbda7dd-856a-49f8-a01f-1c3d82c87e3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "02ecd96c-a25e-4eb0-b9a2-9b8da4ab07b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1a116f5-75cb-46d3-ba52-32058c22ec5a",
        "cursor": {
          "ref": "43616c18-d5f4-4ca9-9617-d5a61a119e6b",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "565b8ffe-d584-4d5b-9bfc-65702265ed0e"
        },
        "item": {
          "id": "f1a116f5-75cb-46d3-ba52-32058c22ec5a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0069871a-20c5-4448-b924-bc068e22a3c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf8a272-590d-4088-80c6-dd5d5e046d33",
        "cursor": {
          "ref": "de7a7620-e63f-4ec3-8d43-6054e123b4fb",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "143c6635-f4f2-477b-b7fe-8b178ded9f2e"
        },
        "item": {
          "id": "fbf8a272-590d-4088-80c6-dd5d5e046d33",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5bb0cacd-27f5-4e4f-9ff3-fa2a452aa09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c34d9fe-790f-453a-ab83-009a2e9f9557",
        "cursor": {
          "ref": "64c9e046-a68f-4509-a027-c97ffe44e37a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "62791165-a0e3-44ab-92d5-10f9757bbd9d"
        },
        "item": {
          "id": "3c34d9fe-790f-453a-ab83-009a2e9f9557",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0967011b-05d4-4c7c-a502-d84ea25ab408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad057af-42bd-42a9-9a0d-7160886e5c66",
        "cursor": {
          "ref": "4908ac3e-34ec-466d-800a-7a3a7b4f8d26",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1603ad6e-8ddb-40aa-88f2-a840dd17fd90"
        },
        "item": {
          "id": "3ad057af-42bd-42a9-9a0d-7160886e5c66",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5df44546-6515-48e5-9d7e-991ed2d95ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18090fb-fad7-4b25-ba2e-5120ccc6715a",
        "cursor": {
          "ref": "978c674e-b5ce-4acc-b434-d3ab6d98492c",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f823ef0c-a97b-4fd3-ae14-2ea49e6e87a3"
        },
        "item": {
          "id": "f18090fb-fad7-4b25-ba2e-5120ccc6715a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "6f409ddb-2583-48fd-8f68-3aef293c4683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de878a8-337c-4bd0-a109-d24e6bccbddc",
        "cursor": {
          "ref": "1c463642-6945-4691-a7f2-642a8d9e8752",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ad900469-ea8c-49b8-8e43-138f467b301c"
        },
        "item": {
          "id": "7de878a8-337c-4bd0-a109-d24e6bccbddc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c30a9155-2443-45b9-8865-a778db1189ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff8c22b-ce0b-4d8e-9832-1e400e085a6d",
        "cursor": {
          "ref": "7e3e41c1-e132-485e-9c5e-9b695321fcd1",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "789c039e-bfdd-48c7-880f-d1a57ea0860d"
        },
        "item": {
          "id": "fff8c22b-ce0b-4d8e-9832-1e400e085a6d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "bf0d0fa6-9938-4df0-b945-33c283c17062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0a9427-6820-4bab-ab87-6e1e0a56e1f2",
        "cursor": {
          "ref": "a9366348-2985-48c1-8969-228a2a2e7f65",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1fe37d32-e7e1-4224-bae5-73860b54d760"
        },
        "item": {
          "id": "5d0a9427-6820-4bab-ab87-6e1e0a56e1f2",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "86e72006-a61a-4259-80fa-ab2219c9d267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6e2643-b7cb-4aa6-a0d2-3449f8406eb0",
        "cursor": {
          "ref": "0424ad2d-fc43-4841-9e0a-6620d6d2d782",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e8366986-65c8-4058-8ade-c47c2b273a98"
        },
        "item": {
          "id": "2b6e2643-b7cb-4aa6-a0d2-3449f8406eb0",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9a200b3e-c2d5-43de-974e-c7ebb5747d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf10b937-46b4-40fb-9211-214ef71f12d6",
        "cursor": {
          "ref": "c209e4e9-6b43-404e-9457-15c4399150ef",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "688f38e5-0782-42f4-9f53-d7957e045268"
        },
        "item": {
          "id": "cf10b937-46b4-40fb-9211-214ef71f12d6",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d07288ba-b895-4900-b491-48f2ebda37a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c576e92d-59c4-4d21-9012-f56a1640b88b",
        "cursor": {
          "ref": "de8aa794-1550-43ef-937d-b9ef91f38993",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "501b7d19-4498-4a38-a66a-6c06e8e46d18"
        },
        "item": {
          "id": "c576e92d-59c4-4d21-9012-f56a1640b88b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7d93c12c-d687-4039-af8f-5aa01df66705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3dcab8-6023-4624-ba7e-f8a684aac688",
        "cursor": {
          "ref": "31298f0d-d294-47dc-9c87-1245621bd08f",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e05ffe97-e8d6-4d7a-9acc-50681aa4517d"
        },
        "item": {
          "id": "bc3dcab8-6023-4624-ba7e-f8a684aac688",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a41948ac-e008-4334-805e-781f4ae31031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f17f49-54f1-481c-951b-0f0b58e4569f",
        "cursor": {
          "ref": "297d6da2-5d76-430c-8d4d-065d7442f105",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ec109b84-c150-403c-a57f-88435ed82684"
        },
        "item": {
          "id": "e8f17f49-54f1-481c-951b-0f0b58e4569f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5a5ed85a-8507-48f9-ae3b-d2580c2d3947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdaad796-6eb4-43de-a035-8451af8afa8b",
        "cursor": {
          "ref": "6b4435a6-2d4e-49f3-a7ea-18542b03549a",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1007b5c6-eb69-4789-be75-f9670ad6f838"
        },
        "item": {
          "id": "bdaad796-6eb4-43de-a035-8451af8afa8b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "75c9307d-578d-4458-a2fa-d450970b33f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43030e08-18e6-4cfe-979d-65df70cabe96",
        "cursor": {
          "ref": "6e68868b-2ff2-4249-a3eb-d867da9ce638",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a01ea52e-3779-43be-b9f4-0e895f268b47"
        },
        "item": {
          "id": "43030e08-18e6-4cfe-979d-65df70cabe96",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "40aa073f-99f5-448f-8a66-f712eb912bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec06a74-5d26-4466-ab82-0898e8b2ff93",
        "cursor": {
          "ref": "e1bfb2d3-d2d9-4955-96d2-cb515b6aeb81",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a3034fe0-f1b6-47e8-9094-ea697f64fb34"
        },
        "item": {
          "id": "7ec06a74-5d26-4466-ab82-0898e8b2ff93",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "24c9f64e-d8fd-4781-8ed7-704f652225d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeed1886-37c2-4310-97a0-2f7e4e3c0529",
        "cursor": {
          "ref": "c246197e-3ece-4e93-93fb-a2c68f6a5371",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d473ee0d-2e95-4c5b-ad56-3b6e1ed90aef"
        },
        "item": {
          "id": "eeed1886-37c2-4310-97a0-2f7e4e3c0529",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "8c0cc046-d78a-4c9e-957f-6f481f2f30d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f804b1c-5a04-49ed-aab6-d435456eef2e",
        "cursor": {
          "ref": "79f42daf-4ae2-4958-b8ee-b1f7631c6fc5",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f83909b0-dcf9-4f12-aa81-53b8c9f241db"
        },
        "item": {
          "id": "4f804b1c-5a04-49ed-aab6-d435456eef2e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f4f082c3-7cfc-466c-9653-0c89cb5c80ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a8c3c0-67af-4a8c-987d-747f164b8fc6",
        "cursor": {
          "ref": "fa57444e-7388-42c9-a0c8-05da1689dab2",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "8a74008a-2f16-4e07-91f6-64c749ac5e90"
        },
        "item": {
          "id": "f9a8c3c0-67af-4a8c-987d-747f164b8fc6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a739c995-86d7-4285-8da1-510087968b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc7d23d-e447-4db5-8bdf-2db8d4e1babe",
        "cursor": {
          "ref": "6807c745-708a-4ae7-8a62-d51fe878d802",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "d274d1eb-bfff-424a-b03a-68bfc5fc9d51"
        },
        "item": {
          "id": "abc7d23d-e447-4db5-8bdf-2db8d4e1babe",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1b6dc46a-9118-45d2-907c-7d12dc90ed3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d06c8dc-7ec1-4225-ac3f-a9cbeaa9d67f",
        "cursor": {
          "ref": "66504b3a-f466-4b6a-9e51-3f7bd3dab5eb",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2fa12703-195b-4625-bf76-cfba8c6b14ab"
        },
        "item": {
          "id": "8d06c8dc-7ec1-4225-ac3f-a9cbeaa9d67f",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f9d7e78b-00b5-4050-888b-b6b765498efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ba9b1e8-755b-4e4b-b493-e79f2a1e97f5",
        "cursor": {
          "ref": "0bc02ba7-d418-48ac-9555-054f7bfe7161",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "66c5599f-9ed3-449b-b495-0c8a211eec6c"
        },
        "item": {
          "id": "3ba9b1e8-755b-4e4b-b493-e79f2a1e97f5",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "410c91fd-a9ab-4614-ac0e-1741dd54de17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd36e7c-eef5-4dc3-8e8d-7c0da6dfebea",
        "cursor": {
          "ref": "f623534e-f56e-42d4-b03c-69587b7af619",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "72f300ad-addb-4d6f-9e22-33151c9f040a"
        },
        "item": {
          "id": "fbd36e7c-eef5-4dc3-8e8d-7c0da6dfebea",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b1640898-5069-47fa-8622-af79bb1be2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc85071-08d1-4fe0-94f5-59899d02ed07",
        "cursor": {
          "ref": "3623f999-8e5a-41fd-a572-f2021693e147",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a54493c0-6979-45c9-b5ca-ddd33f7f4d48"
        },
        "item": {
          "id": "fdc85071-08d1-4fe0-94f5-59899d02ed07",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c1333d20-8aa0-4dd1-8d71-6c302f089172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84e6230-086f-45ac-856e-ea0371d1ce70",
        "cursor": {
          "ref": "35c73e09-2b25-41fd-a697-d106ac5ec640",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "acb6f31c-47e9-4547-954d-32008f5383aa"
        },
        "item": {
          "id": "a84e6230-086f-45ac-856e-ea0371d1ce70",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b9e24557-c902-423d-b5e7-bb50bdee2ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00164fe3-bf6d-4d63-8b9a-c7937cf9ce3e",
        "cursor": {
          "ref": "42819ac4-1f42-4ffe-acd4-c3e180c1b792",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1f6b36b0-7206-4e8b-9e66-7f9edb2197a1"
        },
        "item": {
          "id": "00164fe3-bf6d-4d63-8b9a-c7937cf9ce3e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9e912e07-a5ba-4d28-83fb-21e159c31926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a6868c-eab4-4a6d-9904-5d6da1f86fde",
        "cursor": {
          "ref": "3d2cff86-e622-447e-a8ae-d09c184e4e03",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e4d32b89-2c96-4cfe-b855-f8bc9ca08c61"
        },
        "item": {
          "id": "e9a6868c-eab4-4a6d-9904-5d6da1f86fde",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5954d978-d422-4b68-963a-fb01a13c15dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ceef177-47b8-456d-b6e2-b2e01823716e",
        "cursor": {
          "ref": "0ccef108-ca4d-4dfc-b18c-b383b6765f94",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ecb36724-e801-4c2b-a137-e18427ded8a0"
        },
        "item": {
          "id": "8ceef177-47b8-456d-b6e2-b2e01823716e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "38a6e88c-a41a-444e-aa04-491de34bbbbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb818f6-a844-4d6f-a75b-3f1a5ce2a651",
        "cursor": {
          "ref": "2bda604a-6cca-458c-90a0-2dee63e9824a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c44db20a-b7de-4fed-8f3b-e289ec09dabd"
        },
        "item": {
          "id": "1eb818f6-a844-4d6f-a75b-3f1a5ce2a651",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c4e1b4e0-dea7-4567-92bd-6506901d021a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5839974f-6523-4d4f-8eea-039fac57cba9",
        "cursor": {
          "ref": "8283204d-4d58-49fd-8d6e-5a7561892ce8",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "b8d080cf-7343-4e19-8f33-cb2809306137"
        },
        "item": {
          "id": "5839974f-6523-4d4f-8eea-039fac57cba9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "330132b7-071d-480e-a79a-dcb4e11ee21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60302f6d-bf8e-4449-8b45-7077caabec13",
        "cursor": {
          "ref": "722a0714-2fbd-4f03-a978-56170aad6b44",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "c3827894-13b5-46c7-a9d9-f87ee20c47de"
        },
        "item": {
          "id": "60302f6d-bf8e-4449-8b45-7077caabec13",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "298910b7-6652-4d92-b2e8-7e89ecc12e2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f2bf26-79c5-4c24-85a1-fc0dc84d8d10",
        "cursor": {
          "ref": "5228d52d-abd9-49bb-9858-54f45ee81914",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ac7d5809-149a-4da3-a2de-977ef75503ea"
        },
        "item": {
          "id": "a8f2bf26-79c5-4c24-85a1-fc0dc84d8d10",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dd3c55df-3ffe-4302-a54b-964d0cc556be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6928b69-fc1c-4c7c-9ef6-df188a29be84",
        "cursor": {
          "ref": "bd1cc44a-456c-4c06-8973-62ebba8a1466",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e3b086da-7390-4d2d-a509-203eb3ec3bbc"
        },
        "item": {
          "id": "b6928b69-fc1c-4c7c-9ef6-df188a29be84",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "9c9c2d04-54d2-4c0b-9cc9-b2c5d174380c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ae3b2e0d-6eb8-4678-ba3a-3a741308d151",
        "cursor": {
          "ref": "e31935cb-1d4a-40bf-8ab4-d00a5117b6fa",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1e15d7b2-ca8c-47d7-9796-eaf86b4a72f5"
        },
        "item": {
          "id": "ae3b2e0d-6eb8-4678-ba3a-3a741308d151",
          "name": "credentials_issue"
        },
        "response": {
          "id": "24bc2fbe-edd2-4ab8-8c56-1904e0e66db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3bdb4619-82dc-4583-b1cc-130c2522b516",
        "cursor": {
          "ref": "916b69fb-3c96-401b-a5f5-eeea65647c60",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7aa55ab6-4163-4a4e-9ff8-6c1439f3d5a6"
        },
        "item": {
          "id": "3bdb4619-82dc-4583-b1cc-130c2522b516",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e5947b19-7946-4f83-9dc8-46f6a37de409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "abde9043-f802-484e-a669-176b81dbf146",
        "cursor": {
          "ref": "5c579e92-a01f-4cd1-9df6-f9965e12191e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8b2eb6e8-d0ea-40da-b5ff-6159de2eea34"
        },
        "item": {
          "id": "abde9043-f802-484e-a669-176b81dbf146",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "3adee036-cf26-4b43-a5f8-a95dfc8868e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0b3da83e-2c5a-405c-9069-3b0b5bac9f0b",
        "cursor": {
          "ref": "7b166df7-fd64-4639-a031-a257d7c8c271",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ae0b7532-e1cf-484e-a593-f7db87861df6"
        },
        "item": {
          "id": "0b3da83e-2c5a-405c-9069-3b0b5bac9f0b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dd23d00b-b5b4-41ed-8dcd-155d9b247431",
          "status": "Created",
          "code": 201,
          "responseTime": 5008,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f08df2-f1db-405b-b246-20c3a44cc4dc",
        "cursor": {
          "ref": "6d37aea3-df8f-4402-a4e4-a05bd72f9e2c",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "16d70a14-e1a2-4aa3-9160-177d58a33e96"
        },
        "item": {
          "id": "75f08df2-f1db-405b-b246-20c3a44cc4dc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6a4e51f9-e57b-47d7-8ad2-af2626e602d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "477400dc-6c2f-4ad7-a804-128c7fc51c76",
        "cursor": {
          "ref": "390ad0b3-20d7-4a24-bc3d-e28c9fbbb183",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "a3b270d5-4119-47b5-b222-8456ca076896"
        },
        "item": {
          "id": "477400dc-6c2f-4ad7-a804-128c7fc51c76",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "75b076a6-9905-4721-9194-66bc5a594efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "32091243-57bf-4ebc-b3a6-5db51dd29bf3",
        "cursor": {
          "ref": "79498449-6162-4ff6-b21d-7616e909ccc4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "72c77285-d9e4-47e4-bef5-c28612b193c9"
        },
        "item": {
          "id": "32091243-57bf-4ebc-b3a6-5db51dd29bf3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7332100f-0970-48f5-ac6b-f41348a0056c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d865bb81-ec64-42fb-b35a-55f21516cec9",
        "cursor": {
          "ref": "3a656c78-5797-43cf-91c7-e8eb9dbeaf71",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "c7ded77b-84ed-41e4-bc50-a14ce1324322"
        },
        "item": {
          "id": "d865bb81-ec64-42fb-b35a-55f21516cec9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e8ce37e8-111e-4946-88d7-ebe0eb0f2301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5564030-b2f6-46f4-a853-a363e1eac849",
        "cursor": {
          "ref": "284974e9-dc66-4e0d-8b2b-74c209a29915",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8dff7e70-56cf-4012-bc81-055d9afa7226"
        },
        "item": {
          "id": "c5564030-b2f6-46f4-a853-a363e1eac849",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1109d67f-e0e7-499b-adc9-3fe85b24d610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35de921e-ce8d-42c9-860f-8c3e94e6e791",
        "cursor": {
          "ref": "e9aa1390-89f6-445a-a7b1-90c8212acc48",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "adb31595-c804-4972-b0e0-984f3de424c2"
        },
        "item": {
          "id": "35de921e-ce8d-42c9-860f-8c3e94e6e791",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "23b08db4-9a61-4795-9645-9fcdde1c3bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df507fb-ab4f-499d-b4c7-9071f4456dc7",
        "cursor": {
          "ref": "5b37d100-4168-43e8-bcf4-910d9bc0b970",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "67e6cc9c-952b-4de0-8c01-d5d52863b05e"
        },
        "item": {
          "id": "4df507fb-ab4f-499d-b4c7-9071f4456dc7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "b7e0b0bd-dd24-4d2f-9ceb-58c166bbdbf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f71ea861-e175-4258-93f2-1176cd28cb0a",
        "cursor": {
          "ref": "021088d6-3d59-4358-8716-b1b2f9b088fe",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "07c6a365-0d2e-4d7f-a588-a9c0ce1fc68d"
        },
        "item": {
          "id": "f71ea861-e175-4258-93f2-1176cd28cb0a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "6c82ec4c-c80d-435e-bf90-915ad52f1f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203df79f-abac-4ff1-9707-fb1094f3592d",
        "cursor": {
          "ref": "1f54d18f-7612-4e82-9ce9-68ed8e719b12",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "d7f5e627-7ee3-459b-a4bc-422e51c61597"
        },
        "item": {
          "id": "203df79f-abac-4ff1-9707-fb1094f3592d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b5052ca9-0526-4a2e-8edd-1a3d737da3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ec6b54-f136-4894-9953-6421ac56ebbd",
        "cursor": {
          "ref": "ca7cea53-1a9a-45c1-b582-33aa0af43941",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "6228de20-1d00-4b07-bdb8-7e43814c885b"
        },
        "item": {
          "id": "86ec6b54-f136-4894-9953-6421ac56ebbd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2487cbb7-b01a-4c4a-9e74-1dc5ca6fdc72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a117d3c2-4159-4448-bec3-76cc7585f93e",
        "cursor": {
          "ref": "eb4bfb37-aa57-423c-aafd-4afa6c0e61da",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "0d914f32-1e74-4cff-bdc1-4b778d82e2c8"
        },
        "item": {
          "id": "a117d3c2-4159-4448-bec3-76cc7585f93e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8960fa8b-c8bb-46e1-b398-3a2d0e699e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea75be8-030c-42b8-80af-d0e1e6a6f311",
        "cursor": {
          "ref": "3fc4a667-bd5f-4293-96e4-20cb155a25c6",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7abae4b3-0ed8-4499-a5c8-7a2ece59922c"
        },
        "item": {
          "id": "9ea75be8-030c-42b8-80af-d0e1e6a6f311",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "14d78256-ce20-4315-9f55-f7cd01eb9160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d6b475c-02a8-4756-8392-d8dd61728a49",
        "cursor": {
          "ref": "2ac7b7ba-e264-4720-99c5-64006084297a",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1e4b4257-f9b3-4304-b9a8-3c252cc9b83c"
        },
        "item": {
          "id": "5d6b475c-02a8-4756-8392-d8dd61728a49",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "45561656-2d92-49ce-a717-418a00d8a17c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c76d0e-d282-41b9-aeb8-2a29963ea259",
        "cursor": {
          "ref": "c4cc7d65-5224-47d9-9a80-0c7e37aff313",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "0db5e856-a3e6-4ec2-8d0e-1130a13c697c"
        },
        "item": {
          "id": "89c76d0e-d282-41b9-aeb8-2a29963ea259",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "36b92ee4-4569-4196-8d02-421de2a76d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38d485fc-34e6-4c40-9261-3a865126d0a2",
        "cursor": {
          "ref": "af0d0909-0150-4d00-b730-da578808bab4",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "df29369c-2e6d-4d29-9f1b-093d459d92d9"
        },
        "item": {
          "id": "38d485fc-34e6-4c40-9261-3a865126d0a2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "920deedc-673d-46f0-9ed4-820f048a2904",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a321268b-a80e-435a-8878-ded5e0192a2b",
        "cursor": {
          "ref": "3fef10b4-9354-49fa-bfed-e7fb5bc559bd",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "1db30224-edb1-4be8-86fb-021dd121abb5"
        },
        "item": {
          "id": "a321268b-a80e-435a-8878-ded5e0192a2b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "35066d42-0109-4426-b89e-f5325dff8b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ead96ab0-bc73-49f1-b41f-318d4182f807",
        "cursor": {
          "ref": "e5e49524-9bb9-461d-a45f-c0e5b296790a",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ef5ad07f-1551-459a-a74f-3874eac4e43d"
        },
        "item": {
          "id": "ead96ab0-bc73-49f1-b41f-318d4182f807",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "21ca73f2-99be-4891-8857-344d14000c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc387dd-7326-40ae-8d74-e41407e137ab",
        "cursor": {
          "ref": "6c9222e1-9135-4f5a-802f-7125fa1a7334",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "33d5d546-0203-47c2-b0c3-912716dcc782"
        },
        "item": {
          "id": "bbc387dd-7326-40ae-8d74-e41407e137ab",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f09c875d-d3d0-4fd1-ac3f-b944437afec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77527e37-9fc5-4018-b27d-3f5efd696a6f",
        "cursor": {
          "ref": "851da84a-cf6c-4f01-a4e2-87c554b69c48",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0be32207-8773-468b-b418-fbd67d39cb2e"
        },
        "item": {
          "id": "77527e37-9fc5-4018-b27d-3f5efd696a6f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "032fd5b7-6978-4f02-b984-200edfcdda7d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "bb7f1763-0dbe-42d2-87fd-ee1479e49d0c",
        "cursor": {
          "ref": "c2c03e19-029f-4665-8633-d29b24cdab44",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b7679fe8-e281-4575-bc90-5af02f07ef1d"
        },
        "item": {
          "id": "bb7f1763-0dbe-42d2-87fd-ee1479e49d0c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "092b482d-80b6-4ece-b5a8-eb69c5fc6ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af768414-41ab-4227-8513-14d04ded3efa",
        "cursor": {
          "ref": "d6cfcdd8-1a28-42aa-b722-25e78c2b85ff",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dd79c31b-8ecf-4895-b7d6-cd121cc9b375"
        },
        "item": {
          "id": "af768414-41ab-4227-8513-14d04ded3efa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0ae8d40e-b6af-46b6-90e4-7c2573ea61f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d662e2-000c-4628-ae7d-354617f3cb8f",
        "cursor": {
          "ref": "368cefc2-24b3-4052-99bf-4f687b1da9c5",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7d4da203-6cde-430b-9fe0-3c06fa45ecf8"
        },
        "item": {
          "id": "33d662e2-000c-4628-ae7d-354617f3cb8f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b280b4a5-5367-447d-b0d8-7b8c9a21ae2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb56312-d90d-4e67-9a48-d9a9f5a95c32",
        "cursor": {
          "ref": "d117306d-b634-4f8a-9889-7935308069a4",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3b14e9cc-8402-4c23-b9c6-d1848307680c"
        },
        "item": {
          "id": "6fb56312-d90d-4e67-9a48-d9a9f5a95c32",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8e001104-6c52-4419-8a73-cdf2d485725d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c9931c-f5a2-4097-8c76-bee2b0b7594b",
        "cursor": {
          "ref": "ce3d0942-f707-46ab-9507-e0fe60d7a2b5",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dd15a1ca-0399-4869-8a56-c07ff1a7d65f"
        },
        "item": {
          "id": "e7c9931c-f5a2-4097-8c76-bee2b0b7594b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bd490da9-7c5a-4261-a392-e73f9c06972a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6f06f8-0901-4cc6-94ed-4000c0b5a700",
        "cursor": {
          "ref": "e5e31fff-e1d4-492c-99f9-cdb5ac43ab4b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7670e683-a271-408b-afad-e5a4b9fe2a67"
        },
        "item": {
          "id": "ae6f06f8-0901-4cc6-94ed-4000c0b5a700",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bbc81fb5-5ccc-4fa4-b5c8-cf7dffff2a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c156e2-9464-44db-92ca-85c11ccdb0ba",
        "cursor": {
          "ref": "d93bc296-de45-4ba2-b6d8-11718c05ab95",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "87e525b4-f666-4fc4-aa0b-b171fcd93b58"
        },
        "item": {
          "id": "43c156e2-9464-44db-92ca-85c11ccdb0ba",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e8936af6-56ea-416a-b97a-25e8ce6c9298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60c39531-f4f8-49c7-8d19-e6dcf5c61e1b",
        "cursor": {
          "ref": "b146aed0-9984-4132-b305-87210d0f91af",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4438912c-60dc-45d8-8d7d-83a949fead6c"
        },
        "item": {
          "id": "60c39531-f4f8-49c7-8d19-e6dcf5c61e1b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dff82e41-df0a-4b09-a7f1-f75b343237d4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 88,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "213adabc-76cd-4c7c-a111-2dd53af233f7",
        "cursor": {
          "ref": "cf21dd67-6f69-46f7-be5f-2f65f230d8e6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f6a5927a-f920-46ab-b863-eb14067c3c30"
        },
        "item": {
          "id": "213adabc-76cd-4c7c-a111-2dd53af233f7",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "213bdd31-7f76-4d87-aabb-c6c38ebf5cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e8ae98-4ce8-494f-970a-11ec258a0290",
        "cursor": {
          "ref": "e13b333b-b0e4-413a-b7d4-8fe5a9d17a9d",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a58f0223-dfcf-432f-ad48-40ef82ed2a1c"
        },
        "item": {
          "id": "04e8ae98-4ce8-494f-970a-11ec258a0290",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "adedbb51-d018-409f-9e6b-7fb73ea517a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3487401f-4d7b-40d7-990c-3c2122dc8129",
        "cursor": {
          "ref": "7ef60548-16bf-40ba-8044-cf36c036e8f2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9b7d8546-012e-42ce-a5d9-e7057fc0f5d0"
        },
        "item": {
          "id": "3487401f-4d7b-40d7-990c-3c2122dc8129",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0bb56767-d4ff-4e5c-813e-9a9af1b2892f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f570ed0e-f45e-4a46-908d-13961773eebb",
        "cursor": {
          "ref": "549580d8-cde2-4dec-aa47-5575fbde7661",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "00cf0ac3-c567-4577-becd-69758f9d77ff"
        },
        "item": {
          "id": "f570ed0e-f45e-4a46-908d-13961773eebb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6753b511-ca0c-4f37-beac-544fcd7aa356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52401c4-9e03-409d-b1bc-414b1569c59a",
        "cursor": {
          "ref": "57d8af91-efed-4700-9994-0316ad320c78",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ee165220-a9c5-45c2-9eaf-7b41f3282c90"
        },
        "item": {
          "id": "f52401c4-9e03-409d-b1bc-414b1569c59a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "47df5669-650a-4a23-b633-84326735ab26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553cc99c-6824-425c-b2b3-2b9847abe9ce",
        "cursor": {
          "ref": "99657f83-6dac-4177-97f1-f5ebcd9a34eb",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4132b3a8-6ca1-4feb-87d1-d7f33391db7d"
        },
        "item": {
          "id": "553cc99c-6824-425c-b2b3-2b9847abe9ce",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8d3221bf-8c28-4c84-a31f-fbfb4bbef9df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e3d829-2f78-4aef-9cd3-a6af57318f8d",
        "cursor": {
          "ref": "c32a9429-cf3b-4f31-b720-1b9f95713059",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "63f896d5-222c-49b9-bacc-3f19b5023e58"
        },
        "item": {
          "id": "12e3d829-2f78-4aef-9cd3-a6af57318f8d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1aa84030-88f9-4f78-a2c3-c9aff1122bae",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 163,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "63d96920-2015-4512-9088-f6e20e52de97",
        "cursor": {
          "ref": "50288535-1086-45fc-86d0-28184d379b72",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a8f40689-85d3-43d2-bcf1-2f5fb9669159"
        },
        "item": {
          "id": "63d96920-2015-4512-9088-f6e20e52de97",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "74860aa9-2837-4dd7-bf03-3c760cb8b7e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70de6e7-2012-4749-a595-d4ed7e256a39",
        "cursor": {
          "ref": "610b8adc-fde7-4162-9338-9c512b6315a5",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "71ce6f1b-47b9-48a8-9ccc-95efc16da86d"
        },
        "item": {
          "id": "f70de6e7-2012-4749-a595-d4ed7e256a39",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e76828d7-2846-497e-8ea0-baa7ba67c34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b185ad-f5d4-4aad-afd7-45533dbb56b8",
        "cursor": {
          "ref": "b407f84b-d077-48ae-a115-c059158f5f18",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "10c63a4e-bec1-45bf-b1e1-84615a5414cf"
        },
        "item": {
          "id": "99b185ad-f5d4-4aad-afd7-45533dbb56b8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "68052572-9d4f-4501-88f6-29b3779caa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24c92397-eebe-40e0-9338-48b9e618dfa7",
        "cursor": {
          "ref": "5a0d2b69-40b1-410f-a962-776c6b5522f1",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2fb35c83-268a-4911-bdb9-954d32b614ec"
        },
        "item": {
          "id": "24c92397-eebe-40e0-9338-48b9e618dfa7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "64e8a8d9-3162-4fd4-bfd4-650f02689641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7aeb2c-20ca-4b65-80be-0a45401271f5",
        "cursor": {
          "ref": "fc300171-2b93-495b-a9f4-18f77528c180",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "91cf08fc-10a5-4579-95d0-4f370d2bcde7"
        },
        "item": {
          "id": "5d7aeb2c-20ca-4b65-80be-0a45401271f5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1cc03693-a2d2-4731-abbe-7822c4c253a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9a4f92-93b4-49f3-ab97-e52375529cb5",
        "cursor": {
          "ref": "39734693-c5fc-4294-ac05-d0720f30dc34",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b2ee1998-8d80-4659-9933-d26e52c92840"
        },
        "item": {
          "id": "2c9a4f92-93b4-49f3-ab97-e52375529cb5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "770c750b-2390-4b53-bf9e-c0f45ddc4f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a2f9dba-b583-4ba9-a0b8-1c57fc3ceb57",
        "cursor": {
          "ref": "7c5ae6ee-062d-4f24-a311-c35a782d38dc",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d77e65a4-80fa-4749-afe7-51bf053c7396"
        },
        "item": {
          "id": "8a2f9dba-b583-4ba9-a0b8-1c57fc3ceb57",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "edc1cb8f-001e-41bd-9fd8-7478cc61ce04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1adbcbc-78a2-450e-9d67-afab67f28414",
        "cursor": {
          "ref": "30a74c9d-e9eb-4525-b7f0-6ecf151a0e0c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b06f8456-2fc7-4e8d-8b70-06d1b9c3b9a1"
        },
        "item": {
          "id": "a1adbcbc-78a2-450e-9d67-afab67f28414",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1563d5e4-91c5-4674-b337-6a7d1a7d6f31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9a9e0a-a671-4ae7-a939-8626a541ec59",
        "cursor": {
          "ref": "8287f9dd-2791-4048-ba8a-6adc96f8856d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ef382926-1366-4150-83c4-3c063e149c52"
        },
        "item": {
          "id": "7a9a9e0a-a671-4ae7-a939-8626a541ec59",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "409e3943-508c-40a9-a695-83f6e216747d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2288133d-929c-44c3-ad84-14244871b650",
        "cursor": {
          "ref": "52fb8e2c-375b-4be6-9ed7-7f2fe8d7d980",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b3518650-2505-41ce-94d7-f3d8a0d820a1"
        },
        "item": {
          "id": "2288133d-929c-44c3-ad84-14244871b650",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bc4bbaa2-9a2d-42df-8c02-401fcd6bb8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a70282d-901f-4c6e-8758-5c46c1b8d22f",
        "cursor": {
          "ref": "33ef2f8e-4a1e-4463-8271-a4553bef4ed3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dea18116-28b9-4786-83ff-d21c05231352"
        },
        "item": {
          "id": "6a70282d-901f-4c6e-8758-5c46c1b8d22f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "69ee66e7-3047-4845-9175-1ce7e3b49ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0499689-b650-42c2-b771-e5b4d33a1019",
        "cursor": {
          "ref": "6080d904-f9b4-4cbc-80f2-067467e70618",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5198732e-cc67-42e4-9cd1-4ae135b7ac9e"
        },
        "item": {
          "id": "f0499689-b650-42c2-b771-e5b4d33a1019",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c4446c24-cf21-4199-bbf4-1bb20ef1408a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e16cbe2-68ac-4e7a-8617-78501e51e123",
        "cursor": {
          "ref": "c8d8dd95-66b9-4744-8f8f-3cf2d4db3ae2",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6eef0d70-ae63-482d-b4d3-54099053ce15"
        },
        "item": {
          "id": "0e16cbe2-68ac-4e7a-8617-78501e51e123",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "42b4a3c0-95a5-41fd-b2a7-1f45c20f00ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8107929-606c-487c-8122-93f77b3e17ce",
        "cursor": {
          "ref": "17e15519-7642-4e81-974a-7d105cb349f4",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f62b4252-739a-4cdd-a306-04421b7423a8"
        },
        "item": {
          "id": "c8107929-606c-487c-8122-93f77b3e17ce",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "91ffa116-1800-4cad-aec2-e157ac6472cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854f06ee-d36b-45d6-b657-7b1961ad2c0a",
        "cursor": {
          "ref": "1dc9a82c-0b37-4fcd-af35-666eb7f84408",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e1cf2f3d-4bdd-402c-899e-dbb6da539bee"
        },
        "item": {
          "id": "854f06ee-d36b-45d6-b657-7b1961ad2c0a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5fa130a3-3c18-41b6-a8f0-3a0f844a282c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f838135-aa5b-4969-a647-6257a5fdf28a",
        "cursor": {
          "ref": "c9b3d0d7-c38d-45c5-b526-d35defbc4748",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "89816b20-3422-428a-b637-ed4a895fc9d2"
        },
        "item": {
          "id": "0f838135-aa5b-4969-a647-6257a5fdf28a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d3d3a079-5164-4f1d-9334-43a582808867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3895d2f-eff4-45d4-a1fe-110918c8f51e",
        "cursor": {
          "ref": "c2dfc384-a717-4053-aaf8-d7c4f4fc3a58",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "75457504-6931-4c28-86f7-2ba6e0bd9b4e"
        },
        "item": {
          "id": "c3895d2f-eff4-45d4-a1fe-110918c8f51e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c5c78aa8-152b-4586-940f-12665e1950d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c6a262-c55c-470c-b668-6d4d66394cea",
        "cursor": {
          "ref": "2f1b9bcc-e223-44c9-a182-1bce52133cc1",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "39fbaba7-0567-411c-9925-74b95d978fc8"
        },
        "item": {
          "id": "69c6a262-c55c-470c-b668-6d4d66394cea",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "04034ffc-c4a0-4547-98a2-8d90ead4bc8c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "65fbbf5a-ef92-4d3c-be66-4415fe168110",
        "cursor": {
          "ref": "3c4968d0-f5ef-426d-9721-2ac63d49be31",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "95ce6e96-817e-454c-a88a-3d172d06ce64"
        },
        "item": {
          "id": "65fbbf5a-ef92-4d3c-be66-4415fe168110",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5229fbf7-5639-42bb-aa1f-97a9490c0124",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f347c378-24c6-43a4-9efc-75e3328b555b",
        "cursor": {
          "ref": "6edcb852-324d-4596-9dea-2b111f61622c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "5d727223-de5b-4a25-9c62-69d90250a2ba"
        },
        "item": {
          "id": "f347c378-24c6-43a4-9efc-75e3328b555b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "fb153b2b-fdbf-4820-b894-6089dcab9f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a1e963-9bba-4814-8067-2adc2c14750e",
        "cursor": {
          "ref": "376f3ba5-757f-4411-ae11-77db20bd5f52",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c9b5da70-08b8-42d5-ab89-984aab787060"
        },
        "item": {
          "id": "94a1e963-9bba-4814-8067-2adc2c14750e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "694e8e7f-2c9b-41d9-9743-6f64429c1ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74ada71-13cf-4c80-a5f2-00c8f05558a8",
        "cursor": {
          "ref": "113dc9e8-e9e7-40b8-83b8-e4788e1d962e",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d63c794d-d3cf-43f0-87a5-d530c227e81f"
        },
        "item": {
          "id": "b74ada71-13cf-4c80-a5f2-00c8f05558a8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1b412f53-fcc6-463f-a36f-c38b9f8e3388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6bbb8a7-8708-4130-aa32-a92ec2c33cf9",
        "cursor": {
          "ref": "7c5ead24-fe71-4f6a-a1c9-f552a25cb2e9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0bed2ec6-501f-4912-a061-bab488406d91"
        },
        "item": {
          "id": "e6bbb8a7-8708-4130-aa32-a92ec2c33cf9",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2e15fd66-b265-4709-9822-940bf7b596de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf57ffc-0759-40a4-b5d5-07bb3474aaf1",
        "cursor": {
          "ref": "51af3de7-aa04-423b-8267-8bfbcd1fce70",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9e648903-9d03-4263-b64a-bfcd9d3e8449"
        },
        "item": {
          "id": "9cf57ffc-0759-40a4-b5d5-07bb3474aaf1",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7d8ac344-ad75-44b2-bf0d-8d552f959f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff46e631-b59a-4e35-8645-e2c28139e6be",
        "cursor": {
          "ref": "bbd547d0-db39-4f3c-a1f3-849d34e52f02",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2b26a925-198f-4d0f-9c0f-bec803bb258f"
        },
        "item": {
          "id": "ff46e631-b59a-4e35-8645-e2c28139e6be",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5994b286-b141-4308-a2a7-b482ff4d6c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a46f63-b18f-40e6-9965-4fa81d4d03f4",
        "cursor": {
          "ref": "c8d7be41-79b8-4a0d-981d-2f8cc6c7593b",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "98591021-954e-4999-a931-58d51b3fccdc"
        },
        "item": {
          "id": "05a46f63-b18f-40e6-9965-4fa81d4d03f4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "18335133-0be0-4268-871e-7bc0a57088a9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "660a2dc8-8d20-4edc-89af-9cd75a2a8fad",
        "cursor": {
          "ref": "709ff32e-0600-4704-9171-5221e501fbd1",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7494ab51-bfa0-4479-8746-0bc5d96c0fe4"
        },
        "item": {
          "id": "660a2dc8-8d20-4edc-89af-9cd75a2a8fad",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "710fbd86-e081-4ef1-b1c5-4a34feef9fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f0fa72-71a7-4635-afc2-26b81973f7db",
        "cursor": {
          "ref": "99c146f2-330d-490f-b4b4-15fae6c561a5",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b3b13767-6250-4e75-a136-c30b4380f870"
        },
        "item": {
          "id": "a8f0fa72-71a7-4635-afc2-26b81973f7db",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "7fd6a858-e891-4628-bae8-3c2b1d86d1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899d8655-2bb7-4039-8937-1eb4a3e4a27c",
        "cursor": {
          "ref": "afdf1e3f-3f41-4365-82c9-075a176ff885",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "86d495b7-b319-4320-b919-62e1fea9aa64"
        },
        "item": {
          "id": "899d8655-2bb7-4039-8937-1eb4a3e4a27c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4e225e21-afb7-4d5b-9def-fe31a409cf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f358c6-00a0-4d70-97d6-390eea248720",
        "cursor": {
          "ref": "d4d00d75-6445-47d0-8d50-5829bf3626e2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c23ce6af-7279-4bfc-a2b9-45db23913df7"
        },
        "item": {
          "id": "f2f358c6-00a0-4d70-97d6-390eea248720",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9e979669-fb2f-4b48-94d0-02224969a617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77479b3b-043d-4b7a-bbc6-34a00700d0d2",
        "cursor": {
          "ref": "4b2288fb-c8b6-4f06-99a8-2ff6de505fb6",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "74c3fed2-a533-4a1c-aa87-8c82043c2864"
        },
        "item": {
          "id": "77479b3b-043d-4b7a-bbc6-34a00700d0d2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "26597d26-4630-49f5-8e68-c5565216bf99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc378b6f-f5c0-41aa-a0f3-1429e1fb3e24",
        "cursor": {
          "ref": "ad78f609-26e6-4f65-801b-8495d1e7e266",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ce0ebb46-449f-441a-bcab-56e1612ce612"
        },
        "item": {
          "id": "cc378b6f-f5c0-41aa-a0f3-1429e1fb3e24",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b44f59b5-d3d1-42ea-8227-11f034841361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14f5734-cd06-49d7-827f-d453f1736689",
        "cursor": {
          "ref": "7bfa380e-d251-415d-b491-d9c3d694ef44",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d6b5c6bd-d8c9-4811-91a0-e797bdd7af85"
        },
        "item": {
          "id": "d14f5734-cd06-49d7-827f-d453f1736689",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d13044f6-6fe2-482d-8bac-e74c0faab47a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 73,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "57a2c98e-2137-4d90-9679-7f4f40e13350",
        "cursor": {
          "ref": "49fb12bf-7d52-4544-8104-4cd79e4ddd7a",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "262292d3-5fd2-48c4-8e55-d4ab96a43ecd"
        },
        "item": {
          "id": "57a2c98e-2137-4d90-9679-7f4f40e13350",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b37f7163-364b-4f11-be5d-604ee84ecaaf",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "202018e9-6b5d-4e41-9001-ffdbbae89b31",
        "cursor": {
          "ref": "7b421bac-6cc9-4e78-a617-83db5a39ba93",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c9c54ddd-3b99-4d20-9434-80f3e042d29e"
        },
        "item": {
          "id": "202018e9-6b5d-4e41-9001-ffdbbae89b31",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3af0ba5f-c716-4deb-a39b-57e934cec422",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "146ac485-8089-4f5b-908d-02ab9d74227d",
        "cursor": {
          "ref": "8108a6ff-88a7-4284-9f72-2945262caf36",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "750d3411-57d8-478e-b9b8-0f4bb7d9179c"
        },
        "item": {
          "id": "146ac485-8089-4f5b-908d-02ab9d74227d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6ee816d1-0794-4b5e-958e-7c518ff19b6c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 61,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "76717493-842b-4999-8d68-5e1e900b3374",
        "cursor": {
          "ref": "df972023-e5f8-4eba-b5f7-72f33beb5863",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cb2e9bce-6204-42aa-b921-ed365c3bc0cb"
        },
        "item": {
          "id": "76717493-842b-4999-8d68-5e1e900b3374",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "efd9a30f-cf83-4292-96a5-2a70e0f56647",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "d9ca2f60-7ebe-40e7-982d-abf62ea15897",
        "cursor": {
          "ref": "2bd39d1f-1de8-4983-a77c-6528b61d1324",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "97bf21c8-e627-42e6-99b6-8a480f7feeaf"
        },
        "item": {
          "id": "d9ca2f60-7ebe-40e7-982d-abf62ea15897",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "4e5e72ee-2e81-4764-a0c0-45b91186432e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 58,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "17c2df01-24f9-4bf0-8883-7868c484664f",
        "cursor": {
          "ref": "86f2eed0-69b2-499f-9f62-837396c7454e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "702a688a-c6dc-49fa-8459-0f3724afcff1"
        },
        "item": {
          "id": "17c2df01-24f9-4bf0-8883-7868c484664f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "afafe012-808a-479d-83d8-7c40e3b7a4ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb9698f-b10b-4518-8385-c3096a4d373b",
        "cursor": {
          "ref": "33b396c0-66fa-41ac-b17c-88abb58da005",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "6e13fc7a-170c-4843-8456-e47fa6f40bf5"
        },
        "item": {
          "id": "6fb9698f-b10b-4518-8385-c3096a4d373b",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "275a98ea-b520-4787-b997-a8eafa6b68a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9790d931-d82d-4bf7-9af0-637b7a0725de",
        "cursor": {
          "ref": "395a32e2-60b1-48a9-ae7b-4a83d58028d3",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6a8a687d-7307-4874-96a6-8e3e41f1472d"
        },
        "item": {
          "id": "9790d931-d82d-4bf7-9af0-637b7a0725de",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b4bd7c8e-c5fc-4fac-9969-1a935990b86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659128b2-a02a-4552-8d32-3eba669c7f9f",
        "cursor": {
          "ref": "449d8622-fc1a-4412-bfa0-53d6921118ba",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "687eae9d-6b34-4c48-88d3-ca9bef1b6aad"
        },
        "item": {
          "id": "659128b2-a02a-4552-8d32-3eba669c7f9f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "eb67747f-06b8-4ff7-8699-55ca82f256fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e77cd1f-4d0d-40ec-8343-6490468d356e",
        "cursor": {
          "ref": "a66e6988-871d-4e19-bf11-8c1d6822af07",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b403d9f3-ee53-401f-8182-2efff9a381b4"
        },
        "item": {
          "id": "1e77cd1f-4d0d-40ec-8343-6490468d356e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8359e3ad-56eb-46a3-95c8-7e6b2270f49d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412abf02-a66f-40c2-b791-419295ef2dec",
        "cursor": {
          "ref": "1c598f4c-b78b-4913-9f22-0bdd877e9a8f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "22b64f51-0198-4230-b0a6-0ff004b3f16c"
        },
        "item": {
          "id": "412abf02-a66f-40c2-b791-419295ef2dec",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ec2bced5-5679-4794-946c-652e87fae5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9fed3a-6cda-497a-b9c6-817bfff4bbc9",
        "cursor": {
          "ref": "5a3294cf-173d-41dd-bb4a-73f59319527b",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "55da2cfa-162b-4ea3-98b6-70e77c84d7ff"
        },
        "item": {
          "id": "3c9fed3a-6cda-497a-b9c6-817bfff4bbc9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ed53042d-95c4-41bb-a5cf-884ed7c975c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15516a67-eb2b-46b8-b8a0-307dad0f9f87",
        "cursor": {
          "ref": "2e86a8a1-14f8-438c-b558-83c9c2bd6cae",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fc294a27-2594-4590-9749-b9627739c0b5"
        },
        "item": {
          "id": "15516a67-eb2b-46b8-b8a0-307dad0f9f87",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "022584c4-27ef-4ef4-bdfd-9a220f2bfd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f9c500-4419-4181-b9b0-dc72e939382c",
        "cursor": {
          "ref": "7cb37c48-06c5-445f-b618-6a4f05c94e24",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ef6270aa-fa51-4438-8123-a132f665d574"
        },
        "item": {
          "id": "50f9c500-4419-4181-b9b0-dc72e939382c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "26a34229-60b7-4786-aeba-a1d1c4b126f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6335a7a-f5e4-4663-99a0-f863649aeac1",
        "cursor": {
          "ref": "0ccc908e-ecd1-46d6-ac00-17640b9b580e",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6a3c54ea-7f9b-468f-8b85-595fa03eabc2"
        },
        "item": {
          "id": "e6335a7a-f5e4-4663-99a0-f863649aeac1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0c998563-4d8f-455b-9048-a4bc2adf0520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fcfc0c-264c-4bb3-a705-ef4a364d21ca",
        "cursor": {
          "ref": "08d5c1d8-0f14-406e-8757-f367610d91dd",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e96bb500-6b09-4546-b6cd-ca570fcc0bd7"
        },
        "item": {
          "id": "39fcfc0c-264c-4bb3-a705-ef4a364d21ca",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "faa471be-868e-489f-a44e-2ddad2effcce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e286bc-adf8-450b-af1d-fa17957dbf72",
        "cursor": {
          "ref": "2ebdf9e1-d338-48f6-aa2d-00a0e26230f4",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "5d7b79e6-07fc-4ae4-ab7e-2a549521b724"
        },
        "item": {
          "id": "79e286bc-adf8-450b-af1d-fa17957dbf72",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9925ccd5-64e5-4858-8743-aabfe5a0ec65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29ed102-ccb2-4b65-927a-c4ac2984ab7a",
        "cursor": {
          "ref": "a8406621-2ba6-4c95-9fd5-a519a36476d6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b361c71b-f093-4b91-bba9-1dece941ac02"
        },
        "item": {
          "id": "f29ed102-ccb2-4b65-927a-c4ac2984ab7a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "0414b737-b713-4dd9-9bd3-247dacae2f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31fd85ad-84be-4ba4-81a1-04a98b622ff8",
        "cursor": {
          "ref": "e8ca7bab-086e-4636-8143-4a81a1d01691",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "59fc0e84-886d-4938-8359-48c58b5db079"
        },
        "item": {
          "id": "31fd85ad-84be-4ba4-81a1-04a98b622ff8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f2b04be0-7428-491d-a284-77d88de7721d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23ab3a0-00ae-4689-9264-a269730fac59",
        "cursor": {
          "ref": "4cc7e256-7da7-4f1a-a695-b3ce28636a15",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6a2af06b-014b-4452-85fd-ed4b776b4c4b"
        },
        "item": {
          "id": "c23ab3a0-00ae-4689-9264-a269730fac59",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2c0b01f0-8f88-4996-bcfa-854f39bff237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468e318f-c325-455f-8d09-5b6427547edd",
        "cursor": {
          "ref": "13baaeba-41b3-49d5-a99b-9f21ffe2205c",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "3171bd62-1bf5-42d7-95ea-32ae9b63643e"
        },
        "item": {
          "id": "468e318f-c325-455f-8d09-5b6427547edd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "216820f0-bd06-4392-8830-d9aeec70036e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 763,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e506953-8cf4-4874-99e4-b4ff17f2bb19",
        "cursor": {
          "ref": "299b735d-2b2d-41cf-a7d3-bc59c61cd7cc",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bf307d81-df37-4a98-984e-637b9f54b4d2"
        },
        "item": {
          "id": "1e506953-8cf4-4874-99e4-b4ff17f2bb19",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "173470fa-9ff0-4d6d-a2c2-5740dd5a3f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863c29c0-1c75-47ed-87a9-21d2f379984f",
        "cursor": {
          "ref": "586e7104-739f-4545-ac67-4871f9fb5d24",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a3549b55-7d75-4ea1-af39-0bdb3b6f5725"
        },
        "item": {
          "id": "863c29c0-1c75-47ed-87a9-21d2f379984f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f79be421-f159-43f3-b490-e4fb409d84ca",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "43c18b29-2894-4d46-a1cf-fd71d8d8ea72",
        "cursor": {
          "ref": "5fcc0268-7e16-42c3-b4ac-8d3cdbbd9259",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "354ea6c2-52c8-4001-8e0d-5bca0ade0799"
        },
        "item": {
          "id": "43c18b29-2894-4d46-a1cf-fd71d8d8ea72",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "50948204-ff86-46e4-a164-ac28e3c3e5ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c75c713-ffa7-4375-beea-e3aba83daa9f",
        "cursor": {
          "ref": "b9800332-77f7-4a2b-9d37-43b1892e29d6",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "17e27d40-a9e2-4faa-affb-32c9ca1c8a2a"
        },
        "item": {
          "id": "2c75c713-ffa7-4375-beea-e3aba83daa9f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "43eca1f1-b98d-4a4f-aef7-e8c1e9c1f245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d7c651-5115-420e-a827-5cde05f9677b",
        "cursor": {
          "ref": "5a1e3b71-e95b-46a8-a6a4-4266bb644c0e",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1e2ed76b-9544-4894-9a64-c7c787cbabac"
        },
        "item": {
          "id": "c2d7c651-5115-420e-a827-5cde05f9677b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "ec3a5e50-7914-484c-93c2-33d756081fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bf0541-ae6b-4f02-84c0-389138d30f47",
        "cursor": {
          "ref": "12d98cfd-349a-426c-9db5-14100058437b",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "022eb252-be13-4aff-a7a8-789d40e797e3"
        },
        "item": {
          "id": "d8bf0541-ae6b-4f02-84c0-389138d30f47",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3c62b5e3-99ad-4725-b788-e727afc81216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0747da36-9f5b-4b14-b7de-964c71389e57",
        "cursor": {
          "ref": "87ba4cab-4562-4e73-84d2-0c06c796a5c1",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f845b022-2796-4a52-85a0-135a34812bf8"
        },
        "item": {
          "id": "0747da36-9f5b-4b14-b7de-964c71389e57",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "6d7a1542-fa1a-4d65-88c1-f4b49f3a3590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c2649b-5984-4668-828f-992c79a12913",
        "cursor": {
          "ref": "e2bc7051-f982-40e0-a78a-8e54bdd8056a",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0a8b6a3f-f986-4e1d-ab63-d567eccf73bd"
        },
        "item": {
          "id": "a6c2649b-5984-4668-828f-992c79a12913",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "19f3d1b8-795b-43d5-8a4b-321a7bfc4522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142844f8-5a02-446c-ad0a-313a6c98b1f9",
        "cursor": {
          "ref": "a191754e-321a-4741-a639-597fa0a59649",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d3bcee52-8b6c-4ed6-a44d-da14a0055c44"
        },
        "item": {
          "id": "142844f8-5a02-446c-ad0a-313a6c98b1f9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "573e5781-51b6-48e7-b087-fa9bdece79e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a21db3-39dd-4d73-ab22-d0cc0df404ca",
        "cursor": {
          "ref": "6e216559-a4e3-45f6-b644-f386e56cba68",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a5c4dbdf-4244-402b-ac39-3032d0b7c809"
        },
        "item": {
          "id": "57a21db3-39dd-4d73-ab22-d0cc0df404ca",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a6031f46-a6fe-4e31-b2e3-04a569550fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1f50f3-ba6b-47ca-8589-28cb89fc713f",
        "cursor": {
          "ref": "7ff683c4-1fcf-41f3-82bc-472f472cc76d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c09dbf94-43d9-481b-9ed0-eae1258a2e06"
        },
        "item": {
          "id": "7b1f50f3-ba6b-47ca-8589-28cb89fc713f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "5fe00b5b-02b5-4e3f-99b5-f2b1ee3b2a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5541fc-35a0-4ada-8ac5-ff23ae2aa0a8",
        "cursor": {
          "ref": "a698d03d-0c29-4b94-995a-052206dfdb67",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7a6b5dbb-0119-4c57-abde-175e967a211b"
        },
        "item": {
          "id": "4e5541fc-35a0-4ada-8ac5-ff23ae2aa0a8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fe58395a-b50d-4159-a33f-21a5839c35bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce7491b-a3cf-4ea6-a928-b9a3638319d1",
        "cursor": {
          "ref": "02257fef-6142-4434-be6a-5becdb0a49fd",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "ce5f5156-34ae-4321-aa57-2cc056d5f610"
        },
        "item": {
          "id": "cce7491b-a3cf-4ea6-a928-b9a3638319d1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cf406c6b-0ed4-44d3-853b-16eab3afbc50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ac81e68-1587-4ee0-b607-6f684dfdc51a",
        "cursor": {
          "ref": "cef266af-b049-4914-82e0-f856bbcb7296",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6fc6f12e-3ec9-47f0-96d8-3e95a460a325"
        },
        "item": {
          "id": "4ac81e68-1587-4ee0-b607-6f684dfdc51a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a8fa5b24-4b0b-4921-95ad-9e0f7b30d6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6e12fce-824e-4604-9e7b-45f4593bea35",
        "cursor": {
          "ref": "cdc3d246-a193-4c1c-86e1-440addece74d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "40889199-e7d7-4ef4-b047-147f8d14a055"
        },
        "item": {
          "id": "d6e12fce-824e-4604-9e7b-45f4593bea35",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a1e1d3ce-b253-495e-bd95-c46468390e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf9c1bc-4d5e-49df-8e1c-3079ba995fd6",
        "cursor": {
          "ref": "f288ce43-8f2f-4222-81d0-9067d1c51f23",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1b423cf1-72f5-43a3-b084-2d2775f9f7b1"
        },
        "item": {
          "id": "edf9c1bc-4d5e-49df-8e1c-3079ba995fd6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a31ab42c-6d17-4397-a36c-04a0c9282389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc8f92d-e62a-4afb-a60d-e3866faf4654",
        "cursor": {
          "ref": "44a7ae9a-c4be-4fbc-aa93-38b334c6418b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2af1616b-c6f4-4782-ae1d-5d1a042b6610"
        },
        "item": {
          "id": "9fc8f92d-e62a-4afb-a60d-e3866faf4654",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8ec34023-6bc7-4089-910f-f8d2df236d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf8ed56-0343-42d3-a6a6-bfa7b59bf36d",
        "cursor": {
          "ref": "fbfcae19-4934-4d8a-8a7b-9aa349ecb41a",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7dc7ff49-6248-4c44-bb29-d6197049742f"
        },
        "item": {
          "id": "3bf8ed56-0343-42d3-a6a6-bfa7b59bf36d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "febc29ed-56d3-4a95-892f-632ad7bcbd26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdece20-4a3f-489c-89dc-46312d55f899",
        "cursor": {
          "ref": "f0cc2a97-d4a0-403d-aaee-68a2f02f4314",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "337efd48-8aa8-4aa4-bd24-0679d3ddc1a3"
        },
        "item": {
          "id": "8fdece20-4a3f-489c-89dc-46312d55f899",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a03f91d1-49c0-4166-a50a-8688261dc255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341ede23-59fb-4ee2-8bef-89b67f12ce0d",
        "cursor": {
          "ref": "ee4d49ed-6065-4b9e-b83d-066765a8c071",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b9dd7fde-3b8e-4175-b04e-a5d2fd43493c"
        },
        "item": {
          "id": "341ede23-59fb-4ee2-8bef-89b67f12ce0d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "62262902-a581-4ad9-bbde-32d76eb4a651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ac4477-398e-4614-a1c2-52545df59c20",
        "cursor": {
          "ref": "fc525ef1-236d-4b55-8d7b-501ebf76ac40",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "15d1dea9-242a-4b8b-bdf9-4a92c4b9653d"
        },
        "item": {
          "id": "a6ac4477-398e-4614-a1c2-52545df59c20",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4cdd35e2-9dfc-47b9-bec1-7923a6157f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4414ea98-d36d-4846-918d-a153aec381f8",
        "cursor": {
          "ref": "1aea40e6-52aa-4e8d-94ee-e7052cc6d249",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "137d14cf-1169-4493-aa9c-450da914fc08"
        },
        "item": {
          "id": "4414ea98-d36d-4846-918d-a153aec381f8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "54345067-5108-4498-af01-bd27c2f4235d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf760cf-ccdb-439e-8abf-075eedbaf28a",
        "cursor": {
          "ref": "41fb722e-5350-4674-94db-e2ccbe9a0d60",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "caa19537-410f-42e7-8939-682ae5cb04f8"
        },
        "item": {
          "id": "aaf760cf-ccdb-439e-8abf-075eedbaf28a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "5ba322f4-3060-4ec6-8872-89f0bf3706a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07dcf3e1-8f70-43fb-aa04-efb237acd6bf",
        "cursor": {
          "ref": "2e564ba4-d9b2-4987-b90d-1ae196345947",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e22073d1-3e37-4b2d-a3e8-4b74e91c0adc"
        },
        "item": {
          "id": "07dcf3e1-8f70-43fb-aa04-efb237acd6bf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "026275a5-389d-4b30-bc8d-09acd7eae7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893a20a9-9566-44ea-b960-d4fe6bd0df94",
        "cursor": {
          "ref": "d3dd6042-3bf9-41b7-bf33-df16cda582e5",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "07e24645-ef50-43f4-a1d6-5fc081744d35"
        },
        "item": {
          "id": "893a20a9-9566-44ea-b960-d4fe6bd0df94",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0714d86f-1d44-4e8d-8b8a-5ffbf3b7ba24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59201d1-32e9-4531-898a-375dea25c4a5",
        "cursor": {
          "ref": "1af7fe09-7464-4057-960b-c6cdee0bf578",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "263c9df2-d571-4c0b-87db-8642837b78b6"
        },
        "item": {
          "id": "a59201d1-32e9-4531-898a-375dea25c4a5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ae40df20-82f5-4438-936c-6b0eb2bb6ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d90b042-f617-415c-a3f1-16630105292c",
        "cursor": {
          "ref": "6b99d511-f8bf-4c8f-81d6-e7d6193f690b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f4666be5-de69-4493-8aa0-f0c9f4087098"
        },
        "item": {
          "id": "8d90b042-f617-415c-a3f1-16630105292c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bc34a315-3413-4b0b-a7f2-a7f5b5beca2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b18bfe-31f1-416c-9563-e038921b9a77",
        "cursor": {
          "ref": "17ae720d-af69-44f0-9e61-935a0f42d6bc",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "57424c76-210b-4895-90aa-9040c9e3f84f"
        },
        "item": {
          "id": "90b18bfe-31f1-416c-9563-e038921b9a77",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b73105a1-d00c-44b4-ac37-b450bde7a29b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da1dd4a-5a48-4f35-9c1d-0dba9ed00bc8",
        "cursor": {
          "ref": "94ff5914-a122-4c7f-85c2-c1d7cacd3708",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "db2dbeab-40cc-4c19-a100-18cd8699cdb2"
        },
        "item": {
          "id": "9da1dd4a-5a48-4f35-9c1d-0dba9ed00bc8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "60326be6-1e9f-4837-9e5f-1725e102de88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667b5362-6dcc-4582-b9f2-442044cf41b1",
        "cursor": {
          "ref": "cecfb9f8-8610-4302-963a-ec186c4fc43e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d089cc0e-d852-4602-ae50-8df2f8074d4d"
        },
        "item": {
          "id": "667b5362-6dcc-4582-b9f2-442044cf41b1",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f605c98f-aeaa-4cea-b171-e2475a52f4ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41ef3cf-1129-4cbb-bea6-ae688345204b",
        "cursor": {
          "ref": "cd9cc608-0f40-4beb-91dd-d6999e273001",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d345825e-4652-401c-b541-bb0cab9c4d3d"
        },
        "item": {
          "id": "d41ef3cf-1129-4cbb-bea6-ae688345204b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "95f5989c-a07a-49ed-b0d6-c8974560feba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d70635b-5269-4f9a-b4c6-e715ad95e041",
        "cursor": {
          "ref": "b1def4d9-c9f4-43e8-ae70-9706ff9474d3",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b55d9a7d-8637-4a56-86bb-710e65f727e1"
        },
        "item": {
          "id": "7d70635b-5269-4f9a-b4c6-e715ad95e041",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "bb7675c4-ccc0-4078-8408-6896c710bff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf042f3-a933-4043-a62a-453410a4d6e1",
        "cursor": {
          "ref": "5b699154-63fb-4cb1-afac-42fd18d7c87c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0108cf92-43a7-4f54-8e1f-73de4a10a6fd"
        },
        "item": {
          "id": "faf042f3-a933-4043-a62a-453410a4d6e1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "607f1db9-63a7-4894-97e7-049d2c58c953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "603a28ac-b805-4ee7-83f9-67f62f3113c3",
        "cursor": {
          "ref": "d0476092-8da8-45f0-ae91-f826cbc2004c",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "65ff20b3-56d1-41f6-b958-5ad6d34fd272"
        },
        "item": {
          "id": "603a28ac-b805-4ee7-83f9-67f62f3113c3",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d4a87cd1-2362-4787-80bc-1120342959f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43a099d-c410-45e0-a3ea-a6d0019daf0c",
        "cursor": {
          "ref": "048b920e-4d09-48d5-9c0a-32bdf36bf6b2",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b0907b6a-9f8d-4969-90b0-1e866a18a7a5"
        },
        "item": {
          "id": "b43a099d-c410-45e0-a3ea-a6d0019daf0c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "28eeaa4c-854b-46fa-9a76-17ab6637de49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d59498-a6ec-4c7c-8d7f-c14887e98b2a",
        "cursor": {
          "ref": "ab635d6f-45e1-490b-b22d-8df1678cf9ea",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e44ef206-4ed5-41ed-9d5e-2cf294e420a9"
        },
        "item": {
          "id": "61d59498-a6ec-4c7c-8d7f-c14887e98b2a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2d8a8d94-2490-4ba1-af8d-414a3f77780b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd212af0-9b21-4e8f-b83b-bc66acfb99fc",
        "cursor": {
          "ref": "5a83f405-c0b1-4e79-b945-e7239b561824",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "31799050-c7ca-490d-a489-30952f5e0b8e"
        },
        "item": {
          "id": "fd212af0-9b21-4e8f-b83b-bc66acfb99fc",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "18bc78b0-85c7-4960-9649-60f9602ba1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02570393-23d9-4bfa-8d3a-349e468b24d4",
        "cursor": {
          "ref": "b12278c4-220b-40b9-a9a9-5f5e3e6dc3ae",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "361b3244-41a3-42aa-a0c0-c24ca6ea6459"
        },
        "item": {
          "id": "02570393-23d9-4bfa-8d3a-349e468b24d4",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "c18987ae-f4ee-4a98-8056-55841eda663c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f34d58-5064-439f-b244-c94320cab18f",
        "cursor": {
          "ref": "495a61e4-e6fa-43fb-a52c-89989089a4a5",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5d25848c-6209-4ad9-9cf9-9a0777582396"
        },
        "item": {
          "id": "32f34d58-5064-439f-b244-c94320cab18f",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3813f0a3-fbe4-4118-8179-bec88966844c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ae316f-d81f-4af5-abf1-802d0d9a8ecb",
        "cursor": {
          "ref": "ff01420b-6654-4948-a943-258036c87cda",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "647b3a8b-b0c6-4830-a410-e33880d818bc"
        },
        "item": {
          "id": "50ae316f-d81f-4af5-abf1-802d0d9a8ecb",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "646f175e-76e8-4fa7-b0d8-10f43cb0874f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bedf8ac-360a-4233-92ea-2a266e5468f5",
        "cursor": {
          "ref": "a83b5d3e-9830-49fe-9d6a-b25693440b56",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "794e1af0-5593-4429-b9cb-5766188d17e6"
        },
        "item": {
          "id": "2bedf8ac-360a-4233-92ea-2a266e5468f5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "63ff7622-79fe-499c-b9de-e2b35d278efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00462a9-f6f5-4562-9092-303a784561da",
        "cursor": {
          "ref": "14ff6b12-a5fa-4616-b228-827c41a47277",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ed9427a3-1a60-49b1-b9bc-0e12f4837cf8"
        },
        "item": {
          "id": "d00462a9-f6f5-4562-9092-303a784561da",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5252201a-3bb7-4017-9dfa-d70c188d3861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab9a81df-4c44-4b84-b5d4-615cea4c804a",
        "cursor": {
          "ref": "1fe58274-7de4-46a0-a177-31344b306934",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b0748bc8-ecaa-4864-914e-f99c00b2a67c"
        },
        "item": {
          "id": "ab9a81df-4c44-4b84-b5d4-615cea4c804a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "2ddd1a58-7553-4dc8-b020-54399cf479f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb4aa62-8b52-46e4-b131-9049c12cdcbf",
        "cursor": {
          "ref": "439d86b9-26ea-436a-865f-d2137202095f",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c4eb1a26-f715-49ad-9fe4-17d01d0316af"
        },
        "item": {
          "id": "4eb4aa62-8b52-46e4-b131-9049c12cdcbf",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "907c11a6-dd74-4571-ba6a-4d3270edeb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0b4bcd-4b9f-4c71-9182-216c9bb23ded",
        "cursor": {
          "ref": "5f1e20ab-6301-4aca-8186-4938ea9dc938",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5a2b5324-e3ef-41f1-9a18-d608acc4fc05"
        },
        "item": {
          "id": "3f0b4bcd-4b9f-4c71-9182-216c9bb23ded",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8ad75f94-2ca8-46b5-9ca2-07e680552907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b530b547-967e-4280-859d-2542311c5778",
        "cursor": {
          "ref": "4e15ce91-53c0-4f63-a608-983bffea5799",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "906bb48b-1f9b-4cf8-a91d-dea94f573625"
        },
        "item": {
          "id": "b530b547-967e-4280-859d-2542311c5778",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b73e0647-894e-456b-9e65-447591764c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be33c283-a894-4a15-974f-411295fa60ec",
        "cursor": {
          "ref": "955199aa-5870-46ba-bd8e-4ebf94952c9e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d9dfee7b-6c52-4681-bbf0-99ba76ef0094"
        },
        "item": {
          "id": "be33c283-a894-4a15-974f-411295fa60ec",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "6a6b92e5-3c7d-4e03-9f9e-ff06153854ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c75ea3-a7bf-4746-a6ea-ecc87583d7a2",
        "cursor": {
          "ref": "a7ac2dcd-ff5e-4a55-8a4d-6671553aea0d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f9388bc3-5b4a-4938-bbc3-7104e7377ac3"
        },
        "item": {
          "id": "14c75ea3-a7bf-4746-a6ea-ecc87583d7a2",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "254685fe-344e-4409-abfd-9657257d41c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d83941f-19f6-4313-a445-696a7fba613b",
        "cursor": {
          "ref": "e89d52d4-bdf0-43ae-8ac9-a02151b6bb39",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2f17d638-d420-477e-94fe-6b12393dacaf"
        },
        "item": {
          "id": "7d83941f-19f6-4313-a445-696a7fba613b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b874e3cb-06c7-4a2d-9778-1ea53e11cacb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa4fb5ad-8942-4990-a730-ccb08dececd4",
        "cursor": {
          "ref": "fd0e4534-4eff-4389-82ac-91d8a1f9e27e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d63e1c09-e24c-4bb7-986b-d3e4b064e42b"
        },
        "item": {
          "id": "fa4fb5ad-8942-4990-a730-ccb08dececd4",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fa149fd0-d189-44a2-b6df-3a6e474f15da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10055a83-5765-4b29-901a-fb2961bfa82d",
        "cursor": {
          "ref": "c5ec6ea0-38bf-4056-b587-99cd687d5be8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d7c6b1cc-f3db-45f1-826c-4996d51a7aad"
        },
        "item": {
          "id": "10055a83-5765-4b29-901a-fb2961bfa82d",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "74ef1568-a61f-4fa4-a59f-f540e75ddebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac77820-a1cf-4874-b7d9-2245c9c696b2",
        "cursor": {
          "ref": "5eac7210-a873-42bc-8e00-29c8612979f8",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "e38aa432-cd13-42dd-acac-c761450ef85f"
        },
        "item": {
          "id": "aac77820-a1cf-4874-b7d9-2245c9c696b2",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f7efa9a3-f173-406d-bda5-f49d06bd404a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda80761-c295-45bd-beb9-18de0034c8aa",
        "cursor": {
          "ref": "7a9b12dd-1f34-45ec-a1f2-28834ba90ca4",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "85e6fdf0-4a88-4399-b5ee-9bd4eda67c62"
        },
        "item": {
          "id": "eda80761-c295-45bd-beb9-18de0034c8aa",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c900edaa-83e1-49bd-ad6d-3ed89ba12ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 213,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bf8430-0d98-4306-acad-9639d0bcfc30",
        "cursor": {
          "ref": "0cf2bae1-4f57-4b82-afee-3f8ad0f2a302",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ca142b55-3445-47c0-850e-feb3f916dff0"
        },
        "item": {
          "id": "71bf8430-0d98-4306-acad-9639d0bcfc30",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0eb0135c-77aa-409c-a870-53229c42076f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c930a577-8564-4ca0-86a8-f8a90468583e",
        "cursor": {
          "ref": "19127816-8408-4ef4-9913-3479e9a79851",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "753f19ba-e007-470b-bce5-b316fb3d027a"
        },
        "item": {
          "id": "c930a577-8564-4ca0-86a8-f8a90468583e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fbada721-e201-4d67-b85c-74d259bb2135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4b0f9c-4b7b-4179-b69f-e0a67dab9a11",
        "cursor": {
          "ref": "a7c05193-66a4-4374-b544-a99ba670bdb4",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "30e29730-f660-4384-a1c9-a4bc06e14b6e"
        },
        "item": {
          "id": "5e4b0f9c-4b7b-4179-b69f-e0a67dab9a11",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "83d514c6-5d68-4050-922a-ad87bff1db40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e415d4-3689-464d-a84f-23db62953af5",
        "cursor": {
          "ref": "3a52ec3f-5b6a-486f-84ba-e0be816f7238",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "7f56e22d-ff7e-4c72-bcc1-67944c66e0ce"
        },
        "item": {
          "id": "99e415d4-3689-464d-a84f-23db62953af5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "26f7e71a-8337-4cfb-903f-37d9c81a929f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afd278b-6e23-4635-aa26-49f045332aec",
        "cursor": {
          "ref": "42ca8c65-ed26-49ea-8cbe-594bb8a62c9a",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "3fd2547c-e591-45c2-8403-8073dedc5f5f"
        },
        "item": {
          "id": "9afd278b-6e23-4635-aa26-49f045332aec",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d06818ca-efc6-412c-9ee2-0dcedaae513d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41673fe5-5261-4758-a98f-fb36fa8acd5f",
        "cursor": {
          "ref": "dab9521c-2c20-4043-83be-e8762e349d73",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a824363f-8f46-448e-9d22-c89c02c7f063"
        },
        "item": {
          "id": "41673fe5-5261-4758-a98f-fb36fa8acd5f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "46b8d875-58ec-4c51-9766-d478799f9b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9273cc-b78f-4ec1-b4a9-e5cf92605a2a",
        "cursor": {
          "ref": "2d08515b-962c-4cd0-8bca-9faa6b611d2c",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a5a0b1e1-3413-4987-9a57-ec49e78c6f36"
        },
        "item": {
          "id": "5d9273cc-b78f-4ec1-b4a9-e5cf92605a2a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "c18e9644-1f4e-498a-a0bb-1712c1bc8388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91441033-70d5-4a13-a0cc-e50ddec439c9",
        "cursor": {
          "ref": "44bc9e26-62e7-4b93-9f12-5d12ccc63bd9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9e1263ee-5e88-4e2a-bd99-0dc37f584851"
        },
        "item": {
          "id": "91441033-70d5-4a13-a0cc-e50ddec439c9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "067fa37d-268a-4691-9b68-766c70c5d66d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403827bb-547c-4e4c-907f-0af595900c06",
        "cursor": {
          "ref": "8c64ed30-20a8-43fa-bbc9-511d475facc1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "17c55110-45b0-4987-8650-7d26c8d460c3"
        },
        "item": {
          "id": "403827bb-547c-4e4c-907f-0af595900c06",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3bbc9417-3b3b-4016-8671-d9e16274717c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a7f70aa-6d03-4777-b455-e828936c8081",
        "cursor": {
          "ref": "3174d7a0-ff53-44a8-8863-36ac86602dd9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "a64f934f-12c3-4c42-8f93-fd3c10a0bc00"
        },
        "item": {
          "id": "0a7f70aa-6d03-4777-b455-e828936c8081",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0e690bd9-3d33-40ea-a87f-8a090148e2c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5e3885-a229-4904-8b18-e55c21c6c107",
        "cursor": {
          "ref": "f8097a18-681d-435f-952b-2104718a13de",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "b53bab51-73d9-42fd-8b8d-ff0f560f8ad0"
        },
        "item": {
          "id": "ac5e3885-a229-4904-8b18-e55c21c6c107",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "51cc3054-6ff0-444f-99f9-f0b95a85dd7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e01162-669f-45a3-bb93-7392eb18cb0c",
        "cursor": {
          "ref": "650c2c1f-c367-4619-8533-9e72150ff421",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "918bcc9b-4053-4d50-b062-3f78c131dde2"
        },
        "item": {
          "id": "a7e01162-669f-45a3-bb93-7392eb18cb0c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5bf6d258-d25a-47ab-995f-24a564c0aa7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0dbc70-e214-4e5e-9b6c-13af29555c82",
        "cursor": {
          "ref": "d3cbcc48-1a45-4b3b-b832-15634e264486",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "e9bc6716-893a-45c9-bfda-2a8fd07c16f3"
        },
        "item": {
          "id": "ba0dbc70-e214-4e5e-9b6c-13af29555c82",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b70c1c88-bd61-4332-8ad7-dfda067a9457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1e4e21d-c3a2-4bc2-9e7c-9199462ce284",
        "cursor": {
          "ref": "b56985fa-ffb9-43c1-8fea-2faa9f6c5238",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "366724ba-62b1-4977-b4da-3368f21ddf86"
        },
        "item": {
          "id": "f1e4e21d-c3a2-4bc2-9e7c-9199462ce284",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c7e7b86a-02d0-4d70-8436-e570ec4b438e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b39b4f0-e75b-4776-b3e2-19a12b13335c",
        "cursor": {
          "ref": "6834618c-e809-4ad4-8885-c85d7aec85e6",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1907c104-4f60-4422-9970-131eb5df3295"
        },
        "item": {
          "id": "0b39b4f0-e75b-4776-b3e2-19a12b13335c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cade17bb-e597-4910-b572-d347d50ca347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316407d5-7d9f-4311-b7b3-a65d67359632",
        "cursor": {
          "ref": "dd14f5ad-89db-4074-b66c-cff69c0fd255",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d0ed9571-32e0-412e-bd85-eea4d6339c2a"
        },
        "item": {
          "id": "316407d5-7d9f-4311-b7b3-a65d67359632",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "013fd66f-14a8-4d50-9064-7359d5fc135e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb5e5fc-dc4d-4620-8c71-ffb404174853",
        "cursor": {
          "ref": "6dbf9c30-fb9e-493a-b0e9-cfb667fe5053",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ada046ad-baf5-4fc2-9911-c4b322392ec6"
        },
        "item": {
          "id": "bbb5e5fc-dc4d-4620-8c71-ffb404174853",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "efa95668-0fc1-4695-b0b7-8ae03664bae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565eeb7b-7057-4302-bb53-4bccd0e813ec",
        "cursor": {
          "ref": "8731a8ad-0e91-42e9-af01-da2be4eacc97",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "963e9d45-8e75-4427-ae60-039319257754"
        },
        "item": {
          "id": "565eeb7b-7057-4302-bb53-4bccd0e813ec",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3eb5a9d4-bd95-42b9-96eb-7354b64e4c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c683f7-c29d-4f54-a63f-eda13ae165b6",
        "cursor": {
          "ref": "c38b83fb-42eb-4372-977d-6032074899c6",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "9f427eda-8556-400f-a046-4e04d8196ecb"
        },
        "item": {
          "id": "43c683f7-c29d-4f54-a63f-eda13ae165b6",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bc8fb622-d49a-41ce-8d9a-70bbbc6efe31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d70d1e-4d48-4909-a1a2-7a3d75990bc1",
        "cursor": {
          "ref": "977543c0-30bd-43af-86d5-ec6da86118c5",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "aef4b72d-4cfb-4a21-ba34-976cdefe3164"
        },
        "item": {
          "id": "28d70d1e-4d48-4909-a1a2-7a3d75990bc1",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d872a2e5-597e-41aa-a4dd-69e16232d847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da3d0ad-692c-4a7c-ba58-c6ea0787782a",
        "cursor": {
          "ref": "80109516-0755-4535-aba3-5e950f1967da",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ef9c6b55-1736-4d46-88d6-a0fea9dfae6a"
        },
        "item": {
          "id": "1da3d0ad-692c-4a7c-ba58-c6ea0787782a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ea706591-e6b7-4426-80fe-51877530ab4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd89d727-7a8e-4555-9d03-d82bd9585895",
        "cursor": {
          "ref": "9a0a35fa-8961-4902-b8d6-8d2c05248910",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ea746be4-d349-4c98-be8a-5a19c20df7f5"
        },
        "item": {
          "id": "fd89d727-7a8e-4555-9d03-d82bd9585895",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "88b8c4eb-a534-45a7-a3fa-5a8467b152a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400b50b4-81c7-47ac-a923-afd67d2784b6",
        "cursor": {
          "ref": "dc8bc433-17dd-458a-90db-3678af41b6b9",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "79ef6d3f-0b27-4434-bde1-3ff294676b75"
        },
        "item": {
          "id": "400b50b4-81c7-47ac-a923-afd67d2784b6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "26d54e3b-ea7a-49a7-b38e-5702f151b565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686827e5-7ea1-43f7-a0d8-8973f88d41b4",
        "cursor": {
          "ref": "b22a391e-6a14-46e4-a670-e7a2c0ffc4d2",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a682910f-845f-4b72-baa1-f6924bc22638"
        },
        "item": {
          "id": "686827e5-7ea1-43f7-a0d8-8973f88d41b4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "3c1774a8-4be8-4b7c-946e-33a9056e33eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c945d29c-b926-4e8e-af2b-e748fe6fa5c1",
        "cursor": {
          "ref": "04b36ee4-3772-45a4-8f8c-95be3c50f958",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "47d254ac-ebdb-4449-a325-52223c3e1a1d"
        },
        "item": {
          "id": "c945d29c-b926-4e8e-af2b-e748fe6fa5c1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3b4dd1cf-5270-4838-9d93-802fc08d8275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d0c101-499a-4350-8e7d-82b72b50980b",
        "cursor": {
          "ref": "bedbbf2b-d55a-4751-bea3-7497b08b3a65",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "17b51475-df69-4e5f-b7cc-ff325c0329ac"
        },
        "item": {
          "id": "16d0c101-499a-4350-8e7d-82b72b50980b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "9b12b5c5-ce41-4a81-84e3-841d05f42dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0290a86c-e1b5-45f2-91b9-9b1eb7d2e05f",
        "cursor": {
          "ref": "87569b4b-3151-4a54-9913-5c9e218380bd",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "754a354d-179f-4000-93ab-69d116aaddf8"
        },
        "item": {
          "id": "0290a86c-e1b5-45f2-91b9-9b1eb7d2e05f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f1a0bd2e-140a-48a4-a83c-e7abd9e683b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ffe4dd-83c2-45d8-ad59-3b6ae82e9792",
        "cursor": {
          "ref": "91dd736c-31ab-4950-8b0c-cdc742b0dfb8",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1eff5431-8c11-4596-9604-a0d11a0e33cb"
        },
        "item": {
          "id": "d0ffe4dd-83c2-45d8-ad59-3b6ae82e9792",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c76ee50c-74b3-4c5f-9c5a-86ace786830c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6a1e9cf-264b-4139-99f2-5e6acfd53d26",
        "cursor": {
          "ref": "e401f034-3df4-45ef-ba2b-5fa57022851f",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "24c6fc36-07b8-49f0-aa5d-e6002d6c0345"
        },
        "item": {
          "id": "b6a1e9cf-264b-4139-99f2-5e6acfd53d26",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "5d4f92d0-3fb3-4a03-8eed-e21eed2d0978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340ece9f-dd4b-4608-b255-493e75bad96a",
        "cursor": {
          "ref": "7ae48407-38af-4c18-ab10-710179359773",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "8d006916-74f3-4872-9266-67ec0e0b3071"
        },
        "item": {
          "id": "340ece9f-dd4b-4608-b255-493e75bad96a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "409619a2-6958-40ad-995b-79854d78592a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b87402a-33a8-460f-8b90-aea60dfd0e44",
        "cursor": {
          "ref": "ae3d2bc7-63c6-48f8-ae80-188590c47aaf",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8f1183ad-fb12-43b4-8383-cb1409b98d53"
        },
        "item": {
          "id": "5b87402a-33a8-460f-8b90-aea60dfd0e44",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d55a4686-8ba0-4db0-8ad6-94bda2f16859",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb9f911-c20f-4798-be54-8c2cf059af71",
        "cursor": {
          "ref": "c880bac2-0889-4564-9813-4bc883bb8c27",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "4848f3e4-ee30-4413-b7ce-85a2c59896bc"
        },
        "item": {
          "id": "4cb9f911-c20f-4798-be54-8c2cf059af71",
          "name": "credentials_verify"
        },
        "response": {
          "id": "93704cf8-9beb-4335-8bea-bb3047e12fb5",
          "status": "OK",
          "code": 200,
          "responseTime": 3188,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84249eb-bade-437d-bc5b-614ac219ae0b",
        "cursor": {
          "ref": "3635b308-2348-4925-b937-404f16ba187a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6373bc81-51c4-4327-a8c1-2c27dea82433"
        },
        "item": {
          "id": "e84249eb-bade-437d-bc5b-614ac219ae0b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "92b03387-eaee-48d9-923c-22c8e32b29a0",
          "status": "OK",
          "code": 200,
          "responseTime": 2884,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "20759432-3891-4a29-bcc2-f52d564c9d5e",
        "cursor": {
          "ref": "69f8cb1c-c78c-4332-9968-e5417ec8ac85",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b231791f-0d66-4bc2-8ecb-54aebc87e02f"
        },
        "item": {
          "id": "20759432-3891-4a29-bcc2-f52d564c9d5e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2783bbf4-93cb-40f4-a369-40c89fb4d7ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20759432-3891-4a29-bcc2-f52d564c9d5e",
        "cursor": {
          "ref": "69f8cb1c-c78c-4332-9968-e5417ec8ac85",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "b231791f-0d66-4bc2-8ecb-54aebc87e02f"
        },
        "item": {
          "id": "20759432-3891-4a29-bcc2-f52d564c9d5e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2783bbf4-93cb-40f4-a369-40c89fb4d7ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0816668-cf32-4d99-9fd2-7f68a4cfab02",
        "cursor": {
          "ref": "5a330766-7a29-4f18-af33-4d5a3ab8684d",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "cbdfbc97-86ed-4100-b806-7aedb2051df8"
        },
        "item": {
          "id": "c0816668-cf32-4d99-9fd2-7f68a4cfab02",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "87da71cd-39fd-471f-af78-ce9a9df994ec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1f6333-defc-4937-afb9-504d9b81af6c",
        "cursor": {
          "ref": "cbdc686c-245e-4d0d-8854-61f264cdea77",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ff7f1107-e9eb-4381-85a5-95281e1a4ecd"
        },
        "item": {
          "id": "dc1f6333-defc-4937-afb9-504d9b81af6c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "9471fb13-7292-448a-b981-b78c124a0f4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}