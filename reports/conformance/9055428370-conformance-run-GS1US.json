{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "bab67475-4591-424f-96e2-d6da19e503f2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "65df842f-e94f-434f-9989-22204afbcc94",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b10c8a01-d6d4-4a48-93eb-9ef1d7aea301",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "47561559-7379-49ad-89f5-3e1ee5ebf212"
                }
              }
            ]
          },
          {
            "id": "7a559333-7a1c-4cd7-a814-1e9e15509dd9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d93d73c5-e83e-46b9-b4d8-0163d494df4c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "af1e187c-3f51-487b-b8f7-cb65deace7dd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "bd9b65d5-6e3a-440c-900c-9ebc9846c9c9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a1e880e9-43a8-4415-8eac-26ece2ec16c7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "aa277fa2-3d9f-4e53-96c8-312059659cf7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c75080c-85f7-412c-9e05-f3978199beec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7edc3466-7ecb-43e9-9cbd-54b29a0f7d06"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a15f10be-0b0a-49cc-9751-f2758f235e88",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d9695426-e24a-4e6e-bcdd-f81f1d38f1aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ef16bb16-19fb-461a-b04b-c333360de22a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "72e12243-5e07-4458-84b8-51a121725602"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8e172a91-bfa5-4f2f-a067-996044cf0601",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e59f9141-5312-4c54-97b6-7129bc8ac8bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb480e2a-f024-4d66-b889-7e8f857c17f8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "249daea2-7db1-4d11-af17-ea73ce0d182c"
            }
          }
        ]
      },
      {
        "id": "a9c1c547-3aee-4930-9967-b02e1020cf2f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "188dacff-4146-4e89-964f-28c3d85de002",
            "name": "Negative Testing",
            "item": [
              {
                "id": "902b54ec-5c37-4dc7-9d75-d12bcc5d35cc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1fb78565-f783-49c4-a15e-392d3ba8d6c9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d116641-05bc-4418-a588-2efffae2ae25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fdb54e14-f349-4d47-ad2d-88872bddc0ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca66412-f0f4-4746-9796-723e4c6d7c64",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f59fe0-3129-4777-bea1-8ca5c9c78fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "600af1f3-e72c-4602-a588-3f67d0ecdcf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05db97d-da61-4f30-9aaf-59496c48d481",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea986ca-deb8-43dd-b46c-4f11a5b4f9ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "383f1033-d533-4248-af23-82a4a381eb0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "37d5c68c-ef93-43b5-ba8a-5707c697477f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9f31193d-3e6e-4d9f-ad47-65fdf4947170",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf53124-4046-4df9-802c-0e721e8f8473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bc60db0-a788-4495-b197-48e171da2f5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a333b87-adf3-4cab-ab12-ddf5ca06f05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9955a4f0-2cc1-470c-8ad8-466c4d16a2b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eb35339f-4bef-4027-b438-a2c6985885a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "40d0b675-35a3-4b60-aa35-cf9689e1fc9a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "031d8f1a-0446-453c-9503-7b8732714da9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e6795d42-9e9e-4328-9de4-ecba48325aa5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec54bc4d-f04b-46e7-bc4f-bb82a05f809f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "16606deb-be60-47dd-bec3-593192e10631"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e79d3c1-2e6e-46c8-b8ad-2f09f0e21baa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81ce5655-35dd-4d79-b87d-c5b7faf838d1"
            }
          }
        ]
      },
      {
        "id": "b682a7f6-cda0-48dc-a825-6805f93f3d64",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "064f569f-1661-4342-83cc-8a2259604e79",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2ad562dc-8a7c-4117-933b-e09800a51fc4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "84d07247-6f38-4919-a341-509906ace1ca",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34b5731-569a-4bd9-86f2-a05397d40bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d289194-8756-4d4e-999f-f0964e76a108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1249cac7-7143-4f1d-995d-bf95f47611de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92cada7f-da67-4f79-b1e6-f06fd92b3a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37191418-4e25-4e27-80a7-d433df36c3e3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacf4610-2370-48c7-9b73-43642522e9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a7d603-02ad-4972-9141-57d919240741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340e17a1-3388-49c1-8e3a-1be5d661f9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8442c175-28d7-4dad-bd37-25aad58b2f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07812d60-100c-4a96-9082-e670a69af27b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2c8129-26d4-4658-b12f-12a24513c86a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa3df5b-5453-49ed-bb50-03e1880f2e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd262828-3b37-473d-b585-272f5577b354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35fb7215-4437-4d54-8271-34be530f295b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f09364f-780d-46fa-bbe6-df9c5063b8d1",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e6874a-413d-46c2-b3ff-e77b286db20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b049b8e7-92d8-4987-96b4-9f8813987620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90579154-2dd2-4e96-9fee-cdf9626e4124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c293df8-3f32-4245-8ed4-6454f83dc2bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2421f7e0-db4f-4d7f-b09d-99a43ecc4959",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c999030-a732-407f-ba55-047e7f99ab31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcec0e2-b76b-4fdf-84ea-210004ea59c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e643e5d3-fb0a-4aea-8a16-11051c70f324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8547b046-7b0f-41ff-b364-d2fd4b9def20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5539e506-a830-4825-a917-773d1e585af9",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ef4c17-0b60-4017-b236-e9f7481af449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c56c47-8c61-4bb0-a867-d6497fbf9b1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b318bb97-1fcf-42b4-b843-695aa307a070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02b8590d-ef61-4b51-b77e-1fa230f237c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf5b3c5-bfc5-4ab6-b394-8f5157e8ac1c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdf4550-fb57-44bd-9ab5-a031eb0d2e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2872431d-44e0-4293-aa75-b50b8218c259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8899679-3cc5-402e-aeaa-cd581d06e40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "95d86fcf-2a14-4229-a2a1-3fe1534d29db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "634c1002-5b4e-40a9-bb15-b18ffe30a572",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5d2131-2096-4815-a6ea-ef1a7b191bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d769538-0274-4715-873b-d0cb711691f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7534d43b-9a42-4915-baee-165455143005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be0bae2d-cceb-4167-af55-10fd44dabcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f1f485-7f24-4e51-be79-e034d0c31f47",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b77f14-52be-4c7b-917c-c0f352492052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31cd5a2-3dcd-4fce-9528-9ac604a8b1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176247de-9f81-49fe-85a3-d1090f18c9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6deaaf34-d585-418b-a86b-d6b746a87757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f7f913-52ea-4967-a667-a95ff782f618",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380b1058-ff62-4200-8506-ef23ffc77d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62bd09f2-8d69-4380-970e-dfca298c551f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "138193b5-8829-44e0-a598-5996b2e18387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31187134-90c0-4c23-9bcc-18fc65045e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a402832f-3a82-4ec4-82be-07ff1899fadd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0548cca-e46f-4d77-8af7-833501c5caef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc0c4cf-c730-4e4e-b7a8-5ad49fbc0776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead59a1b-8847-4773-8040-7f3d76ee1285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "252c4482-96b2-4d53-a903-e745b72fae0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d4fa6cf-015b-46aa-9411-e2d4c3011993",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc4aecb-68bf-4eac-9f2c-55254114462d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c25e525-4d95-4d53-83c7-ffdc5d5de0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a588a9b2-3404-4377-9fec-3b306a339839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1410068-8f54-4afd-a3c3-622b3a24c8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0808dafa-9f2f-47c8-a955-9220858f0e23",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73a982c7-df04-45e3-95bb-33f60701461b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9bd1d0-45ac-44f4-9113-6e624f1402b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "401a862e-fed1-427d-83b9-8f9bbccb2141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24035683-0869-47c1-9624-04663d9e823a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e6e9d60-6e04-46b8-9696-bc2b21be4115",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4b1f91-05d2-4dab-afd1-837d1727f086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa37694-5b29-49e2-a443-2761c824a2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d01ca92-a144-42be-b620-703941c66449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ef0bc6b-efae-4efb-93a6-e6fea8ce9565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88964345-85db-4451-b27c-be7af89af766",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd6a491-f3d2-4a0c-9327-b9d891ae3355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f60335-c556-414c-ad78-d9137646854a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942333a9-79b9-403c-8242-6ac164a0aa8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b707473b-3a80-4843-a46b-95f133d9bb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7a06cc-4bce-4b22-9994-6f9917039343",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd38212-33d1-4b8b-9886-5af68432d0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52474f2e-d41f-4c5f-b880-fea29397e462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17231a9d-cb2b-4236-91a1-d6a0fa3f177b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b1fcd41-6f6c-4f2d-a0fe-e908ebf594a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5663faf4-67c2-478d-ae4f-8ccb92cd3b67",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b97084-2e46-4f2e-a3e8-59732e3bcd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a3c6ca-97fd-4b4e-aaad-2531b5871e76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a72f4d-b59a-4394-bce3-70b2e82c430b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94567ece-0856-46df-b8db-90134149e65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef5437ed-6e8a-430a-8ced-d5e97760525b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55374e6-799c-4b64-b217-5e4f9d572150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72dd597-cbb8-44d6-9f08-3d5720100101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f47316d-617b-4b4c-b1c7-4ef20fecfe0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7187578a-fc4e-49bf-8065-6e8cd705d3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffb9e08-898c-4597-b235-0dbd62a9dabf",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d1fbaf0-53ef-4782-9bee-c1b4e02a2244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc2e2b60-2bb5-4851-9271-70e61d3cf751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edbbaa4-9460-4b4f-b243-a6fbbdfde870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "432eb09e-5ee1-4c0d-9466-5c5fe4a5bf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fb8273-9a1e-4449-8d90-e5d5e1368f43",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95baf163-4ea7-49c5-9069-6921d5436931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66d38d1-f9a4-4f3f-87bc-8c9dce8da790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b49f4f8-4363-4589-a046-2eba05f47919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cbf36d4d-d212-4c94-aee3-3d34903af795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3167de-4d55-4f3f-8867-0158fced013c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f762029c-eaa3-415b-9901-50066089b9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd7d202-b99f-430a-a340-32b56cb5a2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595b35e0-f6b0-4a3f-8043-8af5292e7274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b12acae-af7a-42fd-95e3-d78fb95d7be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b2af8f-88c0-44d2-9e7d-f4800c8c290a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dac867-09fe-49b3-8b1a-aa130637c0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b63d8b6-0bd6-4f1c-94a4-7400898cab0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "853ffc93-cfe7-4da3-b8fa-bb8884181125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "af8a6e5a-fc9d-4bbd-bcf4-d37e4bb82d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98640260-3b70-458e-9e25-025b7ce51e72",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf2b325-a86a-4d58-8030-b05c6395de01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc32147-72ea-4f9b-8954-210bbfb574f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab07b66a-65fd-48fe-a341-d14c07587d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2821dcd1-c13d-4ac7-835b-e78c9cd3b783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b300c6fe-134c-4b13-bc7d-5ced65fa24dc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3d53ab-3b87-49cf-b11e-b8cb67912c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49065f3-6bf6-433c-a484-c4ec9df36c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a0cca3-9115-4519-8c28-42cdb603c917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6f81ef-bd3f-4a5b-b5f2-f38bd162e8bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c01376b5-d47a-4fb0-a673-e176e946d17f",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b67535-a107-4369-b8cf-face2af5baaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e22425-0ee0-462a-9a2c-2e0ae6e4ca10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c8c08e-f051-4213-8e01-8df88bd222ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9351f8f6-e2f4-4cce-8e9d-a90098d1bf05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9636bbd-8852-46b3-93eb-5904dd280981",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e10aa0-d2ef-4ab6-8be6-91d41e60ef37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0682edb0-2b10-499a-912f-e56f8378fac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef64179b-0599-4fb6-abb1-e3ebf0f2f5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e587573-d4a8-4b1a-809f-25f301a411e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f6b0d04-636e-4e9d-9502-9b763c755979",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045b2ec1-db73-4fc1-946d-ce09b1b55a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a984023-eb87-492b-8c15-2a2ebd844dc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c18a754-cffc-4464-b62d-7d8c7ba77bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a55cc1b-2a7c-4687-a655-b22f82ba7534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae892244-9a9e-488e-be7f-cbefff66abde",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9274982d-29c6-441c-95ab-f9af9a82d7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541a99fd-c408-4b3b-848a-e996f3814b5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97994d4-ad09-4acb-927c-0e0ef4b4cd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eba92ea-fcbc-47bd-aee5-349a95b8199f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9e88e87-df3e-4e1e-87c8-d07f978211f7",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea0e157-79f8-4141-bba2-ee032b34e1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607adf55-de45-4355-a393-ce148210f7d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7c5cd9-9671-4f63-8e17-42a7512d03ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92c87d70-3647-4a69-81f4-773c3d85c42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ed5ca6-96fc-4385-8851-e473b079640d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53cab5d-7af7-4c12-a50a-5e8dfd88bb5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b68bfc48-646e-456a-b8e6-f59f528c6230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2924311f-d6a3-4a91-af96-05a799b90f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "be9e51ba-5600-4f80-9eb9-daf77bf284ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae1fff6-8312-4504-988c-0718a6c5c70b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8a19d5-7427-43a6-ae8c-6a66a3bb3894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f31b39d-4ac5-4c7b-9eb1-d8a2b690adc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79447bd8-9bf4-4276-b768-0fab20ce3fdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71eeae6e-c784-4a6e-b780-49a245da5be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abd9f26-e1e9-493a-b40f-c28e53b98ea2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70521e9-5df4-462f-b985-81fb9d866e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ec0f19a-7ca5-4a63-99a7-50624443fd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162c67e2-49be-4b96-aaef-48d4b6c86c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12739d7d-7c06-4839-89f4-1cedbf9a193f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9640cd51-4bf3-439f-bcca-64737a36ea1e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa042a1-bfb7-4b01-bf03-1af1bb89574e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e100f26-0089-4bf4-a652-a0c06f27ff99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf5482db-bb82-47b4-911f-52fd8afc7e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "163afacb-9dc5-4790-a357-248d3b547f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f46e82-5de4-4338-a582-5b11a68f770d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f09fa6-4b4e-45b2-910f-ae97938101d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305694ee-b18f-467f-98b4-97e403bde3f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb033d87-ca3e-4fe4-bf7d-5075f14d632c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12eee6f-5416-45c4-93a5-e1fd91e82db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b41ed01d-0feb-4481-ab4b-72abfa4fc84d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5464f31-cf7a-45a8-9657-4259bf07bb27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7890102d-a8a1-4509-8fbf-ea8e832f79d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e042fa0e-a1d7-4734-a0be-dd409c766ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4732e72f-ca0e-4454-ac8d-20f6ad650ed7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565fc5b3-e568-48a6-8167-148a678086f0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d530afe-a978-490c-b040-29273ab889ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "665ebbdc-f641-4c5f-a0ed-04735d9d26f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fee578-7bbc-4113-bf0f-5598880965f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "095deacd-ed5e-4a28-b596-5238cf0b9104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fe0c15-a9ce-4183-91cb-5ce24d825c4a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67bdefb-692d-452d-8128-f24fee347d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9fe869-4de0-4c75-a753-33f81bc0a6c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340707f1-ac49-4a3e-9dc3-7798f0161559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0feff8bb-7b2c-4bbd-b137-2a06912dbb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f14e7a-cb7b-4c76-9eb1-71d38ede19e5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a07cc8-2389-486b-9e46-44fc9850a65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b7da5f-cfe0-407b-a1e9-3ab9e605e3ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce23dc0e-9fd0-45d8-bd24-3054096290fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "782b71fb-52a6-47e7-87cb-3aca6f92aaba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68eba34f-a70b-4125-a35b-8528000c7345",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c76af7-d3fb-46d1-a984-4be343b5a93e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf11c8a4-f472-404f-bec2-3616cd163f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03413e24-68e3-4ad5-9c5a-e9a70c25afbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "71e14ce1-aadf-40fa-b765-0a1a6199efd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55c5b09-d356-4121-a48b-4644e458e43f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc164093-960c-4497-9e16-0783ca9c22b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7e4bca-e870-4c61-9aa5-b10b2d0e4f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3de5f8f-8622-413c-8e41-d825ceadcb3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36dd3945-ff9b-4fd2-8257-8e1fdaec1bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7c20e2-e865-402c-ab3a-d7422c4591eb",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f636a7e-fea9-4c27-bab0-fe5f2b7f4486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5acbe3-90c3-4899-9359-cdbb21261359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867332e3-a44e-425c-900b-eee23cddf30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "678b9edd-5196-44c9-9c99-b16a0869c669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a72959f-fa78-4ab4-a06e-8634723fe714",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d705e0a-04cb-44b4-91f9-81c454e1a8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97f14c5d-1ca4-4a1f-8aee-a351232d6598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a852fb28-87b0-4efd-a418-f490c1f45c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9ed45b-179f-4a6d-8505-4953fc04cd20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fce958-16d7-4363-9618-a768c73f6d33",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a145ba-a7fd-4959-9d16-18080e9d964f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f7e307-90c2-4551-9c02-40e70c853422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f359c26b-8700-4adf-ad43-92316e00276a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a06fd6da-1dcf-4583-a59a-af7044df01fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ebca49-96e3-4c2b-aa37-b227a3c64281",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b15b953-bcb3-4fe1-8ebd-2aa199f2e3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa9bb35b-10e7-4311-a066-99d56ce4bac5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7acb5ed-40da-435f-a003-f07f36b1cb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "59ea3819-2426-4c76-b436-6e8a013c2231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d1ddf1d-0863-4c75-8c0b-529974fc6e28",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f7bb38-66a6-4e70-a9d5-e150ef7882d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a16c782a-4dcd-434c-b5d5-22681d7905e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef56d0e-90ac-4178-a84d-d3de35278078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50a155c1-a642-4565-bcfa-a1ac0e411eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27677f78-8f7b-4fad-bf72-a40d9caa2d4f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee4153b-2bb1-4196-be85-685f82471cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbee0954-0b26-46d7-812b-664c5fd05be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592377e0-d2c3-4448-80ef-588ddf04a039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a218b2e-0704-4ff7-b9e7-319678daaa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf82c5bc-d801-4483-88c2-070b2dc6ff39",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d6166d-4195-441b-8011-6e8e332b06d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1213e526-7cdd-484e-ade2-3b882ab96247"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef750968-b958-4494-9ba4-6e4894a68722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad262bf8-287a-4681-b963-1f20f77d2bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bee495cc-0b1c-48f8-8438-46a858701471",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3c267e-cb88-4b7c-9675-1637fb93b799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4a9cee-ef34-40e6-8bfb-0d5eae2772c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21feae8e-a2fc-484e-8ed1-bf461407c1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "411c48ac-acd7-422e-85d3-10f2cf4795bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01013dcb-fd0d-4101-9071-678d7056e1e0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c339f85-9e80-4c93-880a-8523e3af7edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f3b173-0763-4317-86f6-cf343953f468"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8995a08b-4ead-452f-b733-3b2847b980bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b0716fa-c2e9-4290-8bad-b9b94718c1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d5bd3b-9584-49c4-9d74-7dfced1c95e3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25ab57d6-72e7-4388-9f1c-4c0187a74d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fa9d43-344e-461e-be47-af47254207a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b12bf5-bac2-46ff-becd-b7333ad7263d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c2c1de73-5c3c-4d9d-ac4e-7e0a56795e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b3a3ea-7707-41f3-b34d-3822db917a0c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe53782a-96d9-400e-8d11-4d44e9ebd04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5d7289c-d1ce-4a0e-b3a0-c423d467fd72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f697b0e2-116d-4c1d-8e0c-da77c58978d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b86e7ec5-3c14-4f92-983f-56c468954ecd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "633d55d0-4d04-4a8a-aa1e-38a560e3ad2a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a538a777-67bd-47df-9bd2-a4d96e045701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eeac4b7-3443-4ead-9aee-8d928de37bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f33085b5-3208-446d-8b52-78245165c450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc634de-670e-4821-80d7-13392b257c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc3bd9d-e893-4397-b9e0-d9b2844a188f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d2c5cf-248c-4861-8e92-604743842826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0aedd64-2829-49c5-812a-3486bf583f71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba24e67d-5c41-4ee5-978d-ce763eb34e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "be7455af-b0ae-4b6b-a655-b9688310af44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db0d095d-1497-4624-8e54-e2f3bbb28278",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501da96e-e481-40e7-a730-6ef5ddfc7af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a47dca6-c97c-4541-9285-60646ec77779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a9d5d4-f27a-40bb-9a5c-5672862d51d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d38de8dc-e615-4c01-a2e2-69b86d58f4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f42fe56-6106-4987-99b1-81ad92a41eb4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b92206-ecac-45b8-8fc4-9449ee3b68fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ddcbad-9f2b-4c3e-8898-e024b88b0d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c8eb53-590b-44b1-9861-61b1a0d81287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e42c9bdb-dafe-4765-99b3-e2675957759c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d815ef03-7424-435f-94c1-3fa97187a0eb",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e1bb41-b395-4f63-8c20-aedae64a6615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab653ff4-1842-428b-a92d-f304f5a01922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8655c7d5-60fb-44ba-94ff-a9ce3dbab704",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "acf7dc64-c58d-4a46-af52-bbb129d0bf42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381d8ce2-0dca-4f7f-bcac-5c65d1d4455b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f93474d-aa40-4606-bff1-e740699e2af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14fd873-7929-4316-9658-e5b93d443277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa9a7bb-3305-40af-abe9-4d67216f7448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "838694ec-a0c2-4f9b-ab02-d55d8103be03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84cb71aa-7085-4754-b5b1-6755f48b88eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d44550-c3d7-4d60-a4c4-7230a2161461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14328cf5-ce40-4794-8302-6d34e050c5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848f3193-167f-4596-8b25-e9e161d6c1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd577273-c60e-417b-91ea-8e235d1aae65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23557b56-689a-48db-9216-ab1bbf00fddf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c54b228-5407-430c-9dae-1676ba6e64f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b91f08c-eddc-4434-ab29-cea42f1bd997"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f0be52-8444-4269-a447-6e8e15020e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fb17f5-b10f-4e62-b6df-36738416ef5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b34ec0-30cc-488f-b646-2fe752f92fbf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717cf6bb-b921-476a-818e-868748860e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ae7291-f7e2-40c1-ac69-1a43ae2da22d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a51ab3-8ead-46e5-874b-33a5a5a4eea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff5bb911-0a9e-4ad7-86d4-6d35e691f0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a70932-1121-4328-8b28-ee5f554aaad9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422e73ff-5eda-4a5a-b8bc-ce7456c68b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82af344-39dd-4d98-a8ab-717e1103aa64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a4e5ec9-058d-4c51-8411-f5d176c7c33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba656be9-7d00-4996-a660-fc97d8a02193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9dbe5fc-3811-491c-a4d9-4a5e7d4f089e",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c34a86-e76c-41ca-9cbc-1e69fde06623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e040432-271e-44c2-9196-eca89d02a31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e71c705-747f-4723-9da7-251f62153427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "47bf6943-2130-4c33-a30a-4f167cae9c99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978e9d90-10d6-4e41-b9aa-13d39221e95e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "475af74c-b30a-40a7-a146-6136ce8985ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c990b5-dab8-4ac8-8d76-62527bfa1bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f95f69d-fbbd-4174-b475-0fa390b2ee24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad59657c-bd33-4f37-b5e0-98ef6d4d495a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843c3bad-bb4c-48c1-9b5c-a91513638c96",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec86bbb-78c2-4575-af8d-c1c19a30977f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a716816-8a81-4733-a88b-0a89755bdf1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad39024-518a-4723-9144-ddea61bef024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90ae8794-f46e-45d6-9adf-ec58d8c1cff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9cb907f-6f1e-46a5-aedc-8eefe3b75ed7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730629ed-0cbb-4187-9104-a9fc557cfc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf435b8-f62d-4b6a-9e9c-b015daaef7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f01655-5b20-4a28-90ea-88fa13fcb65a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ff0b9a-e503-4ca3-b484-7a08e4d9a8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8298503-03a4-4e16-824a-e8e1c4696124",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e857727c-12ce-4682-8b88-e642dcf27fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952b49ff-86cc-4c11-977f-d08b0d54de01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe4776a-b159-4bfc-9858-2c0f9f9e3eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "716b7e59-6b1b-4416-a313-ea8b0ba8a070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747f5bf3-516e-4853-87cd-a2f3f0e62b08",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c38724-2bd7-45c0-b200-8088fbba7160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcb250db-cc29-4e77-abeb-82a6a4c6473d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacd393d-c563-410a-8ad3-65e73aee8cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4acb5380-34ef-41a4-9268-e10d4d0ded3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2899fa53-4f9f-4090-8d05-7aac7a5cef13",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4569538c-224d-42d5-97a5-4314f090eb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca5b8bcf-9e41-4a20-9a73-31da3d7d0fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df43f66-a430-478f-9d54-89204b801df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e016ea5-072b-4d49-abc4-a41b716d49dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e09266-469e-4560-bcbe-86db5e335530",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aede5c8-3d89-4f53-95eb-304779f9dee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c17d82bd-1534-4d6a-90f6-5c79b215ff5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716f5777-202e-4e41-8221-5881f23ccfce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2fb1f2-b9b6-4bad-93fa-ac274303f4c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0122e24-7d05-4aee-80ff-0c620f7e98af",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17960d32-b581-4e71-aad3-12f666ab82e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81872e7a-77ba-4f1a-961e-0ee3dd5f3230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441ccb43-21bd-4c3a-b67b-ee96fd0703cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29f8eb36-fe1e-436e-8947-dfa8a2c7f503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343e72f7-dcbc-49dc-9e86-98db17588d91",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788a89d7-498e-4493-81ff-495aeefaedc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2f38d86-fc66-4625-b1ba-4e75cf1c78f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babfb656-5db8-4dc0-a009-267c72418458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b545de7c-25d7-4e9b-ae21-e6c316061abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f57510f5-4f89-4496-9b29-3247b1798de0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc015d3-23a5-4147-95de-0aff6c8c7bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f81ba765-a5d1-4a83-9541-e5d0f726a86b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9ee13a6-4a29-4e01-b2fe-958926f5152b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e9bea86-3a91-4c95-a63a-7413952e801b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97297f87-5106-46cd-9582-f47d8a8b6a82",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eeb3e2b-a0cd-4616-a96a-355cdd5ebe7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "456f0044-8658-4553-9d8c-ee5ebc260c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcff4bee-2985-4c60-bd8c-a61a3dd2b3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd253813-c394-45a9-a292-f042f55a22b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abbd3dc8-35e7-4362-9f9a-b934f83315c5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fbbef4-8a50-4221-9130-e7bc8fa8a8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984700cc-018f-462a-baed-2c72af88d770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24015f6-b296-4625-aeb9-9c5fa641b432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5aab7b4-80ff-4e27-98b2-c13c6739d326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37a6ca8-7fb5-4949-acef-df65c33cc053",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810969f1-4f99-4374-b802-48c9f8244c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9726ae66-4159-429b-89b7-50e094373598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05036c7-7e42-4643-a5fd-387cb8ba6a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee56956-613e-4148-b650-3eb06c12c680"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02af44d-05a1-4c9c-abdb-7ff20836900c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d4b2906-f80f-41a2-82e8-f2ba077a5bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d028a95-3924-48a8-b17d-a439d195a23b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf865fb-3540-4507-a871-2bbe4c57d92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff627aa-45e0-4e26-9333-8851942adc85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4517d6b0-26dc-4223-93c2-ce93958dd28a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b1ae00-ce47-4f71-babc-b533dfb69c8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2fdc711-847c-41f6-b16d-6100625f30d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b582f29-b588-4e9b-b1f7-6c242f62c92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89701405-9f02-4e7d-850f-4734e439fa9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3525db05-bde5-4a58-baae-c2ff47556cc6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bc6ce8-fe38-41b5-b701-7bb4c2df39d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a626586-610c-42ea-bcaa-e4715a1ce860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ab3316-0617-4767-b27c-d291d2ab3b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5468035-b4dc-4286-ad65-52169151d81f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519e9aa9-308d-41f4-b267-5bd631fcc342",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9abc63de-96a6-4095-ac97-e4cf7b9c2393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62734311-f698-4133-a85f-80f91b37757c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c30869c-b651-45de-8df9-c33fd953f0c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "67f1be9f-88e0-422d-bf13-d33bc25e6ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744e4cd0-84f4-4f48-93d7-d655fc2f40cc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e591bcb-43ad-4392-b9d0-bb3b59a5f131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe8f209-9043-40d4-ad0e-5ebcf862a97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9986de-144e-436c-aa6c-c02a127fdf59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72b08827-93f7-4fd8-b078-911feb48d7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3700bfa-d22b-4885-927b-6569833c3951",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb3949c-532a-4bd2-ae96-5bb772194aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39cb588e-ebc2-46d0-b535-23f784fae404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9075d882-2909-4f4e-ad9a-71550ab26335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "24909f69-353a-4eac-83b2-7720a9bc97f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c401a13-14c0-4795-b441-295d890c64e6",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaaff48-41b4-48f1-8724-c4cea6d763a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aeffd123-c960-467f-8fe4-187e849f4e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b94fe3b-2ded-47fb-95bf-0b8ad00c8933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcc74c56-0fd4-434c-b434-e675a98c4370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dde04cf-d5cf-4baa-b08a-c1f7181c072b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7b5436-1ebe-4a9e-bfe5-275d41676643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc019a5-f0ac-4fa7-a8da-77bff5178dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e12b3f-b694-48b4-93a8-0b04aadbd06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2449d957-560a-4b58-abaa-a75da7ee1950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db83517-f7c4-4ea1-9178-659b7f97b2bc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b222c2-1552-4e19-b275-eb3737c1f314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84bed82-067a-40b7-a03a-f55e6ab07a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af11995e-b5de-467d-87f9-9c07125a7ab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5016be33-a7ec-4715-b6f9-c51ff611ad1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268e94c6-29c1-4231-8ab0-eb3e153df4d4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6209749-d5b1-4587-a576-28590cf4ac26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d9bf69-68dd-451c-a400-5dfbee9b5668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7cdee0-a2cf-4942-ab82-e1c85fcbe8b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc540c8-1be6-42ce-8ba5-4aa3ab5b3cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "309e4c3c-486e-4619-bc86-16c01c4d3b93",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a390f6c7-0278-4ab9-acb5-b9a88a9ae319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f5d3307-159f-4536-a009-992a1973c06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab6ae15-fd51-4ed0-8598-d6669b9344b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f8e0b73-cd3e-4726-aa18-0cb2a1a78fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca54add7-424b-4e4c-99bb-73d511fe57d8",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f975f8-b6a9-4dbf-a901-09f76244985d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04bfb39a-a06d-4c06-970a-b798fdcb1a53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8498f72-71e5-483a-a73c-abdc7fe9734b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d61458e9-a7e1-416e-8b3f-577a10a50ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b18c55-e7a9-44c6-b278-1fd32db79658",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da113d96-11be-4324-b9e7-9bf34f7b6c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20ef59b8-d622-4a46-9ef3-4466934b5af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad94c1bd-c04d-4444-9aac-77b721585691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc4c9a85-19b9-46ec-8b00-8674d383d29f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10aefd2-44e8-4dab-9a77-c83da638ee22",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e1f981-fc49-43d2-8654-3b9b1b92c650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bdace35-8885-44c2-8b2e-82ed79e45f4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d830494-8f2b-4ee9-807f-5e1fa415d1aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6f2832-54e6-426f-a219-ad15141129bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "882659c9-c663-4df9-8ae9-4be038f28cd1",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3664c411-da20-4379-a457-f02b09d86abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe4cd80-c764-4843-82f4-6eaf2a4c4232"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58875e57-cd0e-482b-8e54-866f016fb934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1146589-f9cb-4153-b29e-33bc440503df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51951032-4a94-489b-8a69-48d150781f60",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c5972a-1d4f-4059-8147-5893052bfad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac57430-3076-4cbc-bf57-1cd79df57944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7af19f3-2c70-433f-be14-68fac1dfce5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e60fdaf-7721-47a2-9d12-5e1945e61c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18c30396-da73-4d2c-98f5-e0be56b8e921",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdabd154-9333-48ad-af26-a385c05bb1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7b453edd-fbf0-490e-bfad-be66393c199c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44813e9d-8661-49ea-af96-2c5c6b111fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "44acaf4b-f139-43cc-9513-df779091ef3d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "742732a2-1b2d-4a93-82a8-3a0a76870a32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "76872b6a-8547-4d29-8d0b-c9728772047f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c65203-c0da-4906-861f-048949c4cef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8cf7184a-ec78-441a-9932-5e629ef27549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3d6213-889d-4716-ae02-4b01aedc8f40",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3091d1dc-92e8-4f1c-a8ef-8ff3d1722264"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4a6a75f-f07b-4770-b2cc-cf62450e3067",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bbeb4eb-64d5-403e-94aa-861951d91431"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "738a2639-44d7-4dc7-94c4-049463e3c1ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d29b645-abfd-4b7d-9cfa-9f5e9165fb5d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "27aa2454-73dd-4ded-a3ba-45367388d735",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4b485b5e-26fa-443d-b82f-34233d4bb040"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9f455050-9386-42d2-ba56-fa1b2b697603",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66fe2736-9534-485f-9ae0-ae689d2e5628"
                }
              }
            ]
          },
          {
            "id": "389f67de-da49-4bc7-9b75-8b3f7263b4fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "33f693a0-90cc-4382-91f5-fe6b768df397",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ad707ce4-4d91-40ee-992d-9ecd69b549ba",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043f786b-881f-481f-9f02-b02fc24f035a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "79552f92-0f60-4161-9f55-0cb039e14222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa398066-5600-4de1-8d4d-342dbb8cab39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3113bad-828c-4137-9166-40d4cb5b748b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dfb7a981-fdf9-4c03-ba04-ff1cf3a9b593",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a37d773d-65fa-480f-9705-71a2a5ef7666",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1aa11c0f-a0b7-417e-a1ac-bec5a4a644c8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0a4781e-da8d-4614-9bce-1d3f827ecbe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f360b66d-115e-4157-8d8f-3bbbd665ad79"
                    }
                  }
                ]
              },
              {
                "id": "a35d916c-3964-4f32-be71-036036e3f348",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2d87d8c-af54-45c0-a098-4b034784fed5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eed741ee-5131-425d-b52d-645facbede04"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1005cb84-5e09-4c65-a17e-a86e8271fc9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e92e2d3-c4a7-4762-8db4-65dcc1cc8abf"
                    }
                  }
                ]
              },
              {
                "id": "22b0ef1c-af79-4bdd-a9e1-e06934e69336",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bec0b0a7-7a81-4a4d-b88c-e7cf2bfe30f1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1d4c077e-4be9-41f5-a09f-3195e441aabd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8697122e-109d-493e-8fc0-50b5eb848488",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "da435246-18aa-4f08-a228-4374ffa56e09"
                    }
                  }
                ]
              },
              {
                "id": "dce251a9-4bb7-41ca-83d4-a1bf36d583d2",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2265fbe9-5972-4cde-b5fd-565e630ea74e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2de5e0ec-20b2-46c5-8afe-95846ea2d1f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "410df3a0-0528-45da-8617-74fed206df5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7cb40d82-2102-48fe-8baa-21a83d7a37e6"
                    }
                  }
                ]
              },
              {
                "id": "57b3f4ec-abed-464d-b7f5-3f5b0c1f7fac",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f0c8ae4-8d0f-4d3b-ba99-d6c8acad648b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e72ede0e-1372-42f7-b134-c726a9acc92c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9c86a49-2776-4051-851d-5cbaa476316c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cbd3f9d4-451c-4c72-b3e5-777d2d1d02ee"
                    }
                  }
                ]
              },
              {
                "id": "c37eaa91-7c12-4cf8-a2d1-878bec81c965",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb6effa4-d3ee-40ab-aff8-5785c0721db3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df47f6d2-0ab9-4d20-8224-0bcd2520ffff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db3b745d-c312-4cb1-95f6-3043c961535a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fb0c594b-526f-4a25-aef2-ddb4fd90710a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7e73f39a-1aae-45de-a881-b028bf1dd875",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5cde910-11b2-46d5-82b7-9c8dd7f1a138"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2bb143c6-b148-42b5-81b4-92588a7914d7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35968bd2-ba44-49bb-b427-b5b59b4c886a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d65110d1-d4fc-4a30-bca3-9a86d69be34c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c5fef74c-16ed-4f53-84e4-9fef868ca482"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a5f7e914-609d-4d17-9fa5-310168586a68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "873c67bd-57b1-4b30-91c2-9ff55ffbcbea"
            }
          }
        ]
      },
      {
        "id": "0c6f4fc7-c043-42ec-9379-32b5209cb5c0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "eb38b069-1601-44ba-9726-651ec4bd29e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7cfd5cc1-9388-4641-950b-0b8eec5b4d68",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ffa59267-624d-445a-a7b5-71a281035ac3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625f7f54-9e76-4fbe-a86b-7afc4799e049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da0903d-11c8-4568-b3d2-763f51e8ff0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd856675-a210-47b5-b4a0-4aec9a105907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "755b502b-9c3c-4224-9534-37eb387e2795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce82657-82d8-4cec-8dfb-ae9bbb7294bf",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff52842-99a3-4032-b631-099db3133c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f57ece8-0747-4cc2-be86-feb9e6806477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c3f692-943e-4acb-858b-775b4058b282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd38f3b4-3335-43cc-a163-124dab6e537b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6862bb-cd6c-4b87-98b3-d84e33cdf813",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "102e6fc6-0514-4243-862b-c2bfff2254ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89237de-40df-43af-92ad-89986c8c48b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0be1f8e-b124-4589-a2aa-c8a39ed89cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e268d1dd-8a23-470a-95a1-4ea7f50fd61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ceaa840-5f92-4d4a-a2ef-7d0532627a5c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f600ac49-13e5-4d6f-9e6a-9fd026c111c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35e1d0b3-da82-4720-957e-9adc3f0ca261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf88fda-143e-41cb-807f-8fa0ab7eebfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22a01854-f492-4b0f-9003-1f868e1ae436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fdffde-36d6-49b3-b091-e4def0ef6cc1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd7c6b0-cb1b-46b6-b0b8-914d9fe28ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38fdf501-2f86-4738-9816-99902a29bc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c4a447-7c1e-4edd-998b-2ffde8a0d6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "221675dd-7cf1-4cd2-b54a-07a8155dfa04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd384a5-a368-48a6-941f-5d54e7436318",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b3cbe72-ce7f-4f6d-9387-90e4be6b4763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a4253d-c421-4d01-abd6-af7d48b9d0cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ab88b8-1dfd-4751-b724-cf88c37dc551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f122a26-cb49-4c69-b94c-4bff7b9c3a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138a517b-403c-4ab5-b2a0-74ac7dc91a48",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a191677-5efa-4859-9600-4c9a5680e4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30423ad7-071b-4581-b526-88ef9d8d52f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c155bcc4-af77-4f27-9883-56987888d39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e827dde-03eb-4d4a-934d-f38e62f4b653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab21fa9-b683-41ac-bc90-e81d3052348e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd34516d-ba33-4beb-ad9e-11f0f855b320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cba7bc-f7d5-4f7c-a5b2-9c37782824b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f8637c-531a-4646-9bfd-5cd7674bcf32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f98aadac-cd82-4d1b-b076-5fbb4fc0c660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d85e67-a7ff-41fe-aa4b-46a8004a9aab",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee4bb14-53eb-4be8-b982-b7eee4c59dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e2e74f9-863b-4202-9699-d59339a39a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8f98e7-614b-43a2-a37b-04ce8af12781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9def1f63-68fa-400d-b227-4492ce7e4d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd77de0-5f64-4bc7-8b0c-84614f9cf16a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d755b3a5-c674-4a12-91da-5ceb553cda0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b99ddd5-bab4-409b-ac9b-d3b3c9d27e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a9bc86-9e1f-46d0-9b60-78f417ea7355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ff859d-0a0a-46f7-a3f2-c05eea94312f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeccda81-c142-4c01-bbcc-c738b35a73d5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "300273cc-fa54-4cff-8f57-a203f898c404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963fc8d2-91f2-4193-8407-a585b0ed2270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e1d55e-cb04-4d85-9d30-8f6364497b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "51c25a71-baa8-4e7e-8c0f-283ddf07912e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e486cbd-6151-41b2-943e-a3c63965e4ac",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7285a9b2-da25-4b9b-935f-2e88c457e3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b9ef5f0-5874-4d8b-91cc-ac38fa84bf3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff74127-42dd-4f41-b02e-fc13c6a34d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec3a329-f0dd-47a6-985e-b71e2a858626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3fb25d-7275-4f11-81ab-4e5d5bbf956f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a0e86b-a1c6-4341-920d-bae3355e022a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b636b0-d744-453c-9ac1-fcc619f1fee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddf00dd-890b-41cd-9638-d685aa1c7b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb1a77c-754e-4ca5-9734-f57f68ee35fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa8e9af-b101-41bc-a12b-51d0b30fcac0",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a40ed0-b8a4-45e2-afc3-e89944ada946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b20a13-d409-44ce-b8f8-712fba8dd8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d0ff1f9-e590-4b87-bcc1-b6fb841c0d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf4f7b4-c5ec-441c-8b74-2fa97e995d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a932056d-0cb6-4674-8ec9-7d600a3faf6e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a411d196-eded-4399-a1b8-d38fafdb1b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64ce2ee0-fed0-4362-9fc6-0ba8aaad01f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1317f968-fd55-4113-b632-5a3327a6d998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "da782825-6b6d-4ae1-86d5-51b7ce8c2fb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6307cb91-9c6f-450b-87f6-9c834b741290",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25602780-77b0-41fc-b4f2-44642b3170b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e5a2b5-0d13-4908-92af-a4c8b4121b05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01acaea1-682a-473b-a6e8-dddc42f5d2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdfee4cb-2d7a-475a-83f5-c640aac565b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43c76e9-2e1b-4a12-8c90-98c547bac056",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "729c3a2f-401c-45e9-bcea-ce54e9a5fd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a49171b5-0a5a-481b-841c-93162c8ed7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095ff444-efff-4b4d-8b63-8689ae90b30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "62d94994-3f5e-4731-8900-139b2698d9e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "933eef08-8a0d-4770-982b-44a24d3603a6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e742a8a-1099-4ae6-a219-638d55e4bd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ec8ca6-de63-4d8d-aa7d-7b2529562939"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d408623-185c-48b6-a4e9-a470a17ae01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e62e38b-cfa5-4254-a86f-f9aa78cbe0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed1d86e-8ee0-41a8-872f-f77b8e0bdec3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9500c9ff-6171-4d16-9eb5-52349e477758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4efc6d7a-e9aa-49aa-92ab-65512f64987a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6fa479-fe06-46e9-b051-bc3bf4bf1b19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "420c3a03-a88e-49d4-8b6d-6d64d25e252e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e9edf7-b80d-47de-ab24-a40046e39987",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac85963-1cd5-48a9-b70f-067307850eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369c72ba-72b7-40f8-bdb8-ba82361bd9e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accfec84-2cb3-46be-9d83-2004bc9e531a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9658e1-c146-44b2-8242-ec49887b6f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ecb9f7-269c-4f49-8191-780ce1b62e76",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1d9b16-b9fb-43bd-b046-8d4ca9de17fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5936fa9e-75d3-4797-b11c-942fd350650b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc0d56a-525f-4c79-9fa6-590beda6aaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e5b89ea-e890-4dfa-b38e-a615ca09429e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f796003-9127-4d08-b546-c2dae0ab543e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63957f9-bdfd-4bf7-8b20-9ad1c0a8f4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3e7a8e-2041-4e84-b298-d3c38626da6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61938dd-9c53-404a-9bf5-6d5daefd40b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c43d4b8a-51ff-48e8-a6b1-b69b3f0b82de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf71c51-f7d1-4206-8135-eb28a84e1323",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "241ba6be-15a1-4659-8db9-43cbe090ce59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9359305-f134-402a-a166-c9af076e5c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6db103-3cd8-455f-9705-f15344487ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dd0c3bc-d5d8-4bc7-9e71-2c39acbd810d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08dc31d-ba7e-486b-aff0-80db9010a1c8",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bc7daf-d72d-4514-98fa-c6cbe66d7571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb16e6b8-38c1-4303-9760-cd52ff73a955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048b69e4-7f96-407a-be8e-971c8c3a621a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "beb31b69-d536-4036-9d63-f815e8e0faf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13b7e9f-fc5c-4ad7-b0c1-bff0f014aba4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b896e9f-4b9c-46b0-a07b-93fee2fcc8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9c677f-e5db-439f-97ac-bdf1e8c2a319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a72377-e496-4c80-b39e-c3dfc5d49884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf5edd0-a85f-42cf-bc92-d39e06e04c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364656c6-14ae-411b-aaa7-eda69ebde72c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e37f6b-8abc-4e9b-91f0-336d2cbc7b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c4065dd-9efc-41b6-b7fd-c3ebc90dad85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36ba693-dc98-4a7f-88ce-d591f8771d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e7642c-2a5b-43c7-afa6-3857235d41d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8540d911-31a3-44d6-a75b-5e4551931342",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7cf318-dad7-458f-80fd-6d0e851b9292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe5a15c-073a-4f20-9416-62f840d35634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d5745f-170a-4f07-a427-a04862281a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35064bab-efde-4ad5-b748-8bedde1a62c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc9138f-b5be-4932-8e25-9e0039672713",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3eadce-426d-4117-bf6f-bab786f59352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6589dfe-f8b3-4905-94cf-d6d7c16588ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f2f5fa-6aee-4743-a779-2b86b0256b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba3a809-4f0c-4350-baf5-f6907705caaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570cda3a-97b0-45bb-a842-613b7f020b1a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa979101-ea4f-4ca6-810d-847d56dd1853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83fd560-393d-43d3-b12f-2798e8d50cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b781d32-8f76-4190-8154-e03b51306689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a18853e0-6063-4a06-95d8-029c19ad3728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5492c51a-7727-420a-93d0-76fc66046a14",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f6384b-827c-4ae1-81f9-1523ff88001c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82958724-2160-46c2-bfb5-d2b09054151f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7ef254-0d6e-45be-a8ea-62c4116725f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78962280-da94-476e-87e4-7ebbec2c747c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4f052a-7051-44ce-b4a4-09b8672d6ccc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcf51cb-3091-44de-88d2-99e97de30437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249149f4-9543-437e-8411-328db6196c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38953f71-9353-4cdd-bd47-83e3484bd6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a6882a3-9a22-4d65-97a5-25d0e49cec87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22791f5-16b9-4cbd-b456-3c24b17b22c6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f3c3be-9d01-4b02-9188-b8f535836fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4705041b-7f9b-4369-8f78-0fb93287bc47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0785185b-1935-45a0-bbcf-cf93da045e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a46e279-1e49-4b0a-8366-898dc7efe4e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9379ac9-4ff1-46ed-b433-f1b11b34832a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e232b3-6d61-4454-8787-7b8076e926aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c30f5c3-43a8-4a0d-beb6-d7adcd4a03a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09eb0c7b-40fa-4047-9e17-3108a9153bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2228b4-44c2-44f6-8a68-8d5f69c11ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc13ebdd-15bd-453c-bfe2-17286656a478",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce0a03e6-7a95-4012-b6ff-9e94eca8cffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75bbf63c-eb65-4a0a-bdd7-67a947446fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484210ee-d5c3-4dc1-8e6e-42f4f9fc9f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c84594e2-b584-4274-818f-2a04287e3f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec6bc47-d1f1-4cb4-8adc-56f1e86530fb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6618c460-99e9-4b17-aa5c-e18a7ab953b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c712a1-6d7a-4c99-8a7d-427ffd452d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ef5a90-ec0c-45a4-b3d8-fbc9247745ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "647d9eca-f4d1-4e79-b7be-3ed12fc3cff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ec9cdf8-10c9-4210-9b50-9e29393457e2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49d046f-6855-4135-9636-83223777162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22651b77-0ce2-4c43-8e71-40cc2d1f544d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "034cffde-45d8-46e4-9f8d-a6751625c534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c860e7de-b156-445d-b033-93a4e40d4f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d313fc-27ca-4943-8b38-fcb86992ffeb",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b64b31-f805-4e65-8279-7f4d5e30cad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ec5793-55fb-41e9-951e-aebd6ff503ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7bb82e3-c2a6-4a80-81e7-92a82b2cc2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca91b2d-1c33-43f2-8f25-0579057dbf0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "880f728f-fb2d-472e-b04c-834345a1ead4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0e862b6-df3c-41f9-afa2-23e581f037bd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72a5e640-c157-49fc-a767-1a5d0c7521c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "75fe35a9-6a32-482e-936d-2b5fad80c5cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e84681a-ae4c-4670-b43d-cfec30ad180f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd8ab4c0-66b8-4b21-8f83-55cac2b444fe"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "985841fb-28dc-4eaa-9c46-e9be600b77a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5f6f0cf-14dd-4cd2-b402-740ade9eaa64"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aeb1cfec-58a2-42d1-998a-7cfc0f8890f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "747942a2-d9b1-4c02-9137-17729b984269"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c0fe38b3-7c9b-464b-a3ea-414f1c668f7d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0f910566-9de4-4ff4-a3ce-f73c85daf9d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32cfdaff-98cf-475b-a4c8-74ec29efc3ab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb475520-2b65-49eb-983e-4116345aef1e"
            }
          }
        ]
      },
      {
        "id": "a8d187b7-0d09-40a9-b201-d2c73783612b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "01e154ad-836e-4f67-9bd0-6c4ddcc8d6dd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e7949e3e-ad27-4d20-814b-b3a3eed529bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b713b13a-3a78-41c4-92ac-0b57f34b287a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c61ab235-04db-4af1-9492-08b6a171751c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c4e742-b3d7-41e7-83a2-e5bbae9c0733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b37c02-c9cb-4ef9-9f4f-0df1569804d0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f34700-e9d5-4fba-a4e2-ccdcfe73471f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380241ad-5394-4e17-bb0f-91534a1f945f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26aa2527-5695-4a8a-bfff-cfe32fabdd8f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31ea10f-f35d-4f51-8b30-7d15fb1653c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edd1de0d-d2c5-4017-9035-8b258bd58c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee65518-d3cd-4428-a43a-1873f14e3928",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82085a55-f642-4fcb-b460-05046efcd2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6f6cd4-b336-408c-8c58-283ea629dde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f82e4b-5acb-4858-87b6-8929eda1162f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab80c6e-35b0-4a76-9c4d-5aaa6c326816",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd2b688-9976-4944-b93b-4a0d80ec206e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da43fc7a-860f-46ae-872c-4cde6882a2d9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1000c0-c1a3-42a4-b46c-40ce55cc4c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17201895-a505-420f-8354-156267b1321f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcab1c2-608f-48ec-bd98-72ad845e3565",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a66ff1-8dea-430a-9156-8eb60c63c9cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b26ba05-7261-4402-85a7-2c3764055794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e134c91c-177a-48e7-bea4-9c41b0f4cc6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23b5947-c7b5-43ed-9ec6-e85409bb5d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f46f0a-8bdc-4bbc-889f-5aba0039b8cb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4ab1d4-8748-494d-9859-00dad0967ac6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fb87e45-d481-48b9-9297-db2ab8e0d58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887e7740-7dd1-40d9-8d6e-fb05288759e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ea9be95-f148-402c-87bf-5762917e5798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98363904-d7a6-4922-9767-203d0686596c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b52e8ae-237d-4a89-8a6e-49756f33bc90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c4f3aba-ad35-4732-b240-86fab8b62344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e569d5ac-d680-468e-b2c5-7ca9af243606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19347ef8-0d57-4652-bea6-cfcab961dab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127391bb-beb4-4015-a155-34ae74179ba4",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03397957-79fa-44aa-98aa-b4ae1c02e3f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee5cc4f2-c055-4448-9538-0ce6963eccee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafd4061-a0ce-4b05-b841-af9ac5905803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "603fdeef-ae58-449b-a35b-a7af98042dbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c21138-b456-4633-bc7f-d74311e5086c",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a9de94-ef98-4ef6-b3d2-d9c16a5f7dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7441cdda-b4fe-459d-8fb4-f77f5981e393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88f5262-9a16-4952-97c3-3a7f8d94578f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11fb9aa4-c441-4e0c-8740-b5d907ed328e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0591dd5-a92a-4c71-8fe9-c491767535f7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90af4b29-8940-46b8-8023-c0bfb3fc28f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3af17e-c2ba-4116-8662-8a08675979c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "607812d8-7e18-41e9-9fc9-2bed581fda58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5478482-d394-4bb2-9d4c-fe37f8df381e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa4bf37-36f6-4e67-b64d-be071c17a46f",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "600f30c4-426f-45e2-bba5-6bcacd1608a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8958f14a-c839-4d7d-b958-934364c31fe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb522e1-d227-4a03-9a1b-4b4ff11339ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90f0aa21-a451-4a4e-8623-28165611a981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c1c447-d41e-44d4-9c4b-7d45b8977127",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c920700-27de-4dfd-a020-abee27ac28ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "208d366e-0f3b-4e2a-92f5-4d5d22b84edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f09ca9-3225-479a-b35b-49dcc34e115e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03a250f-9f74-496a-8ec9-3f6d15c77721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58faa4d7-0637-464d-b649-1946c3270d7d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac5f1b4-15c6-4a70-bbc5-b3166dad2337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c71e352-34cd-4ac7-b7e1-06b001d05a43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a342a5-c080-4d36-84ac-584eedfb54ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c35619d7-0a20-4f73-aa7e-f7b17670e1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88c3feb-6a83-457e-8163-6e8b0a204dc4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df68c567-0f3a-4ee8-8512-f48f14f88d06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5406d6c-22cb-4b28-8fd1-8f0d2aa2849d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efd8123f-dc9d-433a-a504-ce3b8651fbd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733c1461-eec2-4e62-b769-6c9a2d39043e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d35d705-608d-4ecf-885f-08b9de6686bf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d230c7a1-a338-42e6-99ec-c90f14710c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764ef414-4a44-41c7-98aa-81886e15daa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b54d02f-beb2-4f8f-80c9-4598870dd093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0c4f17f-2a2b-460d-9d83-e0c6b3155fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ad29cd6-317d-40bf-b82f-0e7e5f03d021",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848f8fd5-f34f-4613-96a3-a209a47524d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6277e969-ac49-4dbe-af5f-b7cdc4d4de1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f80265-165d-425b-b1be-3c3c83c37e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9bee27-2092-428b-82e6-866207347cb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3196fe1-918a-4161-9bd1-a89398835738",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f69a9e7-a5cf-4cae-b2e3-ec10ebe953f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd24973c-695a-401a-8959-76ad28b09ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7ebd2cb-5712-474b-b26d-39580e7fcc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb578b89-10ab-4425-815a-a587b944763d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a34d1481-ba8c-4b4c-a6bb-c765a5badd9b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0e4b8b-cfcc-41d2-b96d-074ecad39b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85228a1-c6ab-4514-bf13-bb93a1992a25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f0874e-7ae1-4516-8fd0-a874891cfa05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c19b74-63a5-442e-97ab-48250229c43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce46768-02cf-41b6-b892-0783f40aaa4c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a1b946b-38d3-4368-9c29-c932247dbb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaf0356a-463e-465f-8d04-cecaaf843af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f267efa-c888-4b0c-b0fb-8e99d819ad84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d452390-4cd3-4c09-be99-bc7e9ad5456f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409a212e-38ae-4ce7-b4b8-2a78f4d44e02",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b16f38-cb02-447d-99a1-8c9dd24e9407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0667c476-7bf3-41dc-a571-b40da998ae8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a1b88d-a4ff-4473-97e4-e26a8c5c78a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ab2d8d1-38da-4549-a8e6-bc1278dec9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f1b95f-286b-4ff5-b243-9a00b4f67b15",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5be5600a-d22f-4443-a519-f94d74853a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20521a0a-434c-474c-b914-1c0a3d4b5a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dedb7c-5905-4f3a-9e75-07c47cc8cb43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd073319-6944-4d79-8b58-aa92236f16e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9409cc9d-d0af-4065-bb35-ad7be453e5d2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fb63ad-fa53-44bc-885b-b68bd2e8308e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db29ce7c-7a50-40e5-b75a-854683e2eba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "492a5053-721d-4313-abd1-82acfa4c5c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccefff77-ff20-4f3b-a41c-527177bbb86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c840ce4-918a-4641-8b78-05db77c34ba5",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8039bc8-94cc-4d59-8ab1-646b8cbbb1ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "719c0bf0-4fef-405e-9543-3c19f6863d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a2415b-8173-4bb8-b4e9-b8495292af49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda95f77-e0d8-4817-96fc-1b03aad4c76d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbb13c0-34aa-479c-a104-3588cd3085ce",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21955d5a-34a0-4cfb-9752-4e661da2ac46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a890a61-686b-41f9-bd16-01c77e8033db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6c2260-b234-4d8a-9b0f-379fb0e8e419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f296b0a9-0b73-4b7c-9c1e-1cf2cda174a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a4efe9-3b82-4046-a3aa-f015217a5718",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74c383f-4b81-4110-ae90-1b0cbac53777",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3823f95-991c-43c9-8ae1-4a29d4695f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2faca312-6997-4f52-89f9-ff803d86b155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d38801f-7606-447b-a078-b6d3d65f9d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632920ac-ab4b-41d4-8a90-b6e8da426059",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988093b6-cb8e-453d-86be-2f119b5a7709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8f15b0-44b2-4b67-9500-221b86ea4c3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d348365-6bff-403f-bc02-3c3a09e257a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5587e559-7817-4e04-b970-258b3cf3c54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab73d8ce-59d2-401b-881f-2ca6d0b4be0e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9795765-7433-4052-9a20-536f62d08087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78aa39fc-b8ed-40d3-acd2-0757d84dd2c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0186e631-9955-4827-8ab8-906fe08a9ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbcb237-bfc9-40b6-b93f-09b2d35822a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abcb869b-dbf5-44f1-b38a-5e715022be49",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fce7a7-a270-478a-8884-0fa4687f0d91",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2796591-909f-453c-9015-8bc4cbfd85d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c62087d-4451-421b-bfdf-5bb8664c251c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9033c9da-6110-408c-bf98-70d27ea5fc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b08b21f-ca4c-45b1-af9f-21c7b819b2e3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4c3dcf-8c2e-4064-9da8-286b621f8d8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b36c076-5cd1-4485-b0b2-22341b5a5978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2695438-abd1-43d6-b50e-c2f29b565fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338c6b6c-075b-4234-a7dc-fe2cd0f07f6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d283042c-26e1-49a5-ab67-8c5f2f7bab80",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33414d60-8aff-4c8e-8fef-8c1934ad1e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4f1411-0dbd-4c60-b9e1-ad9c28170a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3591adfd-7b62-4060-aa48-50a58e28435d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0640a7-13de-47e5-8789-2827d580a8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18755944-d0aa-4481-85fb-b44e0501889c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1555b9c3-b239-48d9-9d73-d50b2241e40f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b6c6aa-db48-463e-8bf5-3701861f015b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f6f6f8-2843-4749-90e3-ba3028a765d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71bf7bd8-7bf2-4bd6-a120-17f5137bcf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42b3d58-6cae-4a9d-a270-500d38bc1e73",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d4b158-8430-4711-9bbf-5032a8a731cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76608649-e1da-4ba5-8a37-4e7811a69c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d8cd1a-f52b-423a-9e73-0b9cfedb5fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d761d43b-044f-483e-82d3-57719e8f0f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d3d4e2-4e6e-45cb-958f-5fe920b4eeae",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a47ac8-d110-45f8-b0e1-fbfa8dad8614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c97b0779-28a1-4850-91bc-ae3055fd1e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e91b0e4-783d-4826-8dd7-2882fbeb09ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e2dcb97-e066-4cca-928c-9dcf376f824e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "086b6e25-50d7-4899-ae93-7ff2ef605649",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bac48e3-7c2f-4904-ad66-ad294486db73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cadb360-4ef2-4288-9bb7-9fe1e8b9b349"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "999196ab-7ba7-4f7b-a8e2-8eea0b29b1f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25f8ef9-3e7a-4a92-b192-1508e9f7394d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab69f64e-feb6-4317-bc1c-38bed92093ce",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fa5557-3d91-4fab-a606-a33938caaf1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9cd37b-70f5-45a1-b1f1-b866e98766f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b464fa22-0cb6-4c9c-a24b-bc30b45f79e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7d8ca7-e5d4-4c0a-8974-d6c196813f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a256e82b-e6ec-4102-bb84-4d9da4baa6b1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d3ff7a2-2031-4331-b9f1-996f49f614ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b1e36c-0020-4a4b-9500-38d9763149c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cca403e-8fa8-4d07-b953-c1baf4c4f280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b84a39-cab1-4ef7-8fd2-18581e29bdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6b4943-9af1-4075-9d1e-f2652601425a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd89b1c6-d87c-4bb5-8ea7-620678a5c2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1163bd-e5de-44aa-8cf0-eae52773bd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "783c6130-cc6d-4704-a331-e596f8d43246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe15e70-b381-42c4-9410-ce2884ef9e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5c6c802-ffe3-4207-b0e0-a41db6d9b2f7",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67b155ea-2915-4e17-8e31-e19ff1d07ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8485502-ca80-4041-a64d-e7974d22f07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13a0ecd-315b-4795-9857-07f6be1691e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2096f5dd-6ca1-4041-8a0d-0dcc0c8ed02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980ec927-94c0-4e4b-b6f6-783841527ce7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5dd4c4d-3962-439f-a970-218d3ea8513a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368e9581-df21-49d4-aa2a-206dc80a4a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8fff7f-8dca-4259-9bdf-193efc0cde14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1987e08-e33a-44be-b41d-16cf72366ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f56acf8-d7ae-4411-aae3-829463555172",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb0e86c-61ce-422a-be5e-4b222ce259a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecfefb66-4322-49ab-aea8-d2b08d71bf5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb1a8e8-3991-4553-8469-7de343104519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac4dbd6-db9c-4696-b5e7-038620b3b2ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c43568-4e91-49a1-9105-f1eb37f75eb3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5a9cdc-5a9b-4527-b029-e41582551477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c05e062-28e0-489e-acaf-c07a7a408368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafca2ac-6bfc-41b7-a343-6bbc127b15a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "483a7f2a-ee27-44d9-abb1-f6ceca77a27a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72683265-dcaf-4ebd-b0fb-2e7aeffab0eb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b33b027-e486-4458-8a82-b1200749b90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4de3e7ea-f683-47cd-86cc-c7e713e57ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f930ef24-96f7-47d8-a15f-469899a420d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b542b43-0bf2-4a34-bce9-26d496f3186c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa3ec64-03d8-4749-8e35-fb7bf56c6c62",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce3c05d7-9aff-44bc-98a0-ed243c7a9201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c16c50e-28b5-4f11-9653-5ce67f568d22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2968dec7-735d-4489-a3dd-65c3149a6b44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b810e55-cf93-47c8-89ac-a057b0bc8b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc6d07a7-2a66-45f1-a9de-49f5edc23f6d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff8d37b-af4c-4878-a2de-cc8ccd3431d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c2f3c0-a2f1-468d-9939-a9f3f1350151"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0d2d27-4d61-4d65-8ff0-bb1a36eec13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3a11e2d-1389-4004-b1f5-15d339c3d64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cf115d-c478-4076-826f-5ec0bba092ce",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d812cdb-003a-4ae7-8b23-cd95dc2a6f4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e531a80-c78b-47a1-971d-ef4761352de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52097484-7540-40a4-ac26-f0875a431353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea0d5dd-e23d-4ba8-b0b1-476d6626e5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8461a20f-4e30-4acd-8d15-84b50c61609c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7462739-8ef2-446b-ae32-f94b12b1700e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b372a2c7-af55-44df-aba3-62de6faf3091"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "103d6d29-ca13-4195-8439-419f42594e6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc48efff-f9bf-4b95-aef7-ce27c86d8ded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c520692d-557e-4d6a-8886-7531c0368eef",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167e6c6f-540d-49a2-97a4-24a6b064f605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6d890d-d3d3-493b-a44e-35e8a8333ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81872f55-6cac-41c9-8d53-5eaebffec223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "813d4865-f853-4d00-bb17-ab6f35924d82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c00dd084-ec84-4b43-a4db-9d14bf747cce",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78b8a3be-5952-4c8d-84f6-8a402ccbbd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cff9162-55b5-402d-8bae-922e2be2baed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b23f88f-d0ec-4897-a3da-5d4556e4f2fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b7af58-53fd-4dc5-8458-67dcaf006f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c336c67-ff1c-4cfd-a2a9-52ce8f14dcb6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26109356-66a3-4952-8426-2432be621523",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26e937bf-2c59-4ee8-8cb0-076da64e067f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91f0e75-a146-4f57-9b9a-28fb523bf701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869b0905-f32d-4278-a241-d84bfe4896c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a6a7de-cd0e-461b-bdfd-bbb5baf546a9",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6381a700-99f5-461b-ad2a-b0d610fbcda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba2f9a1-0359-49e5-917e-a84832bac30d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2262599-a9e4-43bf-b2b7-a4f7f8ad9599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fef69e2-2262-4246-8f83-cfb7d0464d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3119727c-ffc9-4816-8e50-a758bcf3a525",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5ba07a-d4bb-4df3-806e-5b9d0ff7f738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a7fa31f-abb6-4f04-a53c-4548db8615d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a4f672-5e73-4e28-9484-1900b5a58475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "850c7464-4bac-45b0-9959-ac6036280430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a30f360-81c5-4e24-b42b-fceb0c4bdaf5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595cf400-7688-4e1b-aa45-ef07883d8506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f911089d-0d5b-4b0d-bff9-c256b24bbaa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02a8f8e-79cd-4aa8-bfcf-29337450fda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2aa5de7-21db-4813-8f55-23890a4e316b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d03d56be-d231-4dd3-b4c4-ebd137804db1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4872fde5-f2f9-41e1-b9be-1ce346268a38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c531ee6-438b-419b-8820-50e460a44ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f45ec4-7f0d-4996-a793-4b748d714d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d476da-9bef-43a9-a414-e383073901b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2965add3-26a6-479e-91cc-69e927405a74",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "271c9bf2-c2fc-4704-a883-4bbe7cf7105c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63abb7d0-e8be-4fbf-89d9-c1af6582c196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3871e84c-413d-45ee-a2b2-351d9df6ff81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab0f582-bd5b-43c2-8d04-5059c5113724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b2a4d61-c976-4427-a599-ea25ca6f8dae",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908349eb-7cae-43d2-8c94-ab03c750dc9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5130ffdf-bfbc-4325-b9b7-b74cc757a1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2102f188-fc3c-4c32-8207-ced7abd29505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b000d5-56ea-4bbd-a88f-5c7083a72850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4d4d78-0150-4cee-b07e-a40dbc0d44ea",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fdf9fe-6c8f-432a-8c67-4a722ab7e131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02da6494-5371-4d8f-be13-8e059ad07c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b72599-ceb6-4f11-acdd-f0742f5ebf05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6427ca-274a-45a3-a326-64cdc2372764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e03b244-faef-429e-9961-43d6f3b6d55f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3916d42-fdb1-4182-97b7-602a0ca8d1b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c014bc-7b66-439a-aa6a-10d9a8de3e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05374aac-3ec2-452d-8fee-26471d9fcb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2578a33a-a3a9-44a7-8177-868e7c84a8a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7bce47-d384-44e6-bf69-c492103ab24d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80dd23a-4242-45c1-afe3-a3e3c2471834",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7506a538-b1bd-40f9-8f47-721acc09ccaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072ab14d-9de0-4b85-a9ef-e6928026c012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44676a68-bb9d-45ec-a468-50d1e96c7ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85da021c-e5a4-4501-bb1c-7eaf141140ff",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84196c18-d471-46e3-aec8-3e5643c03397",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1efd196f-a3a0-4034-9c65-95e658d28ecd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e31ac0-4851-4130-915e-ca1cab27ec0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9959f15-aa1e-46ce-b1ba-50d24aa0985b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d45a03e-fb82-4076-916c-11759b827de4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efba70b-7a5e-45d3-8af7-2bd62a57b034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def328be-0f3f-4953-a9e4-3428ff3cef10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5824fd-1066-4664-b8f9-51cead7249f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1733c4e1-17aa-4f5a-bcf9-34a80742cce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f1bda4-c8ac-4522-945b-c3abbd34f799",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74bc6a63-e0dc-403e-a351-0ab0259acc81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39545399-6d3a-4746-8ae0-ca6e863e439f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "122c4644-c1bc-48c9-86d6-5c0a8bb53dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e0b617-1cb1-4971-b2c6-c4b88a1dd645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ddb04d-2b27-4c2c-9b8c-da89e6a9b988",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991128b5-52d9-4baf-9ba3-60d8e7325a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fea1e8e4-96e5-4312-97ac-77836cf42047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b356433b-d691-461c-9fe6-08d1de4d269b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27947368-6068-4d68-8306-8860382484e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7608821b-f8d1-46fc-83ae-742a02d48e90",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "235aa6ea-3e8d-4d08-8824-648390ebecdc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48d2f9e0-2ee7-4c18-a467-287283e75da7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033c5769-4720-4f54-b5d9-88d4885fb469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9035691e-91bd-411b-b4d8-2b76bff41e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "580fee84-48a7-4906-9188-ea42d410c17b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aee84c5-025c-4ac3-9960-af0057a45b99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4160cf9-921d-4ee8-8bcc-d618fc4a5a67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8880427-1db0-4f6c-9f1b-ccc6b4c0ac9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9bd3e43-0f73-4de4-9387-7cfde7957f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860a3774-3be1-452d-a965-26a517ca0d62",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0002004-3c60-4416-bd1a-e4e227e62c41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87f374a9-dd80-4135-9e2d-105c31182754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05db897-5cc2-423d-875a-169bd199db6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e0b19b7-b6fb-4342-b583-c95537604532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b62949-4634-4ec2-b3bd-9e589e9fd2c9",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba027701-7bf0-483f-831a-9763cb88f203",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ff3576-a6a7-4e65-986f-55f1e40b64a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaaa2a2-aea2-4287-b4b8-1bd3d69eca54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c855db13-39e6-4108-afe6-a369c59ccab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1404fb5-8696-4ae5-9be0-3d0bb3bf9f33",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fe5984-c2e2-40d5-a07e-06313b04d395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83945776-f1e6-43c7-b864-da5a76adfb69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaf8fe6-e766-4a9c-b8bd-b7c8e7beba7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f7ff391-2b87-4a14-8b93-b52d98605386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407bb714-5240-4484-b6a5-2408049f94a8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70feff63-402e-4aef-ad83-e35dc93d05d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf757b4-1547-4e6b-b93e-d8eed4360ede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ad229d-db62-4c58-9a38-c760001195bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d6b58a-eedb-463a-b99a-eedd8bbb42df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4e02f0-6689-44c7-bedb-d494d7ea0f96",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded32cbd-89c5-4210-8658-f1d5a089057c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f65ea346-f561-4b47-81d4-836cbbfd55d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c27e92-7133-4340-850d-8b2772d3d0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fe4ae9-42d8-40d4-b9ed-ed61e8fa0e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc81a85-72ab-4874-82fb-d6d13de7dd32",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164ef6c1-36b0-4c4f-9947-44f5e5984ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2c6536c-bb93-48da-a5d0-b2740e8451e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49a188a-8109-4235-9d03-d50f20be311f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c1ff4eb-197a-4325-8fe8-92667eac4d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6a5cba-b4e5-418d-b1c1-57bfe1305c7d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da69ec29-f11c-4773-8f5b-0097e3e3f03b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946ad6f8-35e8-4d7b-9530-8bda5189a90c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a17292d-cacc-4bbf-aec0-4826981ed43b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5582f45a-bd2b-4a04-9737-e6ba465a12fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9610461-199d-44ee-b999-d62f3e3a4c31",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76a11bbc-e76c-4fbf-a146-d6cadd42b74e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9691c129-15da-4225-a526-26c79dc96b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1540e40d-bfff-45e8-af6c-c1d19ac25e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241769e2-3739-4772-ac5a-325f27db0074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99519120-86a2-4912-9606-5ec8be2048ee",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287f1c5e-e44b-46d3-86b0-a217b6b32eec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "035c16f4-0280-45d6-a590-bf6e9de6ed07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4738378b-440a-420f-9c8e-1fa4eeab8d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c44ec179-ffb3-4ba4-b6e5-3a29286ae07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee72448-2439-4fcb-8e40-0b98f0413443",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f18caa-3ada-4199-9aa2-382c4dc57162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aaf7667a-0517-40d6-8182-a323f3c6ffe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc9de54-891b-4210-b430-7af5a8e6c9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca4f0eb2-8a7d-4090-b2f3-cbf831cf405f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7485d4-974a-4200-969c-3ed02eeb167a",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4392ba-7ca1-4e21-9ec5-10d8e1ee9962",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deab3be4-f6f8-4ab2-b816-3cdbfac88596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5aa7228-b0ef-4509-8ae7-2f71f0ce3f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c7513b-2b73-43f2-aea7-8222dfd2f539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045349f0-f39f-493c-b072-5d57b0a05b78",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee2251af-04fc-43fa-a6f5-5f0d88c6f295",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a74d97bd-7244-4790-899f-af922a5bed11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "004d85a4-7ad7-4434-958a-b129d86450f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12525bd6-8b2e-4466-9be2-a0634e4d585b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86733796-306b-4ffe-89ed-89a7e162a04a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0993b6-2dee-4dc3-9d3f-20d10c01ada3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74c9cecf-7570-405a-af3b-e6d55ab03d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc5c951-46ed-4d25-899e-b89e2151c36f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc711412-3ee8-4e29-9da6-fee9381bbcb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38efc722-3c71-435c-b93f-3452aa28e70e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945c2caa-de43-4879-b9e7-940786deedc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a445611b-6a47-4052-8f3c-d899dc7bcd57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a64f16c-3f6d-4ac1-ab79-d05334b33b6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcc8c1ee-7fee-4833-be21-6c33292554c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a86563-d643-4fbb-870f-d0634a880ff9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104934da-c5ba-45a5-82cd-718db459ab0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0771a3d-6c99-4653-aafc-d333d3ead8e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9c00604-a78d-4782-9d4f-b00c84fa1b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02322bd-f584-4068-ab7b-b1d90ccb2b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcac6b1-7ca4-4040-b3b0-7c1e66114ae8",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "115615b3-34eb-4ceb-93f6-91a475fe4a30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27055b59-a02e-45f1-8176-54de66ce043c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5aa5a3e-dfbf-48ee-a631-13cf5094a553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ca1cbf1-a8e8-4088-ba22-c1ca6671a25f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4de231-030a-44f5-ba40-8dc79e20ed5b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ffa2a2-690b-4b8d-8157-1eff5e401a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "019c6516-7aca-49cf-86c2-5fa40180d3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "397437e4-e133-4e8a-aa26-1ea050a98093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eec786-0354-443c-86ce-917b2139d08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7157f0b6-ff72-4c5c-9aff-2616a1e8ee91",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf78a2f-64ac-4fc2-8abc-08dc1fdf74ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8381a52-373d-44d8-b244-fc2ab5c16187"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976a0dd3-6b86-43ce-a031-0a1b9cc8b083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4183e345-ec86-4b9f-abe2-22e0beeebf7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a453ad-65dd-4616-9359-32f99ac9dc4e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa7b943-6ac6-4731-806c-a0a6c1a6b65f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ec0f8a5-9796-4ec6-b3c5-2441960d3fb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3799d7f-c904-44f7-a818-9d64aa57cca9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2efea1de-3e73-4935-b381-b4c8ac1623cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f422f7-5288-4837-abce-540965f259fc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2943156d-9a40-43c5-9c1c-dac574183389",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b250717-255a-4f6a-b66c-ed02a439621e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1313fa45-3db7-4eac-98f6-d3fcd0c0b40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5053cbe7-0596-44a5-be6e-6123a4c4e247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e86aeff-56cd-4499-a206-f658b484ef20",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d552ad-79dd-4adc-832a-63303528da2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bde178d3-5143-481a-b3df-2d8af08d2caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a156437-083c-4f97-8b6d-32c6b2477f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bb50e0-0db9-412f-9c5a-e5c5e824e097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e446531-cfe8-489e-aa31-76fcc489c184",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e9f0f0-e925-487e-a1e8-9a47a6b9f36d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a0119d0-23a6-432d-9012-83f40770e26a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e274b6-b1f7-4dab-8c59-2ba2f7127107",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05b22688-75a1-41fe-bf02-961135e26bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffe1289c-6af3-4fee-b49d-b8266bbcc200",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8878ba-4d26-4fe1-a560-3d9ce4b8cd79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ab6a18d-9337-4889-9b9b-bb1268ea1b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb3399e8-e5fe-4143-96e1-6cde37ffaa48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "663a43cf-8f92-4668-831e-6321fc93a7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a631fc9-edf3-49f9-8014-040a3ae6efaf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "208bead6-ebf7-47af-9f75-bd01ca22bd37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9a125d8-ce98-4dad-a9e6-8a82d79a5659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe4526c-3ff0-442e-820f-7c6a7529c96b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049f9b59-d1a1-4ce5-865b-d80b3da542c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d9596f-6542-42d0-a204-d1344644ce3d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313d10b3-d5df-4ada-b15b-a97dc78090ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1281c1-d27c-4c3c-a51c-a055f8e555b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6a469e-779e-4350-b30d-ebabad9b3bc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48bd647-94ea-4408-9dcd-7abff3b5ed00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0d9f9b-853c-40be-9566-7c4c8b565f93",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b2d904b-0a2f-4aff-881d-b044d5fd9b6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67a34edd-815d-4a39-ba43-d5914b3a21f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a7d9cd-11d4-410b-bfef-00cffc84260b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5a39bb-d5fa-466e-81a0-eac6a7eb05c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49d2ba6c-1ed1-41c9-aa75-58d913d150ec",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d4a751-dced-469a-9da1-670da39b0a8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c27df4fe-b9e2-4c2a-913f-8e1925c7fedf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f2906b-1fb1-4ee2-a7d9-9b5ac1eaae5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1b8f0e-ccdf-49fc-aa9f-ef9bc3edd70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857931d7-6b99-43d5-a8b4-d047258372fc",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0554a637-191f-4348-ba7c-ed4ae09896d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "924a8258-d905-4a1f-b827-0a03eaec0308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b5c0db-dda4-4643-bd39-2b9a35563c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e995c0cf-195c-45c4-8bbd-89b6624fb470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88e2862-227c-4225-9a7b-bc33f9f315bc",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68c12cb-787e-4f62-992c-17accd0e9cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e9ed2c9-3152-4725-b288-9310a6fc6018"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "197dd32e-35bc-4dc6-b65b-b3bbe028ea06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb82963-aa9a-4aff-a19c-8535b6d19983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ce092c-8db9-4d42-a4c8-9dbec794ce63",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "777f634c-f9be-4c15-b5d2-9d5a1dfa0db2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35a6e32f-f6c8-4aca-b43d-1acca761b649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4636ddec-0f13-4ea0-8b21-1295342c0384",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6f584d-f696-4abf-a771-8c9f2540abaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dffd61b-e0c2-4c29-af13-12d71457ba03",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0962a0c0-3b37-40e5-aaaf-213dc0cb933a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83f96eff-c529-49e4-b910-6a077bd960ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f221064-29f7-485a-9da0-be024176222d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50f1571-edc2-4414-9011-a9ab5c4c9ad5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "277aece6-9b89-4087-81c8-cd5cf75ef4a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad1a9bf8-53d2-4530-8ef3-7228fd9f8b5b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "963b8d28-1595-4cd9-8a6c-e0848cfec005",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5bfd4d4d-4bb0-420c-8e38-c22a1e229f82"
                    }
                  }
                ]
              },
              {
                "id": "26ecb8be-9e67-471a-9286-1f768ad971b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c84e1d1b-179b-4b80-872d-089cc12c153c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6427d05b-e594-40c1-b38c-a6ede99564df",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7c76939c-eba7-4d61-b94b-be8f164ca3e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85b6306-cf3a-4cc3-91de-57081790cd35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12ce45f4-755b-4993-9d65-71b141dab776"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9d2e1b1-6254-4d83-96ff-ed2a33c1e8f9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fea6f93c-ba0c-4938-834c-53565a3e6bde"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9938afbe-ecb4-4c3b-aff1-ac6e03eba199",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cdff27d8-fb79-4a61-9fa0-0e4bb53bde4e"
                    }
                  }
                ]
              },
              {
                "id": "e4134fca-6711-4e2e-ad97-3bd30f45b7e6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fd6b3edd-1b2b-4c64-b94a-d563ce1339fa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7d360e-9971-4f27-b381-f3adbba2f673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "39956c45-47b7-4eaa-9d20-320a9505112e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c62e01-e82e-475e-bed0-5db7eb5bd847",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48ce535-6ed1-4f37-aa90-e2639f3e642b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d47f2257-f1bc-4b04-8425-5c56f9b8b7b0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "11755510-0b40-4673-b0aa-bb10ca489d82",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebff5b43-8f4e-4895-93fc-abe5c433e32b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "81c2f455-4a2d-4da1-bdc8-a42fce89fa73"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1db01421-54a9-455b-b1ca-b9f1e492d0ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0a635fd-c898-4a06-aa8d-b7c2b3c43c51"
                    }
                  }
                ]
              },
              {
                "id": "16021351-ec94-4c96-a77d-afd43b7a145a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9ef3272-ddcb-49c9-bf16-5b3b3aa26078",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "06d2b0a2-b168-4ba1-8c1b-1c31f4e538fd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "558a85ac-05ba-4ce2-bf91-5780c0f497b2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b52d73d5-9dc6-43af-b270-b51a31eb1d52"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "722db455-e657-479b-ac4b-701e1f967321",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5ec40731-aa7d-4a59-bf7f-85ab6217dcd7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f793a38-2a1c-453e-b821-95c30ebca0b1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49fe9742-6e80-49ad-a0fd-3b3572ecec6c"
            }
          }
        ]
      },
      {
        "id": "3be6e6f6-f9f5-49e0-9b7e-baf59835a050",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f3b7e071-4a07-443c-827a-982e3e09e0ca",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0835477-692e-4c29-8ebb-39476af09281",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65143fbe-77ac-47a4-9ffd-f581ba676298",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc385310-8b41-4ef3-9ec8-b02ef543882f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "52c4efc9-f383-4984-a899-cd06d0aa8069"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22dc08a-6445-492a-8b17-4c12b509796b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0105ef7-8b4a-4f0f-a338-fff78acdd865"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "722c929c-8662-4567-8fd0-094cd2a5382a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ae39af5-9740-43c1-a958-99da1cf07571"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb5ad4fb-58af-4dc2-ab03-50ce233d9fef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "367ac96c-0e67-451d-a841-25f9adcd83b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54dd01cd-994f-4e43-90bd-461d870556a3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f4ccabeb-fd97-47ca-9349-1a8036928ae1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c61c6606-b62e-49e0-8fe6-6fc5cd868bc4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "878bda1c-afed-4037-a3ae-d5898ccc5b7a"
            }
          }
        ]
      },
      {
        "id": "9c5e4a70-917a-4d7a-afad-1fa677597df9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9c9ec83c-6f0e-4c51-ba40-fbc6e7c9044c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3adcb147-5ffa-4120-ab21-5374039d1934",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04fee61b-51d6-448f-834d-254e540c68bc",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b58f52-f0e3-4ea6-9171-50b179f2cef4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "916ad1a6-8c0d-43e0-b2ee-0e3bc6aa2e78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7b98ff-fa38-4a06-9c92-e0372823fa5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43420bcd-910e-4b52-9799-5198d7bdd168"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebb89567-fd59-413e-b2c0-e4c370498036",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62af2e44-258d-49a4-b09b-2963ff432b63"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "10a47cb0-7e5a-43e1-bd3f-be95f529eac8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34ad1df2-19aa-4e15-8525-d088ca1924b4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c32a77a6-2efd-499e-89fd-4faaff56b884",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "393cc040-cded-4c31-ad3f-77d5efabb767"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed88a3f9-e7a7-407f-810c-aeef03d61ea1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b20cc89e-9978-415a-a8fb-bc90ab9ce80b"
            }
          }
        ]
      },
      {
        "id": "cdd8e6e0-9a64-4e68-8363-54e6e3aa10a6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b1e9af36-a8cd-4119-9fd0-c0a6d9fd8d6a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6b46ef9a-7fc2-45de-bb22-16c0a62ab494",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39944d7e-56dc-45d2-9e81-dc26ba8c98e0",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e2f09b-b396-4800-8c31-3b0e91cee0b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9d0521c5-8a80-4353-a87f-0c73b00a2dbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a565c5d-542d-47a9-a32b-ac66ed19fcfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b30d5bc-e5e4-40dd-9d3d-f039d2ef0f91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4253538a-88c2-4921-b79c-74825ac23cd1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a50e7967-9929-4cef-8a5c-abe4c6349bc6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "807fdd43-8076-48b4-9d49-71edd6cf44ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2d1eaaf-00a2-407c-8b78-f3812dae9f97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e712d2bc-9773-40fb-bdf7-6d9940114c58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2f34f59b-7ce8-4168-9070-3e56096acbdf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a62b2cc-c840-4617-a207-765e156d3d23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6ec13e3f-cb41-4511-94c3-9f3ef6a931a4"
            }
          }
        ]
      },
      {
        "id": "7afc2719-07ac-4009-860b-68832ab17e18",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "737b6189-e9fa-42e1-b4e4-c5d2b0d2952d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5b4b5eef-0bbb-4e0f-8983-7f30bcfeeeec",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9070e2aa-cb44-4c9d-98a3-e786a5937022",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a018c5ae-3697-4b6b-b538-de04ee3b6173",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c68dd8c7-bf01-4b40-88a2-8f91e876aa86",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 125.64682539682539,
      "responseMin": 4,
      "responseMax": 9990,
      "responseSd": 696.3839867585492,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715560660398,
      "completed": 1715560700663
    },
    "executions": [
      {
        "id": "65df842f-e94f-434f-9989-22204afbcc94",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0a326c35-b087-444f-8e0f-70cbfb144926",
          "httpRequestId": "346f0314-919e-4969-9a6a-2f89f6dbd886"
        },
        "item": {
          "id": "65df842f-e94f-434f-9989-22204afbcc94",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cd94a2b1-406f-460e-b111-56d8e4606ff1",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "7a559333-7a1c-4cd7-a814-1e9e15509dd9",
        "cursor": {
          "ref": "5d21961c-dd4d-48bd-99c3-cd80924229d7",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cced3b21-8f0e-4e48-a7b7-d1912b37bf81"
        },
        "item": {
          "id": "7a559333-7a1c-4cd7-a814-1e9e15509dd9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c70b1e29-f585-4aa2-8ecc-419ca2189322",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "aa277fa2-3d9f-4e53-96c8-312059659cf7",
        "cursor": {
          "ref": "b43c64ae-5656-4243-9bd5-89bab2b5c5c2",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "60b8c6ce-7d5b-470e-8989-b221f1877e24"
        },
        "item": {
          "id": "aa277fa2-3d9f-4e53-96c8-312059659cf7",
          "name": "did_json"
        },
        "response": {
          "id": "1aa1e9b1-4670-457e-9da2-6676ab991e11",
          "status": "OK",
          "code": 200,
          "responseTime": 323,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb78565-f783-49c4-a15e-392d3ba8d6c9",
        "cursor": {
          "ref": "a5ec7b81-0ab6-4f5a-9fcc-d4815c97aac6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5cc6899c-fe55-466d-a876-9466409146aa"
        },
        "item": {
          "id": "1fb78565-f783-49c4-a15e-392d3ba8d6c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "575a8378-b575-471f-98d8-d84121e3aa78",
          "status": "Not Found",
          "code": 404,
          "responseTime": 326,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb78565-f783-49c4-a15e-392d3ba8d6c9",
        "cursor": {
          "ref": "a5ec7b81-0ab6-4f5a-9fcc-d4815c97aac6",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5cc6899c-fe55-466d-a876-9466409146aa"
        },
        "item": {
          "id": "1fb78565-f783-49c4-a15e-392d3ba8d6c9",
          "name": "did:invalid"
        },
        "response": {
          "id": "575a8378-b575-471f-98d8-d84121e3aa78",
          "status": "Not Found",
          "code": 404,
          "responseTime": 326,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca66412-f0f4-4746-9796-723e4c6d7c64",
        "cursor": {
          "ref": "7316e3ec-4a51-4df2-9615-ae88ec628a02",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1b333e04-9d11-47ce-a4c5-152811e54a04"
        },
        "item": {
          "id": "fca66412-f0f4-4746-9796-723e4c6d7c64",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "36e0765a-6d03-44ad-9dd9-2340e54fa4de",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05db97d-da61-4f30-9aaf-59496c48d481",
        "cursor": {
          "ref": "188e4329-9678-43f3-bc39-66a891176812",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "4ab20db4-67e6-4ae3-b027-c10fad3c9e57"
        },
        "item": {
          "id": "c05db97d-da61-4f30-9aaf-59496c48d481",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "981defb2-c5e9-4e52-ae9c-074a7ee01118",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f31193d-3e6e-4d9f-ad47-65fdf4947170",
        "cursor": {
          "ref": "9a4db7c3-2fb6-4a61-9b55-a2c97acaddf9",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8105362e-f755-4729-a5ca-bcc540dd517a"
        },
        "item": {
          "id": "9f31193d-3e6e-4d9f-ad47-65fdf4947170",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "ebf42125-0706-40e0-9b3a-f22de7346a5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 18,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d0b675-35a3-4b60-aa35-cf9689e1fc9a",
        "cursor": {
          "ref": "edcf8c92-48c2-4240-9e07-6b6773a296ed",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "644db16f-2924-4b7e-a53a-7d85a783e5bb"
        },
        "item": {
          "id": "40d0b675-35a3-4b60-aa35-cf9689e1fc9a",
          "name": "identifiers"
        },
        "response": {
          "id": "36cd473d-8191-4cfa-9aca-4c5ab22e3442",
          "status": "OK",
          "code": 200,
          "responseTime": 36,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d07247-6f38-4919-a341-509906ace1ca",
        "cursor": {
          "ref": "7dc989b8-9778-4af5-ba52-c185a7520d0c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "888da880-ae91-4d47-8947-a24cfe0da311"
        },
        "item": {
          "id": "84d07247-6f38-4919-a341-509906ace1ca",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "646408b3-abc1-4886-b80e-8a0ca5d78a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37191418-4e25-4e27-80a7-d433df36c3e3",
        "cursor": {
          "ref": "3975fcc3-53df-4bdb-aec2-3eb8199f5523",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d62be557-27ea-4564-959e-a5a6bd536d89"
        },
        "item": {
          "id": "37191418-4e25-4e27-80a7-d433df36c3e3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "6ca7e836-22d5-4d73-aa5b-2a6063383676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07812d60-100c-4a96-9082-e670a69af27b",
        "cursor": {
          "ref": "3fa96cca-cd08-47c5-8ccb-9aae382daaff",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "46db06bd-b90c-4da7-9464-e80931febbd1"
        },
        "item": {
          "id": "07812d60-100c-4a96-9082-e670a69af27b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f37d0218-23d8-4e22-b50a-0e0ccf4036a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f09364f-780d-46fa-bbe6-df9c5063b8d1",
        "cursor": {
          "ref": "80ad6904-b8bd-4eef-a458-f7d9232298b6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "56a78082-47b5-485c-a362-07b36cedeb0e"
        },
        "item": {
          "id": "9f09364f-780d-46fa-bbe6-df9c5063b8d1",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "89c26e40-585a-4651-8787-e03fa7d93132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2421f7e0-db4f-4d7f-b09d-99a43ecc4959",
        "cursor": {
          "ref": "5b3839c5-4e3b-4132-be76-5002e7ae8236",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a50865e8-bb42-43cd-a5c5-73a5eaf144ad"
        },
        "item": {
          "id": "2421f7e0-db4f-4d7f-b09d-99a43ecc4959",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "9abd679e-2757-4317-934e-ff2e35739e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5539e506-a830-4825-a917-773d1e585af9",
        "cursor": {
          "ref": "b0fba871-797f-428b-b25f-2c9590417101",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "7a4d31c5-9148-4d8f-bedb-00fc9d2bc877"
        },
        "item": {
          "id": "5539e506-a830-4825-a917-773d1e585af9",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "c90f5c7e-dae4-4d50-a0fd-7db0d57e4bf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf5b3c5-bfc5-4ab6-b394-8f5157e8ac1c",
        "cursor": {
          "ref": "623ecbd9-ab75-43f0-b2e7-a7bab7c43807",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5db60ea7-2836-406b-8077-041af3b4c1b0"
        },
        "item": {
          "id": "fbf5b3c5-bfc5-4ab6-b394-8f5157e8ac1c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "86967490-b3d4-48aa-8e72-3ccd60701781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "634c1002-5b4e-40a9-bb15-b18ffe30a572",
        "cursor": {
          "ref": "9b416526-c714-4652-bac6-56399db81fb8",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5ca44298-c5c3-41f1-860e-6b3e0c68339e"
        },
        "item": {
          "id": "634c1002-5b4e-40a9-bb15-b18ffe30a572",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b949b54c-1351-45e3-8b34-890494b7e313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f1f485-7f24-4e51-be79-e034d0c31f47",
        "cursor": {
          "ref": "442d3176-b96c-4b83-94cd-69fce0c5b870",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f3f8aaeb-6d67-4047-aaee-d50f72a38ed0"
        },
        "item": {
          "id": "b5f1f485-7f24-4e51-be79-e034d0c31f47",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c66fc830-4c77-4997-9384-3d8bc1e2de07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f7f913-52ea-4967-a667-a95ff782f618",
        "cursor": {
          "ref": "b236f4c2-7d08-430c-8dc6-7a7a33d85a5f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1227f14e-0725-46e5-ba32-c60a791e3c4f"
        },
        "item": {
          "id": "d3f7f913-52ea-4967-a667-a95ff782f618",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b6f42e85-d12f-495c-93d2-62ab2e46a4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a402832f-3a82-4ec4-82be-07ff1899fadd",
        "cursor": {
          "ref": "a412b4bd-007a-43ca-86e3-99ae229ae43f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1c454500-4cf0-487f-aa77-b25a51908024"
        },
        "item": {
          "id": "a402832f-3a82-4ec4-82be-07ff1899fadd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dc14db7e-b395-4666-bee2-76d6326c3ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d4fa6cf-015b-46aa-9411-e2d4c3011993",
        "cursor": {
          "ref": "ff66b92c-2bee-4bc2-bff8-4630e70acfce",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "355b8987-b5c5-4cc7-a303-d0213b6a1bd9"
        },
        "item": {
          "id": "6d4fa6cf-015b-46aa-9411-e2d4c3011993",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "03b7d06f-91c2-45f1-8e51-97f7e16001e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0808dafa-9f2f-47c8-a955-9220858f0e23",
        "cursor": {
          "ref": "aa3e7dff-7588-444d-9dac-4ab09b691c5c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ec0c50cc-0973-4585-b510-1d52231b5e91"
        },
        "item": {
          "id": "0808dafa-9f2f-47c8-a955-9220858f0e23",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ce55882f-64e1-463b-b731-8981f3d5391d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e6e9d60-6e04-46b8-9696-bc2b21be4115",
        "cursor": {
          "ref": "4f002d37-ef83-497e-91c1-69768bf9e572",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3c0e0a36-bfcd-4c07-bfa5-1b38091c5529"
        },
        "item": {
          "id": "3e6e9d60-6e04-46b8-9696-bc2b21be4115",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "538db9d6-9074-4f57-af24-5951e11904eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88964345-85db-4451-b27c-be7af89af766",
        "cursor": {
          "ref": "0195e551-2d93-400f-bb91-ff5d44e71505",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "25bec6d1-2bbb-454a-9d64-e38ff1d844a3"
        },
        "item": {
          "id": "88964345-85db-4451-b27c-be7af89af766",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7d762a4d-7f39-4133-872a-31705fbd8926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7a06cc-4bce-4b22-9994-6f9917039343",
        "cursor": {
          "ref": "e9d45a7c-1d2d-4c73-a84a-cff6c9f031ea",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "46ed208d-a95b-47bc-937c-592b30006f70"
        },
        "item": {
          "id": "bb7a06cc-4bce-4b22-9994-6f9917039343",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "03a73e1a-0001-4884-bd6d-24c90cabceaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5663faf4-67c2-478d-ae4f-8ccb92cd3b67",
        "cursor": {
          "ref": "3148cefb-b5ae-4a63-bdb3-8ab32d032fca",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "302e849b-3f18-45ea-9c66-af075f27a616"
        },
        "item": {
          "id": "5663faf4-67c2-478d-ae4f-8ccb92cd3b67",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "f9e1c1f9-17e1-44cd-bd0a-4de9f99e1973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef5437ed-6e8a-430a-8ced-d5e97760525b",
        "cursor": {
          "ref": "fcd32e76-8468-4a04-bd9b-9514617f9f66",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f50cb512-26bd-4763-af9e-ff931de07d18"
        },
        "item": {
          "id": "ef5437ed-6e8a-430a-8ced-d5e97760525b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8b86dcee-d5a1-40bb-a488-684fbce98e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffb9e08-898c-4597-b235-0dbd62a9dabf",
        "cursor": {
          "ref": "26b15cbd-789d-4337-87ee-a5cbcaa69799",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "054f1b14-b28c-4f7c-b5e0-7801d2792ea9"
        },
        "item": {
          "id": "3ffb9e08-898c-4597-b235-0dbd62a9dabf",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "38fc11b8-2d27-423a-bc2a-6b18c6ac5846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fb8273-9a1e-4449-8d90-e5d5e1368f43",
        "cursor": {
          "ref": "9150d995-df18-4f57-877e-52fc89a40e33",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "97179d04-3953-45d7-95b2-96370eb33a5c"
        },
        "item": {
          "id": "15fb8273-9a1e-4449-8d90-e5d5e1368f43",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "99ece753-7045-4acb-bf91-664644104c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3167de-4d55-4f3f-8867-0158fced013c",
        "cursor": {
          "ref": "500ad08a-e0aa-486a-9109-1b4f95ff0745",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1925f909-d9f7-4995-91d6-0578aeac61a4"
        },
        "item": {
          "id": "8e3167de-4d55-4f3f-8867-0158fced013c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "ced71326-56e9-4653-ae02-040a2f94a96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b2af8f-88c0-44d2-9e7d-f4800c8c290a",
        "cursor": {
          "ref": "8103082b-676f-4b40-b7f1-37ec355d58cc",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c7dd3377-9169-4c7f-9eba-075cce22d286"
        },
        "item": {
          "id": "b1b2af8f-88c0-44d2-9e7d-f4800c8c290a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1955edfa-6ac2-46c4-8b0e-d1ffa799fafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98640260-3b70-458e-9e25-025b7ce51e72",
        "cursor": {
          "ref": "2a31f7bd-0e61-498b-aeea-b82104f0b7d9",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "29ed8f78-85a6-4006-ac0a-82df6458c6b5"
        },
        "item": {
          "id": "98640260-3b70-458e-9e25-025b7ce51e72",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "68eac778-9407-4d66-99f5-61f18f924ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b300c6fe-134c-4b13-bc7d-5ced65fa24dc",
        "cursor": {
          "ref": "141b80bd-4937-4705-a2b0-04509d3ed9fc",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8c382393-7f8f-4c41-9e8a-cc8b08487c14"
        },
        "item": {
          "id": "b300c6fe-134c-4b13-bc7d-5ced65fa24dc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "541dfa1d-0e59-4a18-a629-2b60aee5f195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c01376b5-d47a-4fb0-a673-e176e946d17f",
        "cursor": {
          "ref": "1dc17192-fd85-43b2-9c0e-cb79822e7e08",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f28d74c6-003b-4eec-a6ee-0c292e556763"
        },
        "item": {
          "id": "c01376b5-d47a-4fb0-a673-e176e946d17f",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "cebd6131-dc4b-435f-afd7-6f3127c8915e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9636bbd-8852-46b3-93eb-5904dd280981",
        "cursor": {
          "ref": "f0ebfb01-2988-4a39-b00c-0d055f452e74",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3fcdd4d6-220b-443c-a1b8-c16eebd611d4"
        },
        "item": {
          "id": "a9636bbd-8852-46b3-93eb-5904dd280981",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b1b1f7c7-8178-48c2-90b3-daacee832a78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f6b0d04-636e-4e9d-9502-9b763c755979",
        "cursor": {
          "ref": "4da8d265-7ab3-405c-be21-8373d2ac1a17",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "97cea5f4-7391-444a-a786-a925c60c0b30"
        },
        "item": {
          "id": "0f6b0d04-636e-4e9d-9502-9b763c755979",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "59d633b5-b1c8-4523-bb58-31ec537b9d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae892244-9a9e-488e-be7f-cbefff66abde",
        "cursor": {
          "ref": "779cdfe7-c451-41ef-a29a-f7b184979b3b",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "00f42e29-57ed-4f66-8658-c1e98c7aff0b"
        },
        "item": {
          "id": "ae892244-9a9e-488e-be7f-cbefff66abde",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8d1874b2-316e-4497-8e17-1e542dd540b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9e88e87-df3e-4e1e-87c8-d07f978211f7",
        "cursor": {
          "ref": "5357c740-737b-42a6-b590-d8e76b1ce2d6",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "73802aa3-0850-42d7-bc08-720f8708410f"
        },
        "item": {
          "id": "a9e88e87-df3e-4e1e-87c8-d07f978211f7",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "737e6017-a1b1-4181-ac74-ac04aeeacb4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ed5ca6-96fc-4385-8851-e473b079640d",
        "cursor": {
          "ref": "a1133593-75f7-4eaf-9a3a-e1f253143ee8",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9e2ac5bc-7375-4136-8bf1-8fade7ce4186"
        },
        "item": {
          "id": "43ed5ca6-96fc-4385-8851-e473b079640d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9bf55440-98d7-4710-91ef-c61cf7fd575b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae1fff6-8312-4504-988c-0718a6c5c70b",
        "cursor": {
          "ref": "9a8c4b66-d3be-4599-a45b-468f6707d3f5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "878f82df-db2e-4234-9606-04bf96299a76"
        },
        "item": {
          "id": "0ae1fff6-8312-4504-988c-0718a6c5c70b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9962af05-82a6-4497-8d3f-7fefcda98c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abd9f26-e1e9-493a-b40f-c28e53b98ea2",
        "cursor": {
          "ref": "6bfd8612-2768-4bdb-b55c-575b84d2734e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4f433556-e93d-4f23-92af-aaf604a8fac7"
        },
        "item": {
          "id": "0abd9f26-e1e9-493a-b40f-c28e53b98ea2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8ea43b63-eac5-4c33-aec8-cc958674cd20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9640cd51-4bf3-439f-bcca-64737a36ea1e",
        "cursor": {
          "ref": "a83c7b9d-8257-4fe6-97ce-a2b0cd755498",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cc036ada-8473-4572-972f-f18598dd5005"
        },
        "item": {
          "id": "9640cd51-4bf3-439f-bcca-64737a36ea1e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "eb56c2ce-8357-4a36-a505-cfce374e99f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f46e82-5de4-4338-a582-5b11a68f770d",
        "cursor": {
          "ref": "11988097-e25f-4efe-b277-d7af839e4cde",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a2f25ac9-8015-415c-bcf7-77839c396016"
        },
        "item": {
          "id": "c8f46e82-5de4-4338-a582-5b11a68f770d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "15f3eb0f-abe9-45e9-804a-c9fb84cfdee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41ed01d-0feb-4481-ab4b-72abfa4fc84d",
        "cursor": {
          "ref": "c39ca6da-f8a6-4a21-882a-dbccfdd11ca2",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "72ae0c17-0466-4bd9-9244-f32683621489"
        },
        "item": {
          "id": "b41ed01d-0feb-4481-ab4b-72abfa4fc84d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "65036d40-cbc7-478a-abc5-e345d8bf547b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565fc5b3-e568-48a6-8167-148a678086f0",
        "cursor": {
          "ref": "7e262ee8-8a98-456d-83a4-3a1c0f88702c",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b6a9cf96-2bfe-4f27-899e-bc6a040e9dd5"
        },
        "item": {
          "id": "565fc5b3-e568-48a6-8167-148a678086f0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "36901ba8-fa0d-408a-a2a9-b2bb2c12810f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fe0c15-a9ce-4183-91cb-5ce24d825c4a",
        "cursor": {
          "ref": "5c7f8311-aec8-4ca9-a540-6b7a829ddac1",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "28250d73-3fe1-4b11-8af2-2805f505a45e"
        },
        "item": {
          "id": "67fe0c15-a9ce-4183-91cb-5ce24d825c4a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8c5c7b61-95a0-4745-8ea2-f837ec97a8ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f14e7a-cb7b-4c76-9eb1-71d38ede19e5",
        "cursor": {
          "ref": "817f9a38-76f7-47e4-8aec-96bad13b2015",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1aaed81e-24ac-4333-beb9-30b57f1dd69a"
        },
        "item": {
          "id": "49f14e7a-cb7b-4c76-9eb1-71d38ede19e5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "035a923c-c027-4618-8759-574eafae528d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68eba34f-a70b-4125-a35b-8528000c7345",
        "cursor": {
          "ref": "a6ea2ee4-e791-4246-9b83-289e1a796c53",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "db8e4660-ae6d-4951-bfaa-c310e6271cde"
        },
        "item": {
          "id": "68eba34f-a70b-4125-a35b-8528000c7345",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f8dbd229-5d31-4a87-9c46-213614e7efcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55c5b09-d356-4121-a48b-4644e458e43f",
        "cursor": {
          "ref": "84b0a897-6310-42c8-9114-0507abb7ceea",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "196caf37-4a62-41af-b320-c07a6c8a2c9c"
        },
        "item": {
          "id": "a55c5b09-d356-4121-a48b-4644e458e43f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f2a98958-fcf2-436b-8e4b-b5e81d8d163f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7c20e2-e865-402c-ab3a-d7422c4591eb",
        "cursor": {
          "ref": "4828ff32-d46c-4dae-ac93-1fa013f85d4e",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "020b8293-7b9a-4cbf-99b3-a52b034986eb"
        },
        "item": {
          "id": "df7c20e2-e865-402c-ab3a-d7422c4591eb",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "1cdfa94f-b43b-4fa6-a918-82ab94ab9c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a72959f-fa78-4ab4-a06e-8634723fe714",
        "cursor": {
          "ref": "b6864a0c-9509-42ae-8422-b46568cc6e7d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4a98223e-5e9b-41c3-85e8-436e1209172e"
        },
        "item": {
          "id": "8a72959f-fa78-4ab4-a06e-8634723fe714",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e71f86be-86ec-4866-bea5-532abec82ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 943,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fce958-16d7-4363-9618-a768c73f6d33",
        "cursor": {
          "ref": "6da69634-5467-439b-b563-b171ca2c9988",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4b592f2e-2305-4d29-9d23-5927ccc805c7"
        },
        "item": {
          "id": "75fce958-16d7-4363-9618-a768c73f6d33",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "427bd196-1d9a-4108-9c8b-ba80939fe711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ebca49-96e3-4c2b-aa37-b227a3c64281",
        "cursor": {
          "ref": "9b075c9b-9d1d-4076-aac3-d63c700f54a8",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fda4c0cb-7960-4167-b87f-a60cbda1ec97"
        },
        "item": {
          "id": "04ebca49-96e3-4c2b-aa37-b227a3c64281",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "94139939-7154-47c3-9503-76cd649ca680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d1ddf1d-0863-4c75-8c0b-529974fc6e28",
        "cursor": {
          "ref": "d4fa9dc5-7480-40a3-8b2c-c21dc6ddb9a7",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0f9fe063-a1e1-4f02-93f6-6ecb5b6a0380"
        },
        "item": {
          "id": "6d1ddf1d-0863-4c75-8c0b-529974fc6e28",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "473a7897-3e97-4e38-bfc7-d927d958dc47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27677f78-8f7b-4fad-bf72-a40d9caa2d4f",
        "cursor": {
          "ref": "d7dc3a56-9630-48ef-9bb9-ae038b515a60",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "be08f784-9a82-46db-b61f-f2d2860b10e6"
        },
        "item": {
          "id": "27677f78-8f7b-4fad-bf72-a40d9caa2d4f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8b28f543-097a-4e60-a56f-5b90e12a04bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf82c5bc-d801-4483-88c2-070b2dc6ff39",
        "cursor": {
          "ref": "23926d7e-c6a9-4a28-886e-b82500376df0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bbf65457-32b6-4451-b68a-c62eaa200965"
        },
        "item": {
          "id": "bf82c5bc-d801-4483-88c2-070b2dc6ff39",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f569cd8a-6fc1-40b9-b6ea-8c72f74c800d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bee495cc-0b1c-48f8-8438-46a858701471",
        "cursor": {
          "ref": "7eea1397-d701-461e-969a-c7d60418febe",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a01eaf5f-ecd0-4435-ac5e-8abc545f6b5e"
        },
        "item": {
          "id": "bee495cc-0b1c-48f8-8438-46a858701471",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b9a4cab1-09a4-4eba-bf66-c9303b2d7cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01013dcb-fd0d-4101-9071-678d7056e1e0",
        "cursor": {
          "ref": "6cedaa93-99cf-4bca-831d-a0444e99caf2",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "42177540-91de-4ce4-a04c-141e6b5fecbb"
        },
        "item": {
          "id": "01013dcb-fd0d-4101-9071-678d7056e1e0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d7290a59-12f7-48c5-8600-3b607a5a42fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d5bd3b-9584-49c4-9d74-7dfced1c95e3",
        "cursor": {
          "ref": "3d98ac0f-15c7-4e79-8fe4-0de3b8fcfe61",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "38ebf3c3-3259-4b06-9cf3-3d7a5b13d370"
        },
        "item": {
          "id": "42d5bd3b-9584-49c4-9d74-7dfced1c95e3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3f3a18a0-96ed-4e5a-845a-3e16830a56af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b3a3ea-7707-41f3-b34d-3822db917a0c",
        "cursor": {
          "ref": "60c117af-c057-4d52-a460-3e865b37968b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "0928cbbc-cf9f-416f-9a09-5bcae55917c7"
        },
        "item": {
          "id": "10b3a3ea-7707-41f3-b34d-3822db917a0c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b7ea82ad-aa20-4ec2-b712-d03bf560f16f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "633d55d0-4d04-4a8a-aa1e-38a560e3ad2a",
        "cursor": {
          "ref": "a57036a4-f201-4bfc-8f6f-aa6303c3a471",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "34056b12-8300-42df-8d43-a27a38e9da1f"
        },
        "item": {
          "id": "633d55d0-4d04-4a8a-aa1e-38a560e3ad2a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5ca69d6c-5d8a-483d-b9b4-e70d038ac0d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc3bd9d-e893-4397-b9e0-d9b2844a188f",
        "cursor": {
          "ref": "1cf54983-81b0-47a4-8544-72e4889bd506",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7655a8b2-5afc-45d2-bf31-83145c7e508e"
        },
        "item": {
          "id": "ffc3bd9d-e893-4397-b9e0-d9b2844a188f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f8478955-5274-43ce-aa05-40ce12019444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db0d095d-1497-4624-8e54-e2f3bbb28278",
        "cursor": {
          "ref": "add0d3c8-a25e-43d8-bc68-1b1dedcffb6d",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b769ae66-1bfd-4e77-9b71-e303bce27b35"
        },
        "item": {
          "id": "db0d095d-1497-4624-8e54-e2f3bbb28278",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f4156444-0e6c-4507-ba87-e066dde3f161",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f42fe56-6106-4987-99b1-81ad92a41eb4",
        "cursor": {
          "ref": "391be1ec-0713-41a3-8d1a-7bb0527052b4",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "da690e3b-84c9-4b89-ad5e-a957599b75ef"
        },
        "item": {
          "id": "2f42fe56-6106-4987-99b1-81ad92a41eb4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "59b19402-af83-4112-9f7a-7db29a86e7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d815ef03-7424-435f-94c1-3fa97187a0eb",
        "cursor": {
          "ref": "37eb4f42-5da8-40d2-8290-ab5ee049f779",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "5454eda9-b45d-474e-811a-e012f0906cb8"
        },
        "item": {
          "id": "d815ef03-7424-435f-94c1-3fa97187a0eb",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "66e3ec9d-3360-4a8b-aacd-2af86feddd44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381d8ce2-0dca-4f7f-bcac-5c65d1d4455b",
        "cursor": {
          "ref": "2889fd17-0e75-43e9-8fe6-6caff2c88b4d",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "209d9624-66d7-404d-affe-1fc9a2eae1e2"
        },
        "item": {
          "id": "381d8ce2-0dca-4f7f-bcac-5c65d1d4455b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4a4ee478-cf44-4d30-9354-cf382027fc2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84cb71aa-7085-4754-b5b1-6755f48b88eb",
        "cursor": {
          "ref": "979c0616-d490-49c4-a0a0-d12490029fcd",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "93cf0fff-75de-46ae-93e5-af1799e77509"
        },
        "item": {
          "id": "84cb71aa-7085-4754-b5b1-6755f48b88eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5e758a97-19bc-43d4-829b-e05cc297cc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23557b56-689a-48db-9216-ab1bbf00fddf",
        "cursor": {
          "ref": "be174dc5-1d93-4858-b0d2-9ed366287093",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "062d5a51-77af-4041-90fb-2513275e3f24"
        },
        "item": {
          "id": "23557b56-689a-48db-9216-ab1bbf00fddf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2af441fd-8a6f-4bcc-87f2-c185312611aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b34ec0-30cc-488f-b646-2fe752f92fbf",
        "cursor": {
          "ref": "d4cfe8c9-1a06-4c2d-8973-0c30a06602f1",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5ffb231f-bde0-495f-b8a5-ccbbc0f3ee9a"
        },
        "item": {
          "id": "a9b34ec0-30cc-488f-b646-2fe752f92fbf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "cdfd4a51-3f01-4563-b240-a9f130575a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a70932-1121-4328-8b28-ee5f554aaad9",
        "cursor": {
          "ref": "d0aa1b3e-0085-49d5-b6ee-b912da066e02",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8da5d1a1-eb1f-41f1-ab72-760ae46e7bc2"
        },
        "item": {
          "id": "b9a70932-1121-4328-8b28-ee5f554aaad9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d654ebca-1092-412a-8049-a62679ba2d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9dbe5fc-3811-491c-a4d9-4a5e7d4f089e",
        "cursor": {
          "ref": "1643239f-6e4b-4c96-9955-c42d4293f414",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bde61c45-8877-47b1-abc3-2d1e5bced303"
        },
        "item": {
          "id": "b9dbe5fc-3811-491c-a4d9-4a5e7d4f089e",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "40dd60ae-5e24-437e-9bd2-e92c7d925a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978e9d90-10d6-4e41-b9aa-13d39221e95e",
        "cursor": {
          "ref": "b7ba3cfc-9c36-4a74-ab8c-d31a105fd17d",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7ddd2c91-66bb-4d47-8226-47363728e7a8"
        },
        "item": {
          "id": "978e9d90-10d6-4e41-b9aa-13d39221e95e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f1c15f15-4bde-4b15-914f-17eedf868131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843c3bad-bb4c-48c1-9b5c-a91513638c96",
        "cursor": {
          "ref": "8414eb39-00f7-4711-b240-a9ff2d320d78",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "cf50450b-d5b0-4cad-ab69-7559bb970346"
        },
        "item": {
          "id": "843c3bad-bb4c-48c1-9b5c-a91513638c96",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "99f02d41-cced-4674-953c-29bb1cda06f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9cb907f-6f1e-46a5-aedc-8eefe3b75ed7",
        "cursor": {
          "ref": "bbea010b-c960-4981-a008-1f0c3294d441",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f6b32712-4b12-482e-b5c1-1515c641658e"
        },
        "item": {
          "id": "e9cb907f-6f1e-46a5-aedc-8eefe3b75ed7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "22545e40-2a7f-4616-b9f5-ed2e838f7e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8298503-03a4-4e16-824a-e8e1c4696124",
        "cursor": {
          "ref": "21fc5688-f3be-4bdf-8777-222049c679cb",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "b994e88d-7f4d-4d90-a273-7694a86cad81"
        },
        "item": {
          "id": "c8298503-03a4-4e16-824a-e8e1c4696124",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9af38cde-9f73-44df-8786-018ea2beb6ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747f5bf3-516e-4853-87cd-a2f3f0e62b08",
        "cursor": {
          "ref": "3fcd2b75-e239-4991-a274-4f39951080b1",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2f381f93-8fbb-45d1-805f-711f1aced669"
        },
        "item": {
          "id": "747f5bf3-516e-4853-87cd-a2f3f0e62b08",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "0172e55c-a68b-48c7-b1c9-db722838de1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2899fa53-4f9f-4090-8d05-7aac7a5cef13",
        "cursor": {
          "ref": "50c8f4ee-d7cd-4957-ac53-db7444678919",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "832a57af-22c8-427a-890b-40d23f1a3647"
        },
        "item": {
          "id": "2899fa53-4f9f-4090-8d05-7aac7a5cef13",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "485263aa-798c-4d52-9f03-927274109eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e09266-469e-4560-bcbe-86db5e335530",
        "cursor": {
          "ref": "1b5e2fed-5180-4632-aa83-bdf029e605bb",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "bc0cc270-2917-493e-b718-d4027f931874"
        },
        "item": {
          "id": "69e09266-469e-4560-bcbe-86db5e335530",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c3a6fddc-a275-4f7e-aabe-20bd73064eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0122e24-7d05-4aee-80ff-0c620f7e98af",
        "cursor": {
          "ref": "a55e6d7d-8362-47e9-8096-d0b25cee98a3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d383a1b0-33b0-4a34-bacc-1c33815fabee"
        },
        "item": {
          "id": "a0122e24-7d05-4aee-80ff-0c620f7e98af",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d3a6d4a9-2eb8-49b1-b62e-dd856d469763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343e72f7-dcbc-49dc-9e86-98db17588d91",
        "cursor": {
          "ref": "51053211-3ac4-45a0-ba90-826062584a6d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "08e82d9d-2ea5-4e77-a484-cc56119f6630"
        },
        "item": {
          "id": "343e72f7-dcbc-49dc-9e86-98db17588d91",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "8bf84113-950c-47e7-97e7-34fa0503709a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f57510f5-4f89-4496-9b29-3247b1798de0",
        "cursor": {
          "ref": "072fdc6f-c732-40f1-9c1a-10c60ee951f9",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "14981af6-3198-4fc3-ba91-e68f14380d77"
        },
        "item": {
          "id": "f57510f5-4f89-4496-9b29-3247b1798de0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "69f83399-1089-43e5-b7c5-467703388580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97297f87-5106-46cd-9582-f47d8a8b6a82",
        "cursor": {
          "ref": "b16bc934-347f-417a-a991-35e9c16caec8",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7341bc21-1fbb-4eb4-922e-32a629910d29"
        },
        "item": {
          "id": "97297f87-5106-46cd-9582-f47d8a8b6a82",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7518b2b3-7cd1-4263-a3ba-f200da0a4d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbd3dc8-35e7-4362-9f9a-b934f83315c5",
        "cursor": {
          "ref": "65ff23b4-c310-4b03-870e-bc724afd6f9e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "dfd207cb-9bcb-4119-9734-60a57447c3d2"
        },
        "item": {
          "id": "abbd3dc8-35e7-4362-9f9a-b934f83315c5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "850903a5-d7c4-4408-8bda-299432330c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37a6ca8-7fb5-4949-acef-df65c33cc053",
        "cursor": {
          "ref": "4f697588-6724-45d6-bb70-fed81173ed17",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ce3e183a-3f99-4af4-82ea-9e84a7d4bb06"
        },
        "item": {
          "id": "a37a6ca8-7fb5-4949-acef-df65c33cc053",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7926b1f4-d03c-41e3-a5e6-58b4eb2b2b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02af44d-05a1-4c9c-abdb-7ff20836900c",
        "cursor": {
          "ref": "94e93eb5-3ae3-4a46-a84c-d26d47a5d64e",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e98b74b3-29d6-406d-a225-e76abdc941a6"
        },
        "item": {
          "id": "b02af44d-05a1-4c9c-abdb-7ff20836900c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f2cca184-36a1-494d-beec-f9980b5867eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4517d6b0-26dc-4223-93c2-ce93958dd28a",
        "cursor": {
          "ref": "e547f86f-c163-4fbc-bb97-ab0f087a7644",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "b6406f49-0f2f-4b2e-9dc3-5b6066dcb042"
        },
        "item": {
          "id": "4517d6b0-26dc-4223-93c2-ce93958dd28a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b89f7f41-72ce-4e1a-9c56-68607c645f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3525db05-bde5-4a58-baae-c2ff47556cc6",
        "cursor": {
          "ref": "0396223a-a5fe-43ba-8dd3-40dfa51826f5",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "1103e9ab-eda3-4159-a232-83a8274cdd86"
        },
        "item": {
          "id": "3525db05-bde5-4a58-baae-c2ff47556cc6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1163f586-7aa7-4bff-83f4-c21f4b00b388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519e9aa9-308d-41f4-b267-5bd631fcc342",
        "cursor": {
          "ref": "ce108179-dc98-4d90-8b78-f2ad9d939cbc",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1c4295bb-6224-406b-8e89-3c26d78ca6f7"
        },
        "item": {
          "id": "519e9aa9-308d-41f4-b267-5bd631fcc342",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2aab8219-4be9-4b62-8c45-d011a8c7824e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744e4cd0-84f4-4f48-93d7-d655fc2f40cc",
        "cursor": {
          "ref": "2f63c7d7-f786-4941-a074-103107a679e8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c8179203-b208-4a5f-99f8-485a66370552"
        },
        "item": {
          "id": "744e4cd0-84f4-4f48-93d7-d655fc2f40cc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "45df8c8b-b9ff-40eb-986c-836033d1f408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3700bfa-d22b-4885-927b-6569833c3951",
        "cursor": {
          "ref": "b6e17fd2-615a-4911-abc2-2004756b12fd",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e1c059ce-d339-4c01-be65-6bf5e966a3ab"
        },
        "item": {
          "id": "e3700bfa-d22b-4885-927b-6569833c3951",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "94eb17c2-347c-4417-bb1d-2e69033e0d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c401a13-14c0-4795-b441-295d890c64e6",
        "cursor": {
          "ref": "f86a6cf7-c624-442c-a216-946b3e57a2de",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "eb1eebef-060a-47a5-bc48-d03f652ce21f"
        },
        "item": {
          "id": "6c401a13-14c0-4795-b441-295d890c64e6",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "32262d49-5fe7-4486-a087-ab4881b7094f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dde04cf-d5cf-4baa-b08a-c1f7181c072b",
        "cursor": {
          "ref": "8cd6b45f-f697-4c3d-9b2f-a57de5b13401",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "d4addc01-677a-41aa-b841-0f3e989badd2"
        },
        "item": {
          "id": "5dde04cf-d5cf-4baa-b08a-c1f7181c072b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eec1f03f-2ce5-4c72-9391-2c588a4006bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db83517-f7c4-4ea1-9178-659b7f97b2bc",
        "cursor": {
          "ref": "a99a8950-fe3b-4387-ada8-17258c644cff",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "4ed13abd-6f05-4d32-9fe0-d4337799da8e"
        },
        "item": {
          "id": "9db83517-f7c4-4ea1-9178-659b7f97b2bc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "25c511d6-1e90-4a52-b37e-3aeb800d756d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268e94c6-29c1-4231-8ab0-eb3e153df4d4",
        "cursor": {
          "ref": "761ba91c-90d3-4a07-8a0a-a5f5d7e60678",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f5187beb-b3af-47c6-97f3-3b92bcd57fb3"
        },
        "item": {
          "id": "268e94c6-29c1-4231-8ab0-eb3e153df4d4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8879c3ca-32c3-4be2-9bba-74cad31a0a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 948,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "309e4c3c-486e-4619-bc86-16c01c4d3b93",
        "cursor": {
          "ref": "e79fb705-bced-4fe7-9043-4422963becc0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6fdfefda-b736-4157-bc00-6ed687248026"
        },
        "item": {
          "id": "309e4c3c-486e-4619-bc86-16c01c4d3b93",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9f28af72-217e-418c-bb1e-f26ea3155a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca54add7-424b-4e4c-99bb-73d511fe57d8",
        "cursor": {
          "ref": "c6d11b7b-592a-4221-9dc7-1b3616df246f",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "88305c1e-0582-4be0-b191-b7f134d1fc06"
        },
        "item": {
          "id": "ca54add7-424b-4e4c-99bb-73d511fe57d8",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "16afe6f8-1ded-4ee5-86cc-7419e5d5429f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b18c55-e7a9-44c6-b278-1fd32db79658",
        "cursor": {
          "ref": "1681fc5c-52ec-4af9-9e23-df4fb2c075ec",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "07d2d620-6ad0-445e-8932-666982d97f76"
        },
        "item": {
          "id": "c9b18c55-e7a9-44c6-b278-1fd32db79658",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8ecc73e6-067c-4ca3-b366-4a560f6d3db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10aefd2-44e8-4dab-9a77-c83da638ee22",
        "cursor": {
          "ref": "ec661122-b38f-4623-b7f7-93ed398b0d1e",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "30262b4a-4528-4ffe-868d-21f7a413d94f"
        },
        "item": {
          "id": "e10aefd2-44e8-4dab-9a77-c83da638ee22",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c26d63a6-c797-4fc2-8a6d-5963d3ed2717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "882659c9-c663-4df9-8ae9-4be038f28cd1",
        "cursor": {
          "ref": "fe2b422b-e190-4daa-8d7a-0658bdf8444d",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fe3f98e5-b330-4467-b337-08e1f55913d9"
        },
        "item": {
          "id": "882659c9-c663-4df9-8ae9-4be038f28cd1",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "47b1c0ef-35f4-46fa-a4a7-5430450a6c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51951032-4a94-489b-8a69-48d150781f60",
        "cursor": {
          "ref": "3ec7db42-a92e-462a-abd5-70f2864f1485",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ab678cf5-57c6-4ae8-910e-b4f064a7c4c4"
        },
        "item": {
          "id": "51951032-4a94-489b-8a69-48d150781f60",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9b2c8b30-6746-4995-ad12-4f02fdca5f82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18c30396-da73-4d2c-98f5-e0be56b8e921",
        "cursor": {
          "ref": "343506b5-fe08-4822-84fe-efcf6ef43df7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "056cc656-c46b-475f-86c7-202cc37ee077"
        },
        "item": {
          "id": "18c30396-da73-4d2c-98f5-e0be56b8e921",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "81124111-ddc8-4aaa-bce1-ca55915d9610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76872b6a-8547-4d29-8d0b-c9728772047f",
        "cursor": {
          "ref": "6794feda-51c0-48bb-97bc-891a3d1fda09",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "e2cc0861-6d64-42be-805a-34d75f3b88d2"
        },
        "item": {
          "id": "76872b6a-8547-4d29-8d0b-c9728772047f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "0ace40e6-05c2-4f22-9f0e-929077a04b30",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad707ce4-4d91-40ee-992d-9ecd69b549ba",
        "cursor": {
          "ref": "5f10bab9-dccc-4fe0-a7f6-2ee216e5d489",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5e757c69-347c-4329-b800-1db75542dcc6"
        },
        "item": {
          "id": "ad707ce4-4d91-40ee-992d-9ecd69b549ba",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b1835801-1afb-4fc5-bae5-f146038cfb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "dfb7a981-fdf9-4c03-ba04-ff1cf3a9b593",
        "cursor": {
          "ref": "1eb13d9d-1700-4cdd-a751-df6a51c43cf0",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "79631db8-cd5a-45c2-9af9-9d7322a0730e"
        },
        "item": {
          "id": "dfb7a981-fdf9-4c03-ba04-ff1cf3a9b593",
          "name": "credentials_issue"
        },
        "response": {
          "id": "13c0c82c-05c5-476c-bc23-5aa716eeb92d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a35d916c-3964-4f32-be71-036036e3f348",
        "cursor": {
          "ref": "0e522a8f-6912-406c-96bd-df7a7e6a850d",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8f3e6d84-ca49-4651-8a11-7b9c48078d28"
        },
        "item": {
          "id": "a35d916c-3964-4f32-be71-036036e3f348",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9801c4d7-d17b-4743-88c3-51fab1dfeaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "22b0ef1c-af79-4bdd-a9e1-e06934e69336",
        "cursor": {
          "ref": "a025b07b-25ee-4fa7-9212-db7b5f33fb17",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9b8ddceb-2f4b-4cbd-909a-89c5b9a17fb5"
        },
        "item": {
          "id": "22b0ef1c-af79-4bdd-a9e1-e06934e69336",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b64b64b5-139c-4940-b003-530c92da77a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "dce251a9-4bb7-41ca-83d4-a1bf36d583d2",
        "cursor": {
          "ref": "81d2eea9-6d55-4615-82c0-409618d6af43",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "60ddc456-579b-435c-ae84-390f684947e8"
        },
        "item": {
          "id": "dce251a9-4bb7-41ca-83d4-a1bf36d583d2",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dfda3679-5b58-44ca-8a07-d9183280ab49",
          "status": "Created",
          "code": 201,
          "responseTime": 9990,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b3f4ec-abed-464d-b7f5-3f5b0c1f7fac",
        "cursor": {
          "ref": "f2d55781-1320-4c8e-abb3-f3caff0689cd",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f86f5248-12ca-4684-b63f-4b0835c90487"
        },
        "item": {
          "id": "57b3f4ec-abed-464d-b7f5-3f5b0c1f7fac",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "13ba8d27-3acf-4cab-92ea-1e7b45d75af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c37eaa91-7c12-4cf8-a2d1-878bec81c965",
        "cursor": {
          "ref": "6571e951-f213-45d2-ab1e-d54e37b21544",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f75c145b-e869-4f01-8881-c72bbc2ab5f0"
        },
        "item": {
          "id": "c37eaa91-7c12-4cf8-a2d1-878bec81c965",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "95ef671f-7911-4431-bbca-a8a14542309a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "ffa59267-624d-445a-a7b5-71a281035ac3",
        "cursor": {
          "ref": "7e8fd9f6-1e7a-4980-998c-116c4018047a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dfb6860d-d30a-456e-859d-3ebe55fe40b2"
        },
        "item": {
          "id": "ffa59267-624d-445a-a7b5-71a281035ac3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b5b34959-d30c-4b82-bb3d-6a76b9202e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce82657-82d8-4cec-8dfb-ae9bbb7294bf",
        "cursor": {
          "ref": "ad608917-7d86-475b-8388-30f1c3c73c84",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "13ce18b4-08d3-4654-bbb9-8772322f4b1d"
        },
        "item": {
          "id": "9ce82657-82d8-4cec-8dfb-ae9bbb7294bf",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c93fb67f-2a30-413d-b436-c3515089c055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6862bb-cd6c-4b87-98b3-d84e33cdf813",
        "cursor": {
          "ref": "bfe8ee94-f2b2-4543-be08-4e49cdcb7c09",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "88274a11-5d14-4c07-aeb9-008968be7b1b"
        },
        "item": {
          "id": "ee6862bb-cd6c-4b87-98b3-d84e33cdf813",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e41004a9-bb13-4ee1-b4b1-9e6dc8090121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ceaa840-5f92-4d4a-a2ef-7d0532627a5c",
        "cursor": {
          "ref": "e747797a-abd2-46b2-b6bc-e9b1ef9ba08a",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "305a8386-138d-41c3-91a9-334a7297b3cb"
        },
        "item": {
          "id": "9ceaa840-5f92-4d4a-a2ef-7d0532627a5c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "af8bdd8a-26f1-4620-9d09-ac8a0a2f39f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fdffde-36d6-49b3-b091-e4def0ef6cc1",
        "cursor": {
          "ref": "8b3a9894-52d1-44cd-a85a-9fa3f125cb0e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3c3811c7-13a1-4ea4-a86a-6a321831a21c"
        },
        "item": {
          "id": "d2fdffde-36d6-49b3-b091-e4def0ef6cc1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "edc0ec1e-7890-4e4e-a67c-283c71eafd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd384a5-a368-48a6-941f-5d54e7436318",
        "cursor": {
          "ref": "89b500c2-77d9-472f-b1da-a14a81c5f919",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a9873da4-e610-43ac-ad62-3d3fc6631c11"
        },
        "item": {
          "id": "0fd384a5-a368-48a6-941f-5d54e7436318",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3cf387d5-488c-4b07-baaa-7d8b35d194fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138a517b-403c-4ab5-b2a0-74ac7dc91a48",
        "cursor": {
          "ref": "f2ddc7ba-8a8d-443a-ad5e-b270484c5aa6",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4b02bf3f-bcb6-4c27-b0a6-5389980cbe5b"
        },
        "item": {
          "id": "138a517b-403c-4ab5-b2a0-74ac7dc91a48",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e74b4709-b136-4322-a61c-f4f695f3209e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab21fa9-b683-41ac-bc90-e81d3052348e",
        "cursor": {
          "ref": "09c60725-1031-4aa9-a757-9f36c86157ac",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4c7bdddc-e74d-499f-9f3d-7cdee268d491"
        },
        "item": {
          "id": "8ab21fa9-b683-41ac-bc90-e81d3052348e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "42c4982d-a9ad-4855-905e-766e75c4089f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d85e67-a7ff-41fe-aa4b-46a8004a9aab",
        "cursor": {
          "ref": "31e2ed80-4de9-4639-9f81-bf6e30f173bd",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "17a88b5c-796d-4d35-8112-5f94e7220dd8"
        },
        "item": {
          "id": "62d85e67-a7ff-41fe-aa4b-46a8004a9aab",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bf3cdbc4-7a5c-4e20-a1ec-3fad1cee6997",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd77de0-5f64-4bc7-8b0c-84614f9cf16a",
        "cursor": {
          "ref": "8fceab0a-7a55-42dd-a643-6b8842e7d72c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "be77c3b7-97f5-4200-93de-237a074c6006"
        },
        "item": {
          "id": "fdd77de0-5f64-4bc7-8b0c-84614f9cf16a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c99181e2-941e-47fe-b8d6-0811023e6687",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeccda81-c142-4c01-bbcc-c738b35a73d5",
        "cursor": {
          "ref": "cd8feb25-446d-4151-932a-b52cc3fdd483",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "1af26708-609c-4e12-912a-f3c4430ed48f"
        },
        "item": {
          "id": "eeccda81-c142-4c01-bbcc-c738b35a73d5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "657a5b01-7719-4a5b-9ca7-35feb4cdb4e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e486cbd-6151-41b2-943e-a3c63965e4ac",
        "cursor": {
          "ref": "7a076a37-e49c-408e-a015-b7b7023e32ed",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fc3df2cc-b3ba-4416-8330-8f39904962d1"
        },
        "item": {
          "id": "6e486cbd-6151-41b2-943e-a3c63965e4ac",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "25a8fc2e-727b-439e-bee7-fc8dd42e8ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3fb25d-7275-4f11-81ab-4e5d5bbf956f",
        "cursor": {
          "ref": "eaaab71e-77b0-4c48-a9aa-7c4c389e9255",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "810b0223-ea1d-4501-ae73-bbac793645a0"
        },
        "item": {
          "id": "5e3fb25d-7275-4f11-81ab-4e5d5bbf956f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f55dbc50-650d-458c-80b4-ceb065f122bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa8e9af-b101-41bc-a12b-51d0b30fcac0",
        "cursor": {
          "ref": "aebcab55-2f7f-4bd7-a56d-74af0cf33ff0",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "21d9d2f7-dc3a-4867-8e3a-6f4bd1fe6dfc"
        },
        "item": {
          "id": "efa8e9af-b101-41bc-a12b-51d0b30fcac0",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f0ecfe0c-a304-435b-a784-ee40737cc040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a932056d-0cb6-4674-8ec9-7d600a3faf6e",
        "cursor": {
          "ref": "2b3a7ff1-32ac-42b1-b1d3-4bd1406621f5",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "85714018-9855-4508-ad32-571a83138d39"
        },
        "item": {
          "id": "a932056d-0cb6-4674-8ec9-7d600a3faf6e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "829f0b85-0a51-4dbb-898c-fd6335f54beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6307cb91-9c6f-450b-87f6-9c834b741290",
        "cursor": {
          "ref": "90eb2cbf-729e-47c1-9cbd-8a8c2a1e7517",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e68dd4d1-c161-4ec0-aba1-12acce778f8f"
        },
        "item": {
          "id": "6307cb91-9c6f-450b-87f6-9c834b741290",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "07c0cfbe-d32a-4cec-8bbe-b56c63e52faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43c76e9-2e1b-4a12-8c90-98c547bac056",
        "cursor": {
          "ref": "83072451-ab2e-4005-8a65-e89e18e302f7",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5e6bf29f-b209-4d2a-96e4-85c9ff372c47"
        },
        "item": {
          "id": "f43c76e9-2e1b-4a12-8c90-98c547bac056",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "562b99a4-efcc-4f16-9ca8-5bb2d3928d27",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "933eef08-8a0d-4770-982b-44a24d3603a6",
        "cursor": {
          "ref": "0995e9cc-719f-4e3d-9b0a-f05649e24ea0",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a375137c-034f-4f69-bbbb-b947955cf633"
        },
        "item": {
          "id": "933eef08-8a0d-4770-982b-44a24d3603a6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b1c04678-60b3-4877-851e-a7538499ab56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed1d86e-8ee0-41a8-872f-f77b8e0bdec3",
        "cursor": {
          "ref": "1fa311b9-a026-4430-b4eb-c511da4e86f5",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0fc348b0-091e-43aa-80d5-082f8b8abab5"
        },
        "item": {
          "id": "7ed1d86e-8ee0-41a8-872f-f77b8e0bdec3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "98f021ab-87a3-4756-b8ab-79b8ac5563f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e9edf7-b80d-47de-ab24-a40046e39987",
        "cursor": {
          "ref": "ab47e4de-c209-44ba-860a-90c71423ee1d",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0d46b6a9-49ba-4549-8c9f-2fe7c4208558"
        },
        "item": {
          "id": "e3e9edf7-b80d-47de-ab24-a40046e39987",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0be25667-78f8-4e31-be73-d58745aecaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ecb9f7-269c-4f49-8191-780ce1b62e76",
        "cursor": {
          "ref": "8609416b-8d74-4853-ba36-9556f92f4768",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c6fce580-f8e0-4ae8-93a8-df287d1c91ba"
        },
        "item": {
          "id": "04ecb9f7-269c-4f49-8191-780ce1b62e76",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "df6a28f9-da29-4057-b708-a6e38feb1026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f796003-9127-4d08-b546-c2dae0ab543e",
        "cursor": {
          "ref": "4a805062-c02f-45ae-850a-48cd8da0ef84",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "fd92caa5-f01c-4c85-9a27-59f15d533155"
        },
        "item": {
          "id": "2f796003-9127-4d08-b546-c2dae0ab543e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e8a17d90-cadb-43ab-be59-3903cd633984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf71c51-f7d1-4206-8135-eb28a84e1323",
        "cursor": {
          "ref": "c1add1cf-063c-4655-9ecd-2aeac6461b20",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1a5ecdc9-14de-4298-8a43-c2ed914e09b0"
        },
        "item": {
          "id": "9cf71c51-f7d1-4206-8135-eb28a84e1323",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7a446be9-e70c-471a-b4d6-ec6544672a4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08dc31d-ba7e-486b-aff0-80db9010a1c8",
        "cursor": {
          "ref": "38faf359-a302-4437-ad07-8a7a82d8ab8a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "09f4069f-1fb9-4510-9f9a-6a7e81990835"
        },
        "item": {
          "id": "a08dc31d-ba7e-486b-aff0-80db9010a1c8",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "89ad3753-3878-4821-9e20-7879df439ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 121,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13b7e9f-fc5c-4ad7-b0c1-bff0f014aba4",
        "cursor": {
          "ref": "d97d7152-37f6-4d15-88b4-71590c6bfda0",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a0c234ab-8745-46fd-a5a7-201f42d34cd7"
        },
        "item": {
          "id": "c13b7e9f-fc5c-4ad7-b0c1-bff0f014aba4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9420ba64-e024-4cf0-8d8b-163d7cfa9679",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "364656c6-14ae-411b-aaa7-eda69ebde72c",
        "cursor": {
          "ref": "406004a2-eba2-464b-b3da-a87a455e27e9",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "7fb0c1df-1207-415f-a632-35c12de13030"
        },
        "item": {
          "id": "364656c6-14ae-411b-aaa7-eda69ebde72c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0868d4dd-2575-4989-bf74-e4bda0ab8f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8540d911-31a3-44d6-a75b-5e4551931342",
        "cursor": {
          "ref": "62c5f04f-59a0-41e1-aa79-499d56fcc558",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "210df88c-beb9-44a3-9b8d-883f343bc4bb"
        },
        "item": {
          "id": "8540d911-31a3-44d6-a75b-5e4551931342",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "51e305ec-c1db-4628-94fd-f33633aaf962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc9138f-b5be-4932-8e25-9e0039672713",
        "cursor": {
          "ref": "01877b2b-9672-400d-a5e0-798581b96262",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "aabc1d29-44d3-425f-8518-c5b19700fc09"
        },
        "item": {
          "id": "9dc9138f-b5be-4932-8e25-9e0039672713",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9926aa1b-9703-4cc5-bd2e-87a75aeaca67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570cda3a-97b0-45bb-a842-613b7f020b1a",
        "cursor": {
          "ref": "c2156192-538a-4a24-b353-c80c01d84103",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "7b308fb3-c7de-4830-bef1-57ce43731120"
        },
        "item": {
          "id": "570cda3a-97b0-45bb-a842-613b7f020b1a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "80055a93-62cb-403d-b142-a204f09da831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5492c51a-7727-420a-93d0-76fc66046a14",
        "cursor": {
          "ref": "53d7af19-cfd1-4a33-86cd-8b029e1f70d9",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e5f4027f-2475-4816-93d9-66b7392f6790"
        },
        "item": {
          "id": "5492c51a-7727-420a-93d0-76fc66046a14",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "19c88e75-e778-4a49-a944-2fcba0da5645",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4f052a-7051-44ce-b4a4-09b8672d6ccc",
        "cursor": {
          "ref": "b2577a91-e452-4999-8ac0-c9ffc63dd82a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c2e3dc9e-8c18-491a-9523-8d7f577220d6"
        },
        "item": {
          "id": "fb4f052a-7051-44ce-b4a4-09b8672d6ccc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "65e04085-631e-4d22-98bd-3f85d2971529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22791f5-16b9-4cbd-b456-3c24b17b22c6",
        "cursor": {
          "ref": "58f1bc86-14b7-4415-ad4b-61437070cfe7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "860174c1-c2cf-4c83-a931-d5ee8505435d"
        },
        "item": {
          "id": "a22791f5-16b9-4cbd-b456-3c24b17b22c6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f9bb3afe-6fb5-4523-9577-ec346d1bbd9a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "e9379ac9-4ff1-46ed-b433-f1b11b34832a",
        "cursor": {
          "ref": "83209dc2-cb54-407e-8517-7c1f18d42658",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "90d770b4-ba53-4e4d-b1dd-c930bc196cdf"
        },
        "item": {
          "id": "e9379ac9-4ff1-46ed-b433-f1b11b34832a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6d9461d0-6890-4a65-92b3-e2ef004357f5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "dc13ebdd-15bd-453c-bfe2-17286656a478",
        "cursor": {
          "ref": "d0f6df9b-d7a8-47c4-8ffc-441f864a7242",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4c8d1c2c-e4cc-4281-927a-a59f5c063b00"
        },
        "item": {
          "id": "dc13ebdd-15bd-453c-bfe2-17286656a478",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "235b9928-8ed7-44dd-9c52-b7f8d7c10437",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "eec6bc47-d1f1-4cb4-8adc-56f1e86530fb",
        "cursor": {
          "ref": "898e511d-75ca-4c31-a21b-e03e3def62e1",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8f189ae1-c69c-4e5c-bad1-03b47a650747"
        },
        "item": {
          "id": "eec6bc47-d1f1-4cb4-8adc-56f1e86530fb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1cd86bcc-0d67-4af5-9632-bafef863df98",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "1ec9cdf8-10c9-4210-9b50-9e29393457e2",
        "cursor": {
          "ref": "1512df32-8487-4fd7-af2e-20d1e9126089",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "1381d1b0-967c-41b0-8dbb-d7595baf37cb"
        },
        "item": {
          "id": "1ec9cdf8-10c9-4210-9b50-9e29393457e2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "fe79b7ea-9e65-4039-a586-d107095dfbe6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 130,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "20d313fc-27ca-4943-8b38-fcb86992ffeb",
        "cursor": {
          "ref": "1ee7808a-7b41-45d7-a692-b0e3ed945102",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4b1fec4a-56e0-4bf6-b52d-f49af4a908c0"
        },
        "item": {
          "id": "20d313fc-27ca-4943-8b38-fcb86992ffeb",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bfcf578a-c1e1-4359-ab57-1bf509dd74e9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "c0e862b6-df3c-41f9-afa2-23e581f037bd",
        "cursor": {
          "ref": "00b69b97-677e-4c10-b866-03d58e57eae4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "656649e5-fa18-4426-8317-25c4afcd47c2"
        },
        "item": {
          "id": "c0e862b6-df3c-41f9-afa2-23e581f037bd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "2a388a71-c4b7-4268-8ec0-62cc9fee0aa5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b713b13a-3a78-41c4-92ac-0b57f34b287a",
        "cursor": {
          "ref": "8228e05e-f73d-4c69-b4d8-e9ba52ced523",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3c56cfde-4a5b-45e0-95a2-7ea18a9b9def"
        },
        "item": {
          "id": "b713b13a-3a78-41c4-92ac-0b57f34b287a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "cd5ce8e5-9e7a-4a3e-b296-01ecc7943f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b37c02-c9cb-4ef9-9f4f-0df1569804d0",
        "cursor": {
          "ref": "92e25f53-29d4-4f28-b907-569157dc24cf",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e084c7f7-44a4-4f0b-95d6-34277d4e9b36"
        },
        "item": {
          "id": "75b37c02-c9cb-4ef9-9f4f-0df1569804d0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c282721f-cc4d-4735-97ab-723d6194654e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26aa2527-5695-4a8a-bfff-cfe32fabdd8f",
        "cursor": {
          "ref": "d1758d69-db4c-4da8-8a5c-43ae992d5807",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1f0b3bbe-d444-4c13-8b02-ed63855b907a"
        },
        "item": {
          "id": "26aa2527-5695-4a8a-bfff-cfe32fabdd8f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c0b81d07-90dd-4bb2-8842-1a3555a03b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee65518-d3cd-4428-a43a-1873f14e3928",
        "cursor": {
          "ref": "c6380d03-cb44-43c4-8587-81ba7c2493d3",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "509bd095-fce3-4aa5-bbc6-c569e9c49f1e"
        },
        "item": {
          "id": "9ee65518-d3cd-4428-a43a-1873f14e3928",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b4d13d38-2dd5-431c-bc75-b04edc693121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f82e4b-5acb-4858-87b6-8929eda1162f",
        "cursor": {
          "ref": "10b2c8bf-eb51-4ba2-898a-9d3c20f12fd5",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "57a8be1b-f0aa-4a6c-b864-ca8e63ae41d4"
        },
        "item": {
          "id": "90f82e4b-5acb-4858-87b6-8929eda1162f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a95e65d5-781e-4c69-98ed-246d047d7e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da43fc7a-860f-46ae-872c-4cde6882a2d9",
        "cursor": {
          "ref": "3cc0fd18-d0c2-40e6-8112-5844827d9dc0",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1a4ca988-993d-4061-9495-a92ac490aac1"
        },
        "item": {
          "id": "da43fc7a-860f-46ae-872c-4cde6882a2d9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "41be7d2b-fa34-47ad-8227-2013bc69f323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcab1c2-608f-48ec-bd98-72ad845e3565",
        "cursor": {
          "ref": "f6a88b89-11dd-4dc8-9c36-98028c2a241a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "96e7bdae-ee0f-4c0b-b3b9-c91efb6d3f10"
        },
        "item": {
          "id": "0fcab1c2-608f-48ec-bd98-72ad845e3565",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8ea4b180-36b0-4af5-b55c-5a13a2e8963e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f46f0a-8bdc-4bbc-889f-5aba0039b8cb",
        "cursor": {
          "ref": "17241a3e-e5d0-461b-88df-9aaff4d6ecbf",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d9391b6f-e486-4549-a349-54940b9a379d"
        },
        "item": {
          "id": "10f46f0a-8bdc-4bbc-889f-5aba0039b8cb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5ca469e3-1094-421f-87e4-19066ea99385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 221,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98363904-d7a6-4922-9767-203d0686596c",
        "cursor": {
          "ref": "89bebada-2bba-498e-bd96-50963c76f4df",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2322a81c-0926-411a-aa33-f1e2e2ff52bc"
        },
        "item": {
          "id": "98363904-d7a6-4922-9767-203d0686596c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "6a53925b-6e8a-4830-bd6e-dde4f8422bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127391bb-beb4-4015-a155-34ae74179ba4",
        "cursor": {
          "ref": "97122e0d-9a9c-43bd-82c0-494004dab1cb",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "230c3629-e2e9-4f54-abf9-91ea270821ad"
        },
        "item": {
          "id": "127391bb-beb4-4015-a155-34ae74179ba4",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "09e0c1e6-1b41-43f4-99e3-0d5279d2905e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c21138-b456-4633-bc7f-d74311e5086c",
        "cursor": {
          "ref": "bc934ee0-d7e4-4b9e-8e64-365c31e21c31",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d32e3cd6-85ea-4246-83f1-e9e124ff5675"
        },
        "item": {
          "id": "32c21138-b456-4633-bc7f-d74311e5086c",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8eec6af8-ec31-43c0-98ea-e009f080011d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0591dd5-a92a-4c71-8fe9-c491767535f7",
        "cursor": {
          "ref": "01ea6fd2-34e3-4bc3-a63f-867a959bd3b3",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "13bd6f41-d93a-4285-9d51-915a8a676ee0"
        },
        "item": {
          "id": "d0591dd5-a92a-4c71-8fe9-c491767535f7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "da1dea48-af8d-4960-8665-b6a48c06328f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa4bf37-36f6-4e67-b64d-be071c17a46f",
        "cursor": {
          "ref": "b429ed21-632e-4ce0-a8c7-798f5577c3a9",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "944ffca7-2bea-41e9-b075-9e9827a01013"
        },
        "item": {
          "id": "0fa4bf37-36f6-4e67-b64d-be071c17a46f",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1e295809-fd94-4727-a3ba-83733bcfad95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c1c447-d41e-44d4-9c4b-7d45b8977127",
        "cursor": {
          "ref": "c6086a84-20d5-4853-be54-b4fcdcfd797b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f0cad355-4f30-4e32-b9b7-ce7249bc480c"
        },
        "item": {
          "id": "06c1c447-d41e-44d4-9c4b-7d45b8977127",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "a3458b1d-3a30-4210-b9a5-1c5a7c5814d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58faa4d7-0637-464d-b649-1946c3270d7d",
        "cursor": {
          "ref": "fa5899df-27c4-411f-8789-6a626410afce",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "94d6d120-8939-4cd8-be09-8ecabf4b50ee"
        },
        "item": {
          "id": "58faa4d7-0637-464d-b649-1946c3270d7d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "7f960baa-baae-4279-96cd-ca5f8aa2f30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88c3feb-6a83-457e-8163-6e8b0a204dc4",
        "cursor": {
          "ref": "c8c4a9ac-1aee-444e-9ddc-d490048efa13",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6748374b-bf6d-47ef-b45d-74a392b2477a"
        },
        "item": {
          "id": "b88c3feb-6a83-457e-8163-6e8b0a204dc4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b31280a1-0e96-48cc-8b10-a04e1463d479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d35d705-608d-4ecf-885f-08b9de6686bf",
        "cursor": {
          "ref": "ada25f60-281a-44ea-aecb-2fe2917f222b",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "b4be5377-2fc1-48b6-a37e-dde32d28a86e"
        },
        "item": {
          "id": "4d35d705-608d-4ecf-885f-08b9de6686bf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6c27db19-9aaa-4e01-b9e1-daab5d5e2fc8",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "8ad29cd6-317d-40bf-b82f-0e7e5f03d021",
        "cursor": {
          "ref": "542cc13d-3a5a-4828-b7d6-c987523b0768",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "790ddb8c-7393-482d-9022-886445c7e941"
        },
        "item": {
          "id": "8ad29cd6-317d-40bf-b82f-0e7e5f03d021",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "5af4adaa-e8b3-4828-ad0d-83298eb5ebe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3196fe1-918a-4161-9bd1-a89398835738",
        "cursor": {
          "ref": "6326be88-073d-4188-8ee0-97ff3449eb03",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f6c30197-1c38-4303-8b96-3f13b0ce5aa1"
        },
        "item": {
          "id": "d3196fe1-918a-4161-9bd1-a89398835738",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d91e28ba-8ad4-4a24-b2b4-def60a624b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a34d1481-ba8c-4b4c-a6bb-c765a5badd9b",
        "cursor": {
          "ref": "5398e971-42db-4889-b417-02a86df330b8",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "74423e33-da65-418b-9527-575fd511d640"
        },
        "item": {
          "id": "a34d1481-ba8c-4b4c-a6bb-c765a5badd9b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4b4dad3c-1931-4ac3-b55b-eb2f4fc7f5b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce46768-02cf-41b6-b892-0783f40aaa4c",
        "cursor": {
          "ref": "17ddbd74-5753-4cf4-ae57-f0d8f9a66990",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3ee01377-c79d-497c-8b09-2b7d830ab655"
        },
        "item": {
          "id": "bce46768-02cf-41b6-b892-0783f40aaa4c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3a7270df-83bd-4e18-8d65-adf08c845e8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409a212e-38ae-4ce7-b4b8-2a78f4d44e02",
        "cursor": {
          "ref": "e8e6536f-2cac-4024-9974-99cef25f0fda",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4641dde6-0712-4705-b1b2-abb931262748"
        },
        "item": {
          "id": "409a212e-38ae-4ce7-b4b8-2a78f4d44e02",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0548b670-7780-49c6-8a57-cad00987e5cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f1b95f-286b-4ff5-b243-9a00b4f67b15",
        "cursor": {
          "ref": "48c6a46e-4437-4f82-92f8-679d54ec9ed5",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e4cb5488-935f-43f2-844b-9c242c31faaa"
        },
        "item": {
          "id": "f2f1b95f-286b-4ff5-b243-9a00b4f67b15",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "ded29ec6-c8a6-426c-ba0a-abb72548c05e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9409cc9d-d0af-4065-bb35-ad7be453e5d2",
        "cursor": {
          "ref": "32806418-32fd-4885-b36f-39696c75d1d7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7e02cb80-79d8-4278-aaa4-0763ea0cfb6d"
        },
        "item": {
          "id": "9409cc9d-d0af-4065-bb35-ad7be453e5d2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2a62f64f-3bbb-46f3-b2d9-63bef1b5da46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c840ce4-918a-4641-8b78-05db77c34ba5",
        "cursor": {
          "ref": "7d284554-e225-429d-91c5-396ccbe84641",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "48af9448-3e69-43d9-a50b-6344e3997b16"
        },
        "item": {
          "id": "9c840ce4-918a-4641-8b78-05db77c34ba5",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a779878c-224e-458e-8ed6-d06769f66706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbb13c0-34aa-479c-a104-3588cd3085ce",
        "cursor": {
          "ref": "b0319169-1d3b-47ca-ade9-45f5ffa0904f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bc058c2c-6b0d-4c58-a9f0-3096130b2f8d"
        },
        "item": {
          "id": "3dbb13c0-34aa-479c-a104-3588cd3085ce",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "57dbb355-340e-4c02-92e8-94e0b1ec3565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a4efe9-3b82-4046-a3aa-f015217a5718",
        "cursor": {
          "ref": "afa88043-8dc3-4994-954e-6cd7d73893da",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d6a3c148-3949-4a59-8be0-e44cc9ff64e0"
        },
        "item": {
          "id": "d9a4efe9-3b82-4046-a3aa-f015217a5718",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d94dd982-52cd-4884-9c4a-a52a447beeef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 755,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632920ac-ab4b-41d4-8a90-b6e8da426059",
        "cursor": {
          "ref": "73f650aa-c079-4106-a59b-886918a2c12d",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "02870923-3024-4476-a342-ecd5bb0a3465"
        },
        "item": {
          "id": "632920ac-ab4b-41d4-8a90-b6e8da426059",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7e3ee383-916c-4db8-a75c-8f5407da1f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab73d8ce-59d2-401b-881f-2ca6d0b4be0e",
        "cursor": {
          "ref": "eb673925-3b29-43b7-916e-73330825227b",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "5271d425-39c0-4886-9cce-d0d28f34dbe6"
        },
        "item": {
          "id": "ab73d8ce-59d2-401b-881f-2ca6d0b4be0e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "41d54a7d-931f-4601-8a36-82507efcf265",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abcb869b-dbf5-44f1-b38a-5e715022be49",
        "cursor": {
          "ref": "daeb6ab1-ff9c-41b6-b981-c030b51518fa",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0d399466-e740-4094-bbe4-ac639ad6770a"
        },
        "item": {
          "id": "abcb869b-dbf5-44f1-b38a-5e715022be49",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "13bf327b-aa06-4633-8e03-1a073bae477a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b08b21f-ca4c-45b1-af9f-21c7b819b2e3",
        "cursor": {
          "ref": "1bfa178f-cf59-4fe9-84b3-703a447a9577",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5923b2ea-e321-4967-886b-636cdccd3168"
        },
        "item": {
          "id": "8b08b21f-ca4c-45b1-af9f-21c7b819b2e3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d51c635e-99b9-422d-9515-e092a37b0456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d283042c-26e1-49a5-ab67-8c5f2f7bab80",
        "cursor": {
          "ref": "b0091c3f-fcfc-4c8f-872b-a352e86e0899",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "16fe7520-052c-4f0c-aeb9-cdb91d07904b"
        },
        "item": {
          "id": "d283042c-26e1-49a5-ab67-8c5f2f7bab80",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2aa01eeb-28e2-45a1-aad2-beeeb3abb648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18755944-d0aa-4481-85fb-b44e0501889c",
        "cursor": {
          "ref": "b8308516-8567-4992-a98f-c952dfd00fc9",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "60162508-2a8e-40a8-97b6-21a1c757389e"
        },
        "item": {
          "id": "18755944-d0aa-4481-85fb-b44e0501889c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e3199390-0ac8-4109-a13e-5d0772e3c2bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42b3d58-6cae-4a9d-a270-500d38bc1e73",
        "cursor": {
          "ref": "6e903dee-2599-4611-a17d-71d6143bde2c",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f90d19a2-052d-4efc-97e2-b628e80a9d7c"
        },
        "item": {
          "id": "c42b3d58-6cae-4a9d-a270-500d38bc1e73",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b4b37f3c-6f37-494c-979f-10e55394bdea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d3d4e2-4e6e-45cb-958f-5fe920b4eeae",
        "cursor": {
          "ref": "60db9925-723c-4466-acf2-725b464eade5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b66a301e-57fa-4347-97f8-de18ebe17a81"
        },
        "item": {
          "id": "89d3d4e2-4e6e-45cb-958f-5fe920b4eeae",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9cf5dd0e-d109-4fca-84ad-7ff43c637252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "086b6e25-50d7-4899-ae93-7ff2ef605649",
        "cursor": {
          "ref": "4e83e2c4-c6c9-4d85-88ba-3851f50c6de5",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "05262e11-eb43-4855-a7ec-cb60b313645e"
        },
        "item": {
          "id": "086b6e25-50d7-4899-ae93-7ff2ef605649",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e3ba51de-55aa-4e82-9a48-fc900359dc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 287,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab69f64e-feb6-4317-bc1c-38bed92093ce",
        "cursor": {
          "ref": "4961ffa6-2acc-4ea0-8231-f28ac0b362fc",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "51c3fe04-842d-432e-b5f9-218b250a0e89"
        },
        "item": {
          "id": "ab69f64e-feb6-4317-bc1c-38bed92093ce",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "7b231b1b-cb21-4bd6-bdf7-e104bbcc177e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a256e82b-e6ec-4102-bb84-4d9da4baa6b1",
        "cursor": {
          "ref": "07a8e37d-51fb-49f5-b2ee-f49813e1ad96",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2bbbece5-6489-446b-a559-ecef7a50b8cb"
        },
        "item": {
          "id": "a256e82b-e6ec-4102-bb84-4d9da4baa6b1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "564c822b-3f79-4e0d-80ce-5147c2bfc089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6b4943-9af1-4075-9d1e-f2652601425a",
        "cursor": {
          "ref": "d355170a-2936-4d8e-9f31-6a2b63123ad2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2a5dbb6d-adc5-4a08-8da2-74c17a69ef75"
        },
        "item": {
          "id": "9e6b4943-9af1-4075-9d1e-f2652601425a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b1713df3-ab53-43c9-85cc-363605633a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5c6c802-ffe3-4207-b0e0-a41db6d9b2f7",
        "cursor": {
          "ref": "35279d7c-57da-4c97-a111-412fe83d44d7",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "7939fe78-81a9-4ca9-adc3-a2ff292668ad"
        },
        "item": {
          "id": "e5c6c802-ffe3-4207-b0e0-a41db6d9b2f7",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a8fa6014-9763-4876-9f46-02b482be44a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 226,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980ec927-94c0-4e4b-b6f6-783841527ce7",
        "cursor": {
          "ref": "4b735439-58e1-49b8-9dbe-1116597c3ef3",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3fce99cb-c910-4af3-8952-52fd5c4d63a3"
        },
        "item": {
          "id": "980ec927-94c0-4e4b-b6f6-783841527ce7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5f64662e-13e2-4367-94c1-b5abae7f22d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f56acf8-d7ae-4411-aae3-829463555172",
        "cursor": {
          "ref": "e5af6369-744f-49fd-8e3b-478d2ee9f756",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b71c6816-a0bc-472d-ab53-c718588a9d46"
        },
        "item": {
          "id": "7f56acf8-d7ae-4411-aae3-829463555172",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a89bcd1d-3373-435e-bd32-44d5df1990f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c43568-4e91-49a1-9105-f1eb37f75eb3",
        "cursor": {
          "ref": "7777256c-dfe5-4010-b050-40f1e9f8e142",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9fe60213-c0a5-4376-a27e-1261b01cf69b"
        },
        "item": {
          "id": "16c43568-4e91-49a1-9105-f1eb37f75eb3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d2d5c2cd-8375-4fe1-9718-8ed45571421d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72683265-dcaf-4ebd-b0fb-2e7aeffab0eb",
        "cursor": {
          "ref": "51a097e2-0a26-426f-acf3-d4201f9beb90",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a13d4471-0d50-452e-934f-0c3414f2840f"
        },
        "item": {
          "id": "72683265-dcaf-4ebd-b0fb-2e7aeffab0eb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a48b9e24-bc91-4a7c-994c-d2e29f0186ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa3ec64-03d8-4749-8e35-fb7bf56c6c62",
        "cursor": {
          "ref": "df4c48eb-1c4b-4f45-8f6e-4d9e033de8ad",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "285f9dea-6686-4a01-b75d-834151415448"
        },
        "item": {
          "id": "efa3ec64-03d8-4749-8e35-fb7bf56c6c62",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "a78517c5-1818-471c-8177-ff6e61c08457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc6d07a7-2a66-45f1-a9de-49f5edc23f6d",
        "cursor": {
          "ref": "f5f877b4-3c23-4ea1-ae44-86c3b5edea34",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0816add2-61d3-4f4f-bf6d-21c0c9b4845f"
        },
        "item": {
          "id": "fc6d07a7-2a66-45f1-a9de-49f5edc23f6d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "075bdd57-ec82-4ab7-b8ae-7bdd2d09a44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cf115d-c478-4076-826f-5ec0bba092ce",
        "cursor": {
          "ref": "a1ec2ab7-ae86-47f4-8bd9-8d9512d8eb4b",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5d7d4021-3b10-4e86-8260-b641c8043830"
        },
        "item": {
          "id": "11cf115d-c478-4076-826f-5ec0bba092ce",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "93b20d5b-5fae-4fa8-b675-c8b51acd8b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8461a20f-4e30-4acd-8d15-84b50c61609c",
        "cursor": {
          "ref": "14e540bc-72b2-476d-a2f4-afc5ca701390",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "dc736a31-5c1f-42b9-80e7-33529b032551"
        },
        "item": {
          "id": "8461a20f-4e30-4acd-8d15-84b50c61609c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e198a115-5ad5-45b2-961e-02c0c1b5cd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c520692d-557e-4d6a-8886-7531c0368eef",
        "cursor": {
          "ref": "10002cad-c6e3-4e3a-8f44-4e64069676e2",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1960e0b8-cbd1-4c33-8d30-d91b6e56d0c4"
        },
        "item": {
          "id": "c520692d-557e-4d6a-8886-7531c0368eef",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "77ddbebd-5e68-49c7-9fff-a6e0cc0c1193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c00dd084-ec84-4b43-a4db-9d14bf747cce",
        "cursor": {
          "ref": "21fdb9d4-2a3f-47e2-8e43-126749053f3f",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2c9a5527-fd83-4df6-9c17-f0de7f2741c3"
        },
        "item": {
          "id": "c00dd084-ec84-4b43-a4db-9d14bf747cce",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e28e68c5-8ea9-48c6-8957-0d1fd5e9be1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c336c67-ff1c-4cfd-a2a9-52ce8f14dcb6",
        "cursor": {
          "ref": "be24055c-28ed-44d6-8625-beed8088ec10",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "31efdddc-0c16-4607-a218-e4dd752e00c7"
        },
        "item": {
          "id": "2c336c67-ff1c-4cfd-a2a9-52ce8f14dcb6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2bccd229-a098-4de5-8469-5a0374784083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a6a7de-cd0e-461b-bdfd-bbb5baf546a9",
        "cursor": {
          "ref": "ebb81127-02e4-48b3-914a-0a766dff859c",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ed18752a-a509-4ae4-abb4-5a06c853ade2"
        },
        "item": {
          "id": "53a6a7de-cd0e-461b-bdfd-bbb5baf546a9",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "400cd309-c8a4-4e39-9f01-4d7a73b3cf79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3119727c-ffc9-4816-8e50-a758bcf3a525",
        "cursor": {
          "ref": "25c0be21-99e3-49f1-8a3a-cbca19c3f95f",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "3244165d-1013-4c83-9b99-85a9378a40ad"
        },
        "item": {
          "id": "3119727c-ffc9-4816-8e50-a758bcf3a525",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9d5f661b-b0c1-4460-a335-46a38214ccf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a30f360-81c5-4e24-b42b-fceb0c4bdaf5",
        "cursor": {
          "ref": "d6bc982c-651e-4ca3-aecd-53daba59400e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ea1a33b4-c872-4f17-a0f2-da800726b195"
        },
        "item": {
          "id": "2a30f360-81c5-4e24-b42b-fceb0c4bdaf5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "3a09cc95-2c5d-4e31-a336-c943622685b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03d56be-d231-4dd3-b4c4-ebd137804db1",
        "cursor": {
          "ref": "14cc7781-842c-4d1b-b8a4-b0d9730fb7cd",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c3130751-364d-49af-b92a-74e1ceacf6bc"
        },
        "item": {
          "id": "d03d56be-d231-4dd3-b4c4-ebd137804db1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c9b33351-3a92-4a8f-b71a-4023e5bee81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2965add3-26a6-479e-91cc-69e927405a74",
        "cursor": {
          "ref": "a26e1f8c-3007-4a01-9fca-7f47f6110f1e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ddafc773-8aa5-44b3-9d79-f63249e1a1b7"
        },
        "item": {
          "id": "2965add3-26a6-479e-91cc-69e927405a74",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "edca3d73-4ccb-492c-86dd-8db1860873cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b2a4d61-c976-4427-a599-ea25ca6f8dae",
        "cursor": {
          "ref": "b957dfcb-9a78-4a51-92e9-f2ebfebfb87a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "fc6ef9bb-e8a1-424e-883a-afb9095af38f"
        },
        "item": {
          "id": "0b2a4d61-c976-4427-a599-ea25ca6f8dae",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b8f1f6a1-c279-4847-bd51-e7dd5cf6de2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4d4d78-0150-4cee-b07e-a40dbc0d44ea",
        "cursor": {
          "ref": "ed5c00a8-999d-4f7e-8399-9a59585dedc9",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "126af116-6ee5-4518-b3e1-2781741a3b06"
        },
        "item": {
          "id": "cf4d4d78-0150-4cee-b07e-a40dbc0d44ea",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "77e34fac-f14e-46e4-8ab4-af734be5170c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e03b244-faef-429e-9961-43d6f3b6d55f",
        "cursor": {
          "ref": "b7319236-3321-4141-9434-6db1e65bb504",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6434c678-e274-4eeb-a79b-364dc30bf3f0"
        },
        "item": {
          "id": "4e03b244-faef-429e-9961-43d6f3b6d55f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "91fb6904-5d19-4ba3-8c22-37c951446dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7bce47-d384-44e6-bf69-c492103ab24d",
        "cursor": {
          "ref": "5f3151f4-858c-4a67-b430-635dc789cd08",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4ef59866-3f19-4856-9879-834cf7823127"
        },
        "item": {
          "id": "df7bce47-d384-44e6-bf69-c492103ab24d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ae314765-0178-4794-9376-2f995a0244fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85da021c-e5a4-4501-bb1c-7eaf141140ff",
        "cursor": {
          "ref": "7291f5c1-c511-42f2-8032-deb46b0dbb96",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "27bb2854-1fc6-4137-9bd4-131746491623"
        },
        "item": {
          "id": "85da021c-e5a4-4501-bb1c-7eaf141140ff",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "52a8d263-3db0-43c7-b817-6f7cf99fd9d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d45a03e-fb82-4076-916c-11759b827de4",
        "cursor": {
          "ref": "99a5011f-edf7-4db7-989d-cc8458e4e44b",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e90d23e8-b922-4302-94cc-ff806de58e5a"
        },
        "item": {
          "id": "8d45a03e-fb82-4076-916c-11759b827de4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "2ebfe813-7117-4b23-b18d-034d463311ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f1bda4-c8ac-4522-945b-c3abbd34f799",
        "cursor": {
          "ref": "abbe8815-58ee-4015-803b-6837ba809867",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bcb4e1e7-91d4-4615-91bc-f72912feb3de"
        },
        "item": {
          "id": "f7f1bda4-c8ac-4522-945b-c3abbd34f799",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d3aec3b4-e6b7-4c78-b244-ce8c6d770dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ddb04d-2b27-4c2c-9b8c-da89e6a9b988",
        "cursor": {
          "ref": "c41119ce-a633-434c-b4d4-14f5b1f2e3c5",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "acf0e578-4abf-445e-81e3-bb548b287a37"
        },
        "item": {
          "id": "60ddb04d-2b27-4c2c-9b8c-da89e6a9b988",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "08792443-98f0-48b8-ba25-8337aaaa96c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7608821b-f8d1-46fc-83ae-742a02d48e90",
        "cursor": {
          "ref": "acc46761-4957-44b4-bb72-d0f0d93c6b1c",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "37064ee6-1b12-40cb-9fad-334392892e4a"
        },
        "item": {
          "id": "7608821b-f8d1-46fc-83ae-742a02d48e90",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "bb2fad14-7020-46c0-9e82-25e096b1f918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580fee84-48a7-4906-9188-ea42d410c17b",
        "cursor": {
          "ref": "12d9d05b-60c6-4e5e-9ba6-ec383e0a729a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "50f2e789-7a8a-481e-92f0-de50c80e8b49"
        },
        "item": {
          "id": "580fee84-48a7-4906-9188-ea42d410c17b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b14ffdee-8945-4342-bc4c-9b3eedde9bc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860a3774-3be1-452d-a965-26a517ca0d62",
        "cursor": {
          "ref": "0e5c26d9-2f49-40c0-8d35-a10735941fba",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d115022f-d8ad-45e9-9f06-c67f519fc044"
        },
        "item": {
          "id": "860a3774-3be1-452d-a965-26a517ca0d62",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e7f74fa8-4573-4f46-a6c8-ed31bfaa921d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b62949-4634-4ec2-b3bd-9e589e9fd2c9",
        "cursor": {
          "ref": "5d425351-fac5-497a-911f-3b9f1571e82e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "aeeed127-9ff6-4654-ba17-1e69f3a871d7"
        },
        "item": {
          "id": "33b62949-4634-4ec2-b3bd-9e589e9fd2c9",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "091fb365-2e76-4088-b15e-201417838d3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1404fb5-8696-4ae5-9be0-3d0bb3bf9f33",
        "cursor": {
          "ref": "82319811-db1d-40b4-948a-10f9daae4e0d",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d8c6f6c1-b73a-4032-9a6b-bc7239ab6fa0"
        },
        "item": {
          "id": "b1404fb5-8696-4ae5-9be0-3d0bb3bf9f33",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8589fca4-1cba-4fbe-b7fa-68c10f0d6907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407bb714-5240-4484-b6a5-2408049f94a8",
        "cursor": {
          "ref": "9ad6dd66-ae68-42b5-bfbf-b731aec21581",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "29839614-80d9-4d57-8317-eefc4cd15cc0"
        },
        "item": {
          "id": "407bb714-5240-4484-b6a5-2408049f94a8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ff31af10-4854-4ca1-a1b9-81401b82093b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4e02f0-6689-44c7-bedb-d494d7ea0f96",
        "cursor": {
          "ref": "ee1aed22-2222-4532-995b-c32aab973bdf",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3716e968-8f80-4ac9-a8f8-cff7f7cce7af"
        },
        "item": {
          "id": "eb4e02f0-6689-44c7-bedb-d494d7ea0f96",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f93dfcd3-7180-4d6d-8ca9-d876f2c17d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc81a85-72ab-4874-82fb-d6d13de7dd32",
        "cursor": {
          "ref": "ad646bb2-367a-439c-bf53-7ce7fe846312",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e114ec60-636f-4857-9048-7f83d1f65de8"
        },
        "item": {
          "id": "cfc81a85-72ab-4874-82fb-d6d13de7dd32",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2fc16157-3a70-455a-8cbe-2f1439dd2411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6a5cba-b4e5-418d-b1c1-57bfe1305c7d",
        "cursor": {
          "ref": "d5baa421-07d6-4c84-90f5-3ba8f2ce49c7",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "29b34c8b-d4c8-4234-9c62-c284bf686a10"
        },
        "item": {
          "id": "df6a5cba-b4e5-418d-b1c1-57bfe1305c7d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f4418230-1524-40ab-9af5-c337af1fdd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9610461-199d-44ee-b999-d62f3e3a4c31",
        "cursor": {
          "ref": "81471f1f-d421-4cf0-9d7c-bccdb143ce51",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "0c7758bc-0f54-4258-ab58-a99d5fe87c78"
        },
        "item": {
          "id": "a9610461-199d-44ee-b999-d62f3e3a4c31",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "68c33471-627a-456c-8b90-5d7ea6dcb550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99519120-86a2-4912-9606-5ec8be2048ee",
        "cursor": {
          "ref": "db445d6d-cd2a-412b-a1a0-366271d00eb4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "85007104-5718-49ce-865b-c814e67ea701"
        },
        "item": {
          "id": "99519120-86a2-4912-9606-5ec8be2048ee",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "644d691e-a3cc-4800-a130-674123aa14cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee72448-2439-4fcb-8e40-0b98f0413443",
        "cursor": {
          "ref": "0e57740d-e899-41f3-a8b5-e2eb53e4dc34",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9c12c26e-9c56-4fb7-94c5-9a09fd892faf"
        },
        "item": {
          "id": "8ee72448-2439-4fcb-8e40-0b98f0413443",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ced63bbd-2b54-4da8-a389-8fad7f6da99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7485d4-974a-4200-969c-3ed02eeb167a",
        "cursor": {
          "ref": "2c05e2d7-1bf3-4580-a31c-da2b49204ad8",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a9f5d421-ca06-4644-af90-5dd6ee655ae9"
        },
        "item": {
          "id": "6d7485d4-974a-4200-969c-3ed02eeb167a",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "087af00c-69fc-4286-b53a-aa46a3c16119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045349f0-f39f-493c-b072-5d57b0a05b78",
        "cursor": {
          "ref": "cd11067d-0423-4b51-b56d-1baf1014d461",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "97228be2-bab6-4e67-bbe3-54375091dbef"
        },
        "item": {
          "id": "045349f0-f39f-493c-b072-5d57b0a05b78",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "16bb62bb-6247-4f78-80bb-366dafeb45ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86733796-306b-4ffe-89ed-89a7e162a04a",
        "cursor": {
          "ref": "0933cdd0-9c3a-4a16-9627-ee3856004802",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0d9e4570-f713-44c3-845b-d0111525d051"
        },
        "item": {
          "id": "86733796-306b-4ffe-89ed-89a7e162a04a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "88d0bbc4-04d6-4156-8698-c50364203c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38efc722-3c71-435c-b93f-3452aa28e70e",
        "cursor": {
          "ref": "42f9f3fb-ae54-4b7d-a9b5-c6c65805a39d",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b0aa8581-fce0-4289-b104-c30ac4f1c631"
        },
        "item": {
          "id": "38efc722-3c71-435c-b93f-3452aa28e70e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "eba2601d-793d-431d-b2f9-acc516245fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a86563-d643-4fbb-870f-d0634a880ff9",
        "cursor": {
          "ref": "cf9e3f44-0ae4-4401-babf-a07136d165e1",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "607d413c-09a6-4fea-a522-280bf4653be8"
        },
        "item": {
          "id": "35a86563-d643-4fbb-870f-d0634a880ff9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "fa51ccb9-1a88-4273-8b95-0e975181fda7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcac6b1-7ca4-4040-b3b0-7c1e66114ae8",
        "cursor": {
          "ref": "61422c1d-ba37-4640-8158-4e95768528ca",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6c25ea97-524f-44f3-b780-6f3996816e74"
        },
        "item": {
          "id": "2dcac6b1-7ca4-4040-b3b0-7c1e66114ae8",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "776f2c6b-34ed-432c-a217-ff7080d01a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4de231-030a-44f5-ba40-8dc79e20ed5b",
        "cursor": {
          "ref": "c25a2fd9-6dc7-4f27-aafe-1ed6161aa65d",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ec24f31e-d586-4d70-8820-8c3b9eb79a73"
        },
        "item": {
          "id": "dc4de231-030a-44f5-ba40-8dc79e20ed5b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c76e15cd-ceb8-4869-9d32-843aa2c1f2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7157f0b6-ff72-4c5c-9aff-2616a1e8ee91",
        "cursor": {
          "ref": "5d20d67b-29bc-44a5-a547-b2d91f0f4399",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bbcd59e0-8cfc-41bf-8ae8-bf346f16b07a"
        },
        "item": {
          "id": "7157f0b6-ff72-4c5c-9aff-2616a1e8ee91",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a2850a3a-2b87-4249-91b8-b008b8bcd2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a453ad-65dd-4616-9359-32f99ac9dc4e",
        "cursor": {
          "ref": "d6006e27-2f9e-46fc-a8ef-d159e5655ab9",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a24ca7ac-fd1a-4482-aabc-a737de255cf8"
        },
        "item": {
          "id": "e3a453ad-65dd-4616-9359-32f99ac9dc4e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8121bea2-4acb-4e7c-a256-e7b5be38e1f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f422f7-5288-4837-abce-540965f259fc",
        "cursor": {
          "ref": "0d7b2700-8c56-44e3-a2e3-21a860d55a10",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d6e1812f-ba97-4fc2-8b23-bc5eb0dafff8"
        },
        "item": {
          "id": "61f422f7-5288-4837-abce-540965f259fc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1a5409e4-8618-45c0-bf4c-cf96746f2b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e86aeff-56cd-4499-a206-f658b484ef20",
        "cursor": {
          "ref": "1bc1ebf0-1898-4aed-a70f-c441d6260c52",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "163da614-263c-4864-bc69-ba7cda5af0cd"
        },
        "item": {
          "id": "3e86aeff-56cd-4499-a206-f658b484ef20",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7d276d87-03aa-4351-ac3e-d7f26c28b7ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e446531-cfe8-489e-aa31-76fcc489c184",
        "cursor": {
          "ref": "d5188a38-3d25-4f64-990a-b8b7f9db032a",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "3abe33b6-b7b9-4307-b26e-65d499c02b73"
        },
        "item": {
          "id": "5e446531-cfe8-489e-aa31-76fcc489c184",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d47be80b-2d2a-4328-93c0-d2ff63d1e60e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffe1289c-6af3-4fee-b49d-b8266bbcc200",
        "cursor": {
          "ref": "0cd8beef-6c85-44e7-8e42-ba39962f2998",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "7f98b885-c373-429e-aba9-bf72f961fac2"
        },
        "item": {
          "id": "ffe1289c-6af3-4fee-b49d-b8266bbcc200",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0ce77b84-1d74-4d96-8fd0-196a28f5c021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a631fc9-edf3-49f9-8014-040a3ae6efaf",
        "cursor": {
          "ref": "44bd8b78-39a2-42bd-99d1-49d4c2a6556c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ddf8ea88-dd4b-422f-84a3-c15ca69a7b80"
        },
        "item": {
          "id": "2a631fc9-edf3-49f9-8014-040a3ae6efaf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "10d14787-7060-4cce-b194-856d26e8e578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d9596f-6542-42d0-a204-d1344644ce3d",
        "cursor": {
          "ref": "a1623067-ccba-400d-892d-41e195b6dea4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6bec1e24-6b4d-4c51-973a-f78db749ae85"
        },
        "item": {
          "id": "a9d9596f-6542-42d0-a204-d1344644ce3d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6af48b9d-44d7-4979-a142-a2ee53d611ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0d9f9b-853c-40be-9566-7c4c8b565f93",
        "cursor": {
          "ref": "1708d49c-b660-4be4-a2f4-7dde0d51688a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a70b6444-a9b9-4fec-9905-255c8db5b0d5"
        },
        "item": {
          "id": "7c0d9f9b-853c-40be-9566-7c4c8b565f93",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8cba5d67-df9d-46f1-96e9-8c847b89155f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49d2ba6c-1ed1-41c9-aa75-58d913d150ec",
        "cursor": {
          "ref": "0a086fe7-6788-489a-bc94-a94f0c31bbf7",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "eca78668-eddb-498f-90a1-b802341d47d4"
        },
        "item": {
          "id": "49d2ba6c-1ed1-41c9-aa75-58d913d150ec",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "87678f10-f2b0-464b-bf19-48ab5612491f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857931d7-6b99-43d5-a8b4-d047258372fc",
        "cursor": {
          "ref": "4fbf3ead-080b-41d1-80eb-3cbc299219a3",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6dc3c87b-656a-493b-920c-8cdabb63169f"
        },
        "item": {
          "id": "857931d7-6b99-43d5-a8b4-d047258372fc",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c4a69c79-9947-4cde-bcd7-bb098c76d503",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88e2862-227c-4225-9a7b-bc33f9f315bc",
        "cursor": {
          "ref": "4e9b1442-26e8-4632-9d17-a65697c2ac72",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eec45c2d-bf11-4053-a05b-8316dd8ff40f"
        },
        "item": {
          "id": "d88e2862-227c-4225-9a7b-bc33f9f315bc",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1bc9c8ec-2955-451f-afb9-bb39755d8b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 161,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ce092c-8db9-4d42-a4c8-9dbec794ce63",
        "cursor": {
          "ref": "1c60a11b-92ed-4bb5-8e68-a2192d482f55",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f48bbc08-9baa-42e1-8279-8fff4de1f63a"
        },
        "item": {
          "id": "94ce092c-8db9-4d42-a4c8-9dbec794ce63",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6b835f9d-05d3-41eb-b796-ff838fe52a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dffd61b-e0c2-4c29-af13-12d71457ba03",
        "cursor": {
          "ref": "fcd32365-b391-43e3-904d-95dd955cd2b7",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ca27f30b-c7eb-4c3c-8f6c-1ad7375d27b0"
        },
        "item": {
          "id": "8dffd61b-e0c2-4c29-af13-12d71457ba03",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "d3261021-c84c-4ae5-8ded-6bd76de71261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84e1d1b-179b-4b80-872d-089cc12c153c",
        "cursor": {
          "ref": "ab64d49b-af62-4de1-b97e-1d816abbe370",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8e3614d4-8dd9-4d64-b610-ff66c4176c5a"
        },
        "item": {
          "id": "c84e1d1b-179b-4b80-872d-089cc12c153c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "99a4a8db-9bca-4619-9551-b561bb5625be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 45,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6b3edd-1b2b-4c64-b94a-d563ce1339fa",
        "cursor": {
          "ref": "1ff01ac8-b0bd-4de5-8ca6-03c896293eb5",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0a50670e-454c-4f3f-b526-935a50f9bd67"
        },
        "item": {
          "id": "fd6b3edd-1b2b-4c64-b94a-d563ce1339fa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5bd2bfe7-e126-4c12-937d-a671043ef2dc",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "11755510-0b40-4673-b0aa-bb10ca489d82",
        "cursor": {
          "ref": "51348842-2282-453f-a886-de1a19db6fd4",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "aaa2c83c-0a79-42cc-abce-e65f72b9d8a6"
        },
        "item": {
          "id": "11755510-0b40-4673-b0aa-bb10ca489d82",
          "name": "credentials_verify"
        },
        "response": {
          "id": "8ac7fe4d-3ce9-40f7-aab1-31935d0b090f",
          "status": "OK",
          "code": 200,
          "responseTime": 3982,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "16021351-ec94-4c96-a77d-afd43b7a145a",
        "cursor": {
          "ref": "59a14a0b-4ec6-413a-b442-549efd730b1d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ac014b58-18bf-4c1d-90ea-04782ec047b0"
        },
        "item": {
          "id": "16021351-ec94-4c96-a77d-afd43b7a145a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2a526316-85a4-4583-a6ba-15c9f64dc1d7",
          "status": "OK",
          "code": 200,
          "responseTime": 1760,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "65143fbe-77ac-47a4-9ffd-f581ba676298",
        "cursor": {
          "ref": "76e93839-ea43-406d-90e2-44eb2828a60e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2c0e45fc-a37b-40d2-865a-8043e06bf564"
        },
        "item": {
          "id": "65143fbe-77ac-47a4-9ffd-f581ba676298",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b2223908-6faf-4735-a020-bb615c97b1a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 118,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65143fbe-77ac-47a4-9ffd-f581ba676298",
        "cursor": {
          "ref": "76e93839-ea43-406d-90e2-44eb2828a60e",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2c0e45fc-a37b-40d2-865a-8043e06bf564"
        },
        "item": {
          "id": "65143fbe-77ac-47a4-9ffd-f581ba676298",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b2223908-6faf-4735-a020-bb615c97b1a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 118,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fee61b-51d6-448f-834d-254e540c68bc",
        "cursor": {
          "ref": "e3b2ce1a-56fc-4def-8f9b-2940907d2de2",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "fa94dcd0-f879-43cf-ac34-7bd8d729fffe"
        },
        "item": {
          "id": "04fee61b-51d6-448f-834d-254e540c68bc",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "352d3619-8533-4a82-a0f1-530c4a920e83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39944d7e-56dc-45d2-9e81-dc26ba8c98e0",
        "cursor": {
          "ref": "cf798eb1-c6fc-4e13-aa5c-01b93b3d6c55",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dd92766f-60d1-4e2c-9163-39f294080ad5"
        },
        "item": {
          "id": "39944d7e-56dc-45d2-9e81-dc26ba8c98e0",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c43d8119-d1da-41e1-a08a-ac345a2d1ea3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 7,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}